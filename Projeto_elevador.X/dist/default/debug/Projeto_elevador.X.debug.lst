

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Dec 12 20:52:18 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     5                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    79                           	dabs	1,0x7E,2
    80  0000                     
    81                           ; Version 2.20
    82                           ; Generated 12/02/2020 GMT
    83                           ; 
    84                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC16F1827 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  008C                     	;# 
   145  008D                     	;# 
   146  0091                     	;# 
   147  0092                     	;# 
   148  0093                     	;# 
   149  0094                     	;# 
   150  0095                     	;# 
   151  0096                     	;# 
   152  0097                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009A                     	;# 
   156  009B                     	;# 
   157  009B                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  0111                     	;# 
   164  0112                     	;# 
   165  0113                     	;# 
   166  0114                     	;# 
   167  0115                     	;# 
   168  0116                     	;# 
   169  0117                     	;# 
   170  0118                     	;# 
   171  0119                     	;# 
   172  011A                     	;# 
   173  011B                     	;# 
   174  011D                     	;# 
   175  011E                     	;# 
   176  018C                     	;# 
   177  018D                     	;# 
   178  0191                     	;# 
   179  0191                     	;# 
   180  0192                     	;# 
   181  0193                     	;# 
   182  0193                     	;# 
   183  0193                     	;# 
   184  0194                     	;# 
   185  0195                     	;# 
   186  0196                     	;# 
   187  0199                     	;# 
   188  019A                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019B                     	;# 
   192  019B                     	;# 
   193  019C                     	;# 
   194  019C                     	;# 
   195  019D                     	;# 
   196  019E                     	;# 
   197  019F                     	;# 
   198  020C                     	;# 
   199  020D                     	;# 
   200  0211                     	;# 
   201  0211                     	;# 
   202  0212                     	;# 
   203  0212                     	;# 
   204  0213                     	;# 
   205  0213                     	;# 
   206  0214                     	;# 
   207  0214                     	;# 
   208  0215                     	;# 
   209  0215                     	;# 
   210  0215                     	;# 
   211  0216                     	;# 
   212  0216                     	;# 
   213  0217                     	;# 
   214  0217                     	;# 
   215  0219                     	;# 
   216  021A                     	;# 
   217  021B                     	;# 
   218  021C                     	;# 
   219  021D                     	;# 
   220  021E                     	;# 
   221  021F                     	;# 
   222  0291                     	;# 
   223  0291                     	;# 
   224  0292                     	;# 
   225  0293                     	;# 
   226  0294                     	;# 
   227  0295                     	;# 
   228  0295                     	;# 
   229  0296                     	;# 
   230  0298                     	;# 
   231  0298                     	;# 
   232  0299                     	;# 
   233  029A                     	;# 
   234  029B                     	;# 
   235  029C                     	;# 
   236  029C                     	;# 
   237  029D                     	;# 
   238  029E                     	;# 
   239  029E                     	;# 
   240  0311                     	;# 
   241  0311                     	;# 
   242  0312                     	;# 
   243  0313                     	;# 
   244  0318                     	;# 
   245  0318                     	;# 
   246  0319                     	;# 
   247  031A                     	;# 
   248  0394                     	;# 
   249  0395                     	;# 
   250  0396                     	;# 
   251  039A                     	;# 
   252  039C                     	;# 
   253  039D                     	;# 
   254  039E                     	;# 
   255  039F                     	;# 
   256  0415                     	;# 
   257  0416                     	;# 
   258  0417                     	;# 
   259  041C                     	;# 
   260  041D                     	;# 
   261  041E                     	;# 
   262  0FE4                     	;# 
   263  0FE5                     	;# 
   264  0FE6                     	;# 
   265  0FE7                     	;# 
   266  0FE8                     	;# 
   267  0FE9                     	;# 
   268  0FEA                     	;# 
   269  0FEB                     	;# 
   270  0FED                     	;# 
   271  0FEE                     	;# 
   272  0FEF                     	;# 
   273  0000                     	;# 
   274  0001                     	;# 
   275  0002                     	;# 
   276  0003                     	;# 
   277  0004                     	;# 
   278  0005                     	;# 
   279  0006                     	;# 
   280  0007                     	;# 
   281  0008                     	;# 
   282  0009                     	;# 
   283  000A                     	;# 
   284  000B                     	;# 
   285  000C                     	;# 
   286  000D                     	;# 
   287  0011                     	;# 
   288  0012                     	;# 
   289  0013                     	;# 
   290  0014                     	;# 
   291  0015                     	;# 
   292  0016                     	;# 
   293  0016                     	;# 
   294  0017                     	;# 
   295  0018                     	;# 
   296  0019                     	;# 
   297  001A                     	;# 
   298  001B                     	;# 
   299  001C                     	;# 
   300  001E                     	;# 
   301  001F                     	;# 
   302  008C                     	;# 
   303  008D                     	;# 
   304  0091                     	;# 
   305  0092                     	;# 
   306  0093                     	;# 
   307  0094                     	;# 
   308  0095                     	;# 
   309  0096                     	;# 
   310  0097                     	;# 
   311  0098                     	;# 
   312  0099                     	;# 
   313  009A                     	;# 
   314  009B                     	;# 
   315  009B                     	;# 
   316  009C                     	;# 
   317  009D                     	;# 
   318  009E                     	;# 
   319  010C                     	;# 
   320  010D                     	;# 
   321  0111                     	;# 
   322  0112                     	;# 
   323  0113                     	;# 
   324  0114                     	;# 
   325  0115                     	;# 
   326  0116                     	;# 
   327  0117                     	;# 
   328  0118                     	;# 
   329  0119                     	;# 
   330  011A                     	;# 
   331  011B                     	;# 
   332  011D                     	;# 
   333  011E                     	;# 
   334  018C                     	;# 
   335  018D                     	;# 
   336  0191                     	;# 
   337  0191                     	;# 
   338  0192                     	;# 
   339  0193                     	;# 
   340  0193                     	;# 
   341  0193                     	;# 
   342  0194                     	;# 
   343  0195                     	;# 
   344  0196                     	;# 
   345  0199                     	;# 
   346  019A                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019B                     	;# 
   350  019B                     	;# 
   351  019C                     	;# 
   352  019C                     	;# 
   353  019D                     	;# 
   354  019E                     	;# 
   355  019F                     	;# 
   356  020C                     	;# 
   357  020D                     	;# 
   358  0211                     	;# 
   359  0211                     	;# 
   360  0212                     	;# 
   361  0212                     	;# 
   362  0213                     	;# 
   363  0213                     	;# 
   364  0214                     	;# 
   365  0214                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0215                     	;# 
   369  0216                     	;# 
   370  0216                     	;# 
   371  0217                     	;# 
   372  0217                     	;# 
   373  0219                     	;# 
   374  021A                     	;# 
   375  021B                     	;# 
   376  021C                     	;# 
   377  021D                     	;# 
   378  021E                     	;# 
   379  021F                     	;# 
   380  0291                     	;# 
   381  0291                     	;# 
   382  0292                     	;# 
   383  0293                     	;# 
   384  0294                     	;# 
   385  0295                     	;# 
   386  0295                     	;# 
   387  0296                     	;# 
   388  0298                     	;# 
   389  0298                     	;# 
   390  0299                     	;# 
   391  029A                     	;# 
   392  029B                     	;# 
   393  029C                     	;# 
   394  029C                     	;# 
   395  029D                     	;# 
   396  029E                     	;# 
   397  029E                     	;# 
   398  0311                     	;# 
   399  0311                     	;# 
   400  0312                     	;# 
   401  0313                     	;# 
   402  0318                     	;# 
   403  0318                     	;# 
   404  0319                     	;# 
   405  031A                     	;# 
   406  0394                     	;# 
   407  0395                     	;# 
   408  0396                     	;# 
   409  039A                     	;# 
   410  039C                     	;# 
   411  039D                     	;# 
   412  039E                     	;# 
   413  039F                     	;# 
   414  0415                     	;# 
   415  0416                     	;# 
   416  0417                     	;# 
   417  041C                     	;# 
   418  041D                     	;# 
   419  041E                     	;# 
   420  0FE4                     	;# 
   421  0FE5                     	;# 
   422  0FE6                     	;# 
   423  0FE7                     	;# 
   424  0FE8                     	;# 
   425  0FE9                     	;# 
   426  0FEA                     	;# 
   427  0FEB                     	;# 
   428  0FED                     	;# 
   429  0FEE                     	;# 
   430  0FEF                     	;# 
   431  0000                     	;# 
   432  0001                     	;# 
   433  0002                     	;# 
   434  0003                     	;# 
   435  0004                     	;# 
   436  0005                     	;# 
   437  0006                     	;# 
   438  0007                     	;# 
   439  0008                     	;# 
   440  0009                     	;# 
   441  000A                     	;# 
   442  000B                     	;# 
   443  000C                     	;# 
   444  000D                     	;# 
   445  0011                     	;# 
   446  0012                     	;# 
   447  0013                     	;# 
   448  0014                     	;# 
   449  0015                     	;# 
   450  0016                     	;# 
   451  0016                     	;# 
   452  0017                     	;# 
   453  0018                     	;# 
   454  0019                     	;# 
   455  001A                     	;# 
   456  001B                     	;# 
   457  001C                     	;# 
   458  001E                     	;# 
   459  001F                     	;# 
   460  008C                     	;# 
   461  008D                     	;# 
   462  0091                     	;# 
   463  0092                     	;# 
   464  0093                     	;# 
   465  0094                     	;# 
   466  0095                     	;# 
   467  0096                     	;# 
   468  0097                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009A                     	;# 
   472  009B                     	;# 
   473  009B                     	;# 
   474  009C                     	;# 
   475  009D                     	;# 
   476  009E                     	;# 
   477  010C                     	;# 
   478  010D                     	;# 
   479  0111                     	;# 
   480  0112                     	;# 
   481  0113                     	;# 
   482  0114                     	;# 
   483  0115                     	;# 
   484  0116                     	;# 
   485  0117                     	;# 
   486  0118                     	;# 
   487  0119                     	;# 
   488  011A                     	;# 
   489  011B                     	;# 
   490  011D                     	;# 
   491  011E                     	;# 
   492  018C                     	;# 
   493  018D                     	;# 
   494  0191                     	;# 
   495  0191                     	;# 
   496  0192                     	;# 
   497  0193                     	;# 
   498  0193                     	;# 
   499  0193                     	;# 
   500  0194                     	;# 
   501  0195                     	;# 
   502  0196                     	;# 
   503  0199                     	;# 
   504  019A                     	;# 
   505  019B                     	;# 
   506  019B                     	;# 
   507  019B                     	;# 
   508  019B                     	;# 
   509  019C                     	;# 
   510  019C                     	;# 
   511  019D                     	;# 
   512  019E                     	;# 
   513  019F                     	;# 
   514  020C                     	;# 
   515  020D                     	;# 
   516  0211                     	;# 
   517  0211                     	;# 
   518  0212                     	;# 
   519  0212                     	;# 
   520  0213                     	;# 
   521  0213                     	;# 
   522  0214                     	;# 
   523  0214                     	;# 
   524  0215                     	;# 
   525  0215                     	;# 
   526  0215                     	;# 
   527  0216                     	;# 
   528  0216                     	;# 
   529  0217                     	;# 
   530  0217                     	;# 
   531  0219                     	;# 
   532  021A                     	;# 
   533  021B                     	;# 
   534  021C                     	;# 
   535  021D                     	;# 
   536  021E                     	;# 
   537  021F                     	;# 
   538  0291                     	;# 
   539  0291                     	;# 
   540  0292                     	;# 
   541  0293                     	;# 
   542  0294                     	;# 
   543  0295                     	;# 
   544  0295                     	;# 
   545  0296                     	;# 
   546  0298                     	;# 
   547  0298                     	;# 
   548  0299                     	;# 
   549  029A                     	;# 
   550  029B                     	;# 
   551  029C                     	;# 
   552  029C                     	;# 
   553  029D                     	;# 
   554  029E                     	;# 
   555  029E                     	;# 
   556  0311                     	;# 
   557  0311                     	;# 
   558  0312                     	;# 
   559  0313                     	;# 
   560  0318                     	;# 
   561  0318                     	;# 
   562  0319                     	;# 
   563  031A                     	;# 
   564  0394                     	;# 
   565  0395                     	;# 
   566  0396                     	;# 
   567  039A                     	;# 
   568  039C                     	;# 
   569  039D                     	;# 
   570  039E                     	;# 
   571  039F                     	;# 
   572  0415                     	;# 
   573  0416                     	;# 
   574  0417                     	;# 
   575  041C                     	;# 
   576  041D                     	;# 
   577  041E                     	;# 
   578  0FE4                     	;# 
   579  0FE5                     	;# 
   580  0FE6                     	;# 
   581  0FE7                     	;# 
   582  0FE8                     	;# 
   583  0FE9                     	;# 
   584  0FEA                     	;# 
   585  0FEB                     	;# 
   586  0FED                     	;# 
   587  0FEE                     	;# 
   588  0FEF                     	;# 
   589  0000                     	;# 
   590  0001                     	;# 
   591  0002                     	;# 
   592  0003                     	;# 
   593  0004                     	;# 
   594  0005                     	;# 
   595  0006                     	;# 
   596  0007                     	;# 
   597  0008                     	;# 
   598  0009                     	;# 
   599  000A                     	;# 
   600  000B                     	;# 
   601  000C                     	;# 
   602  000D                     	;# 
   603  0011                     	;# 
   604  0012                     	;# 
   605  0013                     	;# 
   606  0014                     	;# 
   607  0015                     	;# 
   608  0016                     	;# 
   609  0016                     	;# 
   610  0017                     	;# 
   611  0018                     	;# 
   612  0019                     	;# 
   613  001A                     	;# 
   614  001B                     	;# 
   615  001C                     	;# 
   616  001E                     	;# 
   617  001F                     	;# 
   618  008C                     	;# 
   619  008D                     	;# 
   620  0091                     	;# 
   621  0092                     	;# 
   622  0093                     	;# 
   623  0094                     	;# 
   624  0095                     	;# 
   625  0096                     	;# 
   626  0097                     	;# 
   627  0098                     	;# 
   628  0099                     	;# 
   629  009A                     	;# 
   630  009B                     	;# 
   631  009B                     	;# 
   632  009C                     	;# 
   633  009D                     	;# 
   634  009E                     	;# 
   635  010C                     	;# 
   636  010D                     	;# 
   637  0111                     	;# 
   638  0112                     	;# 
   639  0113                     	;# 
   640  0114                     	;# 
   641  0115                     	;# 
   642  0116                     	;# 
   643  0117                     	;# 
   644  0118                     	;# 
   645  0119                     	;# 
   646  011A                     	;# 
   647  011B                     	;# 
   648  011D                     	;# 
   649  011E                     	;# 
   650  018C                     	;# 
   651  018D                     	;# 
   652  0191                     	;# 
   653  0191                     	;# 
   654  0192                     	;# 
   655  0193                     	;# 
   656  0193                     	;# 
   657  0193                     	;# 
   658  0194                     	;# 
   659  0195                     	;# 
   660  0196                     	;# 
   661  0199                     	;# 
   662  019A                     	;# 
   663  019B                     	;# 
   664  019B                     	;# 
   665  019B                     	;# 
   666  019B                     	;# 
   667  019C                     	;# 
   668  019C                     	;# 
   669  019D                     	;# 
   670  019E                     	;# 
   671  019F                     	;# 
   672  020C                     	;# 
   673  020D                     	;# 
   674  0211                     	;# 
   675  0211                     	;# 
   676  0212                     	;# 
   677  0212                     	;# 
   678  0213                     	;# 
   679  0213                     	;# 
   680  0214                     	;# 
   681  0214                     	;# 
   682  0215                     	;# 
   683  0215                     	;# 
   684  0215                     	;# 
   685  0216                     	;# 
   686  0216                     	;# 
   687  0217                     	;# 
   688  0217                     	;# 
   689  0219                     	;# 
   690  021A                     	;# 
   691  021B                     	;# 
   692  021C                     	;# 
   693  021D                     	;# 
   694  021E                     	;# 
   695  021F                     	;# 
   696  0291                     	;# 
   697  0291                     	;# 
   698  0292                     	;# 
   699  0293                     	;# 
   700  0294                     	;# 
   701  0295                     	;# 
   702  0295                     	;# 
   703  0296                     	;# 
   704  0298                     	;# 
   705  0298                     	;# 
   706  0299                     	;# 
   707  029A                     	;# 
   708  029B                     	;# 
   709  029C                     	;# 
   710  029C                     	;# 
   711  029D                     	;# 
   712  029E                     	;# 
   713  029E                     	;# 
   714  0311                     	;# 
   715  0311                     	;# 
   716  0312                     	;# 
   717  0313                     	;# 
   718  0318                     	;# 
   719  0318                     	;# 
   720  0319                     	;# 
   721  031A                     	;# 
   722  0394                     	;# 
   723  0395                     	;# 
   724  0396                     	;# 
   725  039A                     	;# 
   726  039C                     	;# 
   727  039D                     	;# 
   728  039E                     	;# 
   729  039F                     	;# 
   730  0415                     	;# 
   731  0416                     	;# 
   732  0417                     	;# 
   733  041C                     	;# 
   734  041D                     	;# 
   735  041E                     	;# 
   736  0FE4                     	;# 
   737  0FE5                     	;# 
   738  0FE6                     	;# 
   739  0FE7                     	;# 
   740  0FE8                     	;# 
   741  0FE9                     	;# 
   742  0FEA                     	;# 
   743  0FEB                     	;# 
   744  0FED                     	;# 
   745  0FEE                     	;# 
   746  0FEF                     	;# 
   747  0000                     	;# 
   748  0001                     	;# 
   749  0002                     	;# 
   750  0003                     	;# 
   751  0004                     	;# 
   752  0005                     	;# 
   753  0006                     	;# 
   754  0007                     	;# 
   755  0008                     	;# 
   756  0009                     	;# 
   757  000A                     	;# 
   758  000B                     	;# 
   759  000C                     	;# 
   760  000D                     	;# 
   761  0011                     	;# 
   762  0012                     	;# 
   763  0013                     	;# 
   764  0014                     	;# 
   765  0015                     	;# 
   766  0016                     	;# 
   767  0016                     	;# 
   768  0017                     	;# 
   769  0018                     	;# 
   770  0019                     	;# 
   771  001A                     	;# 
   772  001B                     	;# 
   773  001C                     	;# 
   774  001E                     	;# 
   775  001F                     	;# 
   776  008C                     	;# 
   777  008D                     	;# 
   778  0091                     	;# 
   779  0092                     	;# 
   780  0093                     	;# 
   781  0094                     	;# 
   782  0095                     	;# 
   783  0096                     	;# 
   784  0097                     	;# 
   785  0098                     	;# 
   786  0099                     	;# 
   787  009A                     	;# 
   788  009B                     	;# 
   789  009B                     	;# 
   790  009C                     	;# 
   791  009D                     	;# 
   792  009E                     	;# 
   793  010C                     	;# 
   794  010D                     	;# 
   795  0111                     	;# 
   796  0112                     	;# 
   797  0113                     	;# 
   798  0114                     	;# 
   799  0115                     	;# 
   800  0116                     	;# 
   801  0117                     	;# 
   802  0118                     	;# 
   803  0119                     	;# 
   804  011A                     	;# 
   805  011B                     	;# 
   806  011D                     	;# 
   807  011E                     	;# 
   808  018C                     	;# 
   809  018D                     	;# 
   810  0191                     	;# 
   811  0191                     	;# 
   812  0192                     	;# 
   813  0193                     	;# 
   814  0193                     	;# 
   815  0193                     	;# 
   816  0194                     	;# 
   817  0195                     	;# 
   818  0196                     	;# 
   819  0199                     	;# 
   820  019A                     	;# 
   821  019B                     	;# 
   822  019B                     	;# 
   823  019B                     	;# 
   824  019B                     	;# 
   825  019C                     	;# 
   826  019C                     	;# 
   827  019D                     	;# 
   828  019E                     	;# 
   829  019F                     	;# 
   830  020C                     	;# 
   831  020D                     	;# 
   832  0211                     	;# 
   833  0211                     	;# 
   834  0212                     	;# 
   835  0212                     	;# 
   836  0213                     	;# 
   837  0213                     	;# 
   838  0214                     	;# 
   839  0214                     	;# 
   840  0215                     	;# 
   841  0215                     	;# 
   842  0215                     	;# 
   843  0216                     	;# 
   844  0216                     	;# 
   845  0217                     	;# 
   846  0217                     	;# 
   847  0219                     	;# 
   848  021A                     	;# 
   849  021B                     	;# 
   850  021C                     	;# 
   851  021D                     	;# 
   852  021E                     	;# 
   853  021F                     	;# 
   854  0291                     	;# 
   855  0291                     	;# 
   856  0292                     	;# 
   857  0293                     	;# 
   858  0294                     	;# 
   859  0295                     	;# 
   860  0295                     	;# 
   861  0296                     	;# 
   862  0298                     	;# 
   863  0298                     	;# 
   864  0299                     	;# 
   865  029A                     	;# 
   866  029B                     	;# 
   867  029C                     	;# 
   868  029C                     	;# 
   869  029D                     	;# 
   870  029E                     	;# 
   871  029E                     	;# 
   872  0311                     	;# 
   873  0311                     	;# 
   874  0312                     	;# 
   875  0313                     	;# 
   876  0318                     	;# 
   877  0318                     	;# 
   878  0319                     	;# 
   879  031A                     	;# 
   880  0394                     	;# 
   881  0395                     	;# 
   882  0396                     	;# 
   883  039A                     	;# 
   884  039C                     	;# 
   885  039D                     	;# 
   886  039E                     	;# 
   887  039F                     	;# 
   888  0415                     	;# 
   889  0416                     	;# 
   890  0417                     	;# 
   891  041C                     	;# 
   892  041D                     	;# 
   893  041E                     	;# 
   894  0FE4                     	;# 
   895  0FE5                     	;# 
   896  0FE6                     	;# 
   897  0FE7                     	;# 
   898  0FE8                     	;# 
   899  0FE9                     	;# 
   900  0FEA                     	;# 
   901  0FEB                     	;# 
   902  0FED                     	;# 
   903  0FEE                     	;# 
   904  0FEF                     	;# 
   905  0000                     	;# 
   906  0001                     	;# 
   907  0002                     	;# 
   908  0003                     	;# 
   909  0004                     	;# 
   910  0005                     	;# 
   911  0006                     	;# 
   912  0007                     	;# 
   913  0008                     	;# 
   914  0009                     	;# 
   915  000A                     	;# 
   916  000B                     	;# 
   917  000C                     	;# 
   918  000D                     	;# 
   919  0011                     	;# 
   920  0012                     	;# 
   921  0013                     	;# 
   922  0014                     	;# 
   923  0015                     	;# 
   924  0016                     	;# 
   925  0016                     	;# 
   926  0017                     	;# 
   927  0018                     	;# 
   928  0019                     	;# 
   929  001A                     	;# 
   930  001B                     	;# 
   931  001C                     	;# 
   932  001E                     	;# 
   933  001F                     	;# 
   934  008C                     	;# 
   935  008D                     	;# 
   936  0091                     	;# 
   937  0092                     	;# 
   938  0093                     	;# 
   939  0094                     	;# 
   940  0095                     	;# 
   941  0096                     	;# 
   942  0097                     	;# 
   943  0098                     	;# 
   944  0099                     	;# 
   945  009A                     	;# 
   946  009B                     	;# 
   947  009B                     	;# 
   948  009C                     	;# 
   949  009D                     	;# 
   950  009E                     	;# 
   951  010C                     	;# 
   952  010D                     	;# 
   953  0111                     	;# 
   954  0112                     	;# 
   955  0113                     	;# 
   956  0114                     	;# 
   957  0115                     	;# 
   958  0116                     	;# 
   959  0117                     	;# 
   960  0118                     	;# 
   961  0119                     	;# 
   962  011A                     	;# 
   963  011B                     	;# 
   964  011D                     	;# 
   965  011E                     	;# 
   966  018C                     	;# 
   967  018D                     	;# 
   968  0191                     	;# 
   969  0191                     	;# 
   970  0192                     	;# 
   971  0193                     	;# 
   972  0193                     	;# 
   973  0193                     	;# 
   974  0194                     	;# 
   975  0195                     	;# 
   976  0196                     	;# 
   977  0199                     	;# 
   978  019A                     	;# 
   979  019B                     	;# 
   980  019B                     	;# 
   981  019B                     	;# 
   982  019B                     	;# 
   983  019C                     	;# 
   984  019C                     	;# 
   985  019D                     	;# 
   986  019E                     	;# 
   987  019F                     	;# 
   988  020C                     	;# 
   989  020D                     	;# 
   990  0211                     	;# 
   991  0211                     	;# 
   992  0212                     	;# 
   993  0212                     	;# 
   994  0213                     	;# 
   995  0213                     	;# 
   996  0214                     	;# 
   997  0214                     	;# 
   998  0215                     	;# 
   999  0215                     	;# 
  1000  0215                     	;# 
  1001  0216                     	;# 
  1002  0216                     	;# 
  1003  0217                     	;# 
  1004  0217                     	;# 
  1005  0219                     	;# 
  1006  021A                     	;# 
  1007  021B                     	;# 
  1008  021C                     	;# 
  1009  021D                     	;# 
  1010  021E                     	;# 
  1011  021F                     	;# 
  1012  0291                     	;# 
  1013  0291                     	;# 
  1014  0292                     	;# 
  1015  0293                     	;# 
  1016  0294                     	;# 
  1017  0295                     	;# 
  1018  0295                     	;# 
  1019  0296                     	;# 
  1020  0298                     	;# 
  1021  0298                     	;# 
  1022  0299                     	;# 
  1023  029A                     	;# 
  1024  029B                     	;# 
  1025  029C                     	;# 
  1026  029C                     	;# 
  1027  029D                     	;# 
  1028  029E                     	;# 
  1029  029E                     	;# 
  1030  0311                     	;# 
  1031  0311                     	;# 
  1032  0312                     	;# 
  1033  0313                     	;# 
  1034  0318                     	;# 
  1035  0318                     	;# 
  1036  0319                     	;# 
  1037  031A                     	;# 
  1038  0394                     	;# 
  1039  0395                     	;# 
  1040  0396                     	;# 
  1041  039A                     	;# 
  1042  039C                     	;# 
  1043  039D                     	;# 
  1044  039E                     	;# 
  1045  039F                     	;# 
  1046  0415                     	;# 
  1047  0416                     	;# 
  1048  0417                     	;# 
  1049  041C                     	;# 
  1050  041D                     	;# 
  1051  041E                     	;# 
  1052  0FE4                     	;# 
  1053  0FE5                     	;# 
  1054  0FE6                     	;# 
  1055  0FE7                     	;# 
  1056  0FE8                     	;# 
  1057  0FE9                     	;# 
  1058  0FEA                     	;# 
  1059  0FEB                     	;# 
  1060  0FED                     	;# 
  1061  0FEE                     	;# 
  1062  0FEF                     	;# 
  1063  0000                     	;# 
  1064  0001                     	;# 
  1065  0002                     	;# 
  1066  0003                     	;# 
  1067  0004                     	;# 
  1068  0005                     	;# 
  1069  0006                     	;# 
  1070  0007                     	;# 
  1071  0008                     	;# 
  1072  0009                     	;# 
  1073  000A                     	;# 
  1074  000B                     	;# 
  1075  000C                     	;# 
  1076  000D                     	;# 
  1077  0011                     	;# 
  1078  0012                     	;# 
  1079  0013                     	;# 
  1080  0014                     	;# 
  1081  0015                     	;# 
  1082  0016                     	;# 
  1083  0016                     	;# 
  1084  0017                     	;# 
  1085  0018                     	;# 
  1086  0019                     	;# 
  1087  001A                     	;# 
  1088  001B                     	;# 
  1089  001C                     	;# 
  1090  001E                     	;# 
  1091  001F                     	;# 
  1092  008C                     	;# 
  1093  008D                     	;# 
  1094  0091                     	;# 
  1095  0092                     	;# 
  1096  0093                     	;# 
  1097  0094                     	;# 
  1098  0095                     	;# 
  1099  0096                     	;# 
  1100  0097                     	;# 
  1101  0098                     	;# 
  1102  0099                     	;# 
  1103  009A                     	;# 
  1104  009B                     	;# 
  1105  009B                     	;# 
  1106  009C                     	;# 
  1107  009D                     	;# 
  1108  009E                     	;# 
  1109  010C                     	;# 
  1110  010D                     	;# 
  1111  0111                     	;# 
  1112  0112                     	;# 
  1113  0113                     	;# 
  1114  0114                     	;# 
  1115  0115                     	;# 
  1116  0116                     	;# 
  1117  0117                     	;# 
  1118  0118                     	;# 
  1119  0119                     	;# 
  1120  011A                     	;# 
  1121  011B                     	;# 
  1122  011D                     	;# 
  1123  011E                     	;# 
  1124  018C                     	;# 
  1125  018D                     	;# 
  1126  0191                     	;# 
  1127  0191                     	;# 
  1128  0192                     	;# 
  1129  0193                     	;# 
  1130  0193                     	;# 
  1131  0193                     	;# 
  1132  0194                     	;# 
  1133  0195                     	;# 
  1134  0196                     	;# 
  1135  0199                     	;# 
  1136  019A                     	;# 
  1137  019B                     	;# 
  1138  019B                     	;# 
  1139  019B                     	;# 
  1140  019B                     	;# 
  1141  019C                     	;# 
  1142  019C                     	;# 
  1143  019D                     	;# 
  1144  019E                     	;# 
  1145  019F                     	;# 
  1146  020C                     	;# 
  1147  020D                     	;# 
  1148  0211                     	;# 
  1149  0211                     	;# 
  1150  0212                     	;# 
  1151  0212                     	;# 
  1152  0213                     	;# 
  1153  0213                     	;# 
  1154  0214                     	;# 
  1155  0214                     	;# 
  1156  0215                     	;# 
  1157  0215                     	;# 
  1158  0215                     	;# 
  1159  0216                     	;# 
  1160  0216                     	;# 
  1161  0217                     	;# 
  1162  0217                     	;# 
  1163  0219                     	;# 
  1164  021A                     	;# 
  1165  021B                     	;# 
  1166  021C                     	;# 
  1167  021D                     	;# 
  1168  021E                     	;# 
  1169  021F                     	;# 
  1170  0291                     	;# 
  1171  0291                     	;# 
  1172  0292                     	;# 
  1173  0293                     	;# 
  1174  0294                     	;# 
  1175  0295                     	;# 
  1176  0295                     	;# 
  1177  0296                     	;# 
  1178  0298                     	;# 
  1179  0298                     	;# 
  1180  0299                     	;# 
  1181  029A                     	;# 
  1182  029B                     	;# 
  1183  029C                     	;# 
  1184  029C                     	;# 
  1185  029D                     	;# 
  1186  029E                     	;# 
  1187  029E                     	;# 
  1188  0311                     	;# 
  1189  0311                     	;# 
  1190  0312                     	;# 
  1191  0313                     	;# 
  1192  0318                     	;# 
  1193  0318                     	;# 
  1194  0319                     	;# 
  1195  031A                     	;# 
  1196  0394                     	;# 
  1197  0395                     	;# 
  1198  0396                     	;# 
  1199  039A                     	;# 
  1200  039C                     	;# 
  1201  039D                     	;# 
  1202  039E                     	;# 
  1203  039F                     	;# 
  1204  0415                     	;# 
  1205  0416                     	;# 
  1206  0417                     	;# 
  1207  041C                     	;# 
  1208  041D                     	;# 
  1209  041E                     	;# 
  1210  0FE4                     	;# 
  1211  0FE5                     	;# 
  1212  0FE6                     	;# 
  1213  0FE7                     	;# 
  1214  0FE8                     	;# 
  1215  0FE9                     	;# 
  1216  0FEA                     	;# 
  1217  0FEB                     	;# 
  1218  0FED                     	;# 
  1219  0FEE                     	;# 
  1220  0FEF                     	;# 
  1221  0000                     	;# 
  1222  0001                     	;# 
  1223  0002                     	;# 
  1224  0003                     	;# 
  1225  0004                     	;# 
  1226  0005                     	;# 
  1227  0006                     	;# 
  1228  0007                     	;# 
  1229  0008                     	;# 
  1230  0009                     	;# 
  1231  000A                     	;# 
  1232  000B                     	;# 
  1233  000C                     	;# 
  1234  000D                     	;# 
  1235  0011                     	;# 
  1236  0012                     	;# 
  1237  0013                     	;# 
  1238  0014                     	;# 
  1239  0015                     	;# 
  1240  0016                     	;# 
  1241  0016                     	;# 
  1242  0017                     	;# 
  1243  0018                     	;# 
  1244  0019                     	;# 
  1245  001A                     	;# 
  1246  001B                     	;# 
  1247  001C                     	;# 
  1248  001E                     	;# 
  1249  001F                     	;# 
  1250  008C                     	;# 
  1251  008D                     	;# 
  1252  0091                     	;# 
  1253  0092                     	;# 
  1254  0093                     	;# 
  1255  0094                     	;# 
  1256  0095                     	;# 
  1257  0096                     	;# 
  1258  0097                     	;# 
  1259  0098                     	;# 
  1260  0099                     	;# 
  1261  009A                     	;# 
  1262  009B                     	;# 
  1263  009B                     	;# 
  1264  009C                     	;# 
  1265  009D                     	;# 
  1266  009E                     	;# 
  1267  010C                     	;# 
  1268  010D                     	;# 
  1269  0111                     	;# 
  1270  0112                     	;# 
  1271  0113                     	;# 
  1272  0114                     	;# 
  1273  0115                     	;# 
  1274  0116                     	;# 
  1275  0117                     	;# 
  1276  0118                     	;# 
  1277  0119                     	;# 
  1278  011A                     	;# 
  1279  011B                     	;# 
  1280  011D                     	;# 
  1281  011E                     	;# 
  1282  018C                     	;# 
  1283  018D                     	;# 
  1284  0191                     	;# 
  1285  0191                     	;# 
  1286  0192                     	;# 
  1287  0193                     	;# 
  1288  0193                     	;# 
  1289  0193                     	;# 
  1290  0194                     	;# 
  1291  0195                     	;# 
  1292  0196                     	;# 
  1293  0199                     	;# 
  1294  019A                     	;# 
  1295  019B                     	;# 
  1296  019B                     	;# 
  1297  019B                     	;# 
  1298  019B                     	;# 
  1299  019C                     	;# 
  1300  019C                     	;# 
  1301  019D                     	;# 
  1302  019E                     	;# 
  1303  019F                     	;# 
  1304  020C                     	;# 
  1305  020D                     	;# 
  1306  0211                     	;# 
  1307  0211                     	;# 
  1308  0212                     	;# 
  1309  0212                     	;# 
  1310  0213                     	;# 
  1311  0213                     	;# 
  1312  0214                     	;# 
  1313  0214                     	;# 
  1314  0215                     	;# 
  1315  0215                     	;# 
  1316  0215                     	;# 
  1317  0216                     	;# 
  1318  0216                     	;# 
  1319  0217                     	;# 
  1320  0217                     	;# 
  1321  0219                     	;# 
  1322  021A                     	;# 
  1323  021B                     	;# 
  1324  021C                     	;# 
  1325  021D                     	;# 
  1326  021E                     	;# 
  1327  021F                     	;# 
  1328  0291                     	;# 
  1329  0291                     	;# 
  1330  0292                     	;# 
  1331  0293                     	;# 
  1332  0294                     	;# 
  1333  0295                     	;# 
  1334  0295                     	;# 
  1335  0296                     	;# 
  1336  0298                     	;# 
  1337  0298                     	;# 
  1338  0299                     	;# 
  1339  029A                     	;# 
  1340  029B                     	;# 
  1341  029C                     	;# 
  1342  029C                     	;# 
  1343  029D                     	;# 
  1344  029E                     	;# 
  1345  029E                     	;# 
  1346  0311                     	;# 
  1347  0311                     	;# 
  1348  0312                     	;# 
  1349  0313                     	;# 
  1350  0318                     	;# 
  1351  0318                     	;# 
  1352  0319                     	;# 
  1353  031A                     	;# 
  1354  0394                     	;# 
  1355  0395                     	;# 
  1356  0396                     	;# 
  1357  039A                     	;# 
  1358  039C                     	;# 
  1359  039D                     	;# 
  1360  039E                     	;# 
  1361  039F                     	;# 
  1362  0415                     	;# 
  1363  0416                     	;# 
  1364  0417                     	;# 
  1365  041C                     	;# 
  1366  041D                     	;# 
  1367  041E                     	;# 
  1368  0FE4                     	;# 
  1369  0FE5                     	;# 
  1370  0FE6                     	;# 
  1371  0FE7                     	;# 
  1372  0FE8                     	;# 
  1373  0FE9                     	;# 
  1374  0FEA                     	;# 
  1375  0FEB                     	;# 
  1376  0FED                     	;# 
  1377  0FEE                     	;# 
  1378  0FEF                     	;# 
  1379  0000                     	;# 
  1380  0001                     	;# 
  1381  0002                     	;# 
  1382  0003                     	;# 
  1383  0004                     	;# 
  1384  0005                     	;# 
  1385  0006                     	;# 
  1386  0007                     	;# 
  1387  0008                     	;# 
  1388  0009                     	;# 
  1389  000A                     	;# 
  1390  000B                     	;# 
  1391  000C                     	;# 
  1392  000D                     	;# 
  1393  0011                     	;# 
  1394  0012                     	;# 
  1395  0013                     	;# 
  1396  0014                     	;# 
  1397  0015                     	;# 
  1398  0016                     	;# 
  1399  0016                     	;# 
  1400  0017                     	;# 
  1401  0018                     	;# 
  1402  0019                     	;# 
  1403  001A                     	;# 
  1404  001B                     	;# 
  1405  001C                     	;# 
  1406  001E                     	;# 
  1407  001F                     	;# 
  1408  008C                     	;# 
  1409  008D                     	;# 
  1410  0091                     	;# 
  1411  0092                     	;# 
  1412  0093                     	;# 
  1413  0094                     	;# 
  1414  0095                     	;# 
  1415  0096                     	;# 
  1416  0097                     	;# 
  1417  0098                     	;# 
  1418  0099                     	;# 
  1419  009A                     	;# 
  1420  009B                     	;# 
  1421  009B                     	;# 
  1422  009C                     	;# 
  1423  009D                     	;# 
  1424  009E                     	;# 
  1425  010C                     	;# 
  1426  010D                     	;# 
  1427  0111                     	;# 
  1428  0112                     	;# 
  1429  0113                     	;# 
  1430  0114                     	;# 
  1431  0115                     	;# 
  1432  0116                     	;# 
  1433  0117                     	;# 
  1434  0118                     	;# 
  1435  0119                     	;# 
  1436  011A                     	;# 
  1437  011B                     	;# 
  1438  011D                     	;# 
  1439  011E                     	;# 
  1440  018C                     	;# 
  1441  018D                     	;# 
  1442  0191                     	;# 
  1443  0191                     	;# 
  1444  0192                     	;# 
  1445  0193                     	;# 
  1446  0193                     	;# 
  1447  0193                     	;# 
  1448  0194                     	;# 
  1449  0195                     	;# 
  1450  0196                     	;# 
  1451  0199                     	;# 
  1452  019A                     	;# 
  1453  019B                     	;# 
  1454  019B                     	;# 
  1455  019B                     	;# 
  1456  019B                     	;# 
  1457  019C                     	;# 
  1458  019C                     	;# 
  1459  019D                     	;# 
  1460  019E                     	;# 
  1461  019F                     	;# 
  1462  020C                     	;# 
  1463  020D                     	;# 
  1464  0211                     	;# 
  1465  0211                     	;# 
  1466  0212                     	;# 
  1467  0212                     	;# 
  1468  0213                     	;# 
  1469  0213                     	;# 
  1470  0214                     	;# 
  1471  0214                     	;# 
  1472  0215                     	;# 
  1473  0215                     	;# 
  1474  0215                     	;# 
  1475  0216                     	;# 
  1476  0216                     	;# 
  1477  0217                     	;# 
  1478  0217                     	;# 
  1479  0219                     	;# 
  1480  021A                     	;# 
  1481  021B                     	;# 
  1482  021C                     	;# 
  1483  021D                     	;# 
  1484  021E                     	;# 
  1485  021F                     	;# 
  1486  0291                     	;# 
  1487  0291                     	;# 
  1488  0292                     	;# 
  1489  0293                     	;# 
  1490  0294                     	;# 
  1491  0295                     	;# 
  1492  0295                     	;# 
  1493  0296                     	;# 
  1494  0298                     	;# 
  1495  0298                     	;# 
  1496  0299                     	;# 
  1497  029A                     	;# 
  1498  029B                     	;# 
  1499  029C                     	;# 
  1500  029C                     	;# 
  1501  029D                     	;# 
  1502  029E                     	;# 
  1503  029E                     	;# 
  1504  0311                     	;# 
  1505  0311                     	;# 
  1506  0312                     	;# 
  1507  0313                     	;# 
  1508  0318                     	;# 
  1509  0318                     	;# 
  1510  0319                     	;# 
  1511  031A                     	;# 
  1512  0394                     	;# 
  1513  0395                     	;# 
  1514  0396                     	;# 
  1515  039A                     	;# 
  1516  039C                     	;# 
  1517  039D                     	;# 
  1518  039E                     	;# 
  1519  039F                     	;# 
  1520  0415                     	;# 
  1521  0416                     	;# 
  1522  0417                     	;# 
  1523  041C                     	;# 
  1524  041D                     	;# 
  1525  041E                     	;# 
  1526  0FE4                     	;# 
  1527  0FE5                     	;# 
  1528  0FE6                     	;# 
  1529  0FE7                     	;# 
  1530  0FE8                     	;# 
  1531  0FE9                     	;# 
  1532  0FEA                     	;# 
  1533  0FEB                     	;# 
  1534  0FED                     	;# 
  1535  0FEE                     	;# 
  1536  0FEF                     	;# 
  1537  0000                     	;# 
  1538  0001                     	;# 
  1539  0002                     	;# 
  1540  0003                     	;# 
  1541  0004                     	;# 
  1542  0005                     	;# 
  1543  0006                     	;# 
  1544  0007                     	;# 
  1545  0008                     	;# 
  1546  0009                     	;# 
  1547  000A                     	;# 
  1548  000B                     	;# 
  1549  000C                     	;# 
  1550  000D                     	;# 
  1551  0011                     	;# 
  1552  0012                     	;# 
  1553  0013                     	;# 
  1554  0014                     	;# 
  1555  0015                     	;# 
  1556  0016                     	;# 
  1557  0016                     	;# 
  1558  0017                     	;# 
  1559  0018                     	;# 
  1560  0019                     	;# 
  1561  001A                     	;# 
  1562  001B                     	;# 
  1563  001C                     	;# 
  1564  001E                     	;# 
  1565  001F                     	;# 
  1566  008C                     	;# 
  1567  008D                     	;# 
  1568  0091                     	;# 
  1569  0092                     	;# 
  1570  0093                     	;# 
  1571  0094                     	;# 
  1572  0095                     	;# 
  1573  0096                     	;# 
  1574  0097                     	;# 
  1575  0098                     	;# 
  1576  0099                     	;# 
  1577  009A                     	;# 
  1578  009B                     	;# 
  1579  009B                     	;# 
  1580  009C                     	;# 
  1581  009D                     	;# 
  1582  009E                     	;# 
  1583  010C                     	;# 
  1584  010D                     	;# 
  1585  0111                     	;# 
  1586  0112                     	;# 
  1587  0113                     	;# 
  1588  0114                     	;# 
  1589  0115                     	;# 
  1590  0116                     	;# 
  1591  0117                     	;# 
  1592  0118                     	;# 
  1593  0119                     	;# 
  1594  011A                     	;# 
  1595  011B                     	;# 
  1596  011D                     	;# 
  1597  011E                     	;# 
  1598  018C                     	;# 
  1599  018D                     	;# 
  1600  0191                     	;# 
  1601  0191                     	;# 
  1602  0192                     	;# 
  1603  0193                     	;# 
  1604  0193                     	;# 
  1605  0193                     	;# 
  1606  0194                     	;# 
  1607  0195                     	;# 
  1608  0196                     	;# 
  1609  0199                     	;# 
  1610  019A                     	;# 
  1611  019B                     	;# 
  1612  019B                     	;# 
  1613  019B                     	;# 
  1614  019B                     	;# 
  1615  019C                     	;# 
  1616  019C                     	;# 
  1617  019D                     	;# 
  1618  019E                     	;# 
  1619  019F                     	;# 
  1620  020C                     	;# 
  1621  020D                     	;# 
  1622  0211                     	;# 
  1623  0211                     	;# 
  1624  0212                     	;# 
  1625  0212                     	;# 
  1626  0213                     	;# 
  1627  0213                     	;# 
  1628  0214                     	;# 
  1629  0214                     	;# 
  1630  0215                     	;# 
  1631  0215                     	;# 
  1632  0215                     	;# 
  1633  0216                     	;# 
  1634  0216                     	;# 
  1635  0217                     	;# 
  1636  0217                     	;# 
  1637  0219                     	;# 
  1638  021A                     	;# 
  1639  021B                     	;# 
  1640  021C                     	;# 
  1641  021D                     	;# 
  1642  021E                     	;# 
  1643  021F                     	;# 
  1644  0291                     	;# 
  1645  0291                     	;# 
  1646  0292                     	;# 
  1647  0293                     	;# 
  1648  0294                     	;# 
  1649  0295                     	;# 
  1650  0295                     	;# 
  1651  0296                     	;# 
  1652  0298                     	;# 
  1653  0298                     	;# 
  1654  0299                     	;# 
  1655  029A                     	;# 
  1656  029B                     	;# 
  1657  029C                     	;# 
  1658  029C                     	;# 
  1659  029D                     	;# 
  1660  029E                     	;# 
  1661  029E                     	;# 
  1662  0311                     	;# 
  1663  0311                     	;# 
  1664  0312                     	;# 
  1665  0313                     	;# 
  1666  0318                     	;# 
  1667  0318                     	;# 
  1668  0319                     	;# 
  1669  031A                     	;# 
  1670  0394                     	;# 
  1671  0395                     	;# 
  1672  0396                     	;# 
  1673  039A                     	;# 
  1674  039C                     	;# 
  1675  039D                     	;# 
  1676  039E                     	;# 
  1677  039F                     	;# 
  1678  0415                     	;# 
  1679  0416                     	;# 
  1680  0417                     	;# 
  1681  041C                     	;# 
  1682  041D                     	;# 
  1683  041E                     	;# 
  1684  0FE4                     	;# 
  1685  0FE5                     	;# 
  1686  0FE6                     	;# 
  1687  0FE7                     	;# 
  1688  0FE8                     	;# 
  1689  0FE9                     	;# 
  1690  0FEA                     	;# 
  1691  0FEB                     	;# 
  1692  0FED                     	;# 
  1693  0FEE                     	;# 
  1694  0FEF                     	;# 
  1695  0000                     	;# 
  1696  0001                     	;# 
  1697  0002                     	;# 
  1698  0003                     	;# 
  1699  0004                     	;# 
  1700  0005                     	;# 
  1701  0006                     	;# 
  1702  0007                     	;# 
  1703  0008                     	;# 
  1704  0009                     	;# 
  1705  000A                     	;# 
  1706  000B                     	;# 
  1707  000C                     	;# 
  1708  000D                     	;# 
  1709  0011                     	;# 
  1710  0012                     	;# 
  1711  0013                     	;# 
  1712  0014                     	;# 
  1713  0015                     	;# 
  1714  0016                     	;# 
  1715  0016                     	;# 
  1716  0017                     	;# 
  1717  0018                     	;# 
  1718  0019                     	;# 
  1719  001A                     	;# 
  1720  001B                     	;# 
  1721  001C                     	;# 
  1722  001E                     	;# 
  1723  001F                     	;# 
  1724  008C                     	;# 
  1725  008D                     	;# 
  1726  0091                     	;# 
  1727  0092                     	;# 
  1728  0093                     	;# 
  1729  0094                     	;# 
  1730  0095                     	;# 
  1731  0096                     	;# 
  1732  0097                     	;# 
  1733  0098                     	;# 
  1734  0099                     	;# 
  1735  009A                     	;# 
  1736  009B                     	;# 
  1737  009B                     	;# 
  1738  009C                     	;# 
  1739  009D                     	;# 
  1740  009E                     	;# 
  1741  010C                     	;# 
  1742  010D                     	;# 
  1743  0111                     	;# 
  1744  0112                     	;# 
  1745  0113                     	;# 
  1746  0114                     	;# 
  1747  0115                     	;# 
  1748  0116                     	;# 
  1749  0117                     	;# 
  1750  0118                     	;# 
  1751  0119                     	;# 
  1752  011A                     	;# 
  1753  011B                     	;# 
  1754  011D                     	;# 
  1755  011E                     	;# 
  1756  018C                     	;# 
  1757  018D                     	;# 
  1758  0191                     	;# 
  1759  0191                     	;# 
  1760  0192                     	;# 
  1761  0193                     	;# 
  1762  0193                     	;# 
  1763  0193                     	;# 
  1764  0194                     	;# 
  1765  0195                     	;# 
  1766  0196                     	;# 
  1767  0199                     	;# 
  1768  019A                     	;# 
  1769  019B                     	;# 
  1770  019B                     	;# 
  1771  019B                     	;# 
  1772  019B                     	;# 
  1773  019C                     	;# 
  1774  019C                     	;# 
  1775  019D                     	;# 
  1776  019E                     	;# 
  1777  019F                     	;# 
  1778  020C                     	;# 
  1779  020D                     	;# 
  1780  0211                     	;# 
  1781  0211                     	;# 
  1782  0212                     	;# 
  1783  0212                     	;# 
  1784  0213                     	;# 
  1785  0213                     	;# 
  1786  0214                     	;# 
  1787  0214                     	;# 
  1788  0215                     	;# 
  1789  0215                     	;# 
  1790  0215                     	;# 
  1791  0216                     	;# 
  1792  0216                     	;# 
  1793  0217                     	;# 
  1794  0217                     	;# 
  1795  0219                     	;# 
  1796  021A                     	;# 
  1797  021B                     	;# 
  1798  021C                     	;# 
  1799  021D                     	;# 
  1800  021E                     	;# 
  1801  021F                     	;# 
  1802  0291                     	;# 
  1803  0291                     	;# 
  1804  0292                     	;# 
  1805  0293                     	;# 
  1806  0294                     	;# 
  1807  0295                     	;# 
  1808  0295                     	;# 
  1809  0296                     	;# 
  1810  0298                     	;# 
  1811  0298                     	;# 
  1812  0299                     	;# 
  1813  029A                     	;# 
  1814  029B                     	;# 
  1815  029C                     	;# 
  1816  029C                     	;# 
  1817  029D                     	;# 
  1818  029E                     	;# 
  1819  029E                     	;# 
  1820  0311                     	;# 
  1821  0311                     	;# 
  1822  0312                     	;# 
  1823  0313                     	;# 
  1824  0318                     	;# 
  1825  0318                     	;# 
  1826  0319                     	;# 
  1827  031A                     	;# 
  1828  0394                     	;# 
  1829  0395                     	;# 
  1830  0396                     	;# 
  1831  039A                     	;# 
  1832  039C                     	;# 
  1833  039D                     	;# 
  1834  039E                     	;# 
  1835  039F                     	;# 
  1836  0415                     	;# 
  1837  0416                     	;# 
  1838  0417                     	;# 
  1839  041C                     	;# 
  1840  041D                     	;# 
  1841  041E                     	;# 
  1842  0FE4                     	;# 
  1843  0FE5                     	;# 
  1844  0FE6                     	;# 
  1845  0FE7                     	;# 
  1846  0FE8                     	;# 
  1847  0FE9                     	;# 
  1848  0FEA                     	;# 
  1849  0FEB                     	;# 
  1850  0FED                     	;# 
  1851  0FEE                     	;# 
  1852  0FEF                     	;# 
  1853  0000                     	;# 
  1854  0001                     	;# 
  1855  0002                     	;# 
  1856  0003                     	;# 
  1857  0004                     	;# 
  1858  0005                     	;# 
  1859  0006                     	;# 
  1860  0007                     	;# 
  1861  0008                     	;# 
  1862  0009                     	;# 
  1863  000A                     	;# 
  1864  000B                     	;# 
  1865  000C                     	;# 
  1866  000D                     	;# 
  1867  0011                     	;# 
  1868  0012                     	;# 
  1869  0013                     	;# 
  1870  0014                     	;# 
  1871  0015                     	;# 
  1872  0016                     	;# 
  1873  0016                     	;# 
  1874  0017                     	;# 
  1875  0018                     	;# 
  1876  0019                     	;# 
  1877  001A                     	;# 
  1878  001B                     	;# 
  1879  001C                     	;# 
  1880  001E                     	;# 
  1881  001F                     	;# 
  1882  008C                     	;# 
  1883  008D                     	;# 
  1884  0091                     	;# 
  1885  0092                     	;# 
  1886  0093                     	;# 
  1887  0094                     	;# 
  1888  0095                     	;# 
  1889  0096                     	;# 
  1890  0097                     	;# 
  1891  0098                     	;# 
  1892  0099                     	;# 
  1893  009A                     	;# 
  1894  009B                     	;# 
  1895  009B                     	;# 
  1896  009C                     	;# 
  1897  009D                     	;# 
  1898  009E                     	;# 
  1899  010C                     	;# 
  1900  010D                     	;# 
  1901  0111                     	;# 
  1902  0112                     	;# 
  1903  0113                     	;# 
  1904  0114                     	;# 
  1905  0115                     	;# 
  1906  0116                     	;# 
  1907  0117                     	;# 
  1908  0118                     	;# 
  1909  0119                     	;# 
  1910  011A                     	;# 
  1911  011B                     	;# 
  1912  011D                     	;# 
  1913  011E                     	;# 
  1914  018C                     	;# 
  1915  018D                     	;# 
  1916  0191                     	;# 
  1917  0191                     	;# 
  1918  0192                     	;# 
  1919  0193                     	;# 
  1920  0193                     	;# 
  1921  0193                     	;# 
  1922  0194                     	;# 
  1923  0195                     	;# 
  1924  0196                     	;# 
  1925  0199                     	;# 
  1926  019A                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019B                     	;# 
  1931  019C                     	;# 
  1932  019C                     	;# 
  1933  019D                     	;# 
  1934  019E                     	;# 
  1935  019F                     	;# 
  1936  020C                     	;# 
  1937  020D                     	;# 
  1938  0211                     	;# 
  1939  0211                     	;# 
  1940  0212                     	;# 
  1941  0212                     	;# 
  1942  0213                     	;# 
  1943  0213                     	;# 
  1944  0214                     	;# 
  1945  0214                     	;# 
  1946  0215                     	;# 
  1947  0215                     	;# 
  1948  0215                     	;# 
  1949  0216                     	;# 
  1950  0216                     	;# 
  1951  0217                     	;# 
  1952  0217                     	;# 
  1953  0219                     	;# 
  1954  021A                     	;# 
  1955  021B                     	;# 
  1956  021C                     	;# 
  1957  021D                     	;# 
  1958  021E                     	;# 
  1959  021F                     	;# 
  1960  0291                     	;# 
  1961  0291                     	;# 
  1962  0292                     	;# 
  1963  0293                     	;# 
  1964  0294                     	;# 
  1965  0295                     	;# 
  1966  0295                     	;# 
  1967  0296                     	;# 
  1968  0298                     	;# 
  1969  0298                     	;# 
  1970  0299                     	;# 
  1971  029A                     	;# 
  1972  029B                     	;# 
  1973  029C                     	;# 
  1974  029C                     	;# 
  1975  029D                     	;# 
  1976  029E                     	;# 
  1977  029E                     	;# 
  1978  0311                     	;# 
  1979  0311                     	;# 
  1980  0312                     	;# 
  1981  0313                     	;# 
  1982  0318                     	;# 
  1983  0318                     	;# 
  1984  0319                     	;# 
  1985  031A                     	;# 
  1986  0394                     	;# 
  1987  0395                     	;# 
  1988  0396                     	;# 
  1989  039A                     	;# 
  1990  039C                     	;# 
  1991  039D                     	;# 
  1992  039E                     	;# 
  1993  039F                     	;# 
  1994  0415                     	;# 
  1995  0416                     	;# 
  1996  0417                     	;# 
  1997  041C                     	;# 
  1998  041D                     	;# 
  1999  041E                     	;# 
  2000  0FE4                     	;# 
  2001  0FE5                     	;# 
  2002  0FE6                     	;# 
  2003  0FE7                     	;# 
  2004  0FE8                     	;# 
  2005  0FE9                     	;# 
  2006  0FEA                     	;# 
  2007  0FEB                     	;# 
  2008  0FED                     	;# 
  2009  0FEE                     	;# 
  2010  0FEF                     	;# 
  2011  0000                     	;# 
  2012  0001                     	;# 
  2013  0002                     	;# 
  2014  0003                     	;# 
  2015  0004                     	;# 
  2016  0005                     	;# 
  2017  0006                     	;# 
  2018  0007                     	;# 
  2019  0008                     	;# 
  2020  0009                     	;# 
  2021  000A                     	;# 
  2022  000B                     	;# 
  2023  000C                     	;# 
  2024  000D                     	;# 
  2025  0011                     	;# 
  2026  0012                     	;# 
  2027  0013                     	;# 
  2028  0014                     	;# 
  2029  0015                     	;# 
  2030  0016                     	;# 
  2031  0016                     	;# 
  2032  0017                     	;# 
  2033  0018                     	;# 
  2034  0019                     	;# 
  2035  001A                     	;# 
  2036  001B                     	;# 
  2037  001C                     	;# 
  2038  001E                     	;# 
  2039  001F                     	;# 
  2040  008C                     	;# 
  2041  008D                     	;# 
  2042  0091                     	;# 
  2043  0092                     	;# 
  2044  0093                     	;# 
  2045  0094                     	;# 
  2046  0095                     	;# 
  2047  0096                     	;# 
  2048  0097                     	;# 
  2049  0098                     	;# 
  2050  0099                     	;# 
  2051  009A                     	;# 
  2052  009B                     	;# 
  2053  009B                     	;# 
  2054  009C                     	;# 
  2055  009D                     	;# 
  2056  009E                     	;# 
  2057  010C                     	;# 
  2058  010D                     	;# 
  2059  0111                     	;# 
  2060  0112                     	;# 
  2061  0113                     	;# 
  2062  0114                     	;# 
  2063  0115                     	;# 
  2064  0116                     	;# 
  2065  0117                     	;# 
  2066  0118                     	;# 
  2067  0119                     	;# 
  2068  011A                     	;# 
  2069  011B                     	;# 
  2070  011D                     	;# 
  2071  011E                     	;# 
  2072  018C                     	;# 
  2073  018D                     	;# 
  2074  0191                     	;# 
  2075  0191                     	;# 
  2076  0192                     	;# 
  2077  0193                     	;# 
  2078  0193                     	;# 
  2079  0193                     	;# 
  2080  0194                     	;# 
  2081  0195                     	;# 
  2082  0196                     	;# 
  2083  0199                     	;# 
  2084  019A                     	;# 
  2085  019B                     	;# 
  2086  019B                     	;# 
  2087  019B                     	;# 
  2088  019B                     	;# 
  2089  019C                     	;# 
  2090  019C                     	;# 
  2091  019D                     	;# 
  2092  019E                     	;# 
  2093  019F                     	;# 
  2094  020C                     	;# 
  2095  020D                     	;# 
  2096  0211                     	;# 
  2097  0211                     	;# 
  2098  0212                     	;# 
  2099  0212                     	;# 
  2100  0213                     	;# 
  2101  0213                     	;# 
  2102  0214                     	;# 
  2103  0214                     	;# 
  2104  0215                     	;# 
  2105  0215                     	;# 
  2106  0215                     	;# 
  2107  0216                     	;# 
  2108  0216                     	;# 
  2109  0217                     	;# 
  2110  0217                     	;# 
  2111  0219                     	;# 
  2112  021A                     	;# 
  2113  021B                     	;# 
  2114  021C                     	;# 
  2115  021D                     	;# 
  2116  021E                     	;# 
  2117  021F                     	;# 
  2118  0291                     	;# 
  2119  0291                     	;# 
  2120  0292                     	;# 
  2121  0293                     	;# 
  2122  0294                     	;# 
  2123  0295                     	;# 
  2124  0295                     	;# 
  2125  0296                     	;# 
  2126  0298                     	;# 
  2127  0298                     	;# 
  2128  0299                     	;# 
  2129  029A                     	;# 
  2130  029B                     	;# 
  2131  029C                     	;# 
  2132  029C                     	;# 
  2133  029D                     	;# 
  2134  029E                     	;# 
  2135  029E                     	;# 
  2136  0311                     	;# 
  2137  0311                     	;# 
  2138  0312                     	;# 
  2139  0313                     	;# 
  2140  0318                     	;# 
  2141  0318                     	;# 
  2142  0319                     	;# 
  2143  031A                     	;# 
  2144  0394                     	;# 
  2145  0395                     	;# 
  2146  0396                     	;# 
  2147  039A                     	;# 
  2148  039C                     	;# 
  2149  039D                     	;# 
  2150  039E                     	;# 
  2151  039F                     	;# 
  2152  0415                     	;# 
  2153  0416                     	;# 
  2154  0417                     	;# 
  2155  041C                     	;# 
  2156  041D                     	;# 
  2157  041E                     	;# 
  2158  0FE4                     	;# 
  2159  0FE5                     	;# 
  2160  0FE6                     	;# 
  2161  0FE7                     	;# 
  2162  0FE8                     	;# 
  2163  0FE9                     	;# 
  2164  0FEA                     	;# 
  2165  0FEB                     	;# 
  2166  0FED                     	;# 
  2167  0FEE                     	;# 
  2168  0FEF                     	;# 
  2169                           
  2170 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2171  0000                     
  2172 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2173  0000                     
  2174 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2175  0000                     
  2176                           	psect	nvBANK1
  2177  00E3                     __pnvBANK1:
  2178  00E3                     _IOCBF5_InterruptHandler:
  2179  00E3                     	ds	2
  2180  00E5                     _IOCBF4_InterruptHandler:
  2181  00E5                     	ds	2
  2182  00E7                     _IOCBF3_InterruptHandler:
  2183  00E7                     	ds	2
  2184  00E9                     _IOCBF0_InterruptHandler:
  2185  00E9                     	ds	2
  2186  00EB                     _TMR4_InterruptHandler:
  2187  00EB                     	ds	2
  2188  00ED                     _timer1ReloadVal:
  2189  00ED                     	ds	2
  2190                           
  2191                           	psect	nvBANK2
  2192  014D                     __pnvBANK2:
  2193  014D                     _CCP4_CallBack:
  2194  014D                     	ds	2
  2195  014F                     _EUSART_ErrorHandler:
  2196  014F                     	ds	2
  2197  0151                     _EUSART_OverrunErrorHandler:
  2198  0151                     	ds	2
  2199  0153                     _EUSART_FramingErrorHandler:
  2200  0153                     	ds	2
  2201  0155                     _temp_mt:
  2202  0155                     	ds	4
  2203  0159                     _I_m:
  2204  0159                     	ds	4
  2205  000B                     _INTCONbits	set	11
  2206  0013                     _PIR3bits	set	19
  2207  001C                     _T2CONbits	set	28
  2208  001C                     _T2CON	set	28
  2209  001A                     _TMR2	set	26
  2210  001B                     _PR2	set	27
  2211  0019                     _T1GCONbits	set	25
  2212  0018                     _T1CONbits	set	24
  2213  0018                     _T1CON	set	24
  2214  0016                     _TMR1L	set	22
  2215  0017                     _TMR1H	set	23
  2216  0019                     _T1GCON	set	25
  2217  0011                     _PIR1bits	set	17
  2218  0095                     _OPTION_REGbits	set	149
  2219  008D                     _TRISB	set	141
  2220  008C                     _TRISA	set	140
  2221  009D                     _ADCON0bits	set	157
  2222  009D                     _ADCON0	set	157
  2223  009C                     _ADRESH	set	156
  2224  009B                     _ADRESL	set	155
  2225  009E                     _ADCON1	set	158
  2226  0093                     _PIE3bits	set	147
  2227  0097                     _WDTCON	set	151
  2228  0098                     _OSCTUNE	set	152
  2229  0099                     _OSCCON	set	153
  2230  010C                     _LATAbits	set	268
  2231  011E                     _APFCON1	set	286
  2232  011D                     _APFCON0	set	285
  2233  010D                     _LATB	set	269
  2234  010C                     _LATA	set	268
  2235  0117                     _FVRCONbits	set	279
  2236  0117                     _FVRCON	set	279
  2237  0116                     _BORCON	set	278
  2238  018C                     _ANSELA	set	396
  2239  018D                     _ANSELB	set	397
  2240  019A                     _TXREG	set	410
  2241  0199                     _RCREG	set	409
  2242  019D                     _RCSTAbits	set	413
  2243  019E                     _TXSTAbits	set	414
  2244  019C                     _SPBRGH	set	412
  2245  019B                     _SPBRGL	set	411
  2246  019E                     _TXSTA	set	414
  2247  019D                     _RCSTA	set	413
  2248  019F                     _BAUDCON	set	415
  2249  020C                     _WPUA	set	524
  2250  020D                     _WPUB	set	525
  2251  029E                     _CCPTMRS0bits	set	670
  2252  0312                     _CCPR3H	set	786
  2253  0311                     _CCPR3L	set	785
  2254  0313                     _CCP3CON	set	787
  2255  0319                     _CCPR4H	set	793
  2256  0318                     _CCPR4L	set	792
  2257  031A                     _CCP4CON	set	794
  2258  0394                     _IOCBPbits	set	916
  2259  0395                     _IOCBNbits	set	917
  2260  0396                     _IOCBFbits	set	918
  2261  0417                     _T4CONbits	set	1047
  2262  0417                     _T4CON	set	1047
  2263  0415                     _TMR4	set	1045
  2264  0416                     _PR4	set	1046
  2265                           
  2266                           	psect	cinit
  2267  0036                     start_initialization:	
  2268                           ; #config settings
  2269                           
  2270  0036                     __initialization:
  2271                           
  2272                           ; Clear objects allocated to COMMON
  2273  0036  01F0               	clrf	__pbssCOMMON& (0+127)
  2274  0037  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2275  0038  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2276  0039  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2277  003A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2278  003B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2279  003C  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  2280                           
  2281                           ; Clear objects allocated to BANK0
  2282  003D  0020               	movlb	0	; select bank0
  2283  003E  01EF               	clrf	__pbssBANK0& (0+127)
  2284                           
  2285                           ; Clear objects allocated to BANK1
  2286  003F  30A0               	movlw	low __pbssBANK1
  2287  0040  0084               	movwf	4
  2288  0041  3000               	movlw	high __pbssBANK1
  2289  0042  0085               	movwf	5
  2290  0043  3043               	movlw	67
  2291  0044  3188  203B  3180   	fcall	clear_ram0
  2292                           
  2293                           ; Clear objects allocated to BANK2
  2294  0047  3020               	movlw	low __pbssBANK2
  2295  0048  0084               	movwf	4
  2296  0049  3001               	movlw	high __pbssBANK2
  2297  004A  0085               	movwf	5
  2298  004B  302D               	movlw	45
  2299  004C  3188  203B  3180   	fcall	clear_ram0
  2300  004F                     end_of_initialization:	
  2301                           ;End of C runtime variable initialization code
  2302                           
  2303  004F                     __end_of__initialization:
  2304  004F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2305  0050  0020               	movlb	0
  2306  0051  318A  2AF8         	ljmp	_main	;jump to C main() function
  2307                           
  2308                           	psect	bssCOMMON
  2309  0070                     __pbssCOMMON:
  2310  0070                     _min_origem_up:
  2311  0070                     	ds	2
  2312  0072                     _max_origem_down:
  2313  0072                     	ds	2
  2314  0074                     _and_dst:
  2315  0074                     	ds	2
  2316  0076                     _eusartRxLastError:
  2317  0076                     	ds	1
  2318                           
  2319                           	psect	bssBANK0
  2320  006F                     __pbssBANK0:
  2321  006F                     _and_ating:
  2322  006F                     	ds	1
  2323                           
  2324                           	psect	bssBANK1
  2325  00A0                     __pbssBANK1:
  2326  00A0                     _origem_down:
  2327  00A0                     	ds	20
  2328  00B4                     _fila_up:
  2329  00B4                     	ds	20
  2330  00C8                     _and_ating2:
  2331  00C8                     	ds	2
  2332  00CA                     _out_value:
  2333  00CA                     	ds	2
  2334  00CC                     _min_fila_down:
  2335  00CC                     	ds	2
  2336  00CE                     _max_fila_up:
  2337  00CE                     	ds	2
  2338  00D0                     _distancia:
  2339  00D0                     	ds	2
  2340  00D2                     _andar:
  2341  00D2                     	ds	2
  2342  00D4                     _sentido2:
  2343  00D4                     	ds	2
  2344  00D6                     _aux_tempo:
  2345  00D6                     	ds	2
  2346  00D8                     _sentido:
  2347  00D8                     	ds	2
  2348  00DA                     _and_origem:
  2349  00DA                     	ds	2
  2350  00DC                     _ADC_InterruptHandler:
  2351  00DC                     	ds	2
  2352  00DE                     _state_motor:
  2353  00DE                     	ds	1
  2354  00DF                     _ccp_value:
  2355  00DF                     	ds	2
  2356  00E1                     _pulses:
  2357  00E1                     	ds	2
  2358                           
  2359                           	psect	bssBANK2
  2360  0120                     __pbssBANK2:
  2361  0120                     _origem_up:
  2362  0120                     	ds	20
  2363  0134                     _fila_down:
  2364  0134                     	ds	20
  2365  0148                     _byte:
  2366  0148                     	ds	5
  2367                           
  2368                           	psect	clrtext
  2369  083B                     clear_ram0:	
  2370                           ;	Called with FSR0 containing the base address, and
  2371                           ;	WREG with the size to clear
  2372                           
  2373  083B  0064               	clrwdt	;clear the watchdog before getting into this loop
  2374  083C                     clrloop0:
  2375  083C  0180               	clrf	0	;clear RAM location pointed to by FSR
  2376  083D  3101               	addfsr 0,1
  2377  083E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2378  083F  283C               	goto	clrloop0	;have we reached the end yet?
  2379  0840  3400               	retlw	0	;all done for this memory range, return
  2380                           
  2381                           	psect	cstackCOMMON
  2382  0077                     __pcstackCOMMON:
  2383  0077                     ?_PIN_MANAGER_Initialize:
  2384  0077                     ?_OSCILLATOR_Initialize:	
  2385                           ; 1 bytes @ 0x0
  2386                           
  2387  0077                     ?_WDT_Initialize:	
  2388                           ; 1 bytes @ 0x0
  2389                           
  2390  0077                     ?_FVR_Initialize:	
  2391                           ; 1 bytes @ 0x0
  2392                           
  2393  0077                     ?_CCP4_Initialize:	
  2394                           ; 1 bytes @ 0x0
  2395                           
  2396  0077                     ?_ADC_Initialize:	
  2397                           ; 1 bytes @ 0x0
  2398                           
  2399  0077                     ?_TMR4_Initialize:	
  2400                           ; 1 bytes @ 0x0
  2401                           
  2402  0077                     ?_PWM3_Initialize:	
  2403                           ; 1 bytes @ 0x0
  2404                           
  2405  0077                     ?_TMR2_Initialize:	
  2406                           ; 1 bytes @ 0x0
  2407                           
  2408  0077                     ?_TMR1_Initialize:	
  2409                           ; 1 bytes @ 0x0
  2410                           
  2411  0077                     ?_TMR4_DefaultInterruptHandler:	
  2412                           ; 1 bytes @ 0x0
  2413                           
  2414  0077                     ??_TMR4_DefaultInterruptHandler:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417  0077                     ?_PIN_MANAGER_IOC:	
  2418                           ; 1 bytes @ 0x0
  2419                           
  2420  0077                     ?_CCP4_CaptureISR:	
  2421                           ; 1 bytes @ 0x0
  2422                           
  2423  0077                     ?_IOCBF0_DefaultInterruptHandler:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426  0077                     ??_IOCBF0_DefaultInterruptHandler:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429  0077                     ?_IOCBF3_DefaultInterruptHandler:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432  0077                     ??_IOCBF3_DefaultInterruptHandler:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435  0077                     ?_IOCBF4_DefaultInterruptHandler:	
  2436                           ; 1 bytes @ 0x0
  2437                           
  2438  0077                     ??_IOCBF4_DefaultInterruptHandler:	
  2439                           ; 1 bytes @ 0x0
  2440                           
  2441  0077                     ?_IOCBF5_DefaultInterruptHandler:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444  0077                     ??_IOCBF5_DefaultInterruptHandler:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447  0077                     ?_IOCBF0_ISR:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450  0077                     ??_IOCBF0_ISR:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453  0077                     ?_IOCBF3_ISR:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456  0077                     ?_IOCBF4_ISR:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459  0077                     ?_IOCBF5_ISR:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462  0077                     ?_comunicacao:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465  0077                     ?_controle:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468  0077                     ?_gerenciamento:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471  0077                     ?_update:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474  0077                     ?_col_up:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477  0077                     ?_col_down:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480  0077                     ?_min_up:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483  0077                     ?_max_down:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486  0077                     ?_EUSART_Initialize:	
  2487                           ; 1 bytes @ 0x0
  2488                           
  2489  0077                     ?_EUSART_is_tx_ready:	
  2490                           ; 1 bytes @ 0x0
  2491                           
  2492  0077                     ??_EUSART_is_tx_ready:	
  2493                           ; 1 bytes @ 0x0
  2494                           
  2495  0077                     ?_EUSART_is_rx_ready:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498  0077                     ?_EUSART_Read:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501  0077                     ?_EUSART_Write:	
  2502                           ; 1 bytes @ 0x0
  2503                           
  2504  0077                     ??_EUSART_Write:	
  2505                           ; 1 bytes @ 0x0
  2506                           
  2507  0077                     ?_SYSTEM_Initialize:	
  2508                           ; 1 bytes @ 0x0
  2509                           
  2510  0077                     ?_TMR1_WriteTimer:	
  2511                           ; 1 bytes @ 0x0
  2512                           
  2513  0077                     ?_TMR4_ISR:	
  2514                           ; 1 bytes @ 0x0
  2515                           
  2516  0077                     ?_INTERRUPT_InterruptManager:	
  2517                           ; 1 bytes @ 0x0
  2518                           
  2519  0077                     ?_send_data:	
  2520                           ; 1 bytes @ 0x0
  2521                           
  2522  0077                     ?_sensor1:	
  2523                           ; 1 bytes @ 0x0
  2524                           
  2525  0077                     ??_sensor1:	
  2526                           ; 1 bytes @ 0x0
  2527                           
  2528  0077                     ?_sensor2:	
  2529                           ; 1 bytes @ 0x0
  2530                           
  2531  0077                     ??_sensor2:	
  2532                           ; 1 bytes @ 0x0
  2533                           
  2534  0077                     ?_sensor3:	
  2535                           ; 1 bytes @ 0x0
  2536                           
  2537  0077                     ??_sensor3:	
  2538                           ; 1 bytes @ 0x0
  2539                           
  2540  0077                     ?_sensor4:	
  2541                           ; 1 bytes @ 0x0
  2542                           
  2543  0077                     ??_sensor4:	
  2544                           ; 1 bytes @ 0x0
  2545                           
  2546  0077                     ?_main:	
  2547                           ; 1 bytes @ 0x0
  2548                           
  2549  0077                     _EUSART_is_tx_ready$167:	
  2550                           ; 1 bytes @ 0x0
  2551                           
  2552  0077                     EUSART_Write@txData:	
  2553                           ; 1 bytes @ 0x0
  2554                           
  2555  0077                     TMR1_WriteTimer@timerVal:	
  2556                           ; 1 bytes @ 0x0
  2557                           
  2558                           
  2559                           ; 2 bytes @ 0x0
  2560  0077                     	ds	1
  2561  0078                     ??_PIN_MANAGER_IOC:
  2562  0078                     ??_IOCBF3_ISR:	
  2563                           ; 1 bytes @ 0x1
  2564                           
  2565  0078                     ??_IOCBF4_ISR:	
  2566                           ; 1 bytes @ 0x1
  2567                           
  2568  0078                     ??_IOCBF5_ISR:	
  2569                           ; 1 bytes @ 0x1
  2570                           
  2571  0078                     ??_send_data:	
  2572                           ; 1 bytes @ 0x1
  2573                           
  2574                           
  2575                           ; 1 bytes @ 0x1
  2576  0078                     	ds	1
  2577  0079                     ??_TMR1_WriteTimer:
  2578  0079                     ?_CCP4_DefaultCallBack:	
  2579                           ; 1 bytes @ 0x2
  2580                           
  2581  0079                     ?_get_pulse:	
  2582                           ; 1 bytes @ 0x2
  2583                           
  2584  0079                     CCP4_DefaultCallBack@capturedValue:	
  2585                           ; 1 bytes @ 0x2
  2586                           
  2587  0079                     send_data@i:	
  2588                           ; 2 bytes @ 0x2
  2589                           
  2590  0079                     get_pulse@capturedValue:	
  2591                           ; 2 bytes @ 0x2
  2592                           
  2593                           
  2594                           ; 2 bytes @ 0x2
  2595  0079                     	ds	2
  2596  007B                     ??_CCP4_CaptureISR:
  2597  007B                     ??_TMR4_ISR:	
  2598                           ; 1 bytes @ 0x4
  2599                           
  2600  007B                     ??_CCP4_DefaultCallBack:	
  2601                           ; 1 bytes @ 0x4
  2602                           
  2603  007B                     ??_get_pulse:	
  2604                           ; 1 bytes @ 0x4
  2605                           
  2606                           
  2607                           ; 1 bytes @ 0x4
  2608  007B                     	ds	1
  2609  007C                     CCP4_CaptureISR@module:
  2610                           
  2611                           ; 2 bytes @ 0x5
  2612  007C                     	ds	2
  2613  007E                     ??_INTERRUPT_InterruptManager:
  2614                           
  2615                           	psect	cstackBANK0
  2616  0020                     __pcstackBANK0:	
  2617                           ; 1 bytes @ 0x7
  2618                           
  2619  0020                     ?_EUSART_SetFramingErrorHandler:
  2620  0020                     ?_EUSART_SetOverrunErrorHandler:	
  2621                           ; 1 bytes @ 0x0
  2622                           
  2623  0020                     ?_EUSART_SetErrorHandler:	
  2624                           ; 1 bytes @ 0x0
  2625                           
  2626  0020                     ??_OSCILLATOR_Initialize:	
  2627                           ; 1 bytes @ 0x0
  2628                           
  2629  0020                     ??_WDT_Initialize:	
  2630                           ; 1 bytes @ 0x0
  2631                           
  2632  0020                     ??_FVR_Initialize:	
  2633                           ; 1 bytes @ 0x0
  2634                           
  2635  0020                     ??_ADC_Initialize:	
  2636                           ; 1 bytes @ 0x0
  2637                           
  2638  0020                     ??_PWM3_Initialize:	
  2639                           ; 1 bytes @ 0x0
  2640                           
  2641  0020                     ??_TMR2_Initialize:	
  2642                           ; 1 bytes @ 0x0
  2643                           
  2644  0020                     ??_TMR1_Initialize:	
  2645                           ; 1 bytes @ 0x0
  2646                           
  2647  0020                     ?_TMR4_SetInterruptHandler:	
  2648                           ; 1 bytes @ 0x0
  2649                           
  2650  0020                     ?_CCP4_SetCallBack:	
  2651                           ; 1 bytes @ 0x0
  2652                           
  2653  0020                     ?_IOCBF0_SetInterruptHandler:	
  2654                           ; 1 bytes @ 0x0
  2655                           
  2656  0020                     ?_IOCBF3_SetInterruptHandler:	
  2657                           ; 1 bytes @ 0x0
  2658                           
  2659  0020                     ?_IOCBF4_SetInterruptHandler:	
  2660                           ; 1 bytes @ 0x0
  2661                           
  2662  0020                     ?_IOCBF5_SetInterruptHandler:	
  2663                           ; 1 bytes @ 0x0
  2664                           
  2665  0020                     ??_update:	
  2666                           ; 1 bytes @ 0x0
  2667                           
  2668  0020                     ??_min_up:	
  2669                           ; 1 bytes @ 0x0
  2670                           
  2671  0020                     ??_max_down:	
  2672                           ; 1 bytes @ 0x0
  2673                           
  2674  0020                     ??_EUSART_is_rx_ready:	
  2675                           ; 1 bytes @ 0x0
  2676                           
  2677  0020                     ??_EUSART_Read:	
  2678                           ; 1 bytes @ 0x0
  2679                           
  2680  0020                     ?_PWM3_LoadDutyValue:	
  2681                           ; 1 bytes @ 0x0
  2682                           
  2683  0020                     ?_abs:	
  2684                           ; 1 bytes @ 0x0
  2685                           
  2686  0020                     ?__Umul8_16:	
  2687                           ; 2 bytes @ 0x0
  2688                           
  2689  0020                     ?_ADC_GetConversion:	
  2690                           ; 2 bytes @ 0x0
  2691                           
  2692  0020                     ?___wmul:	
  2693                           ; 2 bytes @ 0x0
  2694                           
  2695  0020                     ?___fltol:	
  2696                           ; 2 bytes @ 0x0
  2697                           
  2698  0020                     __Umul8_16@multiplicand:	
  2699                           ; 4 bytes @ 0x0
  2700                           
  2701  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2702                           ; 1 bytes @ 0x0
  2703                           
  2704  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2705                           ; 2 bytes @ 0x0
  2706                           
  2707  0020                     EUSART_SetErrorHandler@interruptHandler:	
  2708                           ; 2 bytes @ 0x0
  2709                           
  2710  0020                     TMR4_SetInterruptHandler@InterruptHandler:	
  2711                           ; 2 bytes @ 0x0
  2712                           
  2713  0020                     CCP4_SetCallBack@customCallBack:	
  2714                           ; 2 bytes @ 0x0
  2715                           
  2716  0020                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  2717                           ; 2 bytes @ 0x0
  2718                           
  2719  0020                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  2720                           ; 2 bytes @ 0x0
  2721                           
  2722  0020                     IOCBF4_SetInterruptHandler@InterruptHandler:	
  2723                           ; 2 bytes @ 0x0
  2724                           
  2725  0020                     IOCBF5_SetInterruptHandler@InterruptHandler:	
  2726                           ; 2 bytes @ 0x0
  2727                           
  2728  0020                     PWM3_LoadDutyValue@dutyValue:	
  2729                           ; 2 bytes @ 0x0
  2730                           
  2731  0020                     ___wmul@multiplier:	
  2732                           ; 2 bytes @ 0x0
  2733                           
  2734  0020                     abs@a:	
  2735                           ; 2 bytes @ 0x0
  2736                           
  2737  0020                     ___fltol@f1:	
  2738                           ; 2 bytes @ 0x0
  2739                           
  2740                           
  2741                           ; 4 bytes @ 0x0
  2742  0020                     	ds	2
  2743  0022                     ??_EUSART_SetFramingErrorHandler:
  2744  0022                     ??_EUSART_SetOverrunErrorHandler:	
  2745                           ; 1 bytes @ 0x2
  2746                           
  2747  0022                     ??_EUSART_SetErrorHandler:	
  2748                           ; 1 bytes @ 0x2
  2749                           
  2750  0022                     ??_PIN_MANAGER_Initialize:	
  2751                           ; 1 bytes @ 0x2
  2752                           
  2753  0022                     ??_CCP4_Initialize:	
  2754                           ; 1 bytes @ 0x2
  2755                           
  2756  0022                     ??_TMR4_Initialize:	
  2757                           ; 1 bytes @ 0x2
  2758                           
  2759  0022                     ??_TMR4_SetInterruptHandler:	
  2760                           ; 1 bytes @ 0x2
  2761                           
  2762  0022                     ??_CCP4_SetCallBack:	
  2763                           ; 1 bytes @ 0x2
  2764                           
  2765  0022                     ??_IOCBF0_SetInterruptHandler:	
  2766                           ; 1 bytes @ 0x2
  2767                           
  2768  0022                     ??_IOCBF3_SetInterruptHandler:	
  2769                           ; 1 bytes @ 0x2
  2770                           
  2771  0022                     ??_IOCBF4_SetInterruptHandler:	
  2772                           ; 1 bytes @ 0x2
  2773                           
  2774  0022                     ??_IOCBF5_SetInterruptHandler:	
  2775                           ; 1 bytes @ 0x2
  2776                           
  2777  0022                     ??_abs:	
  2778                           ; 1 bytes @ 0x2
  2779                           
  2780  0022                     ??__Umul8_16:	
  2781                           ; 1 bytes @ 0x2
  2782                           
  2783  0022                     ??_EUSART_Initialize:	
  2784                           ; 1 bytes @ 0x2
  2785                           
  2786  0022                     ??_SYSTEM_Initialize:	
  2787                           ; 1 bytes @ 0x2
  2788                           
  2789  0022                     ??_ADC_GetConversion:	
  2790                           ; 1 bytes @ 0x2
  2791                           
  2792  0022                     ??_PWM3_LoadDutyValue:	
  2793                           ; 1 bytes @ 0x2
  2794                           
  2795  0022                     ___wmul@multiplicand:	
  2796                           ; 1 bytes @ 0x2
  2797                           
  2798                           
  2799                           ; 2 bytes @ 0x2
  2800  0022                     	ds	1
  2801  0023                     ADC_GetConversion@channel:
  2802  0023                     update@aux:	
  2803                           ; 1 bytes @ 0x3
  2804                           
  2805  0023                     min_up@i:	
  2806                           ; 1 bytes @ 0x3
  2807                           
  2808  0023                     max_down@i:	
  2809                           ; 2 bytes @ 0x3
  2810                           
  2811                           
  2812                           ; 2 bytes @ 0x3
  2813  0023                     	ds	1
  2814  0024                     ??___wmul:
  2815  0024                     ??___fltol:	
  2816                           ; 1 bytes @ 0x4
  2817                           
  2818  0024                     ?___xxtofl:	
  2819                           ; 1 bytes @ 0x4
  2820                           
  2821  0024                     update@i_1261:	
  2822                           ; 4 bytes @ 0x4
  2823                           
  2824  0024                     ___wmul@product:	
  2825                           ; 2 bytes @ 0x4
  2826                           
  2827  0024                     __Umul8_16@product:	
  2828                           ; 2 bytes @ 0x4
  2829                           
  2830  0024                     ___xxtofl@val:	
  2831                           ; 2 bytes @ 0x4
  2832                           
  2833                           
  2834                           ; 4 bytes @ 0x4
  2835  0024                     	ds	1
  2836  0025                     ??_col_up:
  2837  0025                     ??_col_down:	
  2838                           ; 1 bytes @ 0x5
  2839                           
  2840                           
  2841                           ; 1 bytes @ 0x5
  2842  0025                     	ds	1
  2843  0026                     update@i:
  2844  0026                     __Umul8_16@word_mpld:	
  2845                           ; 2 bytes @ 0x6
  2846                           
  2847                           
  2848                           ; 2 bytes @ 0x6
  2849  0026                     	ds	2
  2850  0028                     ??___xxtofl:
  2851  0028                     __Umul8_16@multiplier:	
  2852                           ; 1 bytes @ 0x8
  2853                           
  2854  0028                     update@i_1262:	
  2855                           ; 1 bytes @ 0x8
  2856                           
  2857                           
  2858                           ; 2 bytes @ 0x8
  2859  0028                     	ds	1
  2860  0029                     ___fltol@sign1:
  2861                           
  2862                           ; 1 bytes @ 0x9
  2863  0029                     	ds	1
  2864  002A                     ??_gerenciamento:
  2865  002A                     ___fltol@exp1:	
  2866                           ; 1 bytes @ 0xA
  2867                           
  2868                           
  2869                           ; 1 bytes @ 0xA
  2870  002A                     	ds	2
  2871  002C                     ___xxtofl@sign:
  2872                           
  2873                           ; 1 bytes @ 0xC
  2874  002C                     	ds	1
  2875  002D                     ___xxtofl@exp:
  2876                           
  2877                           ; 1 bytes @ 0xD
  2878  002D                     	ds	1
  2879  002E                     ___xxtofl@arg:
  2880                           
  2881                           ; 4 bytes @ 0xE
  2882  002E                     	ds	4
  2883  0032                     ?___flmul:
  2884  0032                     ___flmul@b:	
  2885                           ; 4 bytes @ 0x12
  2886                           
  2887                           
  2888                           ; 4 bytes @ 0x12
  2889  0032                     	ds	4
  2890  0036                     ___flmul@a:
  2891                           
  2892                           ; 4 bytes @ 0x16
  2893  0036                     	ds	4
  2894  003A                     ??___flmul:
  2895                           
  2896                           ; 1 bytes @ 0x1A
  2897  003A                     	ds	5
  2898  003F                     ___flmul@sign:
  2899                           
  2900                           ; 1 bytes @ 0x1F
  2901  003F                     	ds	1
  2902  0040                     ___flmul@grs:
  2903                           
  2904                           ; 4 bytes @ 0x20
  2905  0040                     	ds	4
  2906  0044                     ___flmul@aexp:
  2907                           
  2908                           ; 1 bytes @ 0x24
  2909  0044                     	ds	1
  2910  0045                     ___flmul@bexp:
  2911                           
  2912                           ; 1 bytes @ 0x25
  2913  0045                     	ds	1
  2914  0046                     ___flmul@prod:
  2915                           
  2916                           ; 4 bytes @ 0x26
  2917  0046                     	ds	4
  2918  004A                     ___flmul@temp:
  2919                           
  2920                           ; 2 bytes @ 0x2A
  2921  004A                     	ds	2
  2922  004C                     ??_controle:
  2923  004C                     ?___fldiv:	
  2924                           ; 1 bytes @ 0x2C
  2925                           
  2926  004C                     ___fldiv@a:	
  2927                           ; 4 bytes @ 0x2C
  2928                           
  2929                           
  2930                           ; 4 bytes @ 0x2C
  2931  004C                     	ds	4
  2932  0050                     controle@destiny:
  2933  0050                     ___fldiv@b:	
  2934                           ; 2 bytes @ 0x30
  2935                           
  2936                           
  2937                           ; 4 bytes @ 0x30
  2938  0050                     	ds	2
  2939  0052                     controle@route:
  2940                           
  2941                           ; 2 bytes @ 0x32
  2942  0052                     	ds	2
  2943  0054                     ??___fldiv:
  2944  0054                     controle@a:	
  2945                           ; 1 bytes @ 0x34
  2946                           
  2947                           
  2948                           ; 2 bytes @ 0x34
  2949  0054                     	ds	2
  2950  0056                     controle@min_dutyValue:
  2951                           
  2952                           ; 2 bytes @ 0x36
  2953  0056                     	ds	2
  2954  0058                     controle@max_dutyValue:
  2955                           
  2956                           ; 2 bytes @ 0x38
  2957  0058                     	ds	1
  2958  0059                     ___fldiv@rem:
  2959                           
  2960                           ; 4 bytes @ 0x39
  2961  0059                     	ds	1
  2962  005A                     controle@dutyValue:
  2963                           
  2964                           ; 2 bytes @ 0x3A
  2965  005A                     	ds	2
  2966  005C                     controle@count:
  2967                           
  2968                           ; 2 bytes @ 0x3C
  2969  005C                     	ds	1
  2970  005D                     ___fldiv@sign:
  2971                           
  2972                           ; 1 bytes @ 0x3D
  2973  005D                     	ds	1
  2974  005E                     ___fldiv@new_exp:
  2975                           
  2976                           ; 2 bytes @ 0x3E
  2977  005E                     	ds	2
  2978  0060                     ___fldiv@grs:
  2979                           
  2980                           ; 4 bytes @ 0x40
  2981  0060                     	ds	4
  2982  0064                     ___fldiv@bexp:
  2983                           
  2984                           ; 1 bytes @ 0x44
  2985  0064                     	ds	1
  2986  0065                     ___fldiv@aexp:
  2987                           
  2988                           ; 1 bytes @ 0x45
  2989  0065                     	ds	1
  2990  0066                     ??_comunicacao:
  2991                           
  2992                           ; 1 bytes @ 0x46
  2993  0066                     	ds	1
  2994  0067                     comunicacao@speed:
  2995                           
  2996                           ; 4 bytes @ 0x47
  2997  0067                     	ds	4
  2998  006B                     comunicacao@position:
  2999                           
  3000                           ; 4 bytes @ 0x4B
  3001  006B                     	ds	4
  3002  006F                     ??_main:
  3003                           
  3004                           	psect	maintext
  3005  0AF8                     __pmaintext:	
  3006                           ; 1 bytes @ 0x4F
  3007 ;;
  3008 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3009 ;;
  3010 ;; *************** function _main *****************
  3011 ;; Defined at:
  3012 ;;		line 125 in file "main.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;		None
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : B1F/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3026 ;;      Params:         0       0       0       0       0       0
  3027 ;;      Locals:         0       0       0       0       0       0
  3028 ;;      Temps:          0       0       0       0       0       0
  3029 ;;      Totals:         0       0       0       0       0       0
  3030 ;;Total ram usage:        0 bytes
  3031 ;; Hardware stack levels required when called:    7
  3032 ;; This function calls:
  3033 ;;		_CCP4_SetCallBack
  3034 ;;		_IOCBF0_SetInterruptHandler
  3035 ;;		_IOCBF3_SetInterruptHandler
  3036 ;;		_IOCBF4_SetInterruptHandler
  3037 ;;		_IOCBF5_SetInterruptHandler
  3038 ;;		_SYSTEM_Initialize
  3039 ;;		_TMR4_SetInterruptHandler
  3040 ;;		_comunicacao
  3041 ;;		_controle
  3042 ;;		_gerenciamento
  3043 ;; This function is called by:
  3044 ;;		Startup code after reset
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           
  3049                           ;psect for function _main
  3050  0AF8                     _main:
  3051  0AF8                     l3896:	
  3052                           ;incstack = 0
  3053                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3054                           
  3055                           
  3056                           ;main.c: 129:     SYSTEM_Initialize();
  3057  0AF8  318A  2234  318A   	fcall	_SYSTEM_Initialize
  3058  0AFB                     l3898:
  3059                           
  3060                           ;main.c: 130:     (INTCONbits.GIE = 1);
  3061  0AFB  178B               	bsf	11,7	;volatile
  3062  0AFC                     l3900:
  3063                           
  3064                           ;main.c: 131:     (INTCONbits.PEIE = 1);
  3065  0AFC  170B               	bsf	11,6	;volatile
  3066                           
  3067                           ;main.c: 134:     TMR4_SetInterruptHandler(send_data);
  3068  0AFD  30C3               	movlw	low _send_data
  3069  0AFE  0020               	movlb	0	; select bank0
  3070  0AFF  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  3071  0B00  300A               	movlw	high _send_data
  3072  0B01  00A1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  3073  0B02  3188  20B0  318A   	fcall	_TMR4_SetInterruptHandler
  3074                           
  3075                           ;main.c: 135:     IOCBF0_SetInterruptHandler(sensor1);
  3076  0B05  3041               	movlw	low _sensor1
  3077  0B06  0020               	movlb	0	; select bank0
  3078  0B07  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler
  3079  0B08  3008               	movlw	high _sensor1
  3080  0B09  00A1               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler+1
  3081  0B0A  3188  2083  318A   	fcall	_IOCBF0_SetInterruptHandler
  3082                           
  3083                           ;main.c: 136:     IOCBF3_SetInterruptHandler(sensor2);
  3084  0B0D  30C3               	movlw	low _sensor2
  3085  0B0E  0020               	movlb	0	; select bank0
  3086  0B0F  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler
  3087  0B10  3008               	movlw	high _sensor2
  3088  0B11  00A1               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler+1
  3089  0B12  3188  208C  318A   	fcall	_IOCBF3_SetInterruptHandler
  3090                           
  3091                           ;main.c: 137:     IOCBF4_SetInterruptHandler(sensor3);
  3092  0B15  30CE               	movlw	low _sensor3
  3093  0B16  0020               	movlb	0	; select bank0
  3094  0B17  00A0               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
  3095  0B18  3008               	movlw	high _sensor3
  3096  0B19  00A1               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
  3097  0B1A  3188  2095  318A   	fcall	_IOCBF4_SetInterruptHandler
  3098                           
  3099                           ;main.c: 138:     IOCBF5_SetInterruptHandler(sensor4);
  3100  0B1D  30D9               	movlw	low _sensor4
  3101  0B1E  0020               	movlb	0	; select bank0
  3102  0B1F  00A0               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler
  3103  0B20  3008               	movlw	high _sensor4
  3104  0B21  00A1               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler+1
  3105  0B22  3188  209E  318A   	fcall	_IOCBF5_SetInterruptHandler
  3106                           
  3107                           ;main.c: 139:     CCP4_SetCallBack(get_pulse);
  3108  0B25  309E               	movlw	low _get_pulse
  3109  0B26  0020               	movlb	0	; select bank0
  3110  0B27  00A0               	movwf	CCP4_SetCallBack@customCallBack
  3111  0B28  300A               	movlw	high _get_pulse
  3112  0B29  00A1               	movwf	CCP4_SetCallBack@customCallBack+1
  3113  0B2A  3188  205F  318A   	fcall	_CCP4_SetCallBack
  3114  0B2D                     l604:	
  3115                           ;main.c: 147:     while (1)
  3116                           
  3117                           
  3118                           ;main.c: 148:     {;main.c: 149:        comunicacao ();
  3119  0B2D  318F  272D  318A   	fcall	_comunicacao
  3120  0B30                     l3902:
  3121                           
  3122                           ;main.c: 150:        controle();
  3123  0B30  3186  2634  318A   	fcall	_controle
  3124  0B33                     l3904:
  3125                           
  3126                           ;main.c: 151:        gerenciamento();
  3127  0B33  318C  246E  318A   	fcall	_gerenciamento
  3128  0B36  2B2D               	goto	l604
  3129  0B37  3180  2834         	ljmp	start
  3130  0B39                     __end_of_main:
  3131                           
  3132                           	psect	text1
  3133  0C6E                     __ptext1:	
  3134 ;; *************** function _gerenciamento *****************
  3135 ;; Defined at:
  3136 ;;		line 229 in file "main.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;		None
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;		None
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      void 
  3143 ;; Registers used:
  3144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3150 ;;      Params:         0       0       0       0       0       0
  3151 ;;      Locals:         0       0       0       0       0       0
  3152 ;;      Temps:          0       0       0       0       0       0
  3153 ;;      Totals:         0       0       0       0       0       0
  3154 ;;Total ram usage:        0 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:    6
  3157 ;; This function calls:
  3158 ;;		_col_down
  3159 ;;		_col_up
  3160 ;;		_update
  3161 ;; This function is called by:
  3162 ;;		_main
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           
  3167                           ;psect for function _gerenciamento
  3168  0C6E                     _gerenciamento:
  3169  0C6E                     l3844:	
  3170                           ;incstack = 0
  3171                           ; Regs used in _gerenciamento: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3172                           
  3173                           
  3174                           ;main.c: 231:     update();
  3175  0C6E  3182  22AA  318C   	fcall	_update
  3176  0C71                     l3846:
  3177                           
  3178                           ;main.c: 318:           if(fila_up[0]!=out_value||fila_up[1]!=out_value||fila_up[2]!=out
      +                          _value||fila_up[3]!=out_value||fila_up[4]!=out_value||fila_up[5]!=out_value||fila_up[6]!
      +                          =out_value||fila_up[7]!=out_value||fila_up[8]!=out_value||fila_up[9]!=out_value)
  3179  0C71  0021               	movlb	1	; select bank1
  3180  0C72  0834               	movf	_fila_up^(0+128),w
  3181  0C73  0435               	iorwf	(_fila_up+1)^(0+128),w
  3182  0C74  1D03               	btfss	3,2
  3183  0C75  2C77               	goto	u4131
  3184  0C76  2C78               	goto	u4130
  3185  0C77                     u4131:
  3186  0C77  2CAE               	goto	l3866
  3187  0C78                     u4130:
  3188  0C78                     l3848:
  3189  0C78  0836               	movf	(_fila_up^(0+128)+2),w
  3190  0C79  0437               	iorwf	((_fila_up+1)^(0+128)+2),w
  3191  0C7A  1D03               	btfss	3,2
  3192  0C7B  2C7D               	goto	u4141
  3193  0C7C  2C7E               	goto	u4140
  3194  0C7D                     u4141:
  3195  0C7D  2CAE               	goto	l3866
  3196  0C7E                     u4140:
  3197  0C7E                     l3850:
  3198  0C7E  0838               	movf	(_fila_up^(0+128)+4),w
  3199  0C7F  0439               	iorwf	((_fila_up+1)^(0+128)+4),w
  3200  0C80  1D03               	btfss	3,2
  3201  0C81  2C83               	goto	u4151
  3202  0C82  2C84               	goto	u4150
  3203  0C83                     u4151:
  3204  0C83  2CAE               	goto	l3866
  3205  0C84                     u4150:
  3206  0C84                     l3852:
  3207  0C84  083A               	movf	(_fila_up^(0+128)+6),w
  3208  0C85  043B               	iorwf	((_fila_up+1)^(0+128)+6),w
  3209  0C86  1D03               	btfss	3,2
  3210  0C87  2C89               	goto	u4161
  3211  0C88  2C8A               	goto	u4160
  3212  0C89                     u4161:
  3213  0C89  2CAE               	goto	l3866
  3214  0C8A                     u4160:
  3215  0C8A                     l3854:
  3216  0C8A  083C               	movf	(_fila_up^(0+128)+8),w
  3217  0C8B  043D               	iorwf	((_fila_up+1)^(0+128)+8),w
  3218  0C8C  1D03               	btfss	3,2
  3219  0C8D  2C8F               	goto	u4171
  3220  0C8E  2C90               	goto	u4170
  3221  0C8F                     u4171:
  3222  0C8F  2CAE               	goto	l3866
  3223  0C90                     u4170:
  3224  0C90                     l3856:
  3225  0C90  083E               	movf	(_fila_up^(0+128)+10),w
  3226  0C91  043F               	iorwf	((_fila_up+1)^(0+128)+10),w
  3227  0C92  1D03               	btfss	3,2
  3228  0C93  2C95               	goto	u4181
  3229  0C94  2C96               	goto	u4180
  3230  0C95                     u4181:
  3231  0C95  2CAE               	goto	l3866
  3232  0C96                     u4180:
  3233  0C96                     l3858:
  3234  0C96  0840               	movf	(_fila_up^(0+128)+12),w
  3235  0C97  0441               	iorwf	((_fila_up+1)^(0+128)+12),w
  3236  0C98  1D03               	btfss	3,2
  3237  0C99  2C9B               	goto	u4191
  3238  0C9A  2C9C               	goto	u4190
  3239  0C9B                     u4191:
  3240  0C9B  2CAE               	goto	l3866
  3241  0C9C                     u4190:
  3242  0C9C                     l3860:
  3243  0C9C  0842               	movf	(_fila_up^(0+128)+14),w
  3244  0C9D  0443               	iorwf	((_fila_up+1)^(0+128)+14),w
  3245  0C9E  1D03               	btfss	3,2
  3246  0C9F  2CA1               	goto	u4201
  3247  0CA0  2CA2               	goto	u4200
  3248  0CA1                     u4201:
  3249  0CA1  2CAE               	goto	l3866
  3250  0CA2                     u4200:
  3251  0CA2                     l3862:
  3252  0CA2  0844               	movf	(_fila_up^(0+128)+16),w
  3253  0CA3  0445               	iorwf	((_fila_up+1)^(0+128)+16),w
  3254  0CA4  1D03               	btfss	3,2
  3255  0CA5  2CA7               	goto	u4211
  3256  0CA6  2CA8               	goto	u4210
  3257  0CA7                     u4211:
  3258  0CA7  2CAE               	goto	l3866
  3259  0CA8                     u4210:
  3260  0CA8                     l3864:
  3261  0CA8  0846               	movf	(_fila_up^(0+128)+18),w
  3262  0CA9  0447               	iorwf	((_fila_up+1)^(0+128)+18),w
  3263  0CAA  1903               	btfsc	3,2
  3264  0CAB  2CAD               	goto	u4221
  3265  0CAC  2CAE               	goto	u4220
  3266  0CAD                     u4221:
  3267  0CAD  2CB6               	goto	l3870
  3268  0CAE                     u4220:
  3269  0CAE                     l3866:
  3270                           
  3271                           ;main.c: 319:           {;main.c: 320:             sentido2=1;
  3272  0CAE  3001               	movlw	1
  3273  0CAF  00D4               	movwf	_sentido2^(0+128)
  3274  0CB0  3000               	movlw	0
  3275  0CB1  00D5               	movwf	(_sentido2^(0+128)+1)
  3276  0CB2                     l3868:
  3277                           
  3278                           ;main.c: 321:             col_up();
  3279  0CB2  3187  2774  318C   	fcall	_col_up
  3280                           
  3281                           ;main.c: 322:           }
  3282  0CB5  2CFC               	goto	l635
  3283  0CB6                     l3870:
  3284  0CB6  0820               	movf	_origem_down^(0+128),w
  3285  0CB7  0421               	iorwf	(_origem_down+1)^(0+128),w
  3286  0CB8  1D03               	btfss	3,2
  3287  0CB9  2CBB               	goto	u4231
  3288  0CBA  2CBC               	goto	u4230
  3289  0CBB                     u4231:
  3290  0CBB  2CF2               	goto	l3890
  3291  0CBC                     u4230:
  3292  0CBC                     l3872:
  3293  0CBC  0822               	movf	(_origem_down^(0+128)+2),w
  3294  0CBD  0423               	iorwf	((_origem_down+1)^(0+128)+2),w
  3295  0CBE  1D03               	btfss	3,2
  3296  0CBF  2CC1               	goto	u4241
  3297  0CC0  2CC2               	goto	u4240
  3298  0CC1                     u4241:
  3299  0CC1  2CF2               	goto	l3890
  3300  0CC2                     u4240:
  3301  0CC2                     l3874:
  3302  0CC2  0824               	movf	(_origem_down^(0+128)+4),w
  3303  0CC3  0425               	iorwf	((_origem_down+1)^(0+128)+4),w
  3304  0CC4  1D03               	btfss	3,2
  3305  0CC5  2CC7               	goto	u4251
  3306  0CC6  2CC8               	goto	u4250
  3307  0CC7                     u4251:
  3308  0CC7  2CF2               	goto	l3890
  3309  0CC8                     u4250:
  3310  0CC8                     l3876:
  3311  0CC8  0826               	movf	(_origem_down^(0+128)+6),w
  3312  0CC9  0427               	iorwf	((_origem_down+1)^(0+128)+6),w
  3313  0CCA  1D03               	btfss	3,2
  3314  0CCB  2CCD               	goto	u4261
  3315  0CCC  2CCE               	goto	u4260
  3316  0CCD                     u4261:
  3317  0CCD  2CF2               	goto	l3890
  3318  0CCE                     u4260:
  3319  0CCE                     l3878:
  3320  0CCE  0828               	movf	(_origem_down^(0+128)+8),w
  3321  0CCF  0429               	iorwf	((_origem_down+1)^(0+128)+8),w
  3322  0CD0  1D03               	btfss	3,2
  3323  0CD1  2CD3               	goto	u4271
  3324  0CD2  2CD4               	goto	u4270
  3325  0CD3                     u4271:
  3326  0CD3  2CF2               	goto	l3890
  3327  0CD4                     u4270:
  3328  0CD4                     l3880:
  3329  0CD4  082A               	movf	(_origem_down^(0+128)+10),w
  3330  0CD5  042B               	iorwf	((_origem_down+1)^(0+128)+10),w
  3331  0CD6  1D03               	btfss	3,2
  3332  0CD7  2CD9               	goto	u4281
  3333  0CD8  2CDA               	goto	u4280
  3334  0CD9                     u4281:
  3335  0CD9  2CF2               	goto	l3890
  3336  0CDA                     u4280:
  3337  0CDA                     l3882:
  3338  0CDA  082C               	movf	(_origem_down^(0+128)+12),w
  3339  0CDB  042D               	iorwf	((_origem_down+1)^(0+128)+12),w
  3340  0CDC  1D03               	btfss	3,2
  3341  0CDD  2CDF               	goto	u4291
  3342  0CDE  2CE0               	goto	u4290
  3343  0CDF                     u4291:
  3344  0CDF  2CF2               	goto	l3890
  3345  0CE0                     u4290:
  3346  0CE0                     l3884:
  3347  0CE0  082E               	movf	(_origem_down^(0+128)+14),w
  3348  0CE1  042F               	iorwf	((_origem_down+1)^(0+128)+14),w
  3349  0CE2  1D03               	btfss	3,2
  3350  0CE3  2CE5               	goto	u4301
  3351  0CE4  2CE6               	goto	u4300
  3352  0CE5                     u4301:
  3353  0CE5  2CF2               	goto	l3890
  3354  0CE6                     u4300:
  3355  0CE6                     l3886:
  3356  0CE6  0830               	movf	(_origem_down^(0+128)+16),w
  3357  0CE7  0431               	iorwf	((_origem_down+1)^(0+128)+16),w
  3358  0CE8  1D03               	btfss	3,2
  3359  0CE9  2CEB               	goto	u4311
  3360  0CEA  2CEC               	goto	u4310
  3361  0CEB                     u4311:
  3362  0CEB  2CF2               	goto	l3890
  3363  0CEC                     u4310:
  3364  0CEC                     l3888:
  3365  0CEC  0832               	movf	(_origem_down^(0+128)+18),w
  3366  0CED  0433               	iorwf	((_origem_down+1)^(0+128)+18),w
  3367  0CEE  1903               	btfsc	3,2
  3368  0CEF  2CF1               	goto	u4321
  3369  0CF0  2CF2               	goto	u4320
  3370  0CF1                     u4321:
  3371  0CF1  2CF8               	goto	l3894
  3372  0CF2                     u4320:
  3373  0CF2                     l3890:
  3374                           
  3375                           ;main.c: 326:           {;main.c: 327:             sentido2=0;
  3376  0CF2  01D4               	clrf	_sentido2^(0+128)
  3377  0CF3  01D5               	clrf	(_sentido2+1)^(0+128)
  3378  0CF4                     l3892:
  3379                           
  3380                           ;main.c: 328:             col_down();
  3381  0CF4  318B  23F2  318C   	fcall	_col_down
  3382                           
  3383                           ;main.c: 329:           }
  3384  0CF7  2CFC               	goto	l635
  3385  0CF8                     l3894:
  3386                           
  3387                           ;main.c: 333:           {;main.c: 334:             sentido2=2;
  3388  0CF8  3002               	movlw	2
  3389  0CF9  00D4               	movwf	_sentido2^(0+128)
  3390  0CFA  3000               	movlw	0
  3391  0CFB  00D5               	movwf	(_sentido2^(0+128)+1)
  3392  0CFC                     l635:
  3393  0CFC  0008               	return
  3394  0CFD                     __end_of_gerenciamento:
  3395                           
  3396                           	psect	text2
  3397  0774                     __ptext2:	
  3398 ;; *************** function _col_up *****************
  3399 ;; Defined at:
  3400 ;;		line 339 in file "main.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;		None
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      void 
  3407 ;; Registers used:
  3408 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3414 ;;      Params:         0       0       0       0       0       0
  3415 ;;      Locals:         0       0       0       0       0       0
  3416 ;;      Temps:          0       2       0       0       0       0
  3417 ;;      Totals:         0       2       0       0       0       0
  3418 ;;Total ram usage:        2 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:    5
  3421 ;; This function calls:
  3422 ;;		_abs
  3423 ;;		_min_up
  3424 ;; This function is called by:
  3425 ;;		_gerenciamento
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           
  3430                           ;psect for function _col_up
  3431  0774                     _col_up:
  3432  0774                     l2900:	
  3433                           ;incstack = 0
  3434                           ; Regs used in _col_up: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3435                           
  3436                           
  3437                           ;main.c: 341:         while(and_ating!=min_origem_up)
  3438  0774  2FA7               	goto	l2912
  3439  0775                     l2902:
  3440                           
  3441                           ;main.c: 342:         {;main.c: 343:             distancia=abs(and_ating-min_origem_up);
  3442  0775  086F               	movf	_and_ating,w
  3443  0776  00A5               	movwf	??_col_up
  3444  0777  0870               	movf	_min_origem_up,w
  3445  0778  0225               	subwf	??_col_up,w
  3446  0779  00A0               	movwf	abs@a
  3447  077A  0971               	comf	_min_origem_up+1,w
  3448  077B  1803               	skipnc
  3449  077C  0A89               	incf	9,f
  3450  077D  00A1               	movwf	abs@a+1
  3451  077E  3189  21B6  3187   	fcall	_abs
  3452  0781  0020               	movlb	0	; select bank0
  3453  0782  0821               	movf	?_abs+1,w
  3454  0783  0021               	movlb	1	; select bank1
  3455  0784  00D1               	movwf	(_distancia+1)^(0+128)
  3456  0785  0020               	movlb	0	; select bank0
  3457  0786  0820               	movf	?_abs,w
  3458  0787  0021               	movlb	1	; select bank1
  3459  0788  00D0               	movwf	_distancia^(0+128)
  3460  0789                     l2904:
  3461                           
  3462                           ;main.c: 344:             if(and_ating>min_origem_up)
  3463  0789  0871               	movf	_min_origem_up+1,w
  3464  078A  3A80               	xorlw	128
  3465  078B  0020               	movlb	0	; select bank0
  3466  078C  00A5               	movwf	??_col_up
  3467  078D  3080               	movlw	128
  3468  078E  0225               	subwf	??_col_up,w
  3469  078F  1D03               	skipz
  3470  0790  2F93               	goto	u2505
  3471  0791  086F               	movf	_and_ating,w
  3472  0792  0270               	subwf	_min_origem_up,w
  3473  0793                     u2505:
  3474  0793  1803               	skipnc
  3475  0794  2F96               	goto	u2501
  3476  0795  2F97               	goto	u2500
  3477  0796                     u2501:
  3478  0796  2F99               	goto	l2908
  3479  0797                     u2500:
  3480  0797                     l2906:
  3481                           
  3482                           ;main.c: 345:             {;main.c: 346:                 LATAbits.LATA2 = 0;
  3483  0797  0022               	movlb	2	; select bank2
  3484  0798  110C               	bcf	12,2	;volatile
  3485  0799                     l2908:
  3486                           
  3487                           ;main.c: 348:             if(and_ating<min_origem_up)
  3488  0799  0871               	movf	_min_origem_up+1,w
  3489  079A  3A80               	xorlw	128
  3490  079B  3C80               	sublw	128
  3491  079C  1D03               	skipz
  3492  079D  2FA1               	goto	u2515
  3493  079E  0870               	movf	_min_origem_up,w
  3494  079F  0020               	movlb	0	; select bank0
  3495  07A0  026F               	subwf	_and_ating,w
  3496  07A1                     u2515:
  3497  07A1  1803               	skipnc
  3498  07A2  2FA4               	goto	u2511
  3499  07A3  2FA5               	goto	u2510
  3500  07A4                     u2511:
  3501  07A4  2FA7               	goto	l2912
  3502  07A5                     u2510:
  3503  07A5                     l2910:
  3504                           
  3505                           ;main.c: 349:             {;main.c: 351:                 LATAbits.LATA2 = 1;
  3506  07A5  0022               	movlb	2	; select bank2
  3507  07A6  150C               	bsf	12,2	;volatile
  3508  07A7                     l2912:
  3509                           
  3510                           ;main.c: 341:         while(and_ating!=min_origem_up)
  3511  07A7  0020               	movlb	0	; select bank0
  3512  07A8  086F               	movf	_and_ating,w
  3513  07A9  00A5               	movwf	??_col_up
  3514  07AA  01A6               	clrf	??_col_up+1
  3515  07AB  0871               	movf	_min_origem_up+1,w
  3516  07AC  0626               	xorwf	??_col_up+1,w
  3517  07AD  1D03               	skipz
  3518  07AE  2FB1               	goto	u2525
  3519  07AF  0870               	movf	_min_origem_up,w
  3520  07B0  0625               	xorwf	??_col_up,w
  3521  07B1                     u2525:
  3522  07B1  1D03               	skipz
  3523  07B2  2FB4               	goto	u2521
  3524  07B3  2FB5               	goto	u2520
  3525  07B4                     u2521:
  3526  07B4  2F75               	goto	l2902
  3527  07B5                     u2520:
  3528  07B5                     l642:
  3529                           
  3530                           ;main.c: 354:         LATAbits.LATA2 = 1;
  3531  07B5  0022               	movlb	2	; select bank2
  3532  07B6  150C               	bsf	12,2	;volatile
  3533  07B7                     l2914:
  3534                           
  3535                           ;main.c: 356:         {;main.c: 357:             if(and_ating==min_origem_up)
  3536  07B7  0020               	movlb	0	; select bank0
  3537  07B8  086F               	movf	_and_ating,w
  3538  07B9  00A5               	movwf	??_col_up
  3539  07BA  01A6               	clrf	??_col_up+1
  3540  07BB  0871               	movf	_min_origem_up+1,w
  3541  07BC  0626               	xorwf	??_col_up+1,w
  3542  07BD  1D03               	skipz
  3543  07BE  2FC1               	goto	u2535
  3544  07BF  0870               	movf	_min_origem_up,w
  3545  07C0  0625               	xorwf	??_col_up,w
  3546  07C1                     u2535:
  3547  07C1  1D03               	skipz
  3548  07C2  2FC4               	goto	u2531
  3549  07C3  2FC5               	goto	u2530
  3550  07C4                     u2531:
  3551  07C4  2FDD               	goto	l2920
  3552  07C5                     u2530:
  3553  07C5                     l2916:
  3554                           
  3555                           ;main.c: 358:             {;main.c: 359:                 min_up();
  3556  07C5  318E  265B  3187   	fcall	_min_up
  3557  07C8                     l2918:
  3558                           
  3559                           ;main.c: 360:                 distancia=abs(and_ating-min_origem_up);
  3560  07C8  0020               	movlb	0	; select bank0
  3561  07C9  086F               	movf	_and_ating,w
  3562  07CA  00A5               	movwf	??_col_up
  3563  07CB  0870               	movf	_min_origem_up,w
  3564  07CC  0225               	subwf	??_col_up,w
  3565  07CD  00A0               	movwf	abs@a
  3566  07CE  0971               	comf	_min_origem_up+1,w
  3567  07CF  1803               	skipnc
  3568  07D0  0A89               	incf	9,f
  3569  07D1  00A1               	movwf	abs@a+1
  3570  07D2  3189  21B6  3187   	fcall	_abs
  3571  07D5  0020               	movlb	0	; select bank0
  3572  07D6  0821               	movf	?_abs+1,w
  3573  07D7  0021               	movlb	1	; select bank1
  3574  07D8  00D1               	movwf	(_distancia+1)^(0+128)
  3575  07D9  0020               	movlb	0	; select bank0
  3576  07DA  0820               	movf	?_abs,w
  3577  07DB  0021               	movlb	1	; select bank1
  3578  07DC  00D0               	movwf	_distancia^(0+128)
  3579  07DD                     l2920:
  3580                           
  3581                           ;main.c: 362:         }while (and_ating!=max_fila_up);
  3582  07DD  0020               	movlb	0	; select bank0
  3583  07DE  086F               	movf	_and_ating,w
  3584  07DF  00A5               	movwf	??_col_up
  3585  07E0  01A6               	clrf	??_col_up+1
  3586  07E1  0021               	movlb	1	; select bank1
  3587  07E2  084F               	movf	(_max_fila_up+1)^(0+128),w
  3588  07E3  0020               	movlb	0	; select bank0
  3589  07E4  0626               	xorwf	??_col_up+1,w
  3590  07E5  1D03               	skipz
  3591  07E6  2FEB               	goto	u2545
  3592  07E7  0021               	movlb	1	; select bank1
  3593  07E8  084E               	movf	_max_fila_up^(0+128),w
  3594  07E9  0020               	movlb	0	; select bank0
  3595  07EA  0625               	xorwf	??_col_up,w
  3596  07EB                     u2545:
  3597  07EB  1D03               	skipz
  3598  07EC  2FEE               	goto	u2541
  3599  07ED  2FEF               	goto	u2540
  3600  07EE                     u2541:
  3601  07EE  2FB7               	goto	l2914
  3602  07EF                     u2540:
  3603  07EF                     l646:
  3604  07EF  0008               	return
  3605  07F0                     __end_of_col_up:
  3606                           
  3607                           	psect	text3
  3608  0E5B                     __ptext3:	
  3609 ;; *************** function _min_up *****************
  3610 ;; Defined at:
  3611 ;;		line 400 in file "main.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;		None
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  i               2    3[BANK0 ] int 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3625 ;;      Params:         0       0       0       0       0       0
  3626 ;;      Locals:         0       2       0       0       0       0
  3627 ;;      Temps:          0       3       0       0       0       0
  3628 ;;      Totals:         0       5       0       0       0       0
  3629 ;;Total ram usage:        5 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    4
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_col_up
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           
  3640                           ;psect for function _min_up
  3641  0E5B                     _min_up:
  3642  0E5B                     l2544:	
  3643                           ;incstack = 0
  3644                           ; Regs used in _min_up: [wreg+fsr1l+fsr1h+status,2+status,0]
  3645                           
  3646                           
  3647                           ;main.c: 403:     min_origem_up = 4;
  3648  0E5B  3004               	movlw	4
  3649  0E5C  00F0               	movwf	_min_origem_up
  3650  0E5D  3000               	movlw	0
  3651  0E5E  00F1               	movwf	_min_origem_up+1
  3652  0E5F                     l2546:
  3653                           
  3654                           ;main.c: 404:     int i;;main.c: 405:     for(i=0;i<=9;i++)
  3655  0E5F  0020               	movlb	0	; select bank0
  3656  0E60  01A3               	clrf	min_up@i
  3657  0E61  01A4               	clrf	min_up@i+1
  3658  0E62                     l2552:
  3659                           
  3660                           ;main.c: 406:     {;main.c: 407:         if(origem_up[i]<min_origem_up&&origem_up[i]>0)
  3661  0E62  0020               	movlb	0	; select bank0
  3662  0E63  3523               	lslf	min_up@i,w
  3663  0E64  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  3664  0E65  0086               	movwf	6
  3665  0E66  3001               	movlw	1	; select bank2/3
  3666  0E67  0087               	movwf	7
  3667  0E68  3F40               	moviw [0]fsr1
  3668  0E69  00A0               	movwf	??_min_up
  3669  0E6A  3F41               	moviw [1]fsr1
  3670  0E6B  00A1               	movwf	??_min_up+1
  3671  0E6C  0821               	movf	??_min_up+1,w
  3672  0E6D  3A80               	xorlw	128
  3673  0E6E  00A2               	movwf	??_min_up+2
  3674  0E6F  0871               	movf	_min_origem_up+1,w
  3675  0E70  3A80               	xorlw	128
  3676  0E71  0222               	subwf	??_min_up+2,w
  3677  0E72  1D03               	skipz
  3678  0E73  2E76               	goto	u1985
  3679  0E74  0870               	movf	_min_origem_up,w
  3680  0E75  0220               	subwf	??_min_up,w
  3681  0E76                     u1985:
  3682  0E76  1803               	skipnc
  3683  0E77  2E79               	goto	u1981
  3684  0E78  2E7A               	goto	u1980
  3685  0E79                     u1981:
  3686  0E79  2E9B               	goto	l662
  3687  0E7A                     u1980:
  3688  0E7A                     l2554:
  3689  0E7A  0020               	movlb	0	; select bank0
  3690  0E7B  3523               	lslf	min_up@i,w
  3691  0E7C  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  3692  0E7D  0086               	movwf	6
  3693  0E7E  3001               	movlw	1	; select bank2/3
  3694  0E7F  0087               	movwf	7
  3695  0E80  3F40               	moviw [0]fsr1
  3696  0E81  00A0               	movwf	??_min_up
  3697  0E82  3F41               	moviw [1]fsr1
  3698  0E83  00A1               	movwf	??_min_up+1
  3699  0E84  0821               	movf	??_min_up+1,w
  3700  0E85  3A80               	xorlw	128
  3701  0E86  00A2               	movwf	??_min_up+2
  3702  0E87  3080               	movlw	128
  3703  0E88  0222               	subwf	??_min_up+2,w
  3704  0E89  1D03               	skipz
  3705  0E8A  2E8D               	goto	u1995
  3706  0E8B  3001               	movlw	1
  3707  0E8C  0220               	subwf	??_min_up,w
  3708  0E8D                     u1995:
  3709  0E8D  1C03               	skipc
  3710  0E8E  2E90               	goto	u1991
  3711  0E8F  2E91               	goto	u1990
  3712  0E90                     u1991:
  3713  0E90  2E9B               	goto	l662
  3714  0E91                     u1990:
  3715  0E91                     l2556:
  3716                           
  3717                           ;main.c: 408:         {;main.c: 409:             min_origem_up = origem_up[i];
  3718  0E91  0020               	movlb	0	; select bank0
  3719  0E92  3523               	lslf	min_up@i,w
  3720  0E93  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  3721  0E94  0086               	movwf	6
  3722  0E95  3001               	movlw	1	; select bank2/3
  3723  0E96  0087               	movwf	7
  3724  0E97  3F40               	moviw [0]fsr1
  3725  0E98  00F0               	movwf	_min_origem_up
  3726  0E99  3F41               	moviw [1]fsr1
  3727  0E9A  00F1               	movwf	_min_origem_up+1
  3728  0E9B                     l662:	
  3729                           ;main.c: 410:         }
  3730                           
  3731                           
  3732                           ;main.c: 411:         if(fila_up[i]<min_origem_up&&fila_up[i]>0)
  3733  0E9B  0020               	movlb	0	; select bank0
  3734  0E9C  3523               	lslf	min_up@i,w
  3735  0E9D  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  3736  0E9E  0086               	movwf	6
  3737  0E9F  0187               	clrf	7
  3738  0EA0  3F40               	moviw [0]fsr1
  3739  0EA1  00A0               	movwf	??_min_up
  3740  0EA2  3F41               	moviw [1]fsr1
  3741  0EA3  00A1               	movwf	??_min_up+1
  3742  0EA4  0821               	movf	??_min_up+1,w
  3743  0EA5  3A80               	xorlw	128
  3744  0EA6  00A2               	movwf	??_min_up+2
  3745  0EA7  0871               	movf	_min_origem_up+1,w
  3746  0EA8  3A80               	xorlw	128
  3747  0EA9  0222               	subwf	??_min_up+2,w
  3748  0EAA  1D03               	skipz
  3749  0EAB  2EAE               	goto	u2005
  3750  0EAC  0870               	movf	_min_origem_up,w
  3751  0EAD  0220               	subwf	??_min_up,w
  3752  0EAE                     u2005:
  3753  0EAE  1803               	skipnc
  3754  0EAF  2EB1               	goto	u2001
  3755  0EB0  2EB2               	goto	u2000
  3756  0EB1                     u2001:
  3757  0EB1  2ED1               	goto	l2562
  3758  0EB2                     u2000:
  3759  0EB2                     l2558:
  3760  0EB2  0020               	movlb	0	; select bank0
  3761  0EB3  3523               	lslf	min_up@i,w
  3762  0EB4  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  3763  0EB5  0086               	movwf	6
  3764  0EB6  0187               	clrf	7
  3765  0EB7  3F40               	moviw [0]fsr1
  3766  0EB8  00A0               	movwf	??_min_up
  3767  0EB9  3F41               	moviw [1]fsr1
  3768  0EBA  00A1               	movwf	??_min_up+1
  3769  0EBB  0821               	movf	??_min_up+1,w
  3770  0EBC  3A80               	xorlw	128
  3771  0EBD  00A2               	movwf	??_min_up+2
  3772  0EBE  3080               	movlw	128
  3773  0EBF  0222               	subwf	??_min_up+2,w
  3774  0EC0  1D03               	skipz
  3775  0EC1  2EC4               	goto	u2015
  3776  0EC2  3001               	movlw	1
  3777  0EC3  0220               	subwf	??_min_up,w
  3778  0EC4                     u2015:
  3779  0EC4  1C03               	skipc
  3780  0EC5  2EC7               	goto	u2011
  3781  0EC6  2EC8               	goto	u2010
  3782  0EC7                     u2011:
  3783  0EC7  2ED1               	goto	l2562
  3784  0EC8                     u2010:
  3785  0EC8                     l2560:
  3786                           
  3787                           ;main.c: 412:         {;main.c: 413:             min_origem_up = fila_up[i];
  3788  0EC8  0020               	movlb	0	; select bank0
  3789  0EC9  3523               	lslf	min_up@i,w
  3790  0ECA  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  3791  0ECB  0086               	movwf	6
  3792  0ECC  0187               	clrf	7
  3793  0ECD  3F40               	moviw [0]fsr1
  3794  0ECE  00F0               	movwf	_min_origem_up
  3795  0ECF  3F41               	moviw [1]fsr1
  3796  0ED0  00F1               	movwf	_min_origem_up+1
  3797  0ED1                     l2562:
  3798                           
  3799                           ;main.c: 415:     }
  3800  0ED1  3001               	movlw	1
  3801  0ED2  0020               	movlb	0	; select bank0
  3802  0ED3  07A3               	addwf	min_up@i,f
  3803  0ED4  3000               	movlw	0
  3804  0ED5  3DA4               	addwfc	min_up@i+1,f
  3805  0ED6                     l2564:
  3806  0ED6  0824               	movf	min_up@i+1,w
  3807  0ED7  3A80               	xorlw	128
  3808  0ED8  00A0               	movwf	??_min_up
  3809  0ED9  3080               	movlw	128
  3810  0EDA  0220               	subwf	??_min_up,w
  3811  0EDB  1D03               	skipz
  3812  0EDC  2EDF               	goto	u2025
  3813  0EDD  300A               	movlw	10
  3814  0EDE  0223               	subwf	min_up@i,w
  3815  0EDF                     u2025:
  3816  0EDF  1C03               	skipc
  3817  0EE0  2EE2               	goto	u2021
  3818  0EE1  2EE3               	goto	u2020
  3819  0EE2                     u2021:
  3820  0EE2  2E62               	goto	l2552
  3821  0EE3                     u2020:
  3822  0EE3                     l2566:
  3823                           
  3824                           ;main.c: 417:     for(i=0;i<=9;i++)
  3825  0EE3  0020               	movlb	0	; select bank0
  3826  0EE4  01A3               	clrf	min_up@i
  3827  0EE5  01A4               	clrf	min_up@i+1
  3828  0EE6                     l2572:
  3829                           
  3830                           ;main.c: 418:     {;main.c: 419:         if(origem_up[i]==min_origem_up)
  3831  0EE6  0020               	movlb	0	; select bank0
  3832  0EE7  3523               	lslf	min_up@i,w
  3833  0EE8  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  3834  0EE9  0086               	movwf	6
  3835  0EEA  3001               	movlw	1	; select bank2/3
  3836  0EEB  0087               	movwf	7
  3837  0EEC  3F40               	moviw [0]fsr1
  3838  0EED  00A0               	movwf	??_min_up
  3839  0EEE  3F41               	moviw [1]fsr1
  3840  0EEF  00A1               	movwf	??_min_up+1
  3841  0EF0  0871               	movf	_min_origem_up+1,w
  3842  0EF1  0621               	xorwf	??_min_up+1,w
  3843  0EF2  1D03               	skipz
  3844  0EF3  2EF6               	goto	u2035
  3845  0EF4  0870               	movf	_min_origem_up,w
  3846  0EF5  0620               	xorwf	??_min_up,w
  3847  0EF6                     u2035:
  3848  0EF6  1D03               	skipz
  3849  0EF7  2EF9               	goto	u2031
  3850  0EF8  2EFA               	goto	u2030
  3851  0EF9                     u2031:
  3852  0EF9  2F02               	goto	l666
  3853  0EFA                     u2030:
  3854  0EFA                     l2574:
  3855                           
  3856                           ;main.c: 420:         {;main.c: 421:             origem_up[i]=out_value;
  3857  0EFA  3523               	lslf	min_up@i,w
  3858  0EFB  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  3859  0EFC  0086               	movwf	6
  3860  0EFD  3001               	movlw	1	; select bank2/3
  3861  0EFE  0087               	movwf	7
  3862  0EFF  3000               	movlw	0
  3863  0F00  3FC0               	movwi [0]fsr1
  3864  0F01  3FC1               	movwi [1]fsr1
  3865  0F02                     l666:	
  3866                           ;main.c: 422:         }
  3867                           
  3868                           
  3869                           ;main.c: 423:         if(fila_up[i]==min_origem_up)
  3870  0F02  3523               	lslf	min_up@i,w
  3871  0F03  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  3872  0F04  0086               	movwf	6
  3873  0F05  0187               	clrf	7
  3874  0F06  3F40               	moviw [0]fsr1
  3875  0F07  00A0               	movwf	??_min_up
  3876  0F08  3F41               	moviw [1]fsr1
  3877  0F09  00A1               	movwf	??_min_up+1
  3878  0F0A  0871               	movf	_min_origem_up+1,w
  3879  0F0B  0621               	xorwf	??_min_up+1,w
  3880  0F0C  1D03               	skipz
  3881  0F0D  2F10               	goto	u2045
  3882  0F0E  0870               	movf	_min_origem_up,w
  3883  0F0F  0620               	xorwf	??_min_up,w
  3884  0F10                     u2045:
  3885  0F10  1D03               	skipz
  3886  0F11  2F13               	goto	u2041
  3887  0F12  2F14               	goto	u2040
  3888  0F13                     u2041:
  3889  0F13  2F1B               	goto	l2578
  3890  0F14                     u2040:
  3891  0F14                     l2576:
  3892                           
  3893                           ;main.c: 424:         {;main.c: 425:             fila_up[i]=out_value;
  3894  0F14  3523               	lslf	min_up@i,w
  3895  0F15  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  3896  0F16  0086               	movwf	6
  3897  0F17  0187               	clrf	7
  3898  0F18  3000               	movlw	0
  3899  0F19  3FC0               	movwi [0]fsr1
  3900  0F1A  3FC1               	movwi [1]fsr1
  3901  0F1B                     l2578:
  3902                           
  3903                           ;main.c: 427:     }
  3904  0F1B  3001               	movlw	1
  3905  0F1C  07A3               	addwf	min_up@i,f
  3906  0F1D  3000               	movlw	0
  3907  0F1E  3DA4               	addwfc	min_up@i+1,f
  3908  0F1F                     l2580:
  3909  0F1F  0824               	movf	min_up@i+1,w
  3910  0F20  3A80               	xorlw	128
  3911  0F21  00A0               	movwf	??_min_up
  3912  0F22  3080               	movlw	128
  3913  0F23  0220               	subwf	??_min_up,w
  3914  0F24  1D03               	skipz
  3915  0F25  2F28               	goto	u2055
  3916  0F26  300A               	movlw	10
  3917  0F27  0223               	subwf	min_up@i,w
  3918  0F28                     u2055:
  3919  0F28  1C03               	skipc
  3920  0F29  2F2B               	goto	u2051
  3921  0F2A  2F2C               	goto	u2050
  3922  0F2B                     u2051:
  3923  0F2B  2EE6               	goto	l2572
  3924  0F2C                     u2050:
  3925  0F2C                     l668:
  3926  0F2C  0008               	return
  3927  0F2D                     __end_of_min_up:
  3928                           
  3929                           	psect	text4
  3930  0BF2                     __ptext4:	
  3931 ;; *************** function _col_down *****************
  3932 ;; Defined at:
  3933 ;;		line 365 in file "main.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;		None
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      void 
  3940 ;; Registers used:
  3941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3947 ;;      Params:         0       0       0       0       0       0
  3948 ;;      Locals:         0       0       0       0       0       0
  3949 ;;      Temps:          0       2       0       0       0       0
  3950 ;;      Totals:         0       2       0       0       0       0
  3951 ;;Total ram usage:        2 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    5
  3954 ;; This function calls:
  3955 ;;		_abs
  3956 ;;		_max_down
  3957 ;; This function is called by:
  3958 ;;		_gerenciamento
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           
  3963                           ;psect for function _col_down
  3964  0BF2                     _col_down:
  3965  0BF2                     l2922:	
  3966                           ;incstack = 0
  3967                           ; Regs used in _col_down: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3968                           
  3969                           
  3970                           ;main.c: 367:         while(and_ating!=max_origem_down)
  3971  0BF2  2C25               	goto	l2934
  3972  0BF3                     l2924:
  3973                           
  3974                           ;main.c: 368:         {;main.c: 369:             distancia = abs(and_ating-max_origem_do
      +                          wn);
  3975  0BF3  086F               	movf	_and_ating,w
  3976  0BF4  00A5               	movwf	??_col_down
  3977  0BF5  0872               	movf	_max_origem_down,w
  3978  0BF6  0225               	subwf	??_col_down,w
  3979  0BF7  00A0               	movwf	abs@a
  3980  0BF8  0973               	comf	_max_origem_down+1,w
  3981  0BF9  1803               	skipnc
  3982  0BFA  0A89               	incf	9,f
  3983  0BFB  00A1               	movwf	abs@a+1
  3984  0BFC  3189  21B6  318B   	fcall	_abs
  3985  0BFF  0020               	movlb	0	; select bank0
  3986  0C00  0821               	movf	?_abs+1,w
  3987  0C01  0021               	movlb	1	; select bank1
  3988  0C02  00D1               	movwf	(_distancia+1)^(0+128)
  3989  0C03  0020               	movlb	0	; select bank0
  3990  0C04  0820               	movf	?_abs,w
  3991  0C05  0021               	movlb	1	; select bank1
  3992  0C06  00D0               	movwf	_distancia^(0+128)
  3993  0C07                     l2926:
  3994                           
  3995                           ;main.c: 370:             if(and_ating>max_origem_down)
  3996  0C07  0873               	movf	_max_origem_down+1,w
  3997  0C08  3A80               	xorlw	128
  3998  0C09  0020               	movlb	0	; select bank0
  3999  0C0A  00A5               	movwf	??_col_down
  4000  0C0B  3080               	movlw	128
  4001  0C0C  0225               	subwf	??_col_down,w
  4002  0C0D  1D03               	skipz
  4003  0C0E  2C11               	goto	u2555
  4004  0C0F  086F               	movf	_and_ating,w
  4005  0C10  0272               	subwf	_max_origem_down,w
  4006  0C11                     u2555:
  4007  0C11  1803               	skipnc
  4008  0C12  2C14               	goto	u2551
  4009  0C13  2C15               	goto	u2550
  4010  0C14                     u2551:
  4011  0C14  2C17               	goto	l2930
  4012  0C15                     u2550:
  4013  0C15                     l2928:
  4014                           
  4015                           ;main.c: 371:             {;main.c: 372:                 LATAbits.LATA2 = 0;
  4016  0C15  0022               	movlb	2	; select bank2
  4017  0C16  110C               	bcf	12,2	;volatile
  4018  0C17                     l2930:
  4019                           
  4020                           ;main.c: 374:             if(and_ating<max_origem_down)
  4021  0C17  0873               	movf	_max_origem_down+1,w
  4022  0C18  3A80               	xorlw	128
  4023  0C19  3C80               	sublw	128
  4024  0C1A  1D03               	skipz
  4025  0C1B  2C1F               	goto	u2565
  4026  0C1C  0872               	movf	_max_origem_down,w
  4027  0C1D  0020               	movlb	0	; select bank0
  4028  0C1E  026F               	subwf	_and_ating,w
  4029  0C1F                     u2565:
  4030  0C1F  1803               	skipnc
  4031  0C20  2C22               	goto	u2561
  4032  0C21  2C23               	goto	u2560
  4033  0C22                     u2561:
  4034  0C22  2C25               	goto	l2934
  4035  0C23                     u2560:
  4036  0C23                     l2932:
  4037                           
  4038                           ;main.c: 375:             {;main.c: 376:                 LATAbits.LATA2 = 1;
  4039  0C23  0022               	movlb	2	; select bank2
  4040  0C24  150C               	bsf	12,2	;volatile
  4041  0C25                     l2934:
  4042                           
  4043                           ;main.c: 367:         while(and_ating!=max_origem_down)
  4044  0C25  0020               	movlb	0	; select bank0
  4045  0C26  086F               	movf	_and_ating,w
  4046  0C27  00A5               	movwf	??_col_down
  4047  0C28  01A6               	clrf	??_col_down+1
  4048  0C29  0873               	movf	_max_origem_down+1,w
  4049  0C2A  0626               	xorwf	??_col_down+1,w
  4050  0C2B  1D03               	skipz
  4051  0C2C  2C2F               	goto	u2575
  4052  0C2D  0872               	movf	_max_origem_down,w
  4053  0C2E  0625               	xorwf	??_col_down,w
  4054  0C2F                     u2575:
  4055  0C2F  1D03               	skipz
  4056  0C30  2C32               	goto	u2571
  4057  0C31  2C33               	goto	u2570
  4058  0C32                     u2571:
  4059  0C32  2BF3               	goto	l2924
  4060  0C33                     u2570:
  4061  0C33                     l653:
  4062                           
  4063                           ;main.c: 379:         LATAbits.LATA2 = 0;
  4064  0C33  0022               	movlb	2	; select bank2
  4065  0C34  110C               	bcf	12,2	;volatile
  4066  0C35                     l2936:
  4067                           
  4068                           ;main.c: 381:         {;main.c: 382:             if(and_ating==max_origem_down)
  4069  0C35  0020               	movlb	0	; select bank0
  4070  0C36  086F               	movf	_and_ating,w
  4071  0C37  00A5               	movwf	??_col_down
  4072  0C38  01A6               	clrf	??_col_down+1
  4073  0C39  0873               	movf	_max_origem_down+1,w
  4074  0C3A  0626               	xorwf	??_col_down+1,w
  4075  0C3B  1D03               	skipz
  4076  0C3C  2C3F               	goto	u2585
  4077  0C3D  0872               	movf	_max_origem_down,w
  4078  0C3E  0625               	xorwf	??_col_down,w
  4079  0C3F                     u2585:
  4080  0C3F  1D03               	skipz
  4081  0C40  2C42               	goto	u2581
  4082  0C41  2C43               	goto	u2580
  4083  0C42                     u2581:
  4084  0C42  2C5B               	goto	l2942
  4085  0C43                     u2580:
  4086  0C43                     l2938:
  4087                           
  4088                           ;main.c: 383:             {;main.c: 384:                 max_down();
  4089  0C43  318D  25AA  318B   	fcall	_max_down
  4090  0C46                     l2940:
  4091                           
  4092                           ;main.c: 385:                 distancia=abs(and_ating-max_origem_down);
  4093  0C46  0020               	movlb	0	; select bank0
  4094  0C47  086F               	movf	_and_ating,w
  4095  0C48  00A5               	movwf	??_col_down
  4096  0C49  0872               	movf	_max_origem_down,w
  4097  0C4A  0225               	subwf	??_col_down,w
  4098  0C4B  00A0               	movwf	abs@a
  4099  0C4C  0973               	comf	_max_origem_down+1,w
  4100  0C4D  1803               	skipnc
  4101  0C4E  0A89               	incf	9,f
  4102  0C4F  00A1               	movwf	abs@a+1
  4103  0C50  3189  21B6  318B   	fcall	_abs
  4104  0C53  0020               	movlb	0	; select bank0
  4105  0C54  0821               	movf	?_abs+1,w
  4106  0C55  0021               	movlb	1	; select bank1
  4107  0C56  00D1               	movwf	(_distancia+1)^(0+128)
  4108  0C57  0020               	movlb	0	; select bank0
  4109  0C58  0820               	movf	?_abs,w
  4110  0C59  0021               	movlb	1	; select bank1
  4111  0C5A  00D0               	movwf	_distancia^(0+128)
  4112  0C5B                     l2942:
  4113                           
  4114                           ;main.c: 387:         }while(and_ating!=min_fila_down);
  4115  0C5B  0020               	movlb	0	; select bank0
  4116  0C5C  086F               	movf	_and_ating,w
  4117  0C5D  00A5               	movwf	??_col_down
  4118  0C5E  01A6               	clrf	??_col_down+1
  4119  0C5F  0021               	movlb	1	; select bank1
  4120  0C60  084D               	movf	(_min_fila_down+1)^(0+128),w
  4121  0C61  0020               	movlb	0	; select bank0
  4122  0C62  0626               	xorwf	??_col_down+1,w
  4123  0C63  1D03               	skipz
  4124  0C64  2C69               	goto	u2595
  4125  0C65  0021               	movlb	1	; select bank1
  4126  0C66  084C               	movf	_min_fila_down^(0+128),w
  4127  0C67  0020               	movlb	0	; select bank0
  4128  0C68  0625               	xorwf	??_col_down,w
  4129  0C69                     u2595:
  4130  0C69  1D03               	skipz
  4131  0C6A  2C6C               	goto	u2591
  4132  0C6B  2C6D               	goto	u2590
  4133  0C6C                     u2591:
  4134  0C6C  2C35               	goto	l2936
  4135  0C6D                     u2590:
  4136  0C6D                     l657:
  4137  0C6D  0008               	return
  4138  0C6E                     __end_of_col_down:
  4139                           
  4140                           	psect	text5
  4141  0DAA                     __ptext5:	
  4142 ;; *************** function _max_down *****************
  4143 ;; Defined at:
  4144 ;;		line 432 in file "main.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;		None
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;  i               2    3[BANK0 ] int 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      void 
  4151 ;; Registers used:
  4152 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4158 ;;      Params:         0       0       0       0       0       0
  4159 ;;      Locals:         0       2       0       0       0       0
  4160 ;;      Temps:          0       3       0       0       0       0
  4161 ;;      Totals:         0       5       0       0       0       0
  4162 ;;Total ram usage:        5 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    4
  4165 ;; This function calls:
  4166 ;;		Nothing
  4167 ;; This function is called by:
  4168 ;;		_col_down
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           
  4173                           ;psect for function _max_down
  4174  0DAA                     _max_down:
  4175  0DAA                     l2582:	
  4176                           ;incstack = 0
  4177                           ; Regs used in _max_down: [wreg+fsr1l+fsr1h+status,2+status,0]
  4178                           
  4179                           
  4180                           ;main.c: 434:     max_origem_down = origem_down[0];
  4181  0DAA  0021               	movlb	1	; select bank1
  4182  0DAB  0821               	movf	(_origem_down+1)^(0+128),w
  4183  0DAC  00F3               	movwf	_max_origem_down+1
  4184  0DAD  0820               	movf	_origem_down^(0+128),w
  4185  0DAE  00F2               	movwf	_max_origem_down
  4186                           
  4187                           ;main.c: 435:     int i;;main.c: 436:     for(i=1;i<=9;i++)
  4188  0DAF  3001               	movlw	1
  4189  0DB0  0020               	movlb	0	; select bank0
  4190  0DB1  00A3               	movwf	max_down@i
  4191  0DB2  3000               	movlw	0
  4192  0DB3  00A4               	movwf	max_down@i+1
  4193  0DB4                     l2586:
  4194                           
  4195                           ;main.c: 437:     {;main.c: 438:         if(origem_down[i]>max_origem_down)
  4196  0DB4  0020               	movlb	0	; select bank0
  4197  0DB5  3523               	lslf	max_down@i,w
  4198  0DB6  3EA0               	addlw	(low (_origem_down| 0))& (0+255)
  4199  0DB7  0086               	movwf	6
  4200  0DB8  0187               	clrf	7
  4201  0DB9  3F40               	moviw [0]fsr1
  4202  0DBA  00A0               	movwf	??_max_down
  4203  0DBB  3F41               	moviw [1]fsr1
  4204  0DBC  00A1               	movwf	??_max_down+1
  4205  0DBD  0873               	movf	_max_origem_down+1,w
  4206  0DBE  3A80               	xorlw	128
  4207  0DBF  00A2               	movwf	??_max_down+2
  4208  0DC0  0821               	movf	??_max_down+1,w
  4209  0DC1  3A80               	xorlw	128
  4210  0DC2  0222               	subwf	??_max_down+2,w
  4211  0DC3  1D03               	skipz
  4212  0DC4  2DC7               	goto	u2065
  4213  0DC5  0820               	movf	??_max_down,w
  4214  0DC6  0272               	subwf	_max_origem_down,w
  4215  0DC7                     u2065:
  4216  0DC7  1803               	skipnc
  4217  0DC8  2DCA               	goto	u2061
  4218  0DC9  2DCB               	goto	u2060
  4219  0DCA                     u2061:
  4220  0DCA  2DD4               	goto	l673
  4221  0DCB                     u2060:
  4222  0DCB                     l2588:
  4223                           
  4224                           ;main.c: 439:         {;main.c: 440:             max_origem_down = origem_down[i];
  4225  0DCB  0020               	movlb	0	; select bank0
  4226  0DCC  3523               	lslf	max_down@i,w
  4227  0DCD  3EA0               	addlw	(low (_origem_down| 0))& (0+255)
  4228  0DCE  0086               	movwf	6
  4229  0DCF  0187               	clrf	7
  4230  0DD0  3F40               	moviw [0]fsr1
  4231  0DD1  00F2               	movwf	_max_origem_down
  4232  0DD2  3F41               	moviw [1]fsr1
  4233  0DD3  00F3               	movwf	_max_origem_down+1
  4234  0DD4                     l673:	
  4235                           ;main.c: 441:         }
  4236                           
  4237                           
  4238                           ;main.c: 442:         if(fila_down[i]>max_origem_down)
  4239  0DD4  0020               	movlb	0	; select bank0
  4240  0DD5  3523               	lslf	max_down@i,w
  4241  0DD6  3E34               	addlw	(low (_fila_down| (0+256)))& (0+255)
  4242  0DD7  0086               	movwf	6
  4243  0DD8  3001               	movlw	1	; select bank2/3
  4244  0DD9  0087               	movwf	7
  4245  0DDA  3F40               	moviw [0]fsr1
  4246  0DDB  00A0               	movwf	??_max_down
  4247  0DDC  3F41               	moviw [1]fsr1
  4248  0DDD  00A1               	movwf	??_max_down+1
  4249  0DDE  0873               	movf	_max_origem_down+1,w
  4250  0DDF  3A80               	xorlw	128
  4251  0DE0  00A2               	movwf	??_max_down+2
  4252  0DE1  0821               	movf	??_max_down+1,w
  4253  0DE2  3A80               	xorlw	128
  4254  0DE3  0222               	subwf	??_max_down+2,w
  4255  0DE4  1D03               	skipz
  4256  0DE5  2DE8               	goto	u2075
  4257  0DE6  0820               	movf	??_max_down,w
  4258  0DE7  0272               	subwf	_max_origem_down,w
  4259  0DE8                     u2075:
  4260  0DE8  1803               	skipnc
  4261  0DE9  2DEB               	goto	u2071
  4262  0DEA  2DEC               	goto	u2070
  4263  0DEB                     u2071:
  4264  0DEB  2DF6               	goto	l2592
  4265  0DEC                     u2070:
  4266  0DEC                     l2590:
  4267                           
  4268                           ;main.c: 443:         {;main.c: 444:             max_origem_down = fila_down[i];
  4269  0DEC  0020               	movlb	0	; select bank0
  4270  0DED  3523               	lslf	max_down@i,w
  4271  0DEE  3E34               	addlw	(low (_fila_down| (0+256)))& (0+255)
  4272  0DEF  0086               	movwf	6
  4273  0DF0  3001               	movlw	1	; select bank2/3
  4274  0DF1  0087               	movwf	7
  4275  0DF2  3F40               	moviw [0]fsr1
  4276  0DF3  00F2               	movwf	_max_origem_down
  4277  0DF4  3F41               	moviw [1]fsr1
  4278  0DF5  00F3               	movwf	_max_origem_down+1
  4279  0DF6                     l2592:
  4280                           
  4281                           ;main.c: 446:     }
  4282  0DF6  3001               	movlw	1
  4283  0DF7  0020               	movlb	0	; select bank0
  4284  0DF8  07A3               	addwf	max_down@i,f
  4285  0DF9  3000               	movlw	0
  4286  0DFA  3DA4               	addwfc	max_down@i+1,f
  4287  0DFB                     l2594:
  4288  0DFB  0824               	movf	max_down@i+1,w
  4289  0DFC  3A80               	xorlw	128
  4290  0DFD  00A0               	movwf	??_max_down
  4291  0DFE  3080               	movlw	128
  4292  0DFF  0220               	subwf	??_max_down,w
  4293  0E00  1D03               	skipz
  4294  0E01  2E04               	goto	u2085
  4295  0E02  300A               	movlw	10
  4296  0E03  0223               	subwf	max_down@i,w
  4297  0E04                     u2085:
  4298  0E04  1C03               	skipc
  4299  0E05  2E07               	goto	u2081
  4300  0E06  2E08               	goto	u2080
  4301  0E07                     u2081:
  4302  0E07  2DB4               	goto	l2586
  4303  0E08                     u2080:
  4304  0E08                     l2596:
  4305                           
  4306                           ;main.c: 448:     for(i=0;i<=9;i++)
  4307  0E08  0020               	movlb	0	; select bank0
  4308  0E09  01A3               	clrf	max_down@i
  4309  0E0A  01A4               	clrf	max_down@i+1
  4310  0E0B                     l2602:
  4311                           
  4312                           ;main.c: 449:     {;main.c: 450:         if(origem_down[i]==max_origem_down)
  4313  0E0B  0020               	movlb	0	; select bank0
  4314  0E0C  3523               	lslf	max_down@i,w
  4315  0E0D  3EA0               	addlw	(low (_origem_down| 0))& (0+255)
  4316  0E0E  0086               	movwf	6
  4317  0E0F  0187               	clrf	7
  4318  0E10  3F40               	moviw [0]fsr1
  4319  0E11  00A0               	movwf	??_max_down
  4320  0E12  3F41               	moviw [1]fsr1
  4321  0E13  00A1               	movwf	??_max_down+1
  4322  0E14  0873               	movf	_max_origem_down+1,w
  4323  0E15  0621               	xorwf	??_max_down+1,w
  4324  0E16  1D03               	skipz
  4325  0E17  2E1A               	goto	u2095
  4326  0E18  0872               	movf	_max_origem_down,w
  4327  0E19  0620               	xorwf	??_max_down,w
  4328  0E1A                     u2095:
  4329  0E1A  1D03               	skipz
  4330  0E1B  2E1D               	goto	u2091
  4331  0E1C  2E1E               	goto	u2090
  4332  0E1D                     u2091:
  4333  0E1D  2E25               	goto	l677
  4334  0E1E                     u2090:
  4335  0E1E                     l2604:
  4336                           
  4337                           ;main.c: 451:         {;main.c: 452:             origem_down[i]=out_value;
  4338  0E1E  3523               	lslf	max_down@i,w
  4339  0E1F  3EA0               	addlw	(low (_origem_down| 0))& (0+255)
  4340  0E20  0086               	movwf	6
  4341  0E21  0187               	clrf	7
  4342  0E22  3000               	movlw	0
  4343  0E23  3FC0               	movwi [0]fsr1
  4344  0E24  3FC1               	movwi [1]fsr1
  4345  0E25                     l677:	
  4346                           ;main.c: 453:         }
  4347                           
  4348                           
  4349                           ;main.c: 454:         if(fila_up[i]==max_origem_down)
  4350  0E25  3523               	lslf	max_down@i,w
  4351  0E26  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  4352  0E27  0086               	movwf	6
  4353  0E28  0187               	clrf	7
  4354  0E29  3F40               	moviw [0]fsr1
  4355  0E2A  00A0               	movwf	??_max_down
  4356  0E2B  3F41               	moviw [1]fsr1
  4357  0E2C  00A1               	movwf	??_max_down+1
  4358  0E2D  0873               	movf	_max_origem_down+1,w
  4359  0E2E  0621               	xorwf	??_max_down+1,w
  4360  0E2F  1D03               	skipz
  4361  0E30  2E33               	goto	u2105
  4362  0E31  0872               	movf	_max_origem_down,w
  4363  0E32  0620               	xorwf	??_max_down,w
  4364  0E33                     u2105:
  4365  0E33  1D03               	skipz
  4366  0E34  2E36               	goto	u2101
  4367  0E35  2E37               	goto	u2100
  4368  0E36                     u2101:
  4369  0E36  2E3F               	goto	l2608
  4370  0E37                     u2100:
  4371  0E37                     l2606:
  4372                           
  4373                           ;main.c: 455:         {;main.c: 456:             fila_down[i]=out_value;
  4374  0E37  3523               	lslf	max_down@i,w
  4375  0E38  3E34               	addlw	(low (_fila_down| (0+256)))& (0+255)
  4376  0E39  0086               	movwf	6
  4377  0E3A  3001               	movlw	1	; select bank2/3
  4378  0E3B  0087               	movwf	7
  4379  0E3C  3000               	movlw	0
  4380  0E3D  3FC0               	movwi [0]fsr1
  4381  0E3E  3FC1               	movwi [1]fsr1
  4382  0E3F                     l2608:
  4383                           
  4384                           ;main.c: 458:     }
  4385  0E3F  3001               	movlw	1
  4386  0E40  07A3               	addwf	max_down@i,f
  4387  0E41  3000               	movlw	0
  4388  0E42  3DA4               	addwfc	max_down@i+1,f
  4389  0E43                     l2610:
  4390  0E43  0824               	movf	max_down@i+1,w
  4391  0E44  3A80               	xorlw	128
  4392  0E45  00A0               	movwf	??_max_down
  4393  0E46  3080               	movlw	128
  4394  0E47  0220               	subwf	??_max_down,w
  4395  0E48  1D03               	skipz
  4396  0E49  2E4C               	goto	u2115
  4397  0E4A  300A               	movlw	10
  4398  0E4B  0223               	subwf	max_down@i,w
  4399  0E4C                     u2115:
  4400  0E4C  1C03               	skipc
  4401  0E4D  2E4F               	goto	u2111
  4402  0E4E  2E50               	goto	u2110
  4403  0E4F                     u2111:
  4404  0E4F  2E0B               	goto	l2602
  4405  0E50                     u2110:
  4406  0E50                     l2612:
  4407                           
  4408                           ;main.c: 460:     if(max_origem_down==0)
  4409  0E50  0872               	movf	_max_origem_down,w
  4410  0E51  0473               	iorwf	_max_origem_down+1,w
  4411  0E52  1D03               	btfss	3,2
  4412  0E53  2E55               	goto	u2121
  4413  0E54  2E56               	goto	u2120
  4414  0E55                     u2121:
  4415  0E55  2E5A               	goto	l680
  4416  0E56                     u2120:
  4417  0E56                     l2614:
  4418                           
  4419                           ;main.c: 461:     {;main.c: 462:         max_origem_down=1;
  4420  0E56  3001               	movlw	1
  4421  0E57  00F2               	movwf	_max_origem_down
  4422  0E58  3000               	movlw	0
  4423  0E59  00F3               	movwf	_max_origem_down+1
  4424  0E5A                     l680:
  4425  0E5A  0008               	return
  4426  0E5B                     __end_of_max_down:
  4427                           
  4428                           	psect	text6
  4429  09B6                     __ptext6:	
  4430 ;; *************** function _abs *****************
  4431 ;; Defined at:
  4432 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  a               2    0[BANK0 ] int 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;		None
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  2    0[BANK0 ] int 
  4439 ;; Registers used:
  4440 ;;		wreg, status,2, status,0
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4446 ;;      Params:         0       2       0       0       0       0
  4447 ;;      Locals:         0       0       0       0       0       0
  4448 ;;      Temps:          0       2       0       0       0       0
  4449 ;;      Totals:         0       4       0       0       0       0
  4450 ;;Total ram usage:        4 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    4
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_col_up
  4457 ;;		_col_down
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           
  4462                           ;psect for function _abs
  4463  09B6                     _abs:
  4464  09B6                     l2540:	
  4465                           ;incstack = 0
  4466                           ; Regs used in _abs: [wreg+status,2+status,0]
  4467                           
  4468  09B6  0020               	movlb	0	; select bank0
  4469  09B7  0821               	movf	abs@a+1,w
  4470  09B8  3A80               	xorlw	128
  4471  09B9  00A2               	movwf	??_abs
  4472  09BA  3080               	movlw	128
  4473  09BB  0222               	subwf	??_abs,w
  4474  09BC  1D03               	skipz
  4475  09BD  29C0               	goto	u1975
  4476  09BE  3001               	movlw	1
  4477  09BF  0220               	subwf	abs@a,w
  4478  09C0                     u1975:
  4479  09C0  1803               	skipnc
  4480  09C1  29C3               	goto	u1971
  4481  09C2  29C4               	goto	u1970
  4482  09C3                     u1971:
  4483  09C3  29D1               	goto	l1319
  4484  09C4                     u1970:
  4485  09C4                     l2542:
  4486  09C4  0020               	movlb	0	; select bank0
  4487  09C5  0920               	comf	abs@a,w
  4488  09C6  00A2               	movwf	??_abs
  4489  09C7  0921               	comf	abs@a+1,w
  4490  09C8  00A3               	movwf	??_abs+1
  4491  09C9  0AA2               	incf	??_abs,f
  4492  09CA  1903               	skipnz
  4493  09CB  0AA3               	incf	??_abs+1,f
  4494  09CC  0822               	movf	??_abs,w
  4495  09CD  00A0               	movwf	?_abs
  4496  09CE  0823               	movf	??_abs+1,w
  4497  09CF  00A1               	movwf	?_abs+1
  4498  09D0  29D1               	goto	l1322
  4499  09D1                     l1319:
  4500  09D1                     l1322:
  4501  09D1  0008               	return
  4502  09D2                     __end_of_abs:
  4503                           
  4504                           	psect	text7
  4505  0634                     __ptext7:	
  4506 ;; *************** function _controle *****************
  4507 ;; Defined at:
  4508 ;;		line 184 in file "main.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;		None
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;  count           2   60[BANK0 ] int 
  4513 ;;  dutyValue       2   58[BANK0 ] int 
  4514 ;;  max_dutyValu    2   56[BANK0 ] int 
  4515 ;;  min_dutyValu    2   54[BANK0 ] int 
  4516 ;;  a               2   52[BANK0 ] int 
  4517 ;;  route           2   50[BANK0 ] int 
  4518 ;;  destiny         2   48[BANK0 ] int 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      void 
  4521 ;; Registers used:
  4522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4528 ;;      Params:         0       0       0       0       0       0
  4529 ;;      Locals:         0      14       0       0       0       0
  4530 ;;      Temps:          0       4       0       0       0       0
  4531 ;;      Totals:         0      18       0       0       0       0
  4532 ;;Total ram usage:       18 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    6
  4535 ;; This function calls:
  4536 ;;		_ADC_GetConversion
  4537 ;;		_PWM3_LoadDutyValue
  4538 ;;		___flmul
  4539 ;;		___wmul
  4540 ;;		___xxtofl
  4541 ;;		_update
  4542 ;; This function is called by:
  4543 ;;		_main
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           
  4548                           ;psect for function _controle
  4549  0634                     _controle:
  4550  0634                     l3784:	
  4551                           ;incstack = 0
  4552                           ; Regs used in _controle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4553                           
  4554                           
  4555                           ;main.c: 186:     I_m = 0.1*ADC_GetConversion(0);
  4556  0634  303D               	movlw	61
  4557  0635  0020               	movlb	0	; select bank0
  4558  0636  00B5               	movwf	___flmul@b+3
  4559  0637  30CC               	movlw	204
  4560  0638  00B4               	movwf	___flmul@b+2
  4561  0639  30CC               	movlw	204
  4562  063A  00B3               	movwf	___flmul@b+1
  4563  063B  30CD               	movlw	205
  4564  063C  00B2               	movwf	___flmul@b
  4565  063D  3000               	movlw	0
  4566  063E  318A  2213  3186   	fcall	_ADC_GetConversion
  4567  0641  0020               	movlb	0	; select bank0
  4568  0642  0820               	movf	?_ADC_GetConversion,w
  4569  0643  00CC               	movwf	??_controle
  4570  0644  0821               	movf	?_ADC_GetConversion+1,w
  4571  0645  00CD               	movwf	??_controle+1
  4572  0646  01CE               	clrf	??_controle+2
  4573  0647  01CF               	clrf	??_controle+3
  4574  0648  084F               	movf	??_controle+3,w
  4575  0649  00A7               	movwf	___xxtofl@val+3
  4576  064A  084E               	movf	??_controle+2,w
  4577  064B  00A6               	movwf	___xxtofl@val+2
  4578  064C  084D               	movf	??_controle+1,w
  4579  064D  00A5               	movwf	___xxtofl@val+1
  4580  064E  084C               	movf	??_controle,w
  4581  064F  00A4               	movwf	___xxtofl@val
  4582  0650  3000               	movlw	0
  4583  0651  318C  24FD  3186   	fcall	___xxtofl
  4584  0654  0020               	movlb	0	; select bank0
  4585  0655  0827               	movf	?___xxtofl+3,w
  4586  0656  00B9               	movwf	___flmul@a+3
  4587  0657  0826               	movf	?___xxtofl+2,w
  4588  0658  00B8               	movwf	___flmul@a+2
  4589  0659  0825               	movf	?___xxtofl+1,w
  4590  065A  00B7               	movwf	___flmul@a+1
  4591  065B  0824               	movf	?___xxtofl,w
  4592  065C  00B6               	movwf	___flmul@a
  4593  065D  3180  2053  3186   	fcall	___flmul
  4594  0660  0020               	movlb	0	; select bank0
  4595  0661  0835               	movf	?___flmul+3,w
  4596  0662  0022               	movlb	2	; select bank2
  4597  0663  00DC               	movwf	(_I_m+3)^(0+256)
  4598  0664  0020               	movlb	0	; select bank0
  4599  0665  0834               	movf	?___flmul+2,w
  4600  0666  0022               	movlb	2	; select bank2
  4601  0667  00DB               	movwf	(_I_m+2)^(0+256)
  4602  0668  0020               	movlb	0	; select bank0
  4603  0669  0833               	movf	?___flmul+1,w
  4604  066A  0022               	movlb	2	; select bank2
  4605  066B  00DA               	movwf	(_I_m+1)^(0+256)
  4606  066C  0020               	movlb	0	; select bank0
  4607  066D  0832               	movf	?___flmul,w
  4608  066E  0022               	movlb	2	; select bank2
  4609  066F  00D9               	movwf	_I_m^(0+256)
  4610                           
  4611                           ;main.c: 187:     temp_mt = 0.3*ADC_GetConversion(1);
  4612  0670  303E               	movlw	62
  4613  0671  0020               	movlb	0	; select bank0
  4614  0672  00B5               	movwf	___flmul@b+3
  4615  0673  3099               	movlw	153
  4616  0674  00B4               	movwf	___flmul@b+2
  4617  0675  3099               	movlw	153
  4618  0676  00B3               	movwf	___flmul@b+1
  4619  0677  309A               	movlw	154
  4620  0678  00B2               	movwf	___flmul@b
  4621  0679  3001               	movlw	1
  4622  067A  318A  2213  3186   	fcall	_ADC_GetConversion
  4623  067D  0020               	movlb	0	; select bank0
  4624  067E  0820               	movf	?_ADC_GetConversion,w
  4625  067F  00CC               	movwf	??_controle
  4626  0680  0821               	movf	?_ADC_GetConversion+1,w
  4627  0681  00CD               	movwf	??_controle+1
  4628  0682  01CE               	clrf	??_controle+2
  4629  0683  01CF               	clrf	??_controle+3
  4630  0684  084F               	movf	??_controle+3,w
  4631  0685  00A7               	movwf	___xxtofl@val+3
  4632  0686  084E               	movf	??_controle+2,w
  4633  0687  00A6               	movwf	___xxtofl@val+2
  4634  0688  084D               	movf	??_controle+1,w
  4635  0689  00A5               	movwf	___xxtofl@val+1
  4636  068A  084C               	movf	??_controle,w
  4637  068B  00A4               	movwf	___xxtofl@val
  4638  068C  3000               	movlw	0
  4639  068D  318C  24FD  3186   	fcall	___xxtofl
  4640  0690  0020               	movlb	0	; select bank0
  4641  0691  0827               	movf	?___xxtofl+3,w
  4642  0692  00B9               	movwf	___flmul@a+3
  4643  0693  0826               	movf	?___xxtofl+2,w
  4644  0694  00B8               	movwf	___flmul@a+2
  4645  0695  0825               	movf	?___xxtofl+1,w
  4646  0696  00B7               	movwf	___flmul@a+1
  4647  0697  0824               	movf	?___xxtofl,w
  4648  0698  00B6               	movwf	___flmul@a
  4649  0699  3180  2053  3186   	fcall	___flmul
  4650  069C  0020               	movlb	0	; select bank0
  4651  069D  0835               	movf	?___flmul+3,w
  4652  069E  0022               	movlb	2	; select bank2
  4653  069F  00D8               	movwf	(_temp_mt+3)^(0+256)
  4654  06A0  0020               	movlb	0	; select bank0
  4655  06A1  0834               	movf	?___flmul+2,w
  4656  06A2  0022               	movlb	2	; select bank2
  4657  06A3  00D7               	movwf	(_temp_mt+2)^(0+256)
  4658  06A4  0020               	movlb	0	; select bank0
  4659  06A5  0833               	movf	?___flmul+1,w
  4660  06A6  0022               	movlb	2	; select bank2
  4661  06A7  00D6               	movwf	(_temp_mt+1)^(0+256)
  4662  06A8  0020               	movlb	0	; select bank0
  4663  06A9  0832               	movf	?___flmul,w
  4664  06AA  0022               	movlb	2	; select bank2
  4665  06AB  00D5               	movwf	_temp_mt^(0+256)
  4666  06AC                     l3786:
  4667  06AC                     l3788:
  4668                           
  4669                           ;main.c: 189:     int a = 52;
  4670  06AC  3034               	movlw	52
  4671  06AD  0020               	movlb	0	; select bank0
  4672  06AE  00D4               	movwf	controle@a
  4673  06AF  3000               	movlw	0
  4674  06B0  00D5               	movwf	controle@a+1
  4675  06B1                     l3790:
  4676                           
  4677                           ;main.c: 190:     int max_dutyValue = 1023;
  4678  06B1  30FF               	movlw	255
  4679  06B2  00D8               	movwf	controle@max_dutyValue
  4680  06B3  3003               	movlw	3
  4681  06B4  00D9               	movwf	controle@max_dutyValue+1
  4682  06B5                     l3792:
  4683                           
  4684                           ;main.c: 191:     int min_dutyValue = 256;
  4685  06B5  3000               	movlw	0
  4686  06B6  00D6               	movwf	controle@min_dutyValue
  4687  06B7  3001               	movlw	1
  4688  06B8  00D7               	movwf	controle@min_dutyValue+1
  4689  06B9                     l3794:
  4690                           
  4691                           ;main.c: 192:     int destiny = distancia*60;
  4692  06B9  0021               	movlb	1	; select bank1
  4693  06BA  0851               	movf	(_distancia+1)^(0+128),w
  4694  06BB  0020               	movlb	0	; select bank0
  4695  06BC  00A1               	movwf	___wmul@multiplier+1
  4696  06BD  0021               	movlb	1	; select bank1
  4697  06BE  0850               	movf	_distancia^(0+128),w
  4698  06BF  0020               	movlb	0	; select bank0
  4699  06C0  00A0               	movwf	___wmul@multiplier
  4700  06C1  303C               	movlw	60
  4701  06C2  00A2               	movwf	___wmul@multiplicand
  4702  06C3  3000               	movlw	0
  4703  06C4  00A3               	movwf	___wmul@multiplicand+1
  4704  06C5  3189  21D2  3186   	fcall	___wmul
  4705  06C8  0020               	movlb	0	; select bank0
  4706  06C9  0821               	movf	?___wmul+1,w
  4707  06CA  00D1               	movwf	controle@destiny+1
  4708  06CB  0820               	movf	?___wmul,w
  4709  06CC  00D0               	movwf	controle@destiny
  4710  06CD                     l3796:
  4711                           
  4712                           ;main.c: 193:     int route = destiny - 40;
  4713  06CD  0850               	movf	controle@destiny,w
  4714  06CE  3ED8               	addlw	216
  4715  06CF  00D2               	movwf	controle@route
  4716  06D0  30FF               	movlw	255
  4717  06D1  3D51               	addwfc	controle@destiny+1,w
  4718  06D2  00D3               	movwf	controle@route+1
  4719  06D3                     l3798:
  4720                           
  4721                           ;main.c: 194:     int dutyValue = 0;
  4722  06D3  01DA               	clrf	controle@dutyValue
  4723  06D4  01DB               	clrf	controle@dutyValue+1
  4724  06D5                     l3800:
  4725                           
  4726                           ;main.c: 197:     for(count = 0; count < 20; count++){
  4727  06D5  01DC               	clrf	controle@count
  4728  06D6  01DD               	clrf	controle@count+1
  4729  06D7                     l3806:
  4730                           
  4731                           ;main.c: 199:         dutyValue+=a;
  4732  06D7  0020               	movlb	0	; select bank0
  4733  06D8  0854               	movf	controle@a,w
  4734  06D9  07DA               	addwf	controle@dutyValue,f
  4735  06DA  0855               	movf	controle@a+1,w
  4736  06DB  3DDB               	addwfc	controle@dutyValue+1,f
  4737                           
  4738                           ;main.c: 200:         if(dutyValue > max_dutyValue){
  4739  06DC  0859               	movf	controle@max_dutyValue+1,w
  4740  06DD  3A80               	xorlw	128
  4741  06DE  00CC               	movwf	??_controle
  4742  06DF  085B               	movf	controle@dutyValue+1,w
  4743  06E0  3A80               	xorlw	128
  4744  06E1  024C               	subwf	??_controle,w
  4745  06E2  1D03               	skipz
  4746  06E3  2EE6               	goto	u4085
  4747  06E4  085A               	movf	controle@dutyValue,w
  4748  06E5  0258               	subwf	controle@max_dutyValue,w
  4749  06E6                     u4085:
  4750  06E6  1803               	skipnc
  4751  06E7  2EE9               	goto	u4081
  4752  06E8  2EEA               	goto	u4080
  4753  06E9                     u4081:
  4754  06E9  2EF3               	goto	l3810
  4755  06EA                     u4080:
  4756  06EA                     l3808:
  4757                           
  4758                           ;main.c: 201:             PWM3_LoadDutyValue(max_dutyValue);
  4759  06EA  0020               	movlb	0	; select bank0
  4760  06EB  0859               	movf	controle@max_dutyValue+1,w
  4761  06EC  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4762  06ED  0858               	movf	controle@max_dutyValue,w
  4763  06EE  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4764  06EF  3189  219A  3186   	fcall	_PWM3_LoadDutyValue
  4765                           
  4766                           ;main.c: 202:         }else{
  4767  06F2  2EFB               	goto	l3812
  4768  06F3                     l3810:
  4769                           
  4770                           ;main.c: 203:             PWM3_LoadDutyValue(dutyValue);
  4771  06F3  0020               	movlb	0	; select bank0
  4772  06F4  085B               	movf	controle@dutyValue+1,w
  4773  06F5  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4774  06F6  085A               	movf	controle@dutyValue,w
  4775  06F7  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4776  06F8  3189  219A  3186   	fcall	_PWM3_LoadDutyValue
  4777  06FB                     l3812:
  4778                           
  4779                           ;main.c: 206:     }
  4780  06FB  3001               	movlw	1
  4781  06FC  0020               	movlb	0	; select bank0
  4782  06FD  07DC               	addwf	controle@count,f
  4783  06FE  3000               	movlw	0
  4784  06FF  3DDD               	addwfc	controle@count+1,f
  4785  0700                     l3814:
  4786  0700  085D               	movf	controle@count+1,w
  4787  0701  3A80               	xorlw	128
  4788  0702  00CC               	movwf	??_controle
  4789  0703  3080               	movlw	128
  4790  0704  024C               	subwf	??_controle,w
  4791  0705  1D03               	skipz
  4792  0706  2F09               	goto	u4095
  4793  0707  3014               	movlw	20
  4794  0708  025C               	subwf	controle@count,w
  4795  0709                     u4095:
  4796  0709  1C03               	skipc
  4797  070A  2F0C               	goto	u4091
  4798  070B  2F0D               	goto	u4090
  4799  070C                     u4091:
  4800  070C  2ED7               	goto	l3806
  4801  070D                     u4090:
  4802  070D                     l3816:
  4803                           
  4804                           ;main.c: 207:     count = 0;
  4805  070D  0020               	movlb	0	; select bank0
  4806  070E  01DC               	clrf	controle@count
  4807  070F  01DD               	clrf	controle@count+1
  4808                           
  4809                           ;main.c: 208:     for(count = 0; count < route ; count++){
  4810  0710  01DC               	clrf	controle@count
  4811  0711  01DD               	clrf	controle@count+1
  4812  0712  2F20               	goto	l3822
  4813  0713                     l3818:
  4814                           
  4815                           ;main.c: 210:         PWM3_LoadDutyValue(max_dutyValue);
  4816  0713  0020               	movlb	0	; select bank0
  4817  0714  0859               	movf	controle@max_dutyValue+1,w
  4818  0715  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4819  0716  0858               	movf	controle@max_dutyValue,w
  4820  0717  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4821  0718  3189  219A  3186   	fcall	_PWM3_LoadDutyValue
  4822  071B                     l3820:
  4823                           
  4824                           ;main.c: 211:     }
  4825  071B  3001               	movlw	1
  4826  071C  0020               	movlb	0	; select bank0
  4827  071D  07DC               	addwf	controle@count,f
  4828  071E  3000               	movlw	0
  4829  071F  3DDD               	addwfc	controle@count+1,f
  4830  0720                     l3822:
  4831  0720  085D               	movf	controle@count+1,w
  4832  0721  3A80               	xorlw	128
  4833  0722  00CC               	movwf	??_controle
  4834  0723  0853               	movf	controle@route+1,w
  4835  0724  3A80               	xorlw	128
  4836  0725  024C               	subwf	??_controle,w
  4837  0726  1D03               	skipz
  4838  0727  2F2A               	goto	u4105
  4839  0728  0852               	movf	controle@route,w
  4840  0729  025C               	subwf	controle@count,w
  4841  072A                     u4105:
  4842  072A  1C03               	skipc
  4843  072B  2F2D               	goto	u4101
  4844  072C  2F2E               	goto	u4100
  4845  072D                     u4101:
  4846  072D  2F13               	goto	l3818
  4847  072E                     u4100:
  4848  072E                     l3824:
  4849                           
  4850                           ;main.c: 213:     count = 0;
  4851  072E  0020               	movlb	0	; select bank0
  4852  072F  01DC               	clrf	controle@count
  4853  0730  01DD               	clrf	controle@count+1
  4854                           
  4855                           ;main.c: 214:     for(count = 0; count < 20; count++){
  4856  0731  01DC               	clrf	controle@count
  4857  0732  01DD               	clrf	controle@count+1
  4858  0733                     l3830:
  4859                           
  4860                           ;main.c: 216:         dutyValue-=a;
  4861  0733  0020               	movlb	0	; select bank0
  4862  0734  0854               	movf	controle@a,w
  4863  0735  02DA               	subwf	controle@dutyValue,f
  4864  0736  0855               	movf	controle@a+1,w
  4865  0737  3BDB               	subwfb	controle@dutyValue+1,f
  4866                           
  4867                           ;main.c: 217:         if(dutyValue < min_dutyValue){
  4868  0738  085B               	movf	controle@dutyValue+1,w
  4869  0739  3A80               	xorlw	128
  4870  073A  00CC               	movwf	??_controle
  4871  073B  0857               	movf	controle@min_dutyValue+1,w
  4872  073C  3A80               	xorlw	128
  4873  073D  024C               	subwf	??_controle,w
  4874  073E  1D03               	skipz
  4875  073F  2F42               	goto	u4115
  4876  0740  0856               	movf	controle@min_dutyValue,w
  4877  0741  025A               	subwf	controle@dutyValue,w
  4878  0742                     u4115:
  4879  0742  1803               	skipnc
  4880  0743  2F45               	goto	u4111
  4881  0744  2F46               	goto	u4110
  4882  0745                     u4111:
  4883  0745  2F4F               	goto	l3834
  4884  0746                     u4110:
  4885  0746                     l3832:
  4886                           
  4887                           ;main.c: 218:             PWM3_LoadDutyValue(min_dutyValue);
  4888  0746  0020               	movlb	0	; select bank0
  4889  0747  0857               	movf	controle@min_dutyValue+1,w
  4890  0748  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4891  0749  0856               	movf	controle@min_dutyValue,w
  4892  074A  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4893  074B  3189  219A  3186   	fcall	_PWM3_LoadDutyValue
  4894                           
  4895                           ;main.c: 219:         }else{
  4896  074E  2F57               	goto	l3836
  4897  074F                     l3834:
  4898                           
  4899                           ;main.c: 220:         PWM3_LoadDutyValue(dutyValue);
  4900  074F  0020               	movlb	0	; select bank0
  4901  0750  085B               	movf	controle@dutyValue+1,w
  4902  0751  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4903  0752  085A               	movf	controle@dutyValue,w
  4904  0753  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4905  0754  3189  219A  3186   	fcall	_PWM3_LoadDutyValue
  4906  0757                     l3836:
  4907                           
  4908                           ;main.c: 222:     }
  4909  0757  3001               	movlw	1
  4910  0758  0020               	movlb	0	; select bank0
  4911  0759  07DC               	addwf	controle@count,f
  4912  075A  3000               	movlw	0
  4913  075B  3DDD               	addwfc	controle@count+1,f
  4914  075C                     l3838:
  4915  075C  085D               	movf	controle@count+1,w
  4916  075D  3A80               	xorlw	128
  4917  075E  00CC               	movwf	??_controle
  4918  075F  3080               	movlw	128
  4919  0760  024C               	subwf	??_controle,w
  4920  0761  1D03               	skipz
  4921  0762  2F65               	goto	u4125
  4922  0763  3014               	movlw	20
  4923  0764  025C               	subwf	controle@count,w
  4924  0765                     u4125:
  4925  0765  1C03               	skipc
  4926  0766  2F68               	goto	u4121
  4927  0767  2F69               	goto	u4120
  4928  0768                     u4121:
  4929  0768  2F33               	goto	l3830
  4930  0769                     u4120:
  4931  0769                     l3840:
  4932                           
  4933                           ;main.c: 223:     update();
  4934  0769  3182  22AA  3186   	fcall	_update
  4935  076C                     l3842:
  4936                           
  4937                           ;main.c: 225:     PWM3_LoadDutyValue(0);
  4938  076C  3000               	movlw	0
  4939  076D  0020               	movlb	0	; select bank0
  4940  076E  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4941  076F  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4942  0770  3189  219A  3186   	fcall	_PWM3_LoadDutyValue
  4943  0773                     l624:
  4944  0773  0008               	return
  4945  0774                     __end_of_controle:
  4946                           
  4947                           	psect	text8
  4948  02AA                     __ptext8:	
  4949 ;; *************** function _update *****************
  4950 ;; Defined at:
  4951 ;;		line 468 in file "main.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;		None
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  i               2    8[BANK0 ] int 
  4956 ;;  i               2    6[BANK0 ] int 
  4957 ;;  i               2    4[BANK0 ] int 
  4958 ;;  aux             1    3[BANK0 ] unsigned char 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      void 
  4961 ;; Registers used:
  4962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4968 ;;      Params:         0       0       0       0       0       0
  4969 ;;      Locals:         0       7       0       0       0       0
  4970 ;;      Temps:          0       3       0       0       0       0
  4971 ;;      Totals:         0      10       0       0       0       0
  4972 ;;Total ram usage:       10 bytes
  4973 ;; Hardware stack levels used:    1
  4974 ;; Hardware stack levels required when called:    5
  4975 ;; This function calls:
  4976 ;;		_EUSART_Read
  4977 ;;		_EUSART_is_rx_ready
  4978 ;; This function is called by:
  4979 ;;		_controle
  4980 ;;		_gerenciamento
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           
  4985                           ;psect for function _update
  4986  02AA                     _update:
  4987  02AA                     l3656:	
  4988                           ;incstack = 0
  4989                           ; Regs used in _update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4990                           
  4991                           
  4992                           ;main.c: 470:     uint8_t aux;;main.c: 471:     if(EUSART_is_rx_ready())
  4993  02AA  3188  2036  3182   	fcall	_EUSART_is_rx_ready
  4994  02AD  3A00               	xorlw	0
  4995  02AE  1903               	skipnz
  4996  02AF  2AB1               	goto	u3821
  4997  02B0  2AB2               	goto	u3820
  4998  02B1                     u3821:
  4999  02B1  2AD3               	goto	l3664
  5000  02B2                     u3820:
  5001  02B2                     l3658:
  5002                           
  5003                           ;main.c: 472:         {;main.c: 473:             aux= EUSART_Read();
  5004  02B2  3189  213E  3182   	fcall	_EUSART_Read
  5005  02B5  0020               	movlb	0	; select bank0
  5006  02B6  00A0               	movwf	??_update
  5007  02B7  0820               	movf	??_update,w
  5008  02B8  00A3               	movwf	update@aux
  5009  02B9                     l3660:
  5010                           
  5011                           ;main.c: 474:             and_origem = (int)((aux & 0x0C)>>2);
  5012  02B9  0823               	movf	update@aux,w
  5013  02BA  00A0               	movwf	??_update
  5014  02BB  3002               	movlw	2
  5015  02BC                     u3835:
  5016  02BC  36A0               	lsrf	??_update,f
  5017  02BD  0B89               	decfsz	9,f
  5018  02BE  2ABC               	goto	u3835
  5019  02BF  0820               	movf	??_update,w
  5020  02C0  3903               	andlw	3
  5021  02C1  00A1               	movwf	??_update+1
  5022  02C2  01A2               	clrf	??_update+2
  5023  02C3  0821               	movf	??_update+1,w
  5024  02C4  0021               	movlb	1	; select bank1
  5025  02C5  00DA               	movwf	_and_origem^(0+128)
  5026  02C6  0020               	movlb	0	; select bank0
  5027  02C7  0822               	movf	??_update+2,w
  5028  02C8  0021               	movlb	1	; select bank1
  5029  02C9  00DB               	movwf	(_and_origem+1)^(0+128)
  5030  02CA                     l3662:
  5031                           
  5032                           ;main.c: 475:             and_dst = (int)(aux & 0x02);
  5033  02CA  0020               	movlb	0	; select bank0
  5034  02CB  0823               	movf	update@aux,w
  5035  02CC  3902               	andlw	2
  5036  02CD  00A0               	movwf	??_update
  5037  02CE  01A1               	clrf	??_update+1
  5038  02CF  0820               	movf	??_update,w
  5039  02D0  00F4               	movwf	_and_dst
  5040  02D1  0821               	movf	??_update+1,w
  5041  02D2  00F5               	movwf	_and_dst+1
  5042  02D3                     l3664:
  5043                           
  5044                           ;main.c: 478:     if(and_dst>and_origem)
  5045  02D3  0021               	movlb	1	; select bank1
  5046  02D4  085B               	movf	(_and_origem+1)^(0+128),w
  5047  02D5  3A80               	xorlw	128
  5048  02D6  0020               	movlb	0	; select bank0
  5049  02D7  00A0               	movwf	??_update
  5050  02D8  0875               	movf	_and_dst+1,w
  5051  02D9  3A80               	xorlw	128
  5052  02DA  0220               	subwf	??_update,w
  5053  02DB  1D03               	skipz
  5054  02DC  2AE0               	goto	u3845
  5055  02DD  0874               	movf	_and_dst,w
  5056  02DE  0021               	movlb	1	; select bank1
  5057  02DF  025A               	subwf	_and_origem^(0+128),w
  5058  02E0                     u3845:
  5059  02E0  1803               	skipnc
  5060  02E1  2AE3               	goto	u3841
  5061  02E2  2AE4               	goto	u3840
  5062  02E3                     u3841:
  5063  02E3  2B59               	goto	l3700
  5064  02E4                     u3840:
  5065  02E4                     l3666:
  5066  02E4                     l3668:
  5067                           
  5068                           ;main.c: 481:       for(i=8;i>=0;i--)
  5069  02E4  3008               	movlw	8
  5070  02E5  0020               	movlb	0	; select bank0
  5071  02E6  00A6               	movwf	update@i
  5072  02E7  3000               	movlw	0
  5073  02E8  00A7               	movwf	update@i+1
  5074  02E9                     l3674:
  5075                           
  5076                           ;main.c: 482:       {;main.c: 483:           if(i==0){
  5077  02E9  0826               	movf	update@i,w
  5078  02EA  0427               	iorwf	update@i+1,w
  5079  02EB  1D03               	btfss	3,2
  5080  02EC  2AEE               	goto	u3851
  5081  02ED  2AEF               	goto	u3850
  5082  02EE                     u3851:
  5083  02EE  2AF8               	goto	l687
  5084  02EF                     u3850:
  5085  02EF                     l3676:
  5086                           
  5087                           ;main.c: 484:               fila_up[1] = fila_up[0];
  5088  02EF  0021               	movlb	1	; select bank1
  5089  02F0  0835               	movf	(_fila_up+1)^(0+128),w
  5090  02F1  00B7               	movwf	((_fila_up+1)^(0+128)+2)
  5091  02F2  0834               	movf	_fila_up^(0+128),w
  5092  02F3  00B6               	movwf	(_fila_up^(0+128)+2)
  5093                           
  5094                           ;main.c: 485:               fila_up[0] = and_dst;
  5095  02F4  0875               	movf	_and_dst+1,w
  5096  02F5  00B5               	movwf	(_fila_up+1)^(0+128)
  5097  02F6  0874               	movf	_and_dst,w
  5098  02F7  00B4               	movwf	_fila_up^(0+128)
  5099  02F8                     l687:	
  5100                           ;main.c: 487:           }
  5101                           
  5102                           
  5103                           ;main.c: 488:           if(i>0){
  5104  02F8  0020               	movlb	0	; select bank0
  5105  02F9  0827               	movf	update@i+1,w
  5106  02FA  3A80               	xorlw	128
  5107  02FB  00A0               	movwf	??_update
  5108  02FC  3080               	movlw	128
  5109  02FD  0220               	subwf	??_update,w
  5110  02FE  1D03               	skipz
  5111  02FF  2B02               	goto	u3865
  5112  0300  3001               	movlw	1
  5113  0301  0226               	subwf	update@i,w
  5114  0302                     u3865:
  5115  0302  1C03               	skipc
  5116  0303  2B05               	goto	u3861
  5117  0304  2B06               	goto	u3860
  5118  0305                     u3861:
  5119  0305  2B13               	goto	l3680
  5120  0306                     u3860:
  5121  0306                     l3678:
  5122                           
  5123                           ;main.c: 489:               fila_up[i+1] = fila_up[i];
  5124  0306  0020               	movlb	0	; select bank0
  5125  0307  3526               	lslf	update@i,w
  5126  0308  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  5127  0309  0086               	movwf	6
  5128  030A  0187               	clrf	7
  5129  030B  3526               	lslf	update@i,w
  5130  030C  3EB6               	addlw	(low ((_fila_up| 0+2)))& (0+255)
  5131  030D  0084               	movwf	4
  5132  030E  0185               	clrf	5
  5133  030F  3F40               	moviw [0]fsr1
  5134  0310  3F80               	movwi [0]fsr0
  5135  0311  3F41               	moviw [1]fsr1
  5136  0312  3F81               	movwi [1]fsr0
  5137  0313                     l3680:
  5138                           
  5139                           ;main.c: 491:       }
  5140  0313  30FF               	movlw	255
  5141  0314  0020               	movlb	0	; select bank0
  5142  0315  07A6               	addwf	update@i,f
  5143  0316  30FF               	movlw	255
  5144  0317  3DA7               	addwfc	update@i+1,f
  5145  0318                     l3682:
  5146  0318  1FA7               	btfss	update@i+1,7
  5147  0319  2B1B               	goto	u3871
  5148  031A  2B1C               	goto	u3870
  5149  031B                     u3871:
  5150  031B  2AE9               	goto	l3674
  5151  031C                     u3870:
  5152  031C                     l3684:
  5153                           
  5154                           ;main.c: 493:       for(i=8;i>=0;i--)
  5155  031C  3008               	movlw	8
  5156  031D  00A6               	movwf	update@i
  5157  031E  3000               	movlw	0
  5158  031F  00A7               	movwf	update@i+1
  5159  0320                     l3690:
  5160                           
  5161                           ;main.c: 494:       {;main.c: 495:           if(i==0){
  5162  0320  0826               	movf	update@i,w
  5163  0321  0427               	iorwf	update@i+1,w
  5164  0322  1D03               	btfss	3,2
  5165  0323  2B25               	goto	u3881
  5166  0324  2B26               	goto	u3880
  5167  0325                     u3881:
  5168  0325  2B33               	goto	l691
  5169  0326                     u3880:
  5170  0326                     l3692:
  5171                           
  5172                           ;main.c: 496:               origem_up[1] = origem_up[0];
  5173  0326  0022               	movlb	2	; select bank2
  5174  0327  0821               	movf	(_origem_up+1)^(0+256),w
  5175  0328  00A3               	movwf	((_origem_up+1)^(0+256)+2)
  5176  0329  0820               	movf	_origem_up^(0+256),w
  5177  032A  00A2               	movwf	(_origem_up^(0+256)+2)
  5178                           
  5179                           ;main.c: 497:               origem_up[0] = and_origem;
  5180  032B  0021               	movlb	1	; select bank1
  5181  032C  085B               	movf	(_and_origem+1)^(0+128),w
  5182  032D  0022               	movlb	2	; select bank2
  5183  032E  00A1               	movwf	(_origem_up+1)^(0+256)
  5184  032F  0021               	movlb	1	; select bank1
  5185  0330  085A               	movf	_and_origem^(0+128),w
  5186  0331  0022               	movlb	2	; select bank2
  5187  0332  00A0               	movwf	_origem_up^(0+256)
  5188  0333                     l691:	
  5189                           ;main.c: 499:           }
  5190                           
  5191                           
  5192                           ;main.c: 500:           if(i>0){
  5193  0333  0020               	movlb	0	; select bank0
  5194  0334  0827               	movf	update@i+1,w
  5195  0335  3A80               	xorlw	128
  5196  0336  00A0               	movwf	??_update
  5197  0337  3080               	movlw	128
  5198  0338  0220               	subwf	??_update,w
  5199  0339  1D03               	skipz
  5200  033A  2B3D               	goto	u3895
  5201  033B  3001               	movlw	1
  5202  033C  0226               	subwf	update@i,w
  5203  033D                     u3895:
  5204  033D  1C03               	skipc
  5205  033E  2B40               	goto	u3891
  5206  033F  2B41               	goto	u3890
  5207  0340                     u3891:
  5208  0340  2B50               	goto	l3696
  5209  0341                     u3890:
  5210  0341                     l3694:
  5211                           
  5212                           ;main.c: 501:               origem_up[i+1] = origem_up[i];
  5213  0341  0020               	movlb	0	; select bank0
  5214  0342  3526               	lslf	update@i,w
  5215  0343  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  5216  0344  0086               	movwf	6
  5217  0345  3001               	movlw	1	; select bank2/3
  5218  0346  0087               	movwf	7
  5219  0347  3526               	lslf	update@i,w
  5220  0348  3E22               	addlw	(low ((_origem_up| (0+256)+2)))& (0+255)
  5221  0349  0084               	movwf	4
  5222  034A  3001               	movlw	1	; select bank2/3
  5223  034B  0085               	movwf	5
  5224  034C  3F40               	moviw [0]fsr1
  5225  034D  3F80               	movwi [0]fsr0
  5226  034E  3F41               	moviw [1]fsr1
  5227  034F  3F81               	movwi [1]fsr0
  5228  0350                     l3696:
  5229                           
  5230                           ;main.c: 503:       }
  5231  0350  30FF               	movlw	255
  5232  0351  0020               	movlb	0	; select bank0
  5233  0352  07A6               	addwf	update@i,f
  5234  0353  30FF               	movlw	255
  5235  0354  3DA7               	addwfc	update@i+1,f
  5236  0355                     l3698:
  5237  0355  1FA7               	btfss	update@i+1,7
  5238  0356  2B58               	goto	u3901
  5239  0357  2B59               	goto	u3900
  5240  0358                     u3901:
  5241  0358  2B20               	goto	l3690
  5242  0359                     u3900:
  5243  0359                     l3700:
  5244                           
  5245                           ;main.c: 506:     int i;;main.c: 507:     max_fila_up = fila_up[0];
  5246  0359  0021               	movlb	1	; select bank1
  5247  035A  0835               	movf	(_fila_up+1)^(0+128),w
  5248  035B  00CF               	movwf	(_max_fila_up+1)^(0+128)
  5249  035C  0834               	movf	_fila_up^(0+128),w
  5250  035D  00CE               	movwf	_max_fila_up^(0+128)
  5251                           
  5252                           ;main.c: 508:     for(i=1;i<=9;i++)
  5253  035E  3001               	movlw	1
  5254  035F  0020               	movlb	0	; select bank0
  5255  0360  00A4               	movwf	update@i_1261
  5256  0361  3000               	movlw	0
  5257  0362  00A5               	movwf	update@i_1261+1
  5258  0363                     l3704:
  5259                           
  5260                           ;main.c: 509:     {;main.c: 510:             if(fila_up[i]>max_fila_up)
  5261  0363  0020               	movlb	0	; select bank0
  5262  0364  3524               	lslf	update@i_1261,w
  5263  0365  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  5264  0366  0086               	movwf	6
  5265  0367  0187               	clrf	7
  5266  0368  3F40               	moviw [0]fsr1
  5267  0369  00A0               	movwf	??_update
  5268  036A  3F41               	moviw [1]fsr1
  5269  036B  00A1               	movwf	??_update+1
  5270  036C  0021               	movlb	1	; select bank1
  5271  036D  084F               	movf	(_max_fila_up+1)^(0+128),w
  5272  036E  3A80               	xorlw	128
  5273  036F  0020               	movlb	0	; select bank0
  5274  0370  00A2               	movwf	??_update+2
  5275  0371  0821               	movf	??_update+1,w
  5276  0372  3A80               	xorlw	128
  5277  0373  0222               	subwf	??_update+2,w
  5278  0374  1D03               	skipz
  5279  0375  2B79               	goto	u3915
  5280  0376  0820               	movf	??_update,w
  5281  0377  0021               	movlb	1	; select bank1
  5282  0378  024E               	subwf	_max_fila_up^(0+128),w
  5283  0379                     u3915:
  5284  0379  1803               	skipnc
  5285  037A  2B7C               	goto	u3911
  5286  037B  2B7D               	goto	u3910
  5287  037C                     u3911:
  5288  037C  2B87               	goto	l3708
  5289  037D                     u3910:
  5290  037D                     l3706:
  5291                           
  5292                           ;main.c: 511:             {;main.c: 512:                 max_fila_up = fila_up[i];
  5293  037D  0020               	movlb	0	; select bank0
  5294  037E  3524               	lslf	update@i_1261,w
  5295  037F  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  5296  0380  0086               	movwf	6
  5297  0381  0187               	clrf	7
  5298  0382  3F40               	moviw [0]fsr1
  5299  0383  0021               	movlb	1	; select bank1
  5300  0384  00CE               	movwf	_max_fila_up^(0+128)
  5301  0385  3F41               	moviw [1]fsr1
  5302  0386  00CF               	movwf	(_max_fila_up+1)^(0+128)
  5303  0387                     l3708:
  5304                           
  5305                           ;main.c: 514:     }
  5306  0387  3001               	movlw	1
  5307  0388  0020               	movlb	0	; select bank0
  5308  0389  07A4               	addwf	update@i_1261,f
  5309  038A  3000               	movlw	0
  5310  038B  3DA5               	addwfc	update@i_1261+1,f
  5311  038C                     l3710:
  5312  038C  0825               	movf	update@i_1261+1,w
  5313  038D  3A80               	xorlw	128
  5314  038E  00A0               	movwf	??_update
  5315  038F  3080               	movlw	128
  5316  0390  0220               	subwf	??_update,w
  5317  0391  1D03               	skipz
  5318  0392  2B95               	goto	u3925
  5319  0393  300A               	movlw	10
  5320  0394  0224               	subwf	update@i_1261,w
  5321  0395                     u3925:
  5322  0395  1C03               	skipc
  5323  0396  2B98               	goto	u3921
  5324  0397  2B99               	goto	u3920
  5325  0398                     u3921:
  5326  0398  2B63               	goto	l3704
  5327  0399                     u3920:
  5328  0399                     l3712:
  5329                           
  5330                           ;main.c: 515:     if(max_fila_up==0)
  5331  0399  0021               	movlb	1	; select bank1
  5332  039A  084E               	movf	_max_fila_up^(0+128),w
  5333  039B  044F               	iorwf	(_max_fila_up+1)^(0+128),w
  5334  039C  1D03               	btfss	3,2
  5335  039D  2B9F               	goto	u3931
  5336  039E  2BA0               	goto	u3930
  5337  039F                     u3931:
  5338  039F  2BA4               	goto	l696
  5339  03A0                     u3930:
  5340  03A0                     l3714:
  5341                           
  5342                           ;main.c: 516:     {;main.c: 517:         max_fila_up=1;
  5343  03A0  3001               	movlw	1
  5344  03A1  00CE               	movwf	_max_fila_up^(0+128)
  5345  03A2  3000               	movlw	0
  5346  03A3  00CF               	movwf	(_max_fila_up^(0+128)+1)
  5347  03A4                     l696:	
  5348                           ;main.c: 518:     }
  5349                           
  5350                           
  5351                           ;main.c: 520:     if(and_dst<and_origem)
  5352  03A4  0875               	movf	_and_dst+1,w
  5353  03A5  3A80               	xorlw	128
  5354  03A6  0020               	movlb	0	; select bank0
  5355  03A7  00A0               	movwf	??_update
  5356  03A8  0021               	movlb	1	; select bank1
  5357  03A9  085B               	movf	(_and_origem+1)^(0+128),w
  5358  03AA  3A80               	xorlw	128
  5359  03AB  0020               	movlb	0	; select bank0
  5360  03AC  0220               	subwf	??_update,w
  5361  03AD  1D03               	skipz
  5362  03AE  2BB2               	goto	u3945
  5363  03AF  0021               	movlb	1	; select bank1
  5364  03B0  085A               	movf	_and_origem^(0+128),w
  5365  03B1  0274               	subwf	_and_dst,w
  5366  03B2                     u3945:
  5367  03B2  1803               	skipnc
  5368  03B3  2BB5               	goto	u3941
  5369  03B4  2BB6               	goto	u3940
  5370  03B5                     u3941:
  5371  03B5  2C27               	goto	l3750
  5372  03B6                     u3940:
  5373  03B6                     l3716:
  5374  03B6                     l3718:
  5375                           
  5376                           ;main.c: 523:       for(i=8;i>=0;i--)
  5377  03B6  3008               	movlw	8
  5378  03B7  0020               	movlb	0	; select bank0
  5379  03B8  00A8               	movwf	update@i_1262
  5380  03B9  3000               	movlw	0
  5381  03BA  00A9               	movwf	update@i_1262+1
  5382  03BB                     l3724:
  5383                           
  5384                           ;main.c: 524:       {;main.c: 525:           if(i==0){
  5385  03BB  0828               	movf	update@i_1262,w
  5386  03BC  0429               	iorwf	update@i_1262+1,w
  5387  03BD  1D03               	btfss	3,2
  5388  03BE  2BC0               	goto	u3951
  5389  03BF  2BC1               	goto	u3950
  5390  03C0                     u3951:
  5391  03C0  2BCA               	goto	l700
  5392  03C1                     u3950:
  5393  03C1                     l3726:
  5394                           
  5395                           ;main.c: 526:               fila_down[1] = fila_down[0];
  5396  03C1  0022               	movlb	2	; select bank2
  5397  03C2  0835               	movf	(_fila_down+1)^(0+256),w
  5398  03C3  00B7               	movwf	((_fila_down+1)^(0+256)+2)
  5399  03C4  0834               	movf	_fila_down^(0+256),w
  5400  03C5  00B6               	movwf	(_fila_down^(0+256)+2)
  5401                           
  5402                           ;main.c: 527:               fila_down[0] = and_dst;
  5403  03C6  0875               	movf	_and_dst+1,w
  5404  03C7  00B5               	movwf	(_fila_down+1)^(0+256)
  5405  03C8  0874               	movf	_and_dst,w
  5406  03C9  00B4               	movwf	_fila_down^(0+256)
  5407  03CA                     l700:	
  5408                           ;main.c: 529:           }
  5409                           
  5410                           
  5411                           ;main.c: 530:           if(i>0){
  5412  03CA  0020               	movlb	0	; select bank0
  5413  03CB  0829               	movf	update@i_1262+1,w
  5414  03CC  3A80               	xorlw	128
  5415  03CD  00A0               	movwf	??_update
  5416  03CE  3080               	movlw	128
  5417  03CF  0220               	subwf	??_update,w
  5418  03D0  1D03               	skipz
  5419  03D1  2BD4               	goto	u3965
  5420  03D2  3001               	movlw	1
  5421  03D3  0228               	subwf	update@i_1262,w
  5422  03D4                     u3965:
  5423  03D4  1C03               	skipc
  5424  03D5  2BD7               	goto	u3961
  5425  03D6  2BD8               	goto	u3960
  5426  03D7                     u3961:
  5427  03D7  2BE7               	goto	l3730
  5428  03D8                     u3960:
  5429  03D8                     l3728:
  5430                           
  5431                           ;main.c: 531:               fila_down[i+1] = fila_down[i];
  5432  03D8  0020               	movlb	0	; select bank0
  5433  03D9  3528               	lslf	update@i_1262,w
  5434  03DA  3E34               	addlw	(low (_fila_down| (0+256)))& (0+255)
  5435  03DB  0086               	movwf	6
  5436  03DC  3001               	movlw	1	; select bank2/3
  5437  03DD  0087               	movwf	7
  5438  03DE  3528               	lslf	update@i_1262,w
  5439  03DF  3E36               	addlw	(low ((_fila_down| (0+256)+2)))& (0+255)
  5440  03E0  0084               	movwf	4
  5441  03E1  3001               	movlw	1	; select bank2/3
  5442  03E2  0085               	movwf	5
  5443  03E3  3F40               	moviw [0]fsr1
  5444  03E4  3F80               	movwi [0]fsr0
  5445  03E5  3F41               	moviw [1]fsr1
  5446  03E6  3F81               	movwi [1]fsr0
  5447  03E7                     l3730:
  5448                           
  5449                           ;main.c: 533:       }
  5450  03E7  30FF               	movlw	255
  5451  03E8  0020               	movlb	0	; select bank0
  5452  03E9  07A8               	addwf	update@i_1262,f
  5453  03EA  30FF               	movlw	255
  5454  03EB  3DA9               	addwfc	update@i_1262+1,f
  5455  03EC                     l3732:
  5456  03EC  1FA9               	btfss	update@i_1262+1,7
  5457  03ED  2BEF               	goto	u3971
  5458  03EE  2BF0               	goto	u3970
  5459  03EF                     u3971:
  5460  03EF  2BBB               	goto	l3724
  5461  03F0                     u3970:
  5462  03F0                     l3734:
  5463                           
  5464                           ;main.c: 535:       for(i=8;i>=0;i--)
  5465  03F0  3008               	movlw	8
  5466  03F1  00A8               	movwf	update@i_1262
  5467  03F2  3000               	movlw	0
  5468  03F3  00A9               	movwf	update@i_1262+1
  5469  03F4                     l3740:
  5470                           
  5471                           ;main.c: 536:       {;main.c: 537:           if(i==0){
  5472  03F4  0828               	movf	update@i_1262,w
  5473  03F5  0429               	iorwf	update@i_1262+1,w
  5474  03F6  1D03               	btfss	3,2
  5475  03F7  2BF9               	goto	u3981
  5476  03F8  2BFA               	goto	u3980
  5477  03F9                     u3981:
  5478  03F9  2C03               	goto	l704
  5479  03FA                     u3980:
  5480  03FA                     l3742:
  5481                           
  5482                           ;main.c: 538:               origem_down[1] = origem_down[0];
  5483  03FA  0021               	movlb	1	; select bank1
  5484  03FB  0821               	movf	(_origem_down+1)^(0+128),w
  5485  03FC  00A3               	movwf	((_origem_down+1)^(0+128)+2)
  5486  03FD  0820               	movf	_origem_down^(0+128),w
  5487  03FE  00A2               	movwf	(_origem_down^(0+128)+2)
  5488                           
  5489                           ;main.c: 539:               origem_down[0] = and_origem;
  5490  03FF  085B               	movf	(_and_origem+1)^(0+128),w
  5491  0400  00A1               	movwf	(_origem_down+1)^(0+128)
  5492  0401  085A               	movf	_and_origem^(0+128),w
  5493  0402  00A0               	movwf	_origem_down^(0+128)
  5494  0403                     l704:	
  5495                           ;main.c: 540:           }
  5496                           
  5497                           
  5498                           ;main.c: 541:           if(i>0){
  5499  0403  0020               	movlb	0	; select bank0
  5500  0404  0829               	movf	update@i_1262+1,w
  5501  0405  3A80               	xorlw	128
  5502  0406  00A0               	movwf	??_update
  5503  0407  3080               	movlw	128
  5504  0408  0220               	subwf	??_update,w
  5505  0409  1D03               	skipz
  5506  040A  2C0D               	goto	u3995
  5507  040B  3001               	movlw	1
  5508  040C  0228               	subwf	update@i_1262,w
  5509  040D                     u3995:
  5510  040D  1C03               	skipc
  5511  040E  2C10               	goto	u3991
  5512  040F  2C11               	goto	u3990
  5513  0410                     u3991:
  5514  0410  2C1E               	goto	l3746
  5515  0411                     u3990:
  5516  0411                     l3744:
  5517                           
  5518                           ;main.c: 542:               origem_down[i+1] = origem_down[i];
  5519  0411  0020               	movlb	0	; select bank0
  5520  0412  3528               	lslf	update@i_1262,w
  5521  0413  3EA0               	addlw	(low (_origem_down| 0))& (0+255)
  5522  0414  0086               	movwf	6
  5523  0415  0187               	clrf	7
  5524  0416  3528               	lslf	update@i_1262,w
  5525  0417  3EA2               	addlw	(low ((_origem_down| 0+2)))& (0+255)
  5526  0418  0084               	movwf	4
  5527  0419  0185               	clrf	5
  5528  041A  3F40               	moviw [0]fsr1
  5529  041B  3F80               	movwi [0]fsr0
  5530  041C  3F41               	moviw [1]fsr1
  5531  041D  3F81               	movwi [1]fsr0
  5532  041E                     l3746:
  5533                           
  5534                           ;main.c: 544:       }
  5535  041E  30FF               	movlw	255
  5536  041F  0020               	movlb	0	; select bank0
  5537  0420  07A8               	addwf	update@i_1262,f
  5538  0421  30FF               	movlw	255
  5539  0422  3DA9               	addwfc	update@i_1262+1,f
  5540  0423                     l3748:
  5541  0423  1FA9               	btfss	update@i_1262+1,7
  5542  0424  2C26               	goto	u4001
  5543  0425  2C27               	goto	u4000
  5544  0426                     u4001:
  5545  0426  2BF4               	goto	l3740
  5546  0427                     u4000:
  5547  0427                     l3750:
  5548                           
  5549                           ;main.c: 548:     min_fila_down = 4;
  5550  0427  3004               	movlw	4
  5551  0428  0021               	movlb	1	; select bank1
  5552  0429  00CC               	movwf	_min_fila_down^(0+128)
  5553  042A  3000               	movlw	0
  5554  042B  00CD               	movwf	(_min_fila_down^(0+128)+1)
  5555  042C                     l3752:
  5556                           
  5557                           ;main.c: 549:     for(i=0;i<=9;i++)
  5558  042C  0020               	movlb	0	; select bank0
  5559  042D  01A4               	clrf	update@i_1261
  5560  042E  01A5               	clrf	update@i_1261+1
  5561  042F                     l3758:
  5562                           
  5563                           ;main.c: 550:     {;main.c: 551:         if(fila_down[i]<min_fila_down&&fila_down[i]>0)
  5564  042F  0020               	movlb	0	; select bank0
  5565  0430  3524               	lslf	update@i_1261,w
  5566  0431  3E34               	addlw	(low (_fila_down| (0+256)))& (0+255)
  5567  0432  0086               	movwf	6
  5568  0433  3001               	movlw	1	; select bank2/3
  5569  0434  0087               	movwf	7
  5570  0435  3F40               	moviw [0]fsr1
  5571  0436  00A0               	movwf	??_update
  5572  0437  3F41               	moviw [1]fsr1
  5573  0438  00A1               	movwf	??_update+1
  5574  0439  0821               	movf	??_update+1,w
  5575  043A  3A80               	xorlw	128
  5576  043B  00A2               	movwf	??_update+2
  5577  043C  0021               	movlb	1	; select bank1
  5578  043D  084D               	movf	(_min_fila_down+1)^(0+128),w
  5579  043E  3A80               	xorlw	128
  5580  043F  0020               	movlb	0	; select bank0
  5581  0440  0222               	subwf	??_update+2,w
  5582  0441  1D03               	skipz
  5583  0442  2C47               	goto	u4015
  5584  0443  0021               	movlb	1	; select bank1
  5585  0444  084C               	movf	_min_fila_down^(0+128),w
  5586  0445  0020               	movlb	0	; select bank0
  5587  0446  0220               	subwf	??_update,w
  5588  0447                     u4015:
  5589  0447  1803               	skipnc
  5590  0448  2C4A               	goto	u4011
  5591  0449  2C4B               	goto	u4010
  5592  044A                     u4011:
  5593  044A  2C6D               	goto	l3764
  5594  044B                     u4010:
  5595  044B                     l3760:
  5596  044B  0020               	movlb	0	; select bank0
  5597  044C  3524               	lslf	update@i_1261,w
  5598  044D  3E34               	addlw	(low (_fila_down| (0+256)))& (0+255)
  5599  044E  0086               	movwf	6
  5600  044F  3001               	movlw	1	; select bank2/3
  5601  0450  0087               	movwf	7
  5602  0451  3F40               	moviw [0]fsr1
  5603  0452  00A0               	movwf	??_update
  5604  0453  3F41               	moviw [1]fsr1
  5605  0454  00A1               	movwf	??_update+1
  5606  0455  0821               	movf	??_update+1,w
  5607  0456  3A80               	xorlw	128
  5608  0457  00A2               	movwf	??_update+2
  5609  0458  3080               	movlw	128
  5610  0459  0222               	subwf	??_update+2,w
  5611  045A  1D03               	skipz
  5612  045B  2C5E               	goto	u4025
  5613  045C  3001               	movlw	1
  5614  045D  0220               	subwf	??_update,w
  5615  045E                     u4025:
  5616  045E  1C03               	skipc
  5617  045F  2C61               	goto	u4021
  5618  0460  2C62               	goto	u4020
  5619  0461                     u4021:
  5620  0461  2C6D               	goto	l3764
  5621  0462                     u4020:
  5622  0462                     l3762:
  5623                           
  5624                           ;main.c: 552:         {;main.c: 553:             min_fila_down = fila_down[i];
  5625  0462  0020               	movlb	0	; select bank0
  5626  0463  3524               	lslf	update@i_1261,w
  5627  0464  3E34               	addlw	(low (_fila_down| (0+256)))& (0+255)
  5628  0465  0086               	movwf	6
  5629  0466  3001               	movlw	1	; select bank2/3
  5630  0467  0087               	movwf	7
  5631  0468  3F40               	moviw [0]fsr1
  5632  0469  0021               	movlb	1	; select bank1
  5633  046A  00CC               	movwf	_min_fila_down^(0+128)
  5634  046B  3F41               	moviw [1]fsr1
  5635  046C  00CD               	movwf	(_min_fila_down+1)^(0+128)
  5636  046D                     l3764:
  5637                           
  5638                           ;main.c: 555:     }
  5639  046D  3001               	movlw	1
  5640  046E  0020               	movlb	0	; select bank0
  5641  046F  07A4               	addwf	update@i_1261,f
  5642  0470  3000               	movlw	0
  5643  0471  3DA5               	addwfc	update@i_1261+1,f
  5644  0472                     l3766:
  5645  0472  0825               	movf	update@i_1261+1,w
  5646  0473  3A80               	xorlw	128
  5647  0474  00A0               	movwf	??_update
  5648  0475  3080               	movlw	128
  5649  0476  0220               	subwf	??_update,w
  5650  0477  1D03               	skipz
  5651  0478  2C7B               	goto	u4035
  5652  0479  300A               	movlw	10
  5653  047A  0224               	subwf	update@i_1261,w
  5654  047B                     u4035:
  5655  047B  1C03               	skipc
  5656  047C  2C7E               	goto	u4031
  5657  047D  2C7F               	goto	u4030
  5658  047E                     u4031:
  5659  047E  2C2F               	goto	l3758
  5660  047F                     u4030:
  5661  047F                     l709:
  5662  047F  0008               	return
  5663  0480                     __end_of_update:
  5664                           
  5665                           	psect	text9
  5666  0836                     __ptext9:	
  5667 ;; *************** function _EUSART_is_rx_ready *****************
  5668 ;; Defined at:
  5669 ;;		line 99 in file "mcc_generated_files/eusart.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;		None
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;		None
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      _Bool 
  5676 ;; Registers used:
  5677 ;;		wreg, status,2, status,0
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5683 ;;      Params:         0       0       0       0       0       0
  5684 ;;      Locals:         0       0       0       0       0       0
  5685 ;;      Temps:          0       0       0       0       0       0
  5686 ;;      Totals:         0       0       0       0       0       0
  5687 ;;Total ram usage:        0 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; Hardware stack levels required when called:    4
  5690 ;; This function calls:
  5691 ;;		Nothing
  5692 ;; This function is called by:
  5693 ;;		_update
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           
  5698                           ;psect for function _EUSART_is_rx_ready
  5699  0836                     _EUSART_is_rx_ready:
  5700  0836                     l3506:	
  5701                           ;incstack = 0
  5702                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  5703                           
  5704                           
  5705                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  5706  0836  0020               	movlb	0	; select bank0
  5707  0837  0E11               	swapf	17,w	;volatile
  5708  0838  0C89               	rrf	9,f
  5709  0839  3901               	andlw	1
  5710  083A                     l51:
  5711  083A  0008               	return
  5712  083B                     __end_of_EUSART_is_rx_ready:
  5713                           
  5714                           	psect	text10
  5715  093E                     __ptext10:	
  5716 ;; *************** function _EUSART_Read *****************
  5717 ;; Defined at:
  5718 ;;		line 113 in file "mcc_generated_files/eusart.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;		None
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;		None
  5723 ;; Return value:  Size  Location     Type
  5724 ;;                  1    wreg      unsigned char 
  5725 ;; Registers used:
  5726 ;;		wreg, status,2
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5732 ;;      Params:         0       0       0       0       0       0
  5733 ;;      Locals:         0       0       0       0       0       0
  5734 ;;      Temps:          0       0       0       0       0       0
  5735 ;;      Totals:         0       0       0       0       0       0
  5736 ;;Total ram usage:        0 bytes
  5737 ;; Hardware stack levels used:    1
  5738 ;; Hardware stack levels required when called:    4
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_update
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           
  5747                           ;psect for function _EUSART_Read
  5748  093E                     _EUSART_Read:
  5749  093E                     l3510:	
  5750                           ;incstack = 0
  5751                           ; Regs used in _EUSART_Read: [wreg+status,2]
  5752                           
  5753  093E                     l60:	
  5754                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  5755                           
  5756                           
  5757                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  5758  093E  0020               	movlb	0	; select bank0
  5759  093F  1E91               	btfss	17,5	;volatile
  5760  0940  2942               	goto	u3801
  5761  0941  2943               	goto	u3800
  5762  0942                     u3801:
  5763  0942  293E               	goto	l60
  5764  0943                     u3800:
  5765  0943                     l3512:
  5766                           
  5767                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  5768  0943  01F6               	clrf	_eusartRxLastError	;volatile
  5769  0944                     l3514:
  5770                           
  5771                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  5772  0944  0023               	movlb	3	; select bank3
  5773  0945  1C9D               	btfss	29,1	;volatile
  5774  0946  2948               	goto	u3811
  5775  0947  2949               	goto	u3810
  5776  0948                     u3811:
  5777  0948  294B               	goto	l3518
  5778  0949                     u3810:
  5779  0949                     l3516:
  5780                           
  5781                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  5782  0949  121D               	bcf	29,4	;volatile
  5783                           
  5784                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  5785  094A  161D               	bsf	29,4	;volatile
  5786  094B                     l3518:
  5787                           
  5788                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  5789  094B  0819               	movf	25,w	;volatile
  5790  094C                     l64:
  5791  094C  0008               	return
  5792  094D                     __end_of_EUSART_Read:
  5793                           
  5794                           	psect	text11
  5795  09D2                     __ptext11:	
  5796 ;; *************** function ___wmul *****************
  5797 ;; Defined at:
  5798 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5801 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  product         2    4[BANK0 ] unsigned int 
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  2    0[BANK0 ] unsigned int 
  5806 ;; Registers used:
  5807 ;;		wreg, status,2, status,0
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5813 ;;      Params:         0       4       0       0       0       0
  5814 ;;      Locals:         0       2       0       0       0       0
  5815 ;;      Temps:          0       0       0       0       0       0
  5816 ;;      Totals:         0       6       0       0       0       0
  5817 ;;Total ram usage:        6 bytes
  5818 ;; Hardware stack levels used:    1
  5819 ;; Hardware stack levels required when called:    4
  5820 ;; This function calls:
  5821 ;;		Nothing
  5822 ;; This function is called by:
  5823 ;;		_controle
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           
  5828                           ;psect for function ___wmul
  5829  09D2                     ___wmul:
  5830  09D2                     l3768:	
  5831                           ;incstack = 0
  5832                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5833                           
  5834  09D2  0020               	movlb	0	; select bank0
  5835  09D3  01A4               	clrf	___wmul@product
  5836  09D4  01A5               	clrf	___wmul@product+1
  5837  09D5                     l3770:
  5838  09D5  1C20               	btfss	___wmul@multiplier,0
  5839  09D6  29D8               	goto	u4041
  5840  09D7  29D9               	goto	u4040
  5841  09D8                     u4041:
  5842  09D8  29DD               	goto	l859
  5843  09D9                     u4040:
  5844  09D9                     l3772:
  5845  09D9  0822               	movf	___wmul@multiplicand,w
  5846  09DA  07A4               	addwf	___wmul@product,f
  5847  09DB  0823               	movf	___wmul@multiplicand+1,w
  5848  09DC  3DA5               	addwfc	___wmul@product+1,f
  5849  09DD                     l859:
  5850  09DD  3001               	movlw	1
  5851  09DE                     u4055:
  5852  09DE  35A2               	lslf	___wmul@multiplicand,f
  5853  09DF  0DA3               	rlf	___wmul@multiplicand+1,f
  5854  09E0  0B89               	decfsz	9,f
  5855  09E1  29DE               	goto	u4055
  5856  09E2                     l3774:
  5857  09E2  3001               	movlw	1
  5858  09E3                     u4065:
  5859  09E3  36A1               	lsrf	___wmul@multiplier+1,f
  5860  09E4  0CA0               	rrf	___wmul@multiplier,f
  5861  09E5  0B89               	decfsz	9,f
  5862  09E6  29E3               	goto	u4065
  5863  09E7                     l3776:
  5864  09E7  0820               	movf	___wmul@multiplier,w
  5865  09E8  0421               	iorwf	___wmul@multiplier+1,w
  5866  09E9  1D03               	btfss	3,2
  5867  09EA  29EC               	goto	u4071
  5868  09EB  29ED               	goto	u4070
  5869  09EC                     u4071:
  5870  09EC  29D5               	goto	l3770
  5871  09ED                     u4070:
  5872  09ED                     l3778:
  5873  09ED  0825               	movf	___wmul@product+1,w
  5874  09EE  00A1               	movwf	?___wmul+1
  5875  09EF  0824               	movf	___wmul@product,w
  5876  09F0  00A0               	movwf	?___wmul
  5877  09F1                     l861:
  5878  09F1  0008               	return
  5879  09F2                     __end_of___wmul:
  5880                           
  5881                           	psect	text12
  5882  099A                     __ptext12:	
  5883 ;; *************** function _PWM3_LoadDutyValue *****************
  5884 ;; Defined at:
  5885 ;;		line 82 in file "mcc_generated_files/pwm3.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;  dutyValue       2    0[BANK0 ] unsigned short 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;		None
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      void 
  5892 ;; Registers used:
  5893 ;;		wreg, status,2, status,0
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5899 ;;      Params:         0       2       0       0       0       0
  5900 ;;      Locals:         0       0       0       0       0       0
  5901 ;;      Temps:          0       2       0       0       0       0
  5902 ;;      Totals:         0       4       0       0       0       0
  5903 ;;Total ram usage:        4 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:    4
  5906 ;; This function calls:
  5907 ;;		Nothing
  5908 ;; This function is called by:
  5909 ;;		_controle
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           
  5914                           ;psect for function _PWM3_LoadDutyValue
  5915  099A                     _PWM3_LoadDutyValue:
  5916  099A                     l2756:	
  5917                           ;incstack = 0
  5918                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  5919                           
  5920                           
  5921                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
  5922  099A  0020               	movlb	0	; select bank0
  5923  099B  0821               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  5924  099C  00A3               	movwf	??_PWM3_LoadDutyValue+1
  5925  099D  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
  5926  099E  00A2               	movwf	??_PWM3_LoadDutyValue
  5927  099F  36A3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5928  09A0  0CA2               	rrf	??_PWM3_LoadDutyValue,f
  5929  09A1  36A3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5930  09A2  0CA2               	rrf	??_PWM3_LoadDutyValue,f
  5931  09A3  0822               	movf	??_PWM3_LoadDutyValue,w
  5932  09A4  0026               	movlb	6	; select bank6
  5933  09A5  0091               	movwf	17	;volatile
  5934                           
  5935                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
  5936  09A6  0020               	movlb	0	; select bank0
  5937  09A7  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
  5938  09A8  3903               	andlw	3
  5939  09A9  00A2               	movwf	??_PWM3_LoadDutyValue
  5940  09AA  3004               	movlw	4
  5941  09AB                     u2215:
  5942  09AB  35A2               	lslf	??_PWM3_LoadDutyValue,f
  5943  09AC  0B89               	decfsz	9,f
  5944  09AD  29AB               	goto	u2215
  5945  09AE  0026               	movlb	6	; select bank6
  5946  09AF  0813               	movf	19,w	;volatile
  5947  09B0  39CF               	andlw	207
  5948  09B1  0020               	movlb	0	; select bank0
  5949  09B2  0422               	iorwf	??_PWM3_LoadDutyValue,w
  5950  09B3  0026               	movlb	6	; select bank6
  5951  09B4  0093               	movwf	19	;volatile
  5952  09B5                     l475:
  5953  09B5  0008               	return
  5954  09B6                     __end_of_PWM3_LoadDutyValue:
  5955                           
  5956                           	psect	text13
  5957  0A13                     __ptext13:	
  5958 ;; *************** function _ADC_GetConversion *****************
  5959 ;; Defined at:
  5960 ;;		line 112 in file "mcc_generated_files/adc.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  channel         1    wreg     enum E2476
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;  channel         1    3[BANK0 ] enum E2476
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  2    0[BANK0 ] unsigned short 
  5967 ;; Registers used:
  5968 ;;		wreg, status,2, status,0
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5974 ;;      Params:         0       2       0       0       0       0
  5975 ;;      Locals:         0       1       0       0       0       0
  5976 ;;      Temps:          0       1       0       0       0       0
  5977 ;;      Totals:         0       4       0       0       0       0
  5978 ;;Total ram usage:        4 bytes
  5979 ;; Hardware stack levels used:    1
  5980 ;; Hardware stack levels required when called:    4
  5981 ;; This function calls:
  5982 ;;		Nothing
  5983 ;; This function is called by:
  5984 ;;		_controle
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           
  5989                           ;psect for function _ADC_GetConversion
  5990  0A13                     _ADC_GetConversion:
  5991                           
  5992                           ;incstack = 0
  5993                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  5994                           ;ADC_GetConversion@channel stored from wreg
  5995  0A13  0020               	movlb	0	; select bank0
  5996  0A14  00A3               	movwf	ADC_GetConversion@channel
  5997  0A15                     l2720:
  5998                           
  5999                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  6000  0A15  0823               	movf	ADC_GetConversion@channel,w
  6001  0A16  00A2               	movwf	??_ADC_GetConversion
  6002  0A17  0DA2               	rlf	??_ADC_GetConversion,f
  6003  0A18  0DA2               	rlf	??_ADC_GetConversion,f
  6004  0A19  0021               	movlb	1	; select bank1
  6005  0A1A  081D               	movf	29,w	;volatile
  6006  0A1B  0020               	movlb	0	; select bank0
  6007  0A1C  0622               	xorwf	??_ADC_GetConversion,w
  6008  0A1D  3983               	andlw	-125
  6009  0A1E  0622               	xorwf	??_ADC_GetConversion,w
  6010  0A1F  0021               	movlb	1	; select bank1
  6011  0A20  009D               	movwf	29	;volatile
  6012  0A21                     l2722:
  6013                           
  6014                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  6015  0A21  141D               	bsf	29,0	;volatile
  6016  0A22                     l2724:
  6017                           
  6018                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  6019  0A22  3003               	movlw	3
  6020  0A23                     u4337:
  6021  0A23  0B89               	decfsz	9,f
  6022  0A24  2A23               	goto	u4337
  6023  0A25  0000               	nop
  6024  0A26                     l2726:
  6025                           
  6026                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  6027  0A26  0021               	movlb	1	; select bank1
  6028  0A27  149D               	bsf	29,1	;volatile
  6029  0A28                     l282:	
  6030                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  6031                           
  6032                           
  6033                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  6034  0A28  189D               	btfsc	29,1	;volatile
  6035  0A29  2A2B               	goto	u2161
  6036  0A2A  2A2C               	goto	u2160
  6037  0A2B                     u2161:
  6038  0A2B  2A28               	goto	l282
  6039  0A2C                     u2160:
  6040  0A2C                     l2728:
  6041                           
  6042                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6043  0A2C  081C               	movf	28,w	;volatile
  6044  0A2D  0020               	movlb	0	; select bank0
  6045  0A2E  00A1               	movwf	?_ADC_GetConversion+1
  6046  0A2F  0021               	movlb	1	; select bank1
  6047  0A30  081B               	movf	27,w	;volatile
  6048  0A31  0020               	movlb	0	; select bank0
  6049  0A32  00A0               	movwf	?_ADC_GetConversion
  6050  0A33                     l285:
  6051  0A33  0008               	return
  6052  0A34                     __end_of_ADC_GetConversion:
  6053                           
  6054                           	psect	text14
  6055  0F2D                     __ptext14:	
  6056 ;; *************** function _comunicacao *****************
  6057 ;; Defined at:
  6058 ;;		line 155 in file "main.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;		None
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;  position        4   75[BANK0 ] float 
  6063 ;;  speed           4   71[BANK0 ] float 
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  1    wreg      void 
  6066 ;; Registers used:
  6067 ;;		wreg, status,2, status,0, pclath, cstack
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6073 ;;      Params:         0       0       0       0       0       0
  6074 ;;      Locals:         0       8       0       0       0       0
  6075 ;;      Temps:          0       1       0       0       0       0
  6076 ;;      Totals:         0       9       0       0       0       0
  6077 ;;Total ram usage:        9 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; Hardware stack levels required when called:    6
  6080 ;; This function calls:
  6081 ;;		___fldiv
  6082 ;;		___flmul
  6083 ;;		___fltol
  6084 ;;		___xxtofl
  6085 ;; This function is called by:
  6086 ;;		_main
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           
  6091                           ;psect for function _comunicacao
  6092  0F2D                     _comunicacao:
  6093  0F2D                     l3348:	
  6094                           ;incstack = 0
  6095                           ; Regs used in _comunicacao: [wreg+status,2+status,0+pclath+cstack]
  6096                           
  6097                           
  6098                           ;main.c: 160:     float speed = 3.75/(((float)ccp_value)*0.0000005);
  6099  0F2D  3035               	movlw	53
  6100  0F2E  0020               	movlb	0	; select bank0
  6101  0F2F  00B5               	movwf	___flmul@b+3
  6102  0F30  3006               	movlw	6
  6103  0F31  00B4               	movwf	___flmul@b+2
  6104  0F32  3037               	movlw	55
  6105  0F33  00B3               	movwf	___flmul@b+1
  6106  0F34  30BD               	movlw	189
  6107  0F35  00B2               	movwf	___flmul@b
  6108  0F36  0021               	movlb	1	; select bank1
  6109  0F37  085F               	movf	_ccp_value^(0+128),w
  6110  0F38  0020               	movlb	0	; select bank0
  6111  0F39  00A4               	movwf	___xxtofl@val
  6112  0F3A  0021               	movlb	1	; select bank1
  6113  0F3B  0860               	movf	(_ccp_value+1)^(0+128),w
  6114  0F3C  0020               	movlb	0	; select bank0
  6115  0F3D  00A5               	movwf	___xxtofl@val+1
  6116  0F3E  01A6               	clrf	___xxtofl@val+2
  6117  0F3F  01A7               	clrf	___xxtofl@val+3
  6118  0F40  3000               	movlw	0
  6119  0F41  318C  24FD  318F   	fcall	___xxtofl
  6120  0F44  0020               	movlb	0	; select bank0
  6121  0F45  0827               	movf	?___xxtofl+3,w
  6122  0F46  00B9               	movwf	___flmul@a+3
  6123  0F47  0826               	movf	?___xxtofl+2,w
  6124  0F48  00B8               	movwf	___flmul@a+2
  6125  0F49  0825               	movf	?___xxtofl+1,w
  6126  0F4A  00B7               	movwf	___flmul@a+1
  6127  0F4B  0824               	movf	?___xxtofl,w
  6128  0F4C  00B6               	movwf	___flmul@a
  6129  0F4D  3180  2053  318F   	fcall	___flmul
  6130  0F50  0020               	movlb	0	; select bank0
  6131  0F51  0835               	movf	?___flmul+3,w
  6132  0F52  00CF               	movwf	___fldiv@a+3
  6133  0F53  0834               	movf	?___flmul+2,w
  6134  0F54  00CE               	movwf	___fldiv@a+2
  6135  0F55  0833               	movf	?___flmul+1,w
  6136  0F56  00CD               	movwf	___fldiv@a+1
  6137  0F57  0832               	movf	?___flmul,w
  6138  0F58  00CC               	movwf	___fldiv@a
  6139  0F59  3040               	movlw	64
  6140  0F5A  00D3               	movwf	___fldiv@b+3
  6141  0F5B  3070               	movlw	112
  6142  0F5C  00D2               	movwf	___fldiv@b+2
  6143  0F5D  3000               	movlw	0
  6144  0F5E  00D1               	movwf	___fldiv@b+1
  6145  0F5F  3000               	movlw	0
  6146  0F60  00D0               	movwf	___fldiv@b
  6147  0F61  3184  2480  318F   	fcall	___fldiv
  6148  0F64  0020               	movlb	0	; select bank0
  6149  0F65  084F               	movf	?___fldiv+3,w
  6150  0F66  00EA               	movwf	comunicacao@speed+3
  6151  0F67  084E               	movf	?___fldiv+2,w
  6152  0F68  00E9               	movwf	comunicacao@speed+2
  6153  0F69  084D               	movf	?___fldiv+1,w
  6154  0F6A  00E8               	movwf	comunicacao@speed+1
  6155  0F6B  084C               	movf	?___fldiv,w
  6156  0F6C  00E7               	movwf	comunicacao@speed
  6157                           
  6158                           ;main.c: 161:     float position = 1.5*pulses;
  6159  0F6D  303F               	movlw	63
  6160  0F6E  00B5               	movwf	___flmul@b+3
  6161  0F6F  30C0               	movlw	192
  6162  0F70  00B4               	movwf	___flmul@b+2
  6163  0F71  3000               	movlw	0
  6164  0F72  00B3               	movwf	___flmul@b+1
  6165  0F73  3000               	movlw	0
  6166  0F74  00B2               	movwf	___flmul@b
  6167  0F75  0021               	movlb	1	; select bank1
  6168  0F76  0861               	movf	_pulses^(0+128),w
  6169  0F77  0020               	movlb	0	; select bank0
  6170  0F78  00A4               	movwf	___xxtofl@val
  6171  0F79  0021               	movlb	1	; select bank1
  6172  0F7A  0862               	movf	(_pulses+1)^(0+128),w
  6173  0F7B  0020               	movlb	0	; select bank0
  6174  0F7C  00A5               	movwf	___xxtofl@val+1
  6175  0F7D  0D89               	rlf	9,f
  6176  0F7E  3B89               	subwfb	9,f
  6177  0F7F  0989               	comf	9,f
  6178  0F80  00A6               	movwf	___xxtofl@val+2
  6179  0F81  00A7               	movwf	___xxtofl@val+3
  6180  0F82  3001               	movlw	1
  6181  0F83  318C  24FD  318F   	fcall	___xxtofl
  6182  0F86  0020               	movlb	0	; select bank0
  6183  0F87  0827               	movf	?___xxtofl+3,w
  6184  0F88  00B9               	movwf	___flmul@a+3
  6185  0F89  0826               	movf	?___xxtofl+2,w
  6186  0F8A  00B8               	movwf	___flmul@a+2
  6187  0F8B  0825               	movf	?___xxtofl+1,w
  6188  0F8C  00B7               	movwf	___flmul@a+1
  6189  0F8D  0824               	movf	?___xxtofl,w
  6190  0F8E  00B6               	movwf	___flmul@a
  6191  0F8F  3180  2053  318F   	fcall	___flmul
  6192  0F92  0020               	movlb	0	; select bank0
  6193  0F93  0835               	movf	?___flmul+3,w
  6194  0F94  00EE               	movwf	comunicacao@position+3
  6195  0F95  0834               	movf	?___flmul+2,w
  6196  0F96  00ED               	movwf	comunicacao@position+2
  6197  0F97  0833               	movf	?___flmul+1,w
  6198  0F98  00EC               	movwf	comunicacao@position+1
  6199  0F99  0832               	movf	?___flmul,w
  6200  0F9A  00EB               	movwf	comunicacao@position
  6201  0F9B                     l3350:
  6202                           
  6203                           ;main.c: 176:     byte[0] = ((state_motor<<4)& 0x20)|(and_ating2 & 0x02);
  6204  0F9B  0021               	movlb	1	; select bank1
  6205  0F9C  0848               	movf	_and_ating2^(0+128),w
  6206  0F9D  3902               	andlw	2
  6207  0F9E  0020               	movlb	0	; select bank0
  6208  0F9F  00E6               	movwf	??_comunicacao
  6209  0FA0  0866               	movf	??_comunicacao,w
  6210  0FA1  0022               	movlb	2	; select bank2
  6211  0FA2  00C8               	movwf	_byte^(0+256)
  6212  0FA3                     l3352:
  6213                           
  6214                           ;main.c: 177:     byte[1] = 0x80 |((((uint8_t)position)>>1)& 0x7F);
  6215  0FA3  0020               	movlb	0	; select bank0
  6216  0FA4  086E               	movf	comunicacao@position+3,w
  6217  0FA5  00A3               	movwf	___fltol@f1+3
  6218  0FA6  086D               	movf	comunicacao@position+2,w
  6219  0FA7  00A2               	movwf	___fltol@f1+2
  6220  0FA8  086C               	movf	comunicacao@position+1,w
  6221  0FA9  00A1               	movwf	___fltol@f1+1
  6222  0FAA  086B               	movf	comunicacao@position,w
  6223  0FAB  00A0               	movwf	___fltol@f1
  6224  0FAC  318B  237D  318F   	fcall	___fltol
  6225  0FAF  0020               	movlb	0	; select bank0
  6226  0FB0  3620               	lsrf	?___fltol,w
  6227  0FB1  397F               	andlw	127
  6228  0FB2  3880               	iorlw	128
  6229  0FB3  00E6               	movwf	??_comunicacao
  6230  0FB4  0866               	movf	??_comunicacao,w
  6231  0FB5  0022               	movlb	2	; select bank2
  6232  0FB6  00C9               	movwf	(_byte^(0+256)+1)
  6233  0FB7                     l3354:
  6234                           
  6235                           ;main.c: 178:     byte[2] = 0x80 |((((uint8_t)speed)>>1)& 0x7F);
  6236  0FB7  0020               	movlb	0	; select bank0
  6237  0FB8  086A               	movf	comunicacao@speed+3,w
  6238  0FB9  00A3               	movwf	___fltol@f1+3
  6239  0FBA  0869               	movf	comunicacao@speed+2,w
  6240  0FBB  00A2               	movwf	___fltol@f1+2
  6241  0FBC  0868               	movf	comunicacao@speed+1,w
  6242  0FBD  00A1               	movwf	___fltol@f1+1
  6243  0FBE  0867               	movf	comunicacao@speed,w
  6244  0FBF  00A0               	movwf	___fltol@f1
  6245  0FC0  318B  237D  318F   	fcall	___fltol
  6246  0FC3  0020               	movlb	0	; select bank0
  6247  0FC4  3620               	lsrf	?___fltol,w
  6248  0FC5  397F               	andlw	127
  6249  0FC6  3880               	iorlw	128
  6250  0FC7  00E6               	movwf	??_comunicacao
  6251  0FC8  0866               	movf	??_comunicacao,w
  6252  0FC9  0022               	movlb	2	; select bank2
  6253  0FCA  00CA               	movwf	(_byte^(0+256)+2)
  6254  0FCB                     l3356:
  6255                           
  6256                           ;main.c: 179:     byte[3] = 0x80 |((((uint8_t)I_m)>>1)& 0x7F);
  6257  0FCB  085C               	movf	(_I_m+3)^(0+256),w
  6258  0FCC  0020               	movlb	0	; select bank0
  6259  0FCD  00A3               	movwf	___fltol@f1+3
  6260  0FCE  0022               	movlb	2	; select bank2
  6261  0FCF  085B               	movf	(_I_m+2)^(0+256),w
  6262  0FD0  0020               	movlb	0	; select bank0
  6263  0FD1  00A2               	movwf	___fltol@f1+2
  6264  0FD2  0022               	movlb	2	; select bank2
  6265  0FD3  085A               	movf	(_I_m+1)^(0+256),w
  6266  0FD4  0020               	movlb	0	; select bank0
  6267  0FD5  00A1               	movwf	___fltol@f1+1
  6268  0FD6  0022               	movlb	2	; select bank2
  6269  0FD7  0859               	movf	_I_m^(0+256),w
  6270  0FD8  0020               	movlb	0	; select bank0
  6271  0FD9  00A0               	movwf	___fltol@f1
  6272  0FDA  318B  237D  318F   	fcall	___fltol
  6273  0FDD  0020               	movlb	0	; select bank0
  6274  0FDE  3620               	lsrf	?___fltol,w
  6275  0FDF  397F               	andlw	127
  6276  0FE0  3880               	iorlw	128
  6277  0FE1  00E6               	movwf	??_comunicacao
  6278  0FE2  0866               	movf	??_comunicacao,w
  6279  0FE3  0022               	movlb	2	; select bank2
  6280  0FE4  00CB               	movwf	(_byte^(0+256)+3)
  6281  0FE5                     l3358:
  6282                           
  6283                           ;main.c: 180:     byte[4] = 0x80 |((((uint8_t)temp_mt)>>1)& 0x7F);
  6284  0FE5  0858               	movf	(_temp_mt+3)^(0+256),w
  6285  0FE6  0020               	movlb	0	; select bank0
  6286  0FE7  00A3               	movwf	___fltol@f1+3
  6287  0FE8  0022               	movlb	2	; select bank2
  6288  0FE9  0857               	movf	(_temp_mt+2)^(0+256),w
  6289  0FEA  0020               	movlb	0	; select bank0
  6290  0FEB  00A2               	movwf	___fltol@f1+2
  6291  0FEC  0022               	movlb	2	; select bank2
  6292  0FED  0856               	movf	(_temp_mt+1)^(0+256),w
  6293  0FEE  0020               	movlb	0	; select bank0
  6294  0FEF  00A1               	movwf	___fltol@f1+1
  6295  0FF0  0022               	movlb	2	; select bank2
  6296  0FF1  0855               	movf	_temp_mt^(0+256),w
  6297  0FF2  0020               	movlb	0	; select bank0
  6298  0FF3  00A0               	movwf	___fltol@f1
  6299  0FF4  318B  237D  318F   	fcall	___fltol
  6300  0FF7  0020               	movlb	0	; select bank0
  6301  0FF8  3620               	lsrf	?___fltol,w
  6302  0FF9  397F               	andlw	127
  6303  0FFA  3880               	iorlw	128
  6304  0FFB  00E6               	movwf	??_comunicacao
  6305  0FFC  0866               	movf	??_comunicacao,w
  6306  0FFD  0022               	movlb	2	; select bank2
  6307  0FFE  00CC               	movwf	(_byte^(0+256)+4)
  6308  0FFF                     l610:
  6309  0FFF  0008               	return
  6310  1000                     __end_of_comunicacao:
  6311                           
  6312                           	psect	text15
  6313  0CFD                     __ptext15:	
  6314 ;; *************** function ___xxtofl *****************
  6315 ;; Defined at:
  6316 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\xxtofl.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;  sign            1    wreg     unsigned char 
  6319 ;;  val             4    4[BANK0 ] long 
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;  sign            1   12[BANK0 ] unsigned char 
  6322 ;;  arg             4   14[BANK0 ] unsigned long 
  6323 ;;  exp             1   13[BANK0 ] unsigned char 
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  4    4[BANK0 ] unsigned char 
  6326 ;; Registers used:
  6327 ;;		wreg, status,2, status,0
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6333 ;;      Params:         0       4       0       0       0       0
  6334 ;;      Locals:         0       6       0       0       0       0
  6335 ;;      Temps:          0       4       0       0       0       0
  6336 ;;      Totals:         0      14       0       0       0       0
  6337 ;;Total ram usage:       14 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:    4
  6340 ;; This function calls:
  6341 ;;		Nothing
  6342 ;; This function is called by:
  6343 ;;		_comunicacao
  6344 ;;		_controle
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           
  6349                           ;psect for function ___xxtofl
  6350  0CFD                     ___xxtofl:
  6351                           
  6352                           ;incstack = 0
  6353                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6354                           ;___xxtofl@sign stored from wreg
  6355  0CFD  0020               	movlb	0	; select bank0
  6356  0CFE  00AC               	movwf	___xxtofl@sign
  6357  0CFF                     l3274:
  6358  0CFF  082C               	movf	___xxtofl@sign,w
  6359  0D00  1903               	btfsc	3,2
  6360  0D01  2D03               	goto	u3291
  6361  0D02  2D04               	goto	u3290
  6362  0D03                     u3291:
  6363  0D03  2D18               	goto	l3280
  6364  0D04                     u3290:
  6365  0D04                     l3276:
  6366  0D04  1FA7               	btfss	___xxtofl@val+3,7
  6367  0D05  2D07               	goto	u3301
  6368  0D06  2D08               	goto	u3300
  6369  0D07                     u3301:
  6370  0D07  2D18               	goto	l3280
  6371  0D08                     u3300:
  6372  0D08                     l3278:
  6373  0D08  0924               	comf	___xxtofl@val,w
  6374  0D09  00AE               	movwf	___xxtofl@arg
  6375  0D0A  0925               	comf	___xxtofl@val+1,w
  6376  0D0B  00AF               	movwf	___xxtofl@arg+1
  6377  0D0C  0926               	comf	___xxtofl@val+2,w
  6378  0D0D  00B0               	movwf	___xxtofl@arg+2
  6379  0D0E  0927               	comf	___xxtofl@val+3,w
  6380  0D0F  00B1               	movwf	___xxtofl@arg+3
  6381  0D10  0AAE               	incf	___xxtofl@arg,f
  6382  0D11  1903               	skipnz
  6383  0D12  0AAF               	incf	___xxtofl@arg+1,f
  6384  0D13  1903               	skipnz
  6385  0D14  0AB0               	incf	___xxtofl@arg+2,f
  6386  0D15  1903               	skipnz
  6387  0D16  0AB1               	incf	___xxtofl@arg+3,f
  6388  0D17  2D20               	goto	l1300
  6389  0D18                     l3280:
  6390  0D18  0827               	movf	___xxtofl@val+3,w
  6391  0D19  00B1               	movwf	___xxtofl@arg+3
  6392  0D1A  0826               	movf	___xxtofl@val+2,w
  6393  0D1B  00B0               	movwf	___xxtofl@arg+2
  6394  0D1C  0825               	movf	___xxtofl@val+1,w
  6395  0D1D  00AF               	movwf	___xxtofl@arg+1
  6396  0D1E  0824               	movf	___xxtofl@val,w
  6397  0D1F  00AE               	movwf	___xxtofl@arg
  6398  0D20                     l1300:
  6399  0D20  0827               	movf	___xxtofl@val+3,w
  6400  0D21  0426               	iorwf	___xxtofl@val+2,w
  6401  0D22  0425               	iorwf	___xxtofl@val+1,w
  6402  0D23  0424               	iorwf	___xxtofl@val,w
  6403  0D24  1D03               	skipz
  6404  0D25  2D27               	goto	u3311
  6405  0D26  2D28               	goto	u3310
  6406  0D27                     u3311:
  6407  0D27  2D31               	goto	l3286
  6408  0D28                     u3310:
  6409  0D28                     l3282:
  6410  0D28  3000               	movlw	0
  6411  0D29  00A7               	movwf	?___xxtofl+3
  6412  0D2A  3000               	movlw	0
  6413  0D2B  00A6               	movwf	?___xxtofl+2
  6414  0D2C  3000               	movlw	0
  6415  0D2D  00A5               	movwf	?___xxtofl+1
  6416  0D2E  3000               	movlw	0
  6417  0D2F  00A4               	movwf	?___xxtofl
  6418  0D30  2DA9               	goto	l1302
  6419  0D31                     l3286:
  6420  0D31  3096               	movlw	150
  6421  0D32  00A8               	movwf	??___xxtofl
  6422  0D33  0828               	movf	??___xxtofl,w
  6423  0D34  00AD               	movwf	___xxtofl@exp
  6424  0D35  2D41               	goto	l3290
  6425  0D36                     l3288:
  6426  0D36  3001               	movlw	1
  6427  0D37  00A8               	movwf	??___xxtofl
  6428  0D38  0828               	movf	??___xxtofl,w
  6429  0D39  07AD               	addwf	___xxtofl@exp,f
  6430  0D3A  3001               	movlw	1
  6431  0D3B                     u3325:
  6432  0D3B  36B1               	lsrf	___xxtofl@arg+3,f
  6433  0D3C  0CB0               	rrf	___xxtofl@arg+2,f
  6434  0D3D  0CAF               	rrf	___xxtofl@arg+1,f
  6435  0D3E  0CAE               	rrf	___xxtofl@arg,f
  6436  0D3F  0B89               	decfsz	9,f
  6437  0D40  2D3B               	goto	u3325
  6438  0D41                     l3290:
  6439  0D41  30FE               	movlw	254
  6440  0D42  0531               	andwf	___xxtofl@arg+3,w
  6441  0D43  1D03               	btfss	3,2
  6442  0D44  2D46               	goto	u3331
  6443  0D45  2D47               	goto	u3330
  6444  0D46                     u3331:
  6445  0D46  2D36               	goto	l3288
  6446  0D47                     u3330:
  6447  0D47  2D5B               	goto	l1306
  6448  0D48                     l3292:
  6449  0D48  3001               	movlw	1
  6450  0D49  00A8               	movwf	??___xxtofl
  6451  0D4A  0828               	movf	??___xxtofl,w
  6452  0D4B  07AD               	addwf	___xxtofl@exp,f
  6453  0D4C                     l3294:
  6454  0D4C  3001               	movlw	1
  6455  0D4D  07AE               	addwf	___xxtofl@arg,f
  6456  0D4E  3000               	movlw	0
  6457  0D4F  3DAF               	addwfc	___xxtofl@arg+1,f
  6458  0D50  3000               	movlw	0
  6459  0D51  3DB0               	addwfc	___xxtofl@arg+2,f
  6460  0D52  3000               	movlw	0
  6461  0D53  3DB1               	addwfc	___xxtofl@arg+3,f
  6462  0D54                     l3296:
  6463  0D54  3001               	movlw	1
  6464  0D55                     u3345:
  6465  0D55  36B1               	lsrf	___xxtofl@arg+3,f
  6466  0D56  0CB0               	rrf	___xxtofl@arg+2,f
  6467  0D57  0CAF               	rrf	___xxtofl@arg+1,f
  6468  0D58  0CAE               	rrf	___xxtofl@arg,f
  6469  0D59  0B89               	decfsz	9,f
  6470  0D5A  2D55               	goto	u3345
  6471  0D5B                     l1306:
  6472  0D5B  30FF               	movlw	255
  6473  0D5C  0531               	andwf	___xxtofl@arg+3,w
  6474  0D5D  1D03               	btfss	3,2
  6475  0D5E  2D60               	goto	u3351
  6476  0D5F  2D61               	goto	u3350
  6477  0D60                     u3351:
  6478  0D60  2D48               	goto	l3292
  6479  0D61                     u3350:
  6480  0D61  2D6B               	goto	l3300
  6481  0D62                     l3298:
  6482  0D62  3001               	movlw	1
  6483  0D63  02AD               	subwf	___xxtofl@exp,f
  6484  0D64  3001               	movlw	1
  6485  0D65                     u3365:
  6486  0D65  35AE               	lslf	___xxtofl@arg,f
  6487  0D66  0DAF               	rlf	___xxtofl@arg+1,f
  6488  0D67  0DB0               	rlf	___xxtofl@arg+2,f
  6489  0D68  0DB1               	rlf	___xxtofl@arg+3,f
  6490  0D69  0B89               	decfsz	9,f
  6491  0D6A  2D65               	goto	u3365
  6492  0D6B                     l3300:
  6493  0D6B  1BB0               	btfsc	___xxtofl@arg+2,7
  6494  0D6C  2D6E               	goto	u3371
  6495  0D6D  2D6F               	goto	u3370
  6496  0D6E                     u3371:
  6497  0D6E  2D75               	goto	l1313
  6498  0D6F                     u3370:
  6499  0D6F                     l3302:
  6500  0D6F  3002               	movlw	2
  6501  0D70  022D               	subwf	___xxtofl@exp,w
  6502  0D71  1803               	skipnc
  6503  0D72  2D74               	goto	u3381
  6504  0D73  2D75               	goto	u3380
  6505  0D74                     u3381:
  6506  0D74  2D62               	goto	l3298
  6507  0D75                     u3380:
  6508  0D75                     l1313:
  6509  0D75  182D               	btfsc	___xxtofl@exp,0
  6510  0D76  2D78               	goto	u3391
  6511  0D77  2D79               	goto	u3390
  6512  0D78                     u3391:
  6513  0D78  2D81               	goto	l1314
  6514  0D79                     u3390:
  6515  0D79                     l3304:
  6516  0D79  30FF               	movlw	255
  6517  0D7A  05AE               	andwf	___xxtofl@arg,f
  6518  0D7B  30FF               	movlw	255
  6519  0D7C  05AF               	andwf	___xxtofl@arg+1,f
  6520  0D7D  307F               	movlw	127
  6521  0D7E  05B0               	andwf	___xxtofl@arg+2,f
  6522  0D7F  30FF               	movlw	255
  6523  0D80  05B1               	andwf	___xxtofl@arg+3,f
  6524  0D81                     l1314:
  6525  0D81  1003               	clrc
  6526  0D82  0CAD               	rrf	___xxtofl@exp,f
  6527  0D83                     l3306:
  6528  0D83  082D               	movf	___xxtofl@exp,w
  6529  0D84  00A8               	movwf	??___xxtofl
  6530  0D85  01A9               	clrf	??___xxtofl+1
  6531  0D86  01AA               	clrf	??___xxtofl+2
  6532  0D87  01AB               	clrf	??___xxtofl+3
  6533  0D88  3018               	movlw	24
  6534  0D89                     u3405:
  6535  0D89  35A8               	lslf	??___xxtofl,f
  6536  0D8A  0DA9               	rlf	??___xxtofl+1,f
  6537  0D8B  0DAA               	rlf	??___xxtofl+2,f
  6538  0D8C  0DAB               	rlf	??___xxtofl+3,f
  6539  0D8D                     u3400:
  6540  0D8D  0B89               	decfsz	9,f
  6541  0D8E  2D89               	goto	u3405
  6542  0D8F  0828               	movf	??___xxtofl,w
  6543  0D90  04AE               	iorwf	___xxtofl@arg,f
  6544  0D91  0829               	movf	??___xxtofl+1,w
  6545  0D92  04AF               	iorwf	___xxtofl@arg+1,f
  6546  0D93  082A               	movf	??___xxtofl+2,w
  6547  0D94  04B0               	iorwf	___xxtofl@arg+2,f
  6548  0D95  082B               	movf	??___xxtofl+3,w
  6549  0D96  04B1               	iorwf	___xxtofl@arg+3,f
  6550  0D97                     l3308:
  6551  0D97  082C               	movf	___xxtofl@sign,w
  6552  0D98  1903               	btfsc	3,2
  6553  0D99  2D9B               	goto	u3411
  6554  0D9A  2D9C               	goto	u3410
  6555  0D9B                     u3411:
  6556  0D9B  2DA1               	goto	l3314
  6557  0D9C                     u3410:
  6558  0D9C                     l3310:
  6559  0D9C  1FA7               	btfss	___xxtofl@val+3,7
  6560  0D9D  2D9F               	goto	u3421
  6561  0D9E  2DA0               	goto	u3420
  6562  0D9F                     u3421:
  6563  0D9F  2DA1               	goto	l3314
  6564  0DA0                     u3420:
  6565  0DA0                     l3312:
  6566  0DA0  17B1               	bsf	___xxtofl@arg+3,7
  6567  0DA1                     l3314:
  6568  0DA1  0831               	movf	___xxtofl@arg+3,w
  6569  0DA2  00A7               	movwf	?___xxtofl+3
  6570  0DA3  0830               	movf	___xxtofl@arg+2,w
  6571  0DA4  00A6               	movwf	?___xxtofl+2
  6572  0DA5  082F               	movf	___xxtofl@arg+1,w
  6573  0DA6  00A5               	movwf	?___xxtofl+1
  6574  0DA7  082E               	movf	___xxtofl@arg,w
  6575  0DA8  00A4               	movwf	?___xxtofl
  6576  0DA9                     l1302:
  6577  0DA9  0008               	return
  6578  0DAA                     __end_of___xxtofl:
  6579                           
  6580                           	psect	text16
  6581  0B7D                     __ptext16:	
  6582 ;; *************** function ___fltol *****************
  6583 ;; Defined at:
  6584 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fltol.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  f1              4    0[BANK0 ] unsigned char 
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;  exp1            1   10[BANK0 ] unsigned char 
  6589 ;;  sign1           1    9[BANK0 ] unsigned char 
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  4    0[BANK0 ] long 
  6592 ;; Registers used:
  6593 ;;		wreg, status,2, status,0
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6599 ;;      Params:         0       4       0       0       0       0
  6600 ;;      Locals:         0       2       0       0       0       0
  6601 ;;      Temps:          0       5       0       0       0       0
  6602 ;;      Totals:         0      11       0       0       0       0
  6603 ;;Total ram usage:       11 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; Hardware stack levels required when called:    4
  6606 ;; This function calls:
  6607 ;;		Nothing
  6608 ;; This function is called by:
  6609 ;;		_comunicacao
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           
  6614                           ;psect for function ___fltol
  6615  0B7D                     ___fltol:
  6616  0B7D                     l2958:	
  6617                           ;incstack = 0
  6618                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6619                           
  6620  0B7D  1003               	clrc
  6621  0B7E  0020               	movlb	0	; select bank0
  6622  0B7F  0D22               	rlf	___fltol@f1+2,w
  6623  0B80  0D23               	rlf	___fltol@f1+3,w
  6624  0B81  00A4               	movwf	??___fltol
  6625  0B82  0824               	movf	??___fltol,w
  6626  0B83  00AA               	movwf	___fltol@exp1
  6627  0B84  082A               	movf	___fltol@exp1,w
  6628  0B85  1D03               	btfss	3,2
  6629  0B86  2B88               	goto	u2641
  6630  0B87  2B89               	goto	u2640
  6631  0B88                     u2641:
  6632  0B88  2B92               	goto	l2964
  6633  0B89                     u2640:
  6634  0B89                     l2960:
  6635  0B89  3000               	movlw	0
  6636  0B8A  00A3               	movwf	?___fltol+3
  6637  0B8B  3000               	movlw	0
  6638  0B8C  00A2               	movwf	?___fltol+2
  6639  0B8D  3000               	movlw	0
  6640  0B8E  00A1               	movwf	?___fltol+1
  6641  0B8F  3000               	movlw	0
  6642  0B90  00A0               	movwf	?___fltol
  6643  0B91  2BF1               	goto	l1053
  6644  0B92                     l2964:
  6645  0B92  0820               	movf	___fltol@f1,w
  6646  0B93  00A4               	movwf	??___fltol
  6647  0B94  0821               	movf	___fltol@f1+1,w
  6648  0B95  00A5               	movwf	??___fltol+1
  6649  0B96  0822               	movf	___fltol@f1+2,w
  6650  0B97  00A6               	movwf	??___fltol+2
  6651  0B98  0823               	movf	___fltol@f1+3,w
  6652  0B99  00A7               	movwf	??___fltol+3
  6653  0B9A  301F               	movlw	31
  6654  0B9B                     u2655:
  6655  0B9B  36A7               	lsrf	??___fltol+3,f
  6656  0B9C  0CA6               	rrf	??___fltol+2,f
  6657  0B9D  0CA5               	rrf	??___fltol+1,f
  6658  0B9E  0CA4               	rrf	??___fltol,f
  6659  0B9F                     u2650:
  6660  0B9F  0B89               	decfsz	9,f
  6661  0BA0  2B9B               	goto	u2655
  6662  0BA1  0824               	movf	??___fltol,w
  6663  0BA2  00A8               	movwf	??___fltol+4
  6664  0BA3  0828               	movf	??___fltol+4,w
  6665  0BA4  00A9               	movwf	___fltol@sign1
  6666  0BA5                     l2966:
  6667  0BA5  17A2               	bsf	___fltol@f1+2,7
  6668  0BA6                     l2968:
  6669  0BA6  30FF               	movlw	255
  6670  0BA7  05A0               	andwf	___fltol@f1,f
  6671  0BA8  30FF               	movlw	255
  6672  0BA9  05A1               	andwf	___fltol@f1+1,f
  6673  0BAA  30FF               	movlw	255
  6674  0BAB  05A2               	andwf	___fltol@f1+2,f
  6675  0BAC  3000               	movlw	0
  6676  0BAD  05A3               	andwf	___fltol@f1+3,f
  6677  0BAE                     l2970:
  6678  0BAE  3096               	movlw	150
  6679  0BAF  02AA               	subwf	___fltol@exp1,f
  6680  0BB0                     l2972:
  6681  0BB0  1FAA               	btfss	___fltol@exp1,7
  6682  0BB1  2BB3               	goto	u2661
  6683  0BB2  2BB4               	goto	u2660
  6684  0BB3                     u2661:
  6685  0BB3  2BCC               	goto	l2982
  6686  0BB4                     u2660:
  6687  0BB4                     l2974:
  6688  0BB4  082A               	movf	___fltol@exp1,w
  6689  0BB5  3A80               	xorlw	128
  6690  0BB6  3E97               	addlw	151
  6691  0BB7  1803               	skipnc
  6692  0BB8  2BBA               	goto	u2671
  6693  0BB9  2BBB               	goto	u2670
  6694  0BBA                     u2671:
  6695  0BBA  2BBC               	goto	l2980
  6696  0BBB                     u2670:
  6697  0BBB  2B89               	goto	l2960
  6698  0BBC                     l2980:
  6699  0BBC  3001               	movlw	1
  6700  0BBD                     u2685:
  6701  0BBD  36A3               	lsrf	___fltol@f1+3,f
  6702  0BBE  0CA2               	rrf	___fltol@f1+2,f
  6703  0BBF  0CA1               	rrf	___fltol@f1+1,f
  6704  0BC0  0CA0               	rrf	___fltol@f1,f
  6705  0BC1  0B89               	decfsz	9,f
  6706  0BC2  2BBD               	goto	u2685
  6707  0BC3  3001               	movlw	1
  6708  0BC4  00A4               	movwf	??___fltol
  6709  0BC5  0824               	movf	??___fltol,w
  6710  0BC6  07AA               	addwf	___fltol@exp1,f
  6711  0BC7  1D03               	btfss	3,2
  6712  0BC8  2BCA               	goto	u2691
  6713  0BC9  2BCB               	goto	u2690
  6714  0BCA                     u2691:
  6715  0BCA  2BBC               	goto	l2980
  6716  0BCB                     u2690:
  6717  0BCB  2BE1               	goto	l2990
  6718  0BCC                     l2982:
  6719  0BCC  3020               	movlw	32
  6720  0BCD  022A               	subwf	___fltol@exp1,w
  6721  0BCE  1C03               	skipc
  6722  0BCF  2BD1               	goto	u2701
  6723  0BD0  2BD2               	goto	u2700
  6724  0BD1                     u2701:
  6725  0BD1  2BDC               	goto	l1060
  6726  0BD2                     u2700:
  6727  0BD2  2B89               	goto	l2960
  6728  0BD3                     l2988:
  6729  0BD3  3001               	movlw	1
  6730  0BD4                     u2715:
  6731  0BD4  35A0               	lslf	___fltol@f1,f
  6732  0BD5  0DA1               	rlf	___fltol@f1+1,f
  6733  0BD6  0DA2               	rlf	___fltol@f1+2,f
  6734  0BD7  0DA3               	rlf	___fltol@f1+3,f
  6735  0BD8  0B89               	decfsz	9,f
  6736  0BD9  2BD4               	goto	u2715
  6737  0BDA  3001               	movlw	1
  6738  0BDB  02AA               	subwf	___fltol@exp1,f
  6739  0BDC                     l1060:
  6740  0BDC  082A               	movf	___fltol@exp1,w
  6741  0BDD  1D03               	btfss	3,2
  6742  0BDE  2BE0               	goto	u2721
  6743  0BDF  2BE1               	goto	u2720
  6744  0BE0                     u2721:
  6745  0BE0  2BD3               	goto	l2988
  6746  0BE1                     u2720:
  6747  0BE1                     l2990:
  6748  0BE1  0829               	movf	___fltol@sign1,w
  6749  0BE2  1903               	btfsc	3,2
  6750  0BE3  2BE5               	goto	u2731
  6751  0BE4  2BE6               	goto	u2730
  6752  0BE5                     u2731:
  6753  0BE5  2BF1               	goto	l1063
  6754  0BE6                     u2730:
  6755  0BE6                     l2992:
  6756  0BE6  09A0               	comf	___fltol@f1,f
  6757  0BE7  09A1               	comf	___fltol@f1+1,f
  6758  0BE8  09A2               	comf	___fltol@f1+2,f
  6759  0BE9  09A3               	comf	___fltol@f1+3,f
  6760  0BEA  0AA0               	incf	___fltol@f1,f
  6761  0BEB  1903               	skipnz
  6762  0BEC  0AA1               	incf	___fltol@f1+1,f
  6763  0BED  1903               	skipnz
  6764  0BEE  0AA2               	incf	___fltol@f1+2,f
  6765  0BEF  1903               	skipnz
  6766  0BF0  0AA3               	incf	___fltol@f1+3,f
  6767  0BF1                     l1063:
  6768  0BF1                     l1053:
  6769  0BF1  0008               	return
  6770  0BF2                     __end_of___fltol:
  6771                           
  6772                           	psect	text17
  6773  0053                     __ptext17:	
  6774 ;; *************** function ___flmul *****************
  6775 ;; Defined at:
  6776 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcmul.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;  b               4   18[BANK0 ] long 
  6779 ;;  a               4   22[BANK0 ] long 
  6780 ;; Auto vars:     Size  Location     Type
  6781 ;;  prod            4   38[BANK0 ] struct .
  6782 ;;  grs             4   32[BANK0 ] unsigned long 
  6783 ;;  temp            2   42[BANK0 ] struct .
  6784 ;;  bexp            1   37[BANK0 ] unsigned char 
  6785 ;;  aexp            1   36[BANK0 ] unsigned char 
  6786 ;;  sign            1   31[BANK0 ] unsigned char 
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  4   18[BANK0 ] unsigned char 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2, status,0, pclath, cstack
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6796 ;;      Params:         0       8       0       0       0       0
  6797 ;;      Locals:         0      13       0       0       0       0
  6798 ;;      Temps:          0       5       0       0       0       0
  6799 ;;      Totals:         0      26       0       0       0       0
  6800 ;;Total ram usage:       26 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; Hardware stack levels required when called:    5
  6803 ;; This function calls:
  6804 ;;		__Umul8_16
  6805 ;; This function is called by:
  6806 ;;		_comunicacao
  6807 ;;		_controle
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           
  6812                           ;psect for function ___flmul
  6813  0053                     ___flmul:
  6814  0053                     l3134:	
  6815                           ;incstack = 0
  6816                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  6817                           
  6818  0053  0020               	movlb	0	; select bank0
  6819  0054  0835               	movf	___flmul@b+3,w
  6820  0055  3980               	andlw	128
  6821  0056  00BA               	movwf	??___flmul
  6822  0057  083A               	movf	??___flmul,w
  6823  0058  00BF               	movwf	___flmul@sign
  6824  0059                     l3136:
  6825  0059  3535               	lslf	___flmul@b+3,w
  6826  005A  00BA               	movwf	??___flmul
  6827  005B  083A               	movf	??___flmul,w
  6828  005C  00C5               	movwf	___flmul@bexp
  6829  005D                     l3138:
  6830  005D  1FB4               	btfss	___flmul@b+2,7
  6831  005E  2860               	goto	u3031
  6832  005F  2861               	goto	u3030
  6833  0060                     u3031:
  6834  0060  2862               	goto	l3142
  6835  0061                     u3030:
  6836  0061                     l3140:
  6837  0061  1445               	bsf	___flmul@bexp,0
  6838  0062                     l3142:
  6839  0062  0845               	movf	___flmul@bexp,w
  6840  0063  1903               	btfsc	3,2
  6841  0064  2866               	goto	u3041
  6842  0065  2867               	goto	u3040
  6843  0066                     u3041:
  6844  0066  2876               	goto	l3150
  6845  0067                     u3040:
  6846  0067                     l3144:
  6847  0067  0A45               	incf	___flmul@bexp,w
  6848  0068  1D03               	btfss	3,2
  6849  0069  286B               	goto	u3051
  6850  006A  286C               	goto	u3050
  6851  006B                     u3051:
  6852  006B  2874               	goto	l3148
  6853  006C                     u3050:
  6854  006C                     l3146:
  6855  006C  3000               	movlw	0
  6856  006D  00B5               	movwf	___flmul@b+3
  6857  006E  3000               	movlw	0
  6858  006F  00B4               	movwf	___flmul@b+2
  6859  0070  3000               	movlw	0
  6860  0071  00B3               	movwf	___flmul@b+1
  6861  0072  3000               	movlw	0
  6862  0073  00B2               	movwf	___flmul@b
  6863  0074                     l3148:
  6864  0074  17B4               	bsf	___flmul@b+2,7
  6865  0075  287E               	goto	l3152
  6866  0076                     l3150:
  6867  0076  3000               	movlw	0
  6868  0077  00B5               	movwf	___flmul@b+3
  6869  0078  3000               	movlw	0
  6870  0079  00B4               	movwf	___flmul@b+2
  6871  007A  3000               	movlw	0
  6872  007B  00B3               	movwf	___flmul@b+1
  6873  007C  3000               	movlw	0
  6874  007D  00B2               	movwf	___flmul@b
  6875  007E                     l3152:
  6876  007E  0839               	movf	___flmul@a+3,w
  6877  007F  3980               	andlw	128
  6878  0080  00BA               	movwf	??___flmul
  6879  0081  083A               	movf	??___flmul,w
  6880  0082  06BF               	xorwf	___flmul@sign,f
  6881  0083                     l3154:
  6882  0083  3539               	lslf	___flmul@a+3,w
  6883  0084  00BA               	movwf	??___flmul
  6884  0085  083A               	movf	??___flmul,w
  6885  0086  00C4               	movwf	___flmul@aexp
  6886  0087                     l3156:
  6887  0087  1FB8               	btfss	___flmul@a+2,7
  6888  0088  288A               	goto	u3061
  6889  0089  288B               	goto	u3060
  6890  008A                     u3061:
  6891  008A  288C               	goto	l3160
  6892  008B                     u3060:
  6893  008B                     l3158:
  6894  008B  1444               	bsf	___flmul@aexp,0
  6895  008C                     l3160:
  6896  008C  0844               	movf	___flmul@aexp,w
  6897  008D  1903               	btfsc	3,2
  6898  008E  2890               	goto	u3071
  6899  008F  2891               	goto	u3070
  6900  0090                     u3071:
  6901  0090  28A0               	goto	l3168
  6902  0091                     u3070:
  6903  0091                     l3162:
  6904  0091  0A44               	incf	___flmul@aexp,w
  6905  0092  1D03               	btfss	3,2
  6906  0093  2895               	goto	u3081
  6907  0094  2896               	goto	u3080
  6908  0095                     u3081:
  6909  0095  289E               	goto	l3166
  6910  0096                     u3080:
  6911  0096                     l3164:
  6912  0096  3000               	movlw	0
  6913  0097  00B9               	movwf	___flmul@a+3
  6914  0098  3000               	movlw	0
  6915  0099  00B8               	movwf	___flmul@a+2
  6916  009A  3000               	movlw	0
  6917  009B  00B7               	movwf	___flmul@a+1
  6918  009C  3000               	movlw	0
  6919  009D  00B6               	movwf	___flmul@a
  6920  009E                     l3166:
  6921  009E  17B8               	bsf	___flmul@a+2,7
  6922  009F  28A8               	goto	l3170
  6923  00A0                     l3168:
  6924  00A0  3000               	movlw	0
  6925  00A1  00B9               	movwf	___flmul@a+3
  6926  00A2  3000               	movlw	0
  6927  00A3  00B8               	movwf	___flmul@a+2
  6928  00A4  3000               	movlw	0
  6929  00A5  00B7               	movwf	___flmul@a+1
  6930  00A6  3000               	movlw	0
  6931  00A7  00B6               	movwf	___flmul@a
  6932  00A8                     l3170:
  6933  00A8  0844               	movf	___flmul@aexp,w
  6934  00A9  1903               	btfsc	3,2
  6935  00AA  28AC               	goto	u3091
  6936  00AB  28AD               	goto	u3090
  6937  00AC                     u3091:
  6938  00AC  28B2               	goto	l3174
  6939  00AD                     u3090:
  6940  00AD                     l3172:
  6941  00AD  0845               	movf	___flmul@bexp,w
  6942  00AE  1D03               	btfss	3,2
  6943  00AF  28B1               	goto	u3101
  6944  00B0  28B2               	goto	u3100
  6945  00B1                     u3101:
  6946  00B1  28BB               	goto	l3178
  6947  00B2                     u3100:
  6948  00B2                     l3174:
  6949  00B2  3000               	movlw	0
  6950  00B3  00B5               	movwf	?___flmul+3
  6951  00B4  3000               	movlw	0
  6952  00B5  00B4               	movwf	?___flmul+2
  6953  00B6  3000               	movlw	0
  6954  00B7  00B3               	movwf	?___flmul+1
  6955  00B8  3000               	movlw	0
  6956  00B9  00B2               	movwf	?___flmul
  6957  00BA  2AA9               	goto	l1256
  6958  00BB                     l3178:
  6959  00BB  0832               	movf	___flmul@b,w
  6960  00BC  00BA               	movwf	??___flmul
  6961  00BD  083A               	movf	??___flmul,w
  6962  00BE  00A0               	movwf	__Umul8_16@multiplicand
  6963  00BF  0838               	movf	___flmul@a+2,w
  6964  00C0  318A  227A  3180   	fcall	__Umul8_16
  6965  00C3  0020               	movlb	0	; select bank0
  6966  00C4  0821               	movf	?__Umul8_16+1,w
  6967  00C5  00CB               	movwf	___flmul@temp+1
  6968  00C6  0820               	movf	?__Umul8_16,w
  6969  00C7  00CA               	movwf	___flmul@temp
  6970  00C8                     l3180:
  6971  00C8  084A               	movf	___flmul@temp,w
  6972  00C9  00BA               	movwf	??___flmul
  6973  00CA  01BB               	clrf	??___flmul+1
  6974  00CB  01BC               	clrf	??___flmul+2
  6975  00CC  01BD               	clrf	??___flmul+3
  6976  00CD  083D               	movf	??___flmul+3,w
  6977  00CE  00C3               	movwf	___flmul@grs+3
  6978  00CF  083C               	movf	??___flmul+2,w
  6979  00D0  00C2               	movwf	___flmul@grs+2
  6980  00D1  083B               	movf	??___flmul+1,w
  6981  00D2  00C1               	movwf	___flmul@grs+1
  6982  00D3  083A               	movf	??___flmul,w
  6983  00D4  00C0               	movwf	___flmul@grs
  6984  00D5                     l3182:
  6985  00D5  084B               	movf	___flmul@temp+1,w
  6986  00D6  00BA               	movwf	??___flmul
  6987  00D7  01BB               	clrf	??___flmul+1
  6988  00D8  01BC               	clrf	??___flmul+2
  6989  00D9  01BD               	clrf	??___flmul+3
  6990  00DA  083D               	movf	??___flmul+3,w
  6991  00DB  00C9               	movwf	___flmul@prod+3
  6992  00DC  083C               	movf	??___flmul+2,w
  6993  00DD  00C8               	movwf	___flmul@prod+2
  6994  00DE  083B               	movf	??___flmul+1,w
  6995  00DF  00C7               	movwf	___flmul@prod+1
  6996  00E0  083A               	movf	??___flmul,w
  6997  00E1  00C6               	movwf	___flmul@prod
  6998  00E2  0833               	movf	___flmul@b+1,w
  6999  00E3  00BA               	movwf	??___flmul
  7000  00E4  083A               	movf	??___flmul,w
  7001  00E5  00A0               	movwf	__Umul8_16@multiplicand
  7002  00E6  0837               	movf	___flmul@a+1,w
  7003  00E7  318A  227A  3180   	fcall	__Umul8_16
  7004  00EA  0020               	movlb	0	; select bank0
  7005  00EB  0821               	movf	?__Umul8_16+1,w
  7006  00EC  00CB               	movwf	___flmul@temp+1
  7007  00ED  0820               	movf	?__Umul8_16,w
  7008  00EE  00CA               	movwf	___flmul@temp
  7009  00EF                     l3184:
  7010  00EF  084A               	movf	___flmul@temp,w
  7011  00F0  00BA               	movwf	??___flmul
  7012  00F1  01BB               	clrf	??___flmul+1
  7013  00F2  01BC               	clrf	??___flmul+2
  7014  00F3  01BD               	clrf	??___flmul+3
  7015  00F4  083A               	movf	??___flmul,w
  7016  00F5  07C0               	addwf	___flmul@grs,f
  7017  00F6  083B               	movf	??___flmul+1,w
  7018  00F7  3DC1               	addwfc	___flmul@grs+1,f
  7019  00F8  083C               	movf	??___flmul+2,w
  7020  00F9  3DC2               	addwfc	___flmul@grs+2,f
  7021  00FA  083D               	movf	??___flmul+3,w
  7022  00FB  3DC3               	addwfc	___flmul@grs+3,f
  7023  00FC                     l3186:
  7024  00FC  084B               	movf	___flmul@temp+1,w
  7025  00FD  00BA               	movwf	??___flmul
  7026  00FE  01BB               	clrf	??___flmul+1
  7027  00FF  01BC               	clrf	??___flmul+2
  7028  0100  01BD               	clrf	??___flmul+3
  7029  0101  083A               	movf	??___flmul,w
  7030  0102  07C6               	addwf	___flmul@prod,f
  7031  0103  083B               	movf	??___flmul+1,w
  7032  0104  3DC7               	addwfc	___flmul@prod+1,f
  7033  0105  083C               	movf	??___flmul+2,w
  7034  0106  3DC8               	addwfc	___flmul@prod+2,f
  7035  0107  083D               	movf	??___flmul+3,w
  7036  0108  3DC9               	addwfc	___flmul@prod+3,f
  7037  0109  0834               	movf	___flmul@b+2,w
  7038  010A  00BA               	movwf	??___flmul
  7039  010B  083A               	movf	??___flmul,w
  7040  010C  00A0               	movwf	__Umul8_16@multiplicand
  7041  010D  0836               	movf	___flmul@a,w
  7042  010E  318A  227A  3180   	fcall	__Umul8_16
  7043  0111  0020               	movlb	0	; select bank0
  7044  0112  0821               	movf	?__Umul8_16+1,w
  7045  0113  00CB               	movwf	___flmul@temp+1
  7046  0114  0820               	movf	?__Umul8_16,w
  7047  0115  00CA               	movwf	___flmul@temp
  7048  0116                     l3188:
  7049  0116  084A               	movf	___flmul@temp,w
  7050  0117  00BA               	movwf	??___flmul
  7051  0118  01BB               	clrf	??___flmul+1
  7052  0119  01BC               	clrf	??___flmul+2
  7053  011A  01BD               	clrf	??___flmul+3
  7054  011B  083A               	movf	??___flmul,w
  7055  011C  07C0               	addwf	___flmul@grs,f
  7056  011D  083B               	movf	??___flmul+1,w
  7057  011E  3DC1               	addwfc	___flmul@grs+1,f
  7058  011F  083C               	movf	??___flmul+2,w
  7059  0120  3DC2               	addwfc	___flmul@grs+2,f
  7060  0121  083D               	movf	??___flmul+3,w
  7061  0122  3DC3               	addwfc	___flmul@grs+3,f
  7062  0123                     l3190:
  7063  0123  084B               	movf	___flmul@temp+1,w
  7064  0124  00BA               	movwf	??___flmul
  7065  0125  01BB               	clrf	??___flmul+1
  7066  0126  01BC               	clrf	??___flmul+2
  7067  0127  01BD               	clrf	??___flmul+3
  7068  0128  083A               	movf	??___flmul,w
  7069  0129  07C6               	addwf	___flmul@prod,f
  7070  012A  083B               	movf	??___flmul+1,w
  7071  012B  3DC7               	addwfc	___flmul@prod+1,f
  7072  012C  083C               	movf	??___flmul+2,w
  7073  012D  3DC8               	addwfc	___flmul@prod+2,f
  7074  012E  083D               	movf	??___flmul+3,w
  7075  012F  3DC9               	addwfc	___flmul@prod+3,f
  7076  0130                     l3192:
  7077  0130  3008               	movlw	8
  7078  0131                     u3115:
  7079  0131  35C0               	lslf	___flmul@grs,f
  7080  0132  0DC1               	rlf	___flmul@grs+1,f
  7081  0133  0DC2               	rlf	___flmul@grs+2,f
  7082  0134  0DC3               	rlf	___flmul@grs+3,f
  7083  0135  0B89               	decfsz	9,f
  7084  0136  2931               	goto	u3115
  7085  0137                     l3194:
  7086  0137  0833               	movf	___flmul@b+1,w
  7087  0138  00BA               	movwf	??___flmul
  7088  0139  083A               	movf	??___flmul,w
  7089  013A  00A0               	movwf	__Umul8_16@multiplicand
  7090  013B  0836               	movf	___flmul@a,w
  7091  013C  318A  227A  3180   	fcall	__Umul8_16
  7092  013F  0020               	movlb	0	; select bank0
  7093  0140  0821               	movf	?__Umul8_16+1,w
  7094  0141  00CB               	movwf	___flmul@temp+1
  7095  0142  0820               	movf	?__Umul8_16,w
  7096  0143  00CA               	movwf	___flmul@temp
  7097  0144                     l3196:
  7098  0144  084A               	movf	___flmul@temp,w
  7099  0145  07C0               	addwf	___flmul@grs,f
  7100  0146  084B               	movf	___flmul@temp+1,w
  7101  0147  3DC1               	addwfc	___flmul@grs+1,f
  7102  0148  3000               	movlw	0
  7103  0149  3DC2               	addwfc	___flmul@grs+2,f
  7104  014A  3DC3               	addwfc	___flmul@grs+3,f
  7105  014B                     l3198:
  7106  014B  0832               	movf	___flmul@b,w
  7107  014C  00BA               	movwf	??___flmul
  7108  014D  083A               	movf	??___flmul,w
  7109  014E  00A0               	movwf	__Umul8_16@multiplicand
  7110  014F  0837               	movf	___flmul@a+1,w
  7111  0150  318A  227A  3180   	fcall	__Umul8_16
  7112  0153  0020               	movlb	0	; select bank0
  7113  0154  0821               	movf	?__Umul8_16+1,w
  7114  0155  00CB               	movwf	___flmul@temp+1
  7115  0156  0820               	movf	?__Umul8_16,w
  7116  0157  00CA               	movwf	___flmul@temp
  7117  0158                     l3200:
  7118  0158  084A               	movf	___flmul@temp,w
  7119  0159  07C0               	addwf	___flmul@grs,f
  7120  015A  084B               	movf	___flmul@temp+1,w
  7121  015B  3DC1               	addwfc	___flmul@grs+1,f
  7122  015C  3000               	movlw	0
  7123  015D  3DC2               	addwfc	___flmul@grs+2,f
  7124  015E  3DC3               	addwfc	___flmul@grs+3,f
  7125  015F                     l3202:
  7126  015F  3008               	movlw	8
  7127  0160                     u3125:
  7128  0160  35C0               	lslf	___flmul@grs,f
  7129  0161  0DC1               	rlf	___flmul@grs+1,f
  7130  0162  0DC2               	rlf	___flmul@grs+2,f
  7131  0163  0DC3               	rlf	___flmul@grs+3,f
  7132  0164  0B89               	decfsz	9,f
  7133  0165  2960               	goto	u3125
  7134  0166  0832               	movf	___flmul@b,w
  7135  0167  00BA               	movwf	??___flmul
  7136  0168  083A               	movf	??___flmul,w
  7137  0169  00A0               	movwf	__Umul8_16@multiplicand
  7138  016A  0836               	movf	___flmul@a,w
  7139  016B  318A  227A  3180   	fcall	__Umul8_16
  7140  016E  0020               	movlb	0	; select bank0
  7141  016F  0821               	movf	?__Umul8_16+1,w
  7142  0170  00CB               	movwf	___flmul@temp+1
  7143  0171  0820               	movf	?__Umul8_16,w
  7144  0172  00CA               	movwf	___flmul@temp
  7145  0173                     l3204:
  7146  0173  084A               	movf	___flmul@temp,w
  7147  0174  07C0               	addwf	___flmul@grs,f
  7148  0175  084B               	movf	___flmul@temp+1,w
  7149  0176  3DC1               	addwfc	___flmul@grs+1,f
  7150  0177  3000               	movlw	0
  7151  0178  3DC2               	addwfc	___flmul@grs+2,f
  7152  0179  3DC3               	addwfc	___flmul@grs+3,f
  7153  017A                     l3206:
  7154  017A  0833               	movf	___flmul@b+1,w
  7155  017B  00BA               	movwf	??___flmul
  7156  017C  083A               	movf	??___flmul,w
  7157  017D  00A0               	movwf	__Umul8_16@multiplicand
  7158  017E  0838               	movf	___flmul@a+2,w
  7159  017F  318A  227A  3180   	fcall	__Umul8_16
  7160  0182  0020               	movlb	0	; select bank0
  7161  0183  0821               	movf	?__Umul8_16+1,w
  7162  0184  00CB               	movwf	___flmul@temp+1
  7163  0185  0820               	movf	?__Umul8_16,w
  7164  0186  00CA               	movwf	___flmul@temp
  7165  0187  084A               	movf	___flmul@temp,w
  7166  0188  07C6               	addwf	___flmul@prod,f
  7167  0189  084B               	movf	___flmul@temp+1,w
  7168  018A  3DC7               	addwfc	___flmul@prod+1,f
  7169  018B  3000               	movlw	0
  7170  018C  3DC8               	addwfc	___flmul@prod+2,f
  7171  018D  3DC9               	addwfc	___flmul@prod+3,f
  7172  018E                     l3208:
  7173  018E  0834               	movf	___flmul@b+2,w
  7174  018F  00BA               	movwf	??___flmul
  7175  0190  083A               	movf	??___flmul,w
  7176  0191  00A0               	movwf	__Umul8_16@multiplicand
  7177  0192  0837               	movf	___flmul@a+1,w
  7178  0193  318A  227A  3180   	fcall	__Umul8_16
  7179  0196  0020               	movlb	0	; select bank0
  7180  0197  0821               	movf	?__Umul8_16+1,w
  7181  0198  00CB               	movwf	___flmul@temp+1
  7182  0199  0820               	movf	?__Umul8_16,w
  7183  019A  00CA               	movwf	___flmul@temp
  7184  019B                     l3210:
  7185  019B  084A               	movf	___flmul@temp,w
  7186  019C  07C6               	addwf	___flmul@prod,f
  7187  019D  084B               	movf	___flmul@temp+1,w
  7188  019E  3DC7               	addwfc	___flmul@prod+1,f
  7189  019F  3000               	movlw	0
  7190  01A0  3DC8               	addwfc	___flmul@prod+2,f
  7191  01A1  3DC9               	addwfc	___flmul@prod+3,f
  7192  01A2  0834               	movf	___flmul@b+2,w
  7193  01A3  00BA               	movwf	??___flmul
  7194  01A4  083A               	movf	??___flmul,w
  7195  01A5  00A0               	movwf	__Umul8_16@multiplicand
  7196  01A6  0838               	movf	___flmul@a+2,w
  7197  01A7  318A  227A  3180   	fcall	__Umul8_16
  7198  01AA  0020               	movlb	0	; select bank0
  7199  01AB  0821               	movf	?__Umul8_16+1,w
  7200  01AC  00CB               	movwf	___flmul@temp+1
  7201  01AD  0820               	movf	?__Umul8_16,w
  7202  01AE  00CA               	movwf	___flmul@temp
  7203  01AF                     l3212:
  7204  01AF  084A               	movf	___flmul@temp,w
  7205  01B0  00BA               	movwf	??___flmul
  7206  01B1  084B               	movf	___flmul@temp+1,w
  7207  01B2  00BB               	movwf	??___flmul+1
  7208  01B3  01BC               	clrf	??___flmul+2
  7209  01B4  01BD               	clrf	??___flmul+3
  7210  01B5  3008               	movlw	8
  7211  01B6                     u3135:
  7212  01B6  35BA               	lslf	??___flmul,f
  7213  01B7  0DBB               	rlf	??___flmul+1,f
  7214  01B8  0DBC               	rlf	??___flmul+2,f
  7215  01B9  0DBD               	rlf	??___flmul+3,f
  7216  01BA                     u3130:
  7217  01BA  0B89               	decfsz	9,f
  7218  01BB  29B6               	goto	u3135
  7219  01BC  083A               	movf	??___flmul,w
  7220  01BD  07C6               	addwf	___flmul@prod,f
  7221  01BE  083B               	movf	??___flmul+1,w
  7222  01BF  3DC7               	addwfc	___flmul@prod+1,f
  7223  01C0  083C               	movf	??___flmul+2,w
  7224  01C1  3DC8               	addwfc	___flmul@prod+2,f
  7225  01C2  083D               	movf	??___flmul+3,w
  7226  01C3  3DC9               	addwfc	___flmul@prod+3,f
  7227  01C4                     l3214:
  7228  01C4  0840               	movf	___flmul@grs,w
  7229  01C5  00BA               	movwf	??___flmul
  7230  01C6  0841               	movf	___flmul@grs+1,w
  7231  01C7  00BB               	movwf	??___flmul+1
  7232  01C8  0842               	movf	___flmul@grs+2,w
  7233  01C9  00BC               	movwf	??___flmul+2
  7234  01CA  0843               	movf	___flmul@grs+3,w
  7235  01CB  00BD               	movwf	??___flmul+3
  7236  01CC  3018               	movlw	24
  7237  01CD                     u3145:
  7238  01CD  36BD               	lsrf	??___flmul+3,f
  7239  01CE  0CBC               	rrf	??___flmul+2,f
  7240  01CF  0CBB               	rrf	??___flmul+1,f
  7241  01D0  0CBA               	rrf	??___flmul,f
  7242  01D1                     u3140:
  7243  01D1  0B89               	decfsz	9,f
  7244  01D2  29CD               	goto	u3145
  7245  01D3  083A               	movf	??___flmul,w
  7246  01D4  07C6               	addwf	___flmul@prod,f
  7247  01D5  083B               	movf	??___flmul+1,w
  7248  01D6  3DC7               	addwfc	___flmul@prod+1,f
  7249  01D7  083C               	movf	??___flmul+2,w
  7250  01D8  3DC8               	addwfc	___flmul@prod+2,f
  7251  01D9  083D               	movf	??___flmul+3,w
  7252  01DA  3DC9               	addwfc	___flmul@prod+3,f
  7253  01DB                     l3216:
  7254  01DB  3008               	movlw	8
  7255  01DC                     u3155:
  7256  01DC  35C0               	lslf	___flmul@grs,f
  7257  01DD  0DC1               	rlf	___flmul@grs+1,f
  7258  01DE  0DC2               	rlf	___flmul@grs+2,f
  7259  01DF  0DC3               	rlf	___flmul@grs+3,f
  7260  01E0  0B89               	decfsz	9,f
  7261  01E1  29DC               	goto	u3155
  7262  01E2                     l3218:
  7263  01E2  0845               	movf	___flmul@bexp,w
  7264  01E3  0744               	addwf	___flmul@aexp,w
  7265  01E4  00BA               	movwf	??___flmul
  7266  01E5  01BB               	clrf	??___flmul+1
  7267  01E6  0DBB               	rlf	??___flmul+1,f
  7268  01E7  083A               	movf	??___flmul,w
  7269  01E8  3E82               	addlw	130
  7270  01E9  00CA               	movwf	___flmul@temp
  7271  01EA  30FF               	movlw	255
  7272  01EB  3D3B               	addwfc	??___flmul+1,w
  7273  01EC  00CB               	movwf	___flmul@temp+1
  7274  01ED  2A05               	goto	l3230
  7275  01EE                     l3220:
  7276  01EE  3001               	movlw	1
  7277  01EF                     u3165:
  7278  01EF  35C6               	lslf	___flmul@prod,f
  7279  01F0  0DC7               	rlf	___flmul@prod+1,f
  7280  01F1  0DC8               	rlf	___flmul@prod+2,f
  7281  01F2  0DC9               	rlf	___flmul@prod+3,f
  7282  01F3  0B89               	decfsz	9,f
  7283  01F4  29EF               	goto	u3165
  7284  01F5                     l3222:
  7285  01F5  1FC3               	btfss	___flmul@grs+3,7
  7286  01F6  29F8               	goto	u3171
  7287  01F7  29F9               	goto	u3170
  7288  01F8                     u3171:
  7289  01F8  29FA               	goto	l3226
  7290  01F9                     u3170:
  7291  01F9                     l3224:
  7292  01F9  1446               	bsf	___flmul@prod,0
  7293  01FA                     l3226:
  7294  01FA  3001               	movlw	1
  7295  01FB                     u3185:
  7296  01FB  35C0               	lslf	___flmul@grs,f
  7297  01FC  0DC1               	rlf	___flmul@grs+1,f
  7298  01FD  0DC2               	rlf	___flmul@grs+2,f
  7299  01FE  0DC3               	rlf	___flmul@grs+3,f
  7300  01FF  0B89               	decfsz	9,f
  7301  0200  29FB               	goto	u3185
  7302  0201                     l3228:
  7303  0201  30FF               	movlw	255
  7304  0202  07CA               	addwf	___flmul@temp,f
  7305  0203  30FF               	movlw	255
  7306  0204  3DCB               	addwfc	___flmul@temp+1,f
  7307  0205                     l3230:
  7308  0205  1FC8               	btfss	___flmul@prod+2,7
  7309  0206  2A08               	goto	u3191
  7310  0207  2A09               	goto	u3190
  7311  0208                     u3191:
  7312  0208  29EE               	goto	l3220
  7313  0209                     u3190:
  7314  0209                     l3232:
  7315  0209  01C4               	clrf	___flmul@aexp
  7316  020A                     l3234:
  7317  020A  1FC3               	btfss	___flmul@grs+3,7
  7318  020B  2A0D               	goto	u3201
  7319  020C  2A0E               	goto	u3200
  7320  020D                     u3201:
  7321  020D  2A2A               	goto	l3242
  7322  020E                     u3200:
  7323  020E                     l3236:
  7324  020E  30FF               	movlw	255
  7325  020F  0540               	andwf	___flmul@grs,w
  7326  0210  00BA               	movwf	??___flmul
  7327  0211  30FF               	movlw	255
  7328  0212  0541               	andwf	___flmul@grs+1,w
  7329  0213  00BB               	movwf	??___flmul+1
  7330  0214  30FF               	movlw	255
  7331  0215  0542               	andwf	___flmul@grs+2,w
  7332  0216  00BC               	movwf	??___flmul+2
  7333  0217  307F               	movlw	127
  7334  0218  0543               	andwf	___flmul@grs+3,w
  7335  0219  00BD               	movwf	??___flmul+3
  7336  021A  083D               	movf	??___flmul+3,w
  7337  021B  043C               	iorwf	??___flmul+2,w
  7338  021C  043B               	iorwf	??___flmul+1,w
  7339  021D  043A               	iorwf	??___flmul,w
  7340  021E  1903               	skipnz
  7341  021F  2A21               	goto	u3211
  7342  0220  2A22               	goto	u3210
  7343  0221                     u3211:
  7344  0221  2A25               	goto	l1262
  7345  0222                     u3210:
  7346  0222                     l3238:
  7347  0222  01C4               	clrf	___flmul@aexp
  7348  0223  0AC4               	incf	___flmul@aexp,f
  7349  0224  2A2A               	goto	l3242
  7350  0225                     l1262:
  7351  0225  1C46               	btfss	___flmul@prod,0
  7352  0226  2A28               	goto	u3221
  7353  0227  2A29               	goto	u3220
  7354  0228                     u3221:
  7355  0228  2A2A               	goto	l3242
  7356  0229                     u3220:
  7357  0229  2A22               	goto	l3238
  7358  022A                     l3242:
  7359  022A  0844               	movf	___flmul@aexp,w
  7360  022B  1903               	btfsc	3,2
  7361  022C  2A2E               	goto	u3231
  7362  022D  2A2F               	goto	u3230
  7363  022E                     u3231:
  7364  022E  2A57               	goto	l3252
  7365  022F                     u3230:
  7366  022F                     l3244:
  7367  022F  3001               	movlw	1
  7368  0230  07C6               	addwf	___flmul@prod,f
  7369  0231  3000               	movlw	0
  7370  0232  3DC7               	addwfc	___flmul@prod+1,f
  7371  0233  3000               	movlw	0
  7372  0234  3DC8               	addwfc	___flmul@prod+2,f
  7373  0235  3000               	movlw	0
  7374  0236  3DC9               	addwfc	___flmul@prod+3,f
  7375  0237                     l3246:
  7376  0237  1C49               	btfss	___flmul@prod+3,0
  7377  0238  2A3A               	goto	u3241
  7378  0239  2A3B               	goto	u3240
  7379  023A                     u3241:
  7380  023A  2A57               	goto	l3252
  7381  023B                     u3240:
  7382  023B                     l3248:
  7383  023B  0846               	movf	___flmul@prod,w
  7384  023C  00BA               	movwf	??___flmul
  7385  023D  0847               	movf	___flmul@prod+1,w
  7386  023E  00BB               	movwf	??___flmul+1
  7387  023F  0848               	movf	___flmul@prod+2,w
  7388  0240  00BC               	movwf	??___flmul+2
  7389  0241  0849               	movf	___flmul@prod+3,w
  7390  0242  00BD               	movwf	??___flmul+3
  7391  0243  3001               	movlw	1
  7392  0244  00BE               	movwf	??___flmul+4
  7393  0245                     u3255:
  7394  0245  37BD               	asrf	??___flmul+3,f
  7395  0246  0CBC               	rrf	??___flmul+2,f
  7396  0247  0CBB               	rrf	??___flmul+1,f
  7397  0248  0CBA               	rrf	??___flmul,f
  7398  0249                     u3250:
  7399  0249  0BBE               	decfsz	??___flmul+4,f
  7400  024A  2A45               	goto	u3255
  7401  024B  083D               	movf	??___flmul+3,w
  7402  024C  00C9               	movwf	___flmul@prod+3
  7403  024D  083C               	movf	??___flmul+2,w
  7404  024E  00C8               	movwf	___flmul@prod+2
  7405  024F  083B               	movf	??___flmul+1,w
  7406  0250  00C7               	movwf	___flmul@prod+1
  7407  0251  083A               	movf	??___flmul,w
  7408  0252  00C6               	movwf	___flmul@prod
  7409  0253                     l3250:
  7410  0253  3001               	movlw	1
  7411  0254  07CA               	addwf	___flmul@temp,f
  7412  0255  3000               	movlw	0
  7413  0256  3DCB               	addwfc	___flmul@temp+1,f
  7414  0257                     l3252:
  7415  0257  084B               	movf	___flmul@temp+1,w
  7416  0258  3A80               	xorlw	128
  7417  0259  00BA               	movwf	??___flmul
  7418  025A  3080               	movlw	128
  7419  025B  023A               	subwf	??___flmul,w
  7420  025C  1D03               	skipz
  7421  025D  2A60               	goto	u3265
  7422  025E  30FF               	movlw	255
  7423  025F  024A               	subwf	___flmul@temp,w
  7424  0260                     u3265:
  7425  0260  1C03               	skipc
  7426  0261  2A63               	goto	u3261
  7427  0262  2A64               	goto	u3260
  7428  0263                     u3261:
  7429  0263  2A6E               	goto	l3256
  7430  0264                     u3260:
  7431  0264                     l3254:
  7432  0264  307F               	movlw	127
  7433  0265  0020               	movlb	0	; select bank0
  7434  0266  00C9               	movwf	___flmul@prod+3
  7435  0267  3080               	movlw	128
  7436  0268  00C8               	movwf	___flmul@prod+2
  7437  0269  3000               	movlw	0
  7438  026A  00C7               	movwf	___flmul@prod+1
  7439  026B  3000               	movlw	0
  7440  026C  00C6               	movwf	___flmul@prod
  7441  026D  2A9D               	goto	l1268
  7442  026E                     l3256:
  7443  026E  0020               	movlb	0	; select bank0
  7444  026F  084B               	movf	___flmul@temp+1,w
  7445  0270  3A80               	xorlw	128
  7446  0271  00BA               	movwf	??___flmul
  7447  0272  3080               	movlw	128
  7448  0273  023A               	subwf	??___flmul,w
  7449  0274  1D03               	skipz
  7450  0275  2A78               	goto	u3275
  7451  0276  3001               	movlw	1
  7452  0277  024A               	subwf	___flmul@temp,w
  7453  0278                     u3275:
  7454  0278  1803               	skipnc
  7455  0279  2A7B               	goto	u3271
  7456  027A  2A7C               	goto	u3270
  7457  027B                     u3271:
  7458  027B  2A87               	goto	l3262
  7459  027C                     u3270:
  7460  027C                     l3258:
  7461  027C  3000               	movlw	0
  7462  027D  0020               	movlb	0	; select bank0
  7463  027E  00C9               	movwf	___flmul@prod+3
  7464  027F  3000               	movlw	0
  7465  0280  00C8               	movwf	___flmul@prod+2
  7466  0281  3000               	movlw	0
  7467  0282  00C7               	movwf	___flmul@prod+1
  7468  0283  3000               	movlw	0
  7469  0284  00C6               	movwf	___flmul@prod
  7470  0285                     l3260:
  7471  0285  01BF               	clrf	___flmul@sign
  7472  0286  2A9D               	goto	l1268
  7473  0287                     l3262:
  7474  0287  0020               	movlb	0	; select bank0
  7475  0288  084A               	movf	___flmul@temp,w
  7476  0289  00BA               	movwf	??___flmul
  7477  028A  083A               	movf	??___flmul,w
  7478  028B  00C5               	movwf	___flmul@bexp
  7479  028C  30FF               	movlw	255
  7480  028D  05C6               	andwf	___flmul@prod,f
  7481  028E  30FF               	movlw	255
  7482  028F  05C7               	andwf	___flmul@prod+1,f
  7483  0290  307F               	movlw	127
  7484  0291  05C8               	andwf	___flmul@prod+2,f
  7485  0292  3000               	movlw	0
  7486  0293  05C9               	andwf	___flmul@prod+3,f
  7487  0294                     l3264:
  7488  0294  1C45               	btfss	___flmul@bexp,0
  7489  0295  2A97               	goto	u3281
  7490  0296  2A98               	goto	u3280
  7491  0297                     u3281:
  7492  0297  2A99               	goto	l3268
  7493  0298                     u3280:
  7494  0298                     l3266:
  7495  0298  17C8               	bsf	___flmul@prod+2,7
  7496  0299                     l3268:
  7497  0299  3645               	lsrf	___flmul@bexp,w
  7498  029A  00BA               	movwf	??___flmul
  7499  029B  083A               	movf	??___flmul,w
  7500  029C  00C9               	movwf	___flmul@prod+3
  7501  029D                     l1268:
  7502  029D  083F               	movf	___flmul@sign,w
  7503  029E  00BA               	movwf	??___flmul
  7504  029F  083A               	movf	??___flmul,w
  7505  02A0  04C9               	iorwf	___flmul@prod+3,f
  7506  02A1                     l3270:
  7507  02A1  0849               	movf	___flmul@prod+3,w
  7508  02A2  00B5               	movwf	?___flmul+3
  7509  02A3  0848               	movf	___flmul@prod+2,w
  7510  02A4  00B4               	movwf	?___flmul+2
  7511  02A5  0847               	movf	___flmul@prod+1,w
  7512  02A6  00B3               	movwf	?___flmul+1
  7513  02A7  0846               	movf	___flmul@prod,w
  7514  02A8  00B2               	movwf	?___flmul
  7515  02A9                     l1256:
  7516  02A9  0008               	return
  7517  02AA                     __end_of___flmul:
  7518                           
  7519                           	psect	text18
  7520  0A7A                     __ptext18:	
  7521 ;; *************** function __Umul8_16 *****************
  7522 ;; Defined at:
  7523 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul8_16.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;  multiplier      1    wreg     unsigned char 
  7526 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;  multiplier      1    8[BANK0 ] unsigned char 
  7529 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  7530 ;;  product         2    4[BANK0 ] unsigned int 
  7531 ;; Return value:  Size  Location     Type
  7532 ;;                  2    0[BANK0 ] unsigned int 
  7533 ;; Registers used:
  7534 ;;		wreg, status,2, status,0
  7535 ;; Tracked objects:
  7536 ;;		On entry : 0/0
  7537 ;;		On exit  : 0/0
  7538 ;;		Unchanged: 0/0
  7539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7540 ;;      Params:         0       2       0       0       0       0
  7541 ;;      Locals:         0       5       0       0       0       0
  7542 ;;      Temps:          0       2       0       0       0       0
  7543 ;;      Totals:         0       9       0       0       0       0
  7544 ;;Total ram usage:        9 bytes
  7545 ;; Hardware stack levels used:    1
  7546 ;; Hardware stack levels required when called:    4
  7547 ;; This function calls:
  7548 ;;		Nothing
  7549 ;; This function is called by:
  7550 ;;		___flmul
  7551 ;; This function uses a non-reentrant model
  7552 ;;
  7553                           
  7554                           
  7555                           ;psect for function __Umul8_16
  7556  0A7A                     __Umul8_16:
  7557                           
  7558                           ;incstack = 0
  7559                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7560                           ;__Umul8_16@multiplier stored from wreg
  7561  0A7A  0020               	movlb	0	; select bank0
  7562  0A7B  00A8               	movwf	__Umul8_16@multiplier
  7563  0A7C                     l2616:
  7564  0A7C  01A4               	clrf	__Umul8_16@product
  7565  0A7D  01A5               	clrf	__Umul8_16@product+1
  7566  0A7E                     l2618:
  7567  0A7E  0820               	movf	__Umul8_16@multiplicand,w
  7568  0A7F  00A2               	movwf	??__Umul8_16
  7569  0A80  01A3               	clrf	??__Umul8_16+1
  7570  0A81  0822               	movf	??__Umul8_16,w
  7571  0A82  00A6               	movwf	__Umul8_16@word_mpld
  7572  0A83  0823               	movf	??__Umul8_16+1,w
  7573  0A84  00A7               	movwf	__Umul8_16@word_mpld+1
  7574  0A85                     l2620:
  7575  0A85  1C28               	btfss	__Umul8_16@multiplier,0
  7576  0A86  2A88               	goto	u2131
  7577  0A87  2A89               	goto	u2130
  7578  0A88                     u2131:
  7579  0A88  2A8D               	goto	l1275
  7580  0A89                     u2130:
  7581  0A89                     l2622:
  7582  0A89  0826               	movf	__Umul8_16@word_mpld,w
  7583  0A8A  07A4               	addwf	__Umul8_16@product,f
  7584  0A8B  0827               	movf	__Umul8_16@word_mpld+1,w
  7585  0A8C  3DA5               	addwfc	__Umul8_16@product+1,f
  7586  0A8D                     l1275:
  7587  0A8D  3001               	movlw	1
  7588  0A8E                     u2145:
  7589  0A8E  35A6               	lslf	__Umul8_16@word_mpld,f
  7590  0A8F  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  7591  0A90  0B89               	decfsz	9,f
  7592  0A91  2A8E               	goto	u2145
  7593  0A92  1003               	clrc
  7594  0A93  0CA8               	rrf	__Umul8_16@multiplier,f
  7595  0A94                     l2624:
  7596  0A94  0828               	movf	__Umul8_16@multiplier,w
  7597  0A95  1D03               	btfss	3,2
  7598  0A96  2A98               	goto	u2151
  7599  0A97  2A99               	goto	u2150
  7600  0A98                     u2151:
  7601  0A98  2A85               	goto	l2620
  7602  0A99                     u2150:
  7603  0A99                     l2626:
  7604  0A99  0825               	movf	__Umul8_16@product+1,w
  7605  0A9A  00A1               	movwf	?__Umul8_16+1
  7606  0A9B  0824               	movf	__Umul8_16@product,w
  7607  0A9C  00A0               	movwf	?__Umul8_16
  7608  0A9D                     l1277:
  7609  0A9D  0008               	return
  7610  0A9E                     __end_of__Umul8_16:
  7611                           
  7612                           	psect	text19
  7613  0480                     __ptext19:	
  7614 ;; *************** function ___fldiv *****************
  7615 ;; Defined at:
  7616 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcdiv.c"
  7617 ;; Parameters:    Size  Location     Type
  7618 ;;  a               4   44[BANK0 ] unsigned int 
  7619 ;;  b               4   48[BANK0 ] unsigned int 
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;  grs             4   64[BANK0 ] unsigned long 
  7622 ;;  rem             4   57[BANK0 ] unsigned long 
  7623 ;;  new_exp         2   62[BANK0 ] int 
  7624 ;;  aexp            1   69[BANK0 ] unsigned char 
  7625 ;;  bexp            1   68[BANK0 ] unsigned char 
  7626 ;;  sign            1   61[BANK0 ] unsigned char 
  7627 ;; Return value:  Size  Location     Type
  7628 ;;                  4   44[BANK0 ] unsigned char 
  7629 ;; Registers used:
  7630 ;;		wreg, status,2, status,0
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7636 ;;      Params:         0       8       0       0       0       0
  7637 ;;      Locals:         0      13       0       0       0       0
  7638 ;;      Temps:          0       5       0       0       0       0
  7639 ;;      Totals:         0      26       0       0       0       0
  7640 ;;Total ram usage:       26 bytes
  7641 ;; Hardware stack levels used:    1
  7642 ;; Hardware stack levels required when called:    4
  7643 ;; This function calls:
  7644 ;;		Nothing
  7645 ;; This function is called by:
  7646 ;;		_comunicacao
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           
  7651                           ;psect for function ___fldiv
  7652  0480                     ___fldiv:
  7653  0480                     l2994:	
  7654                           ;incstack = 0
  7655                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  7656                           
  7657  0480  0020               	movlb	0	; select bank0
  7658  0481  0853               	movf	___fldiv@b+3,w
  7659  0482  3980               	andlw	128
  7660  0483  00D4               	movwf	??___fldiv
  7661  0484  0854               	movf	??___fldiv,w
  7662  0485  00DD               	movwf	___fldiv@sign
  7663  0486                     l2996:
  7664  0486  3553               	lslf	___fldiv@b+3,w
  7665  0487  00D4               	movwf	??___fldiv
  7666  0488  0854               	movf	??___fldiv,w
  7667  0489  00E4               	movwf	___fldiv@bexp
  7668  048A                     l2998:
  7669  048A  1FD2               	btfss	___fldiv@b+2,7
  7670  048B  2C8D               	goto	u2741
  7671  048C  2C8E               	goto	u2740
  7672  048D                     u2741:
  7673  048D  2C8F               	goto	l3002
  7674  048E                     u2740:
  7675  048E                     l3000:
  7676  048E  1464               	bsf	___fldiv@bexp,0
  7677  048F                     l3002:
  7678  048F  0864               	movf	___fldiv@bexp,w
  7679  0490  1903               	btfsc	3,2
  7680  0491  2C93               	goto	u2751
  7681  0492  2C94               	goto	u2750
  7682  0493                     u2751:
  7683  0493  2CA4               	goto	l3012
  7684  0494                     u2750:
  7685  0494                     l3004:
  7686  0494  0A64               	incf	___fldiv@bexp,w
  7687  0495  1D03               	btfss	3,2
  7688  0496  2C98               	goto	u2761
  7689  0497  2C99               	goto	u2760
  7690  0498                     u2761:
  7691  0498  2CA1               	goto	l3008
  7692  0499                     u2760:
  7693  0499                     l3006:
  7694  0499  3000               	movlw	0
  7695  049A  00D3               	movwf	___fldiv@b+3
  7696  049B  3000               	movlw	0
  7697  049C  00D2               	movwf	___fldiv@b+2
  7698  049D  3000               	movlw	0
  7699  049E  00D1               	movwf	___fldiv@b+1
  7700  049F  3000               	movlw	0
  7701  04A0  00D0               	movwf	___fldiv@b
  7702  04A1                     l3008:
  7703  04A1  17D2               	bsf	___fldiv@b+2,7
  7704  04A2                     l3010:
  7705  04A2  01D3               	clrf	___fldiv@b+3
  7706  04A3  2CAC               	goto	l3014
  7707  04A4                     l3012:
  7708  04A4  3000               	movlw	0
  7709  04A5  00D3               	movwf	___fldiv@b+3
  7710  04A6  3000               	movlw	0
  7711  04A7  00D2               	movwf	___fldiv@b+2
  7712  04A8  3000               	movlw	0
  7713  04A9  00D1               	movwf	___fldiv@b+1
  7714  04AA  3000               	movlw	0
  7715  04AB  00D0               	movwf	___fldiv@b
  7716  04AC                     l3014:
  7717  04AC  084F               	movf	___fldiv@a+3,w
  7718  04AD  3980               	andlw	128
  7719  04AE  00D4               	movwf	??___fldiv
  7720  04AF  0854               	movf	??___fldiv,w
  7721  04B0  06DD               	xorwf	___fldiv@sign,f
  7722  04B1                     l3016:
  7723  04B1  354F               	lslf	___fldiv@a+3,w
  7724  04B2  00D4               	movwf	??___fldiv
  7725  04B3  0854               	movf	??___fldiv,w
  7726  04B4  00E5               	movwf	___fldiv@aexp
  7727  04B5                     l3018:
  7728  04B5  1FCE               	btfss	___fldiv@a+2,7
  7729  04B6  2CB8               	goto	u2771
  7730  04B7  2CB9               	goto	u2770
  7731  04B8                     u2771:
  7732  04B8  2CBA               	goto	l3022
  7733  04B9                     u2770:
  7734  04B9                     l3020:
  7735  04B9  1465               	bsf	___fldiv@aexp,0
  7736  04BA                     l3022:
  7737  04BA  0865               	movf	___fldiv@aexp,w
  7738  04BB  1903               	btfsc	3,2
  7739  04BC  2CBE               	goto	u2781
  7740  04BD  2CBF               	goto	u2780
  7741  04BE                     u2781:
  7742  04BE  2CCF               	goto	l3032
  7743  04BF                     u2780:
  7744  04BF                     l3024:
  7745  04BF  0A65               	incf	___fldiv@aexp,w
  7746  04C0  1D03               	btfss	3,2
  7747  04C1  2CC3               	goto	u2791
  7748  04C2  2CC4               	goto	u2790
  7749  04C3                     u2791:
  7750  04C3  2CCC               	goto	l3028
  7751  04C4                     u2790:
  7752  04C4                     l3026:
  7753  04C4  3000               	movlw	0
  7754  04C5  00CF               	movwf	___fldiv@a+3
  7755  04C6  3000               	movlw	0
  7756  04C7  00CE               	movwf	___fldiv@a+2
  7757  04C8  3000               	movlw	0
  7758  04C9  00CD               	movwf	___fldiv@a+1
  7759  04CA  3000               	movlw	0
  7760  04CB  00CC               	movwf	___fldiv@a
  7761  04CC                     l3028:
  7762  04CC  17CE               	bsf	___fldiv@a+2,7
  7763  04CD                     l3030:
  7764  04CD  01CF               	clrf	___fldiv@a+3
  7765  04CE  2CD7               	goto	l1216
  7766  04CF                     l3032:
  7767  04CF  3000               	movlw	0
  7768  04D0  00CF               	movwf	___fldiv@a+3
  7769  04D1  3000               	movlw	0
  7770  04D2  00CE               	movwf	___fldiv@a+2
  7771  04D3  3000               	movlw	0
  7772  04D4  00CD               	movwf	___fldiv@a+1
  7773  04D5  3000               	movlw	0
  7774  04D6  00CC               	movwf	___fldiv@a
  7775  04D7                     l1216:
  7776  04D7  084F               	movf	___fldiv@a+3,w
  7777  04D8  044E               	iorwf	___fldiv@a+2,w
  7778  04D9  044D               	iorwf	___fldiv@a+1,w
  7779  04DA  044C               	iorwf	___fldiv@a,w
  7780  04DB  1D03               	skipz
  7781  04DC  2CDE               	goto	u2801
  7782  04DD  2CDF               	goto	u2800
  7783  04DE                     u2801:
  7784  04DE  2CF8               	goto	l3042
  7785  04DF                     u2800:
  7786  04DF                     l3034:
  7787  04DF  3000               	movlw	0
  7788  04E0  00D3               	movwf	___fldiv@b+3
  7789  04E1  3000               	movlw	0
  7790  04E2  00D2               	movwf	___fldiv@b+2
  7791  04E3  3000               	movlw	0
  7792  04E4  00D1               	movwf	___fldiv@b+1
  7793  04E5  3000               	movlw	0
  7794  04E6  00D0               	movwf	___fldiv@b
  7795  04E7  3080               	movlw	128
  7796  04E8  04D2               	iorwf	___fldiv@b+2,f
  7797  04E9  307F               	movlw	127
  7798  04EA  04D3               	iorwf	___fldiv@b+3,f
  7799  04EB                     l3036:
  7800  04EB  085D               	movf	___fldiv@sign,w
  7801  04EC  00D4               	movwf	??___fldiv
  7802  04ED  0854               	movf	??___fldiv,w
  7803  04EE  04D3               	iorwf	___fldiv@b+3,f
  7804  04EF                     l3038:
  7805  04EF  0853               	movf	___fldiv@b+3,w
  7806  04F0  00CF               	movwf	?___fldiv+3
  7807  04F1  0852               	movf	___fldiv@b+2,w
  7808  04F2  00CE               	movwf	?___fldiv+2
  7809  04F3  0851               	movf	___fldiv@b+1,w
  7810  04F4  00CD               	movwf	?___fldiv+1
  7811  04F5  0850               	movf	___fldiv@b,w
  7812  04F6  00CC               	movwf	?___fldiv
  7813  04F7  2E33               	goto	l1218
  7814  04F8                     l3042:
  7815  04F8  0864               	movf	___fldiv@bexp,w
  7816  04F9  1D03               	btfss	3,2
  7817  04FA  2CFC               	goto	u2811
  7818  04FB  2CFD               	goto	u2810
  7819  04FC                     u2811:
  7820  04FC  2D06               	goto	l3048
  7821  04FD                     u2810:
  7822  04FD                     l3044:
  7823  04FD  3000               	movlw	0
  7824  04FE  00CF               	movwf	?___fldiv+3
  7825  04FF  3000               	movlw	0
  7826  0500  00CE               	movwf	?___fldiv+2
  7827  0501  3000               	movlw	0
  7828  0502  00CD               	movwf	?___fldiv+1
  7829  0503  3000               	movlw	0
  7830  0504  00CC               	movwf	?___fldiv
  7831  0505  2E33               	goto	l1218
  7832  0506                     l3048:
  7833  0506  0864               	movf	___fldiv@bexp,w
  7834  0507  00D4               	movwf	??___fldiv
  7835  0508  01D5               	clrf	??___fldiv+1
  7836  0509  0855               	movf	??___fldiv+1,w
  7837  050A  00D7               	movwf	??___fldiv+3
  7838  050B  0865               	movf	___fldiv@aexp,w
  7839  050C  0254               	subwf	??___fldiv,w
  7840  050D  00D6               	movwf	??___fldiv+2
  7841  050E  1C03               	skipc
  7842  050F  03D7               	decf	??___fldiv+3,f
  7843  0510  0856               	movf	??___fldiv+2,w
  7844  0511  3E7F               	addlw	127
  7845  0512  00DE               	movwf	___fldiv@new_exp
  7846  0513  3000               	movlw	0
  7847  0514  3D57               	addwfc	??___fldiv+3,w
  7848  0515  00DF               	movwf	___fldiv@new_exp+1
  7849  0516                     l3050:
  7850  0516  0853               	movf	___fldiv@b+3,w
  7851  0517  00DC               	movwf	___fldiv@rem+3
  7852  0518  0852               	movf	___fldiv@b+2,w
  7853  0519  00DB               	movwf	___fldiv@rem+2
  7854  051A  0851               	movf	___fldiv@b+1,w
  7855  051B  00DA               	movwf	___fldiv@rem+1
  7856  051C  0850               	movf	___fldiv@b,w
  7857  051D  00D9               	movwf	___fldiv@rem
  7858  051E                     l3052:
  7859  051E  3000               	movlw	0
  7860  051F  00D3               	movwf	___fldiv@b+3
  7861  0520  3000               	movlw	0
  7862  0521  00D2               	movwf	___fldiv@b+2
  7863  0522  3000               	movlw	0
  7864  0523  00D1               	movwf	___fldiv@b+1
  7865  0524  3000               	movlw	0
  7866  0525  00D0               	movwf	___fldiv@b
  7867  0526                     l3054:
  7868  0526  3000               	movlw	0
  7869  0527  00E3               	movwf	___fldiv@grs+3
  7870  0528  3000               	movlw	0
  7871  0529  00E2               	movwf	___fldiv@grs+2
  7872  052A  3000               	movlw	0
  7873  052B  00E1               	movwf	___fldiv@grs+1
  7874  052C  3000               	movlw	0
  7875  052D  00E0               	movwf	___fldiv@grs
  7876  052E                     l3056:
  7877  052E  01E5               	clrf	___fldiv@aexp
  7878  052F  2D6E               	goto	l3076
  7879  0530                     l3058:
  7880  0530  0865               	movf	___fldiv@aexp,w
  7881  0531  1903               	btfsc	3,2
  7882  0532  2D34               	goto	u2821
  7883  0533  2D35               	goto	u2820
  7884  0534                     u2821:
  7885  0534  2D4F               	goto	l3068
  7886  0535                     u2820:
  7887  0535                     l3060:
  7888  0535  3001               	movlw	1
  7889  0536                     u2835:
  7890  0536  35D9               	lslf	___fldiv@rem,f
  7891  0537  0DDA               	rlf	___fldiv@rem+1,f
  7892  0538  0DDB               	rlf	___fldiv@rem+2,f
  7893  0539  0DDC               	rlf	___fldiv@rem+3,f
  7894  053A  0B89               	decfsz	9,f
  7895  053B  2D36               	goto	u2835
  7896  053C  3001               	movlw	1
  7897  053D                     u2845:
  7898  053D  35D0               	lslf	___fldiv@b,f
  7899  053E  0DD1               	rlf	___fldiv@b+1,f
  7900  053F  0DD2               	rlf	___fldiv@b+2,f
  7901  0540  0DD3               	rlf	___fldiv@b+3,f
  7902  0541  0B89               	decfsz	9,f
  7903  0542  2D3D               	goto	u2845
  7904  0543                     l3062:
  7905  0543  1FE3               	btfss	___fldiv@grs+3,7
  7906  0544  2D46               	goto	u2851
  7907  0545  2D47               	goto	u2850
  7908  0546                     u2851:
  7909  0546  2D48               	goto	l3066
  7910  0547                     u2850:
  7911  0547                     l3064:
  7912  0547  1450               	bsf	___fldiv@b,0
  7913  0548                     l3066:
  7914  0548  3001               	movlw	1
  7915  0549                     u2865:
  7916  0549  35E0               	lslf	___fldiv@grs,f
  7917  054A  0DE1               	rlf	___fldiv@grs+1,f
  7918  054B  0DE2               	rlf	___fldiv@grs+2,f
  7919  054C  0DE3               	rlf	___fldiv@grs+3,f
  7920  054D  0B89               	decfsz	9,f
  7921  054E  2D49               	goto	u2865
  7922  054F                     l3068:
  7923  054F  084F               	movf	___fldiv@a+3,w
  7924  0550  025C               	subwf	___fldiv@rem+3,w
  7925  0551  1D03               	skipz
  7926  0552  2D5D               	goto	u2875
  7927  0553  084E               	movf	___fldiv@a+2,w
  7928  0554  025B               	subwf	___fldiv@rem+2,w
  7929  0555  1D03               	skipz
  7930  0556  2D5D               	goto	u2875
  7931  0557  084D               	movf	___fldiv@a+1,w
  7932  0558  025A               	subwf	___fldiv@rem+1,w
  7933  0559  1D03               	skipz
  7934  055A  2D5D               	goto	u2875
  7935  055B  084C               	movf	___fldiv@a,w
  7936  055C  0259               	subwf	___fldiv@rem,w
  7937  055D                     u2875:
  7938  055D  1C03               	skipc
  7939  055E  2D60               	goto	u2871
  7940  055F  2D61               	goto	u2870
  7941  0560                     u2871:
  7942  0560  2D6A               	goto	l3074
  7943  0561                     u2870:
  7944  0561                     l3070:
  7945  0561  1763               	bsf	___fldiv@grs+3,6
  7946  0562                     l3072:
  7947  0562  084C               	movf	___fldiv@a,w
  7948  0563  02D9               	subwf	___fldiv@rem,f
  7949  0564  084D               	movf	___fldiv@a+1,w
  7950  0565  3BDA               	subwfb	___fldiv@rem+1,f
  7951  0566  084E               	movf	___fldiv@a+2,w
  7952  0567  3BDB               	subwfb	___fldiv@rem+2,f
  7953  0568  084F               	movf	___fldiv@a+3,w
  7954  0569  3BDC               	subwfb	___fldiv@rem+3,f
  7955  056A                     l3074:
  7956  056A  3001               	movlw	1
  7957  056B  00D4               	movwf	??___fldiv
  7958  056C  0854               	movf	??___fldiv,w
  7959  056D  07E5               	addwf	___fldiv@aexp,f
  7960  056E                     l3076:
  7961  056E  301A               	movlw	26
  7962  056F  0265               	subwf	___fldiv@aexp,w
  7963  0570  1C03               	skipc
  7964  0571  2D73               	goto	u2881
  7965  0572  2D74               	goto	u2880
  7966  0573                     u2881:
  7967  0573  2D30               	goto	l3058
  7968  0574                     u2880:
  7969  0574                     l3078:
  7970  0574  085C               	movf	___fldiv@rem+3,w
  7971  0575  045B               	iorwf	___fldiv@rem+2,w
  7972  0576  045A               	iorwf	___fldiv@rem+1,w
  7973  0577  0459               	iorwf	___fldiv@rem,w
  7974  0578  1903               	skipnz
  7975  0579  2D7B               	goto	u2891
  7976  057A  2D7C               	goto	u2890
  7977  057B                     u2891:
  7978  057B  2D95               	goto	l3092
  7979  057C                     u2890:
  7980  057C                     l3080:
  7981  057C  1460               	bsf	___fldiv@grs,0
  7982  057D  2D95               	goto	l3092
  7983  057E                     l3082:
  7984  057E  3001               	movlw	1
  7985  057F                     u2905:
  7986  057F  35D0               	lslf	___fldiv@b,f
  7987  0580  0DD1               	rlf	___fldiv@b+1,f
  7988  0581  0DD2               	rlf	___fldiv@b+2,f
  7989  0582  0DD3               	rlf	___fldiv@b+3,f
  7990  0583  0B89               	decfsz	9,f
  7991  0584  2D7F               	goto	u2905
  7992  0585                     l3084:
  7993  0585  1FE3               	btfss	___fldiv@grs+3,7
  7994  0586  2D88               	goto	u2911
  7995  0587  2D89               	goto	u2910
  7996  0588                     u2911:
  7997  0588  2D8A               	goto	l3088
  7998  0589                     u2910:
  7999  0589                     l3086:
  8000  0589  1450               	bsf	___fldiv@b,0
  8001  058A                     l3088:
  8002  058A  3001               	movlw	1
  8003  058B                     u2925:
  8004  058B  35E0               	lslf	___fldiv@grs,f
  8005  058C  0DE1               	rlf	___fldiv@grs+1,f
  8006  058D  0DE2               	rlf	___fldiv@grs+2,f
  8007  058E  0DE3               	rlf	___fldiv@grs+3,f
  8008  058F  0B89               	decfsz	9,f
  8009  0590  2D8B               	goto	u2925
  8010  0591                     l3090:
  8011  0591  30FF               	movlw	255
  8012  0592  07DE               	addwf	___fldiv@new_exp,f
  8013  0593  30FF               	movlw	255
  8014  0594  3DDF               	addwfc	___fldiv@new_exp+1,f
  8015  0595                     l3092:
  8016  0595  1FD2               	btfss	___fldiv@b+2,7
  8017  0596  2D98               	goto	u2931
  8018  0597  2D99               	goto	u2930
  8019  0598                     u2931:
  8020  0598  2D7E               	goto	l3082
  8021  0599                     u2930:
  8022  0599                     l3094:
  8023  0599  01E5               	clrf	___fldiv@aexp
  8024  059A                     l3096:
  8025  059A  1FE3               	btfss	___fldiv@grs+3,7
  8026  059B  2D9D               	goto	u2941
  8027  059C  2D9E               	goto	u2940
  8028  059D                     u2941:
  8029  059D  2DBA               	goto	l3104
  8030  059E                     u2940:
  8031  059E                     l3098:
  8032  059E  30FF               	movlw	255
  8033  059F  0560               	andwf	___fldiv@grs,w
  8034  05A0  00D4               	movwf	??___fldiv
  8035  05A1  30FF               	movlw	255
  8036  05A2  0561               	andwf	___fldiv@grs+1,w
  8037  05A3  00D5               	movwf	??___fldiv+1
  8038  05A4  30FF               	movlw	255
  8039  05A5  0562               	andwf	___fldiv@grs+2,w
  8040  05A6  00D6               	movwf	??___fldiv+2
  8041  05A7  307F               	movlw	127
  8042  05A8  0563               	andwf	___fldiv@grs+3,w
  8043  05A9  00D7               	movwf	??___fldiv+3
  8044  05AA  0857               	movf	??___fldiv+3,w
  8045  05AB  0456               	iorwf	??___fldiv+2,w
  8046  05AC  0455               	iorwf	??___fldiv+1,w
  8047  05AD  0454               	iorwf	??___fldiv,w
  8048  05AE  1903               	skipnz
  8049  05AF  2DB1               	goto	u2951
  8050  05B0  2DB2               	goto	u2950
  8051  05B1                     u2951:
  8052  05B1  2DB5               	goto	l1232
  8053  05B2                     u2950:
  8054  05B2                     l3100:
  8055  05B2  01E5               	clrf	___fldiv@aexp
  8056  05B3  0AE5               	incf	___fldiv@aexp,f
  8057  05B4  2DBA               	goto	l3104
  8058  05B5                     l1232:
  8059  05B5  1C50               	btfss	___fldiv@b,0
  8060  05B6  2DB8               	goto	u2961
  8061  05B7  2DB9               	goto	u2960
  8062  05B8                     u2961:
  8063  05B8  2DBA               	goto	l3104
  8064  05B9                     u2960:
  8065  05B9  2DB2               	goto	l3100
  8066  05BA                     l3104:
  8067  05BA  0865               	movf	___fldiv@aexp,w
  8068  05BB  1903               	btfsc	3,2
  8069  05BC  2DBE               	goto	u2971
  8070  05BD  2DBF               	goto	u2970
  8071  05BE                     u2971:
  8072  05BE  2DE7               	goto	l3114
  8073  05BF                     u2970:
  8074  05BF                     l3106:
  8075  05BF  3001               	movlw	1
  8076  05C0  07D0               	addwf	___fldiv@b,f
  8077  05C1  3000               	movlw	0
  8078  05C2  3DD1               	addwfc	___fldiv@b+1,f
  8079  05C3  3000               	movlw	0
  8080  05C4  3DD2               	addwfc	___fldiv@b+2,f
  8081  05C5  3000               	movlw	0
  8082  05C6  3DD3               	addwfc	___fldiv@b+3,f
  8083  05C7                     l3108:
  8084  05C7  1C53               	btfss	___fldiv@b+3,0
  8085  05C8  2DCA               	goto	u2981
  8086  05C9  2DCB               	goto	u2980
  8087  05CA                     u2981:
  8088  05CA  2DE7               	goto	l3114
  8089  05CB                     u2980:
  8090  05CB                     l3110:
  8091  05CB  0850               	movf	___fldiv@b,w
  8092  05CC  00D4               	movwf	??___fldiv
  8093  05CD  0851               	movf	___fldiv@b+1,w
  8094  05CE  00D5               	movwf	??___fldiv+1
  8095  05CF  0852               	movf	___fldiv@b+2,w
  8096  05D0  00D6               	movwf	??___fldiv+2
  8097  05D1  0853               	movf	___fldiv@b+3,w
  8098  05D2  00D7               	movwf	??___fldiv+3
  8099  05D3  3001               	movlw	1
  8100  05D4  00D8               	movwf	??___fldiv+4
  8101  05D5                     u2995:
  8102  05D5  37D7               	asrf	??___fldiv+3,f
  8103  05D6  0CD6               	rrf	??___fldiv+2,f
  8104  05D7  0CD5               	rrf	??___fldiv+1,f
  8105  05D8  0CD4               	rrf	??___fldiv,f
  8106  05D9                     u2990:
  8107  05D9  0BD8               	decfsz	??___fldiv+4,f
  8108  05DA  2DD5               	goto	u2995
  8109  05DB  0857               	movf	??___fldiv+3,w
  8110  05DC  00D3               	movwf	___fldiv@b+3
  8111  05DD  0856               	movf	??___fldiv+2,w
  8112  05DE  00D2               	movwf	___fldiv@b+2
  8113  05DF  0855               	movf	??___fldiv+1,w
  8114  05E0  00D1               	movwf	___fldiv@b+1
  8115  05E1  0854               	movf	??___fldiv,w
  8116  05E2  00D0               	movwf	___fldiv@b
  8117  05E3                     l3112:
  8118  05E3  3001               	movlw	1
  8119  05E4  07DE               	addwf	___fldiv@new_exp,f
  8120  05E5  3000               	movlw	0
  8121  05E6  3DDF               	addwfc	___fldiv@new_exp+1,f
  8122  05E7                     l3114:
  8123  05E7  085F               	movf	___fldiv@new_exp+1,w
  8124  05E8  3A80               	xorlw	128
  8125  05E9  00D4               	movwf	??___fldiv
  8126  05EA  3080               	movlw	128
  8127  05EB  0254               	subwf	??___fldiv,w
  8128  05EC  1D03               	skipz
  8129  05ED  2DF0               	goto	u3005
  8130  05EE  30FF               	movlw	255
  8131  05EF  025E               	subwf	___fldiv@new_exp,w
  8132  05F0                     u3005:
  8133  05F0  1C03               	skipc
  8134  05F1  2DF3               	goto	u3001
  8135  05F2  2DF4               	goto	u3000
  8136  05F3                     u3001:
  8137  05F3  2E01               	goto	l1237
  8138  05F4                     u3000:
  8139  05F4                     l3116:
  8140  05F4  30FF               	movlw	255
  8141  05F5  0020               	movlb	0	; select bank0
  8142  05F6  00DE               	movwf	___fldiv@new_exp
  8143  05F7  3000               	movlw	0
  8144  05F8  00DF               	movwf	___fldiv@new_exp+1
  8145  05F9  3000               	movlw	0
  8146  05FA  00D3               	movwf	___fldiv@b+3
  8147  05FB  3000               	movlw	0
  8148  05FC  00D2               	movwf	___fldiv@b+2
  8149  05FD  3000               	movlw	0
  8150  05FE  00D1               	movwf	___fldiv@b+1
  8151  05FF  3000               	movlw	0
  8152  0600  00D0               	movwf	___fldiv@b
  8153  0601                     l1237:
  8154  0601  0020               	movlb	0	; select bank0
  8155  0602  085F               	movf	___fldiv@new_exp+1,w
  8156  0603  3A80               	xorlw	128
  8157  0604  00D4               	movwf	??___fldiv
  8158  0605  3080               	movlw	128
  8159  0606  0254               	subwf	??___fldiv,w
  8160  0607  1D03               	skipz
  8161  0608  2E0B               	goto	u3015
  8162  0609  3001               	movlw	1
  8163  060A  025E               	subwf	___fldiv@new_exp,w
  8164  060B                     u3015:
  8165  060B  1803               	skipnc
  8166  060C  2E0E               	goto	u3011
  8167  060D  2E0F               	goto	u3010
  8168  060E                     u3011:
  8169  060E  2E1B               	goto	l1238
  8170  060F                     u3010:
  8171  060F                     l3118:
  8172  060F  0020               	movlb	0	; select bank0
  8173  0610  01DE               	clrf	___fldiv@new_exp
  8174  0611  01DF               	clrf	___fldiv@new_exp+1
  8175  0612                     l3120:
  8176  0612  3000               	movlw	0
  8177  0613  00D3               	movwf	___fldiv@b+3
  8178  0614  3000               	movlw	0
  8179  0615  00D2               	movwf	___fldiv@b+2
  8180  0616  3000               	movlw	0
  8181  0617  00D1               	movwf	___fldiv@b+1
  8182  0618  3000               	movlw	0
  8183  0619  00D0               	movwf	___fldiv@b
  8184  061A                     l3122:
  8185  061A  01DD               	clrf	___fldiv@sign
  8186  061B                     l1238:
  8187  061B  0020               	movlb	0	; select bank0
  8188  061C  085E               	movf	___fldiv@new_exp,w
  8189  061D  00D4               	movwf	??___fldiv
  8190  061E  0854               	movf	??___fldiv,w
  8191  061F  00E4               	movwf	___fldiv@bexp
  8192  0620                     l3124:
  8193  0620  1C64               	btfss	___fldiv@bexp,0
  8194  0621  2E23               	goto	u3021
  8195  0622  2E24               	goto	u3020
  8196  0623                     u3021:
  8197  0623  2E26               	goto	l3128
  8198  0624                     u3020:
  8199  0624                     l3126:
  8200  0624  17D2               	bsf	___fldiv@b+2,7
  8201  0625  2E2A               	goto	l1240
  8202  0626                     l3128:
  8203  0626  307F               	movlw	127
  8204  0627  00D4               	movwf	??___fldiv
  8205  0628  0854               	movf	??___fldiv,w
  8206  0629  05D2               	andwf	___fldiv@b+2,f
  8207  062A                     l1240:
  8208  062A  3664               	lsrf	___fldiv@bexp,w
  8209  062B  00D4               	movwf	??___fldiv
  8210  062C  0854               	movf	??___fldiv,w
  8211  062D  00D3               	movwf	___fldiv@b+3
  8212  062E  085D               	movf	___fldiv@sign,w
  8213  062F  00D4               	movwf	??___fldiv
  8214  0630  0854               	movf	??___fldiv,w
  8215  0631  04D3               	iorwf	___fldiv@b+3,f
  8216  0632  2CEF               	goto	l3038
  8217  0633                     l1218:
  8218  0633  0008               	return
  8219  0634                     __end_of___fldiv:
  8220                           
  8221                           	psect	text20
  8222  0A34                     __ptext20:	
  8223 ;; *************** function _SYSTEM_Initialize *****************
  8224 ;; Defined at:
  8225 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;		None
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;		None
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  1    wreg      void 
  8232 ;; Registers used:
  8233 ;;		wreg, status,2, status,0, pclath, cstack
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8239 ;;      Params:         0       0       0       0       0       0
  8240 ;;      Locals:         0       0       0       0       0       0
  8241 ;;      Temps:          0       0       0       0       0       0
  8242 ;;      Totals:         0       0       0       0       0       0
  8243 ;;Total ram usage:        0 bytes
  8244 ;; Hardware stack levels used:    1
  8245 ;; Hardware stack levels required when called:    6
  8246 ;; This function calls:
  8247 ;;		_ADC_Initialize
  8248 ;;		_CCP4_Initialize
  8249 ;;		_EUSART_Initialize
  8250 ;;		_FVR_Initialize
  8251 ;;		_OSCILLATOR_Initialize
  8252 ;;		_PIN_MANAGER_Initialize
  8253 ;;		_PWM3_Initialize
  8254 ;;		_TMR1_Initialize
  8255 ;;		_TMR2_Initialize
  8256 ;;		_TMR4_Initialize
  8257 ;;		_WDT_Initialize
  8258 ;; This function is called by:
  8259 ;;		_main
  8260 ;; This function uses a non-reentrant model
  8261 ;;
  8262                           
  8263                           
  8264                           ;psect for function _SYSTEM_Initialize
  8265  0A34                     _SYSTEM_Initialize:
  8266  0A34                     l3782:	
  8267                           ;incstack = 0
  8268                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8269                           
  8270                           
  8271                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8272  0A34  318B  2339  318A   	fcall	_PIN_MANAGER_Initialize
  8273                           
  8274                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8275  0A37  3188  2048  318A   	fcall	_OSCILLATOR_Initialize
  8276                           
  8277                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  8278  0A3A  3188  2032  318A   	fcall	_WDT_Initialize
  8279                           
  8280                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  8281  0A3D  3188  202E  318A   	fcall	_FVR_Initialize
  8282                           
  8283                           ;mcc_generated_files/mcc.c: 57:     CCP4_Initialize();
  8284  0A40  3189  215E  318A   	fcall	_CCP4_Initialize
  8285                           
  8286                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  8287  0A43  3188  204F  318A   	fcall	_ADC_Initialize
  8288                           
  8289                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
  8290  0A46  3189  2170  318A   	fcall	_TMR4_Initialize
  8291                           
  8292                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
  8293  0A49  3188  20A7  318A   	fcall	_PWM3_Initialize
  8294                           
  8295                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  8296  0A4C  3188  2057  318A   	fcall	_TMR2_Initialize
  8297                           
  8298                           ;mcc_generated_files/mcc.c: 62:     TMR1_Initialize();
  8299  0A4F  3187  27F0  318A   	fcall	_TMR1_Initialize
  8300                           
  8301                           ;mcc_generated_files/mcc.c: 63:     EUSART_Initialize();
  8302  0A52  318A  2256  318A   	fcall	_EUSART_Initialize
  8303  0A55                     l121:
  8304  0A55  0008               	return
  8305  0A56                     __end_of_SYSTEM_Initialize:
  8306                           
  8307                           	psect	text21
  8308  0832                     __ptext21:	
  8309 ;; *************** function _WDT_Initialize *****************
  8310 ;; Defined at:
  8311 ;;		line 76 in file "mcc_generated_files/mcc.c"
  8312 ;; Parameters:    Size  Location     Type
  8313 ;;		None
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;		None
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  1    wreg      void 
  8318 ;; Registers used:
  8319 ;;		wreg
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8325 ;;      Params:         0       0       0       0       0       0
  8326 ;;      Locals:         0       0       0       0       0       0
  8327 ;;      Temps:          0       0       0       0       0       0
  8328 ;;      Totals:         0       0       0       0       0       0
  8329 ;;Total ram usage:        0 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; Hardware stack levels required when called:    4
  8332 ;; This function calls:
  8333 ;;		Nothing
  8334 ;; This function is called by:
  8335 ;;		_SYSTEM_Initialize
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           
  8340                           ;psect for function _WDT_Initialize
  8341  0832                     _WDT_Initialize:
  8342  0832                     l3598:	
  8343                           ;incstack = 0
  8344                           ; Regs used in _WDT_Initialize: [wreg]
  8345                           
  8346                           
  8347                           ;mcc_generated_files/mcc.c: 79:     WDTCON = 0x16;
  8348  0832  3016               	movlw	22
  8349  0833  0021               	movlb	1	; select bank1
  8350  0834  0097               	movwf	23	;volatile
  8351  0835                     l127:
  8352  0835  0008               	return
  8353  0836                     __end_of_WDT_Initialize:
  8354                           
  8355                           	psect	text22
  8356  0970                     __ptext22:	
  8357 ;; *************** function _TMR4_Initialize *****************
  8358 ;; Defined at:
  8359 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;		None
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;		None
  8364 ;; Return value:  Size  Location     Type
  8365 ;;                  1    wreg      void 
  8366 ;; Registers used:
  8367 ;;		wreg, status,2, status,0, pclath, cstack
  8368 ;; Tracked objects:
  8369 ;;		On entry : 0/0
  8370 ;;		On exit  : 0/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8373 ;;      Params:         0       0       0       0       0       0
  8374 ;;      Locals:         0       0       0       0       0       0
  8375 ;;      Temps:          0       0       0       0       0       0
  8376 ;;      Totals:         0       0       0       0       0       0
  8377 ;;Total ram usage:        0 bytes
  8378 ;; Hardware stack levels used:    1
  8379 ;; Hardware stack levels required when called:    5
  8380 ;; This function calls:
  8381 ;;		_TMR4_SetInterruptHandler
  8382 ;; This function is called by:
  8383 ;;		_SYSTEM_Initialize
  8384 ;; This function uses a non-reentrant model
  8385 ;;
  8386                           
  8387                           
  8388                           ;psect for function _TMR4_Initialize
  8389  0970                     _TMR4_Initialize:
  8390  0970                     l3620:	
  8391                           ;incstack = 0
  8392                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8393                           
  8394                           
  8395                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xDE;
  8396  0970  30DE               	movlw	222
  8397  0971  0028               	movlb	8	; select bank8
  8398  0972  0096               	movwf	22	;volatile
  8399  0973                     l3622:
  8400                           
  8401                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  8402  0973  0195               	clrf	21	;volatile
  8403  0974                     l3624:
  8404                           
  8405                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  8406  0974  0020               	movlb	0	; select bank0
  8407  0975  1093               	bcf	19,1	;volatile
  8408  0976                     l3626:
  8409                           
  8410                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  8411  0976  0021               	movlb	1	; select bank1
  8412  0977  1493               	bsf	19,1	;volatile
  8413  0978                     l3628:
  8414                           
  8415                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  8416  0978  3003               	movlw	low _TMR4_DefaultInterruptHandler
  8417  0979  0020               	movlb	0	; select bank0
  8418  097A  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  8419  097B  3000               	movlw	high _TMR4_DefaultInterruptHandler
  8420  097C  00A1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  8421  097D  3188  20B0  3189   	fcall	_TMR4_SetInterruptHandler
  8422  0980                     l3630:
  8423                           
  8424                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x07;
  8425  0980  3007               	movlw	7
  8426  0981  0028               	movlb	8	; select bank8
  8427  0982  0097               	movwf	23	;volatile
  8428  0983                     l225:
  8429  0983  0008               	return
  8430  0984                     __end_of_TMR4_Initialize:
  8431                           
  8432                           	psect	text23
  8433  08B0                     __ptext23:	
  8434 ;; *************** function _TMR4_SetInterruptHandler *****************
  8435 ;; Defined at:
  8436 ;;		line 132 in file "mcc_generated_files/tmr4.c"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8439 ;;		 -> send_data(1), TMR4_DefaultInterruptHandler(1), 
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;		None
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  1    wreg      void 
  8444 ;; Registers used:
  8445 ;;		wreg
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8451 ;;      Params:         0       2       0       0       0       0
  8452 ;;      Locals:         0       0       0       0       0       0
  8453 ;;      Temps:          0       0       0       0       0       0
  8454 ;;      Totals:         0       2       0       0       0       0
  8455 ;;Total ram usage:        2 bytes
  8456 ;; Hardware stack levels used:    1
  8457 ;; Hardware stack levels required when called:    4
  8458 ;; This function calls:
  8459 ;;		Nothing
  8460 ;; This function is called by:
  8461 ;;		_TMR4_Initialize
  8462 ;;		_main
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           
  8467                           ;psect for function _TMR4_SetInterruptHandler
  8468  08B0                     _TMR4_SetInterruptHandler:
  8469  08B0                     l3522:	
  8470                           ;incstack = 0
  8471                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  8472                           
  8473                           
  8474                           ;mcc_generated_files/tmr4.c: 133:     TMR4_InterruptHandler = InterruptHandler;
  8475  08B0  0020               	movlb	0	; select bank0
  8476  08B1  0821               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
  8477  08B2  0021               	movlb	1	; select bank1
  8478  08B3  00EC               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
  8479  08B4  0020               	movlb	0	; select bank0
  8480  08B5  0820               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
  8481  08B6  0021               	movlb	1	; select bank1
  8482  08B7  00EB               	movwf	_TMR4_InterruptHandler^(0+128)
  8483  08B8                     l247:
  8484  08B8  0008               	return
  8485  08B9                     __end_of_TMR4_SetInterruptHandler:
  8486                           
  8487                           	psect	text24
  8488  0857                     __ptext24:	
  8489 ;; *************** function _TMR2_Initialize *****************
  8490 ;; Defined at:
  8491 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;		None
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;		None
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  1    wreg      void 
  8498 ;; Registers used:
  8499 ;;		wreg, status,2
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8505 ;;      Params:         0       0       0       0       0       0
  8506 ;;      Locals:         0       0       0       0       0       0
  8507 ;;      Temps:          0       0       0       0       0       0
  8508 ;;      Totals:         0       0       0       0       0       0
  8509 ;;Total ram usage:        0 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; Hardware stack levels required when called:    4
  8512 ;; This function calls:
  8513 ;;		Nothing
  8514 ;; This function is called by:
  8515 ;;		_SYSTEM_Initialize
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           
  8519                           
  8520                           ;psect for function _TMR2_Initialize
  8521  0857                     _TMR2_Initialize:
  8522  0857                     l3640:	
  8523                           ;incstack = 0
  8524                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8525                           
  8526                           
  8527                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  8528  0857  30FF               	movlw	255
  8529  0858  0020               	movlb	0	; select bank0
  8530  0859  009B               	movwf	27	;volatile
  8531  085A                     l3642:
  8532                           
  8533                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  8534  085A  019A               	clrf	26	;volatile
  8535  085B                     l3644:
  8536                           
  8537                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  8538  085B  1091               	bcf	17,1	;volatile
  8539  085C                     l3646:
  8540                           
  8541                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  8542  085C  3004               	movlw	4
  8543  085D  009C               	movwf	28	;volatile
  8544  085E                     l185:
  8545  085E  0008               	return
  8546  085F                     __end_of_TMR2_Initialize:
  8547                           
  8548                           	psect	text25
  8549  07F0                     __ptext25:	
  8550 ;; *************** function _TMR1_Initialize *****************
  8551 ;; Defined at:
  8552 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  8553 ;; Parameters:    Size  Location     Type
  8554 ;;		None
  8555 ;; Auto vars:     Size  Location     Type
  8556 ;;		None
  8557 ;; Return value:  Size  Location     Type
  8558 ;;                  1    wreg      void 
  8559 ;; Registers used:
  8560 ;;		wreg, status,2
  8561 ;; Tracked objects:
  8562 ;;		On entry : 0/0
  8563 ;;		On exit  : 0/0
  8564 ;;		Unchanged: 0/0
  8565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8566 ;;      Params:         0       0       0       0       0       0
  8567 ;;      Locals:         0       0       0       0       0       0
  8568 ;;      Temps:          0       0       0       0       0       0
  8569 ;;      Totals:         0       0       0       0       0       0
  8570 ;;Total ram usage:        0 bytes
  8571 ;; Hardware stack levels used:    1
  8572 ;; Hardware stack levels required when called:    4
  8573 ;; This function calls:
  8574 ;;		Nothing
  8575 ;; This function is called by:
  8576 ;;		_SYSTEM_Initialize
  8577 ;; This function uses a non-reentrant model
  8578 ;;
  8579                           
  8580                           
  8581                           ;psect for function _TMR1_Initialize
  8582  07F0                     _TMR1_Initialize:
  8583  07F0                     l3648:	
  8584                           ;incstack = 0
  8585                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  8586                           
  8587                           
  8588                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  8589  07F0  0020               	movlb	0	; select bank0
  8590  07F1  0199               	clrf	25	;volatile
  8591                           
  8592                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
  8593  07F2  0197               	clrf	23	;volatile
  8594                           
  8595                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  8596  07F3  0196               	clrf	22	;volatile
  8597  07F4                     l3650:
  8598                           
  8599                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  8600  07F4  1011               	bcf	17,0	;volatile
  8601  07F5                     l3652:
  8602                           
  8603                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8604  07F5  0817               	movf	23,w	;volatile
  8605  07F6  0021               	movlb	1	; select bank1
  8606  07F7  00EE               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  8607  07F8  0020               	movlb	0	; select bank0
  8608  07F9  0816               	movf	22,w	;volatile
  8609  07FA  0021               	movlb	1	; select bank1
  8610  07FB  00ED               	movwf	_timer1ReloadVal^(0+128)	;volatile
  8611  07FC                     l3654:
  8612                           
  8613                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  8614  07FC  3031               	movlw	49
  8615  07FD  0020               	movlb	0	; select bank0
  8616  07FE  0098               	movwf	24	;volatile
  8617  07FF                     l146:
  8618  07FF  0008               	return
  8619  0800                     __end_of_TMR1_Initialize:
  8620                           
  8621                           	psect	text26
  8622  08A7                     __ptext26:	
  8623 ;; *************** function _PWM3_Initialize *****************
  8624 ;; Defined at:
  8625 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;		None
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;		None
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  1    wreg      void 
  8632 ;; Registers used:
  8633 ;;		wreg, status,2, status,0
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8639 ;;      Params:         0       0       0       0       0       0
  8640 ;;      Locals:         0       0       0       0       0       0
  8641 ;;      Temps:          0       0       0       0       0       0
  8642 ;;      Totals:         0       0       0       0       0       0
  8643 ;;Total ram usage:        0 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:    4
  8646 ;; This function calls:
  8647 ;;		Nothing
  8648 ;; This function is called by:
  8649 ;;		_SYSTEM_Initialize
  8650 ;; This function uses a non-reentrant model
  8651 ;;
  8652                           
  8653                           
  8654                           ;psect for function _PWM3_Initialize
  8655  08A7                     _PWM3_Initialize:
  8656  08A7                     l3632:	
  8657                           ;incstack = 0
  8658                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  8659                           
  8660                           
  8661                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x0C;
  8662  08A7  300C               	movlw	12
  8663  08A8  0026               	movlb	6	; select bank6
  8664  08A9  0093               	movwf	19	;volatile
  8665  08AA                     l3634:
  8666                           
  8667                           ;mcc_generated_files/pwm3.c: 72:  CCPR3L = 0x00;
  8668  08AA  0191               	clrf	17	;volatile
  8669  08AB                     l3636:
  8670                           
  8671                           ;mcc_generated_files/pwm3.c: 75:  CCPR3H = 0x00;
  8672  08AB  0192               	clrf	18	;volatile
  8673  08AC                     l3638:
  8674                           
  8675                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x0;
  8676  08AC  30CF               	movlw	-49
  8677  08AD  0025               	movlb	5	; select bank5
  8678  08AE  059E               	andwf	30,f	;volatile
  8679  08AF                     l472:
  8680  08AF  0008               	return
  8681  08B0                     __end_of_PWM3_Initialize:
  8682                           
  8683                           	psect	text27
  8684  0B39                     __ptext27:	
  8685 ;; *************** function _PIN_MANAGER_Initialize *****************
  8686 ;; Defined at:
  8687 ;;		line 60 in file "mcc_generated_files/pin_manager.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;		None
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;		None
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  1    wreg      void 
  8694 ;; Registers used:
  8695 ;;		wreg, status,2, status,0, pclath, cstack
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8701 ;;      Params:         0       0       0       0       0       0
  8702 ;;      Locals:         0       0       0       0       0       0
  8703 ;;      Temps:          0       0       0       0       0       0
  8704 ;;      Totals:         0       0       0       0       0       0
  8705 ;;Total ram usage:        0 bytes
  8706 ;; Hardware stack levels used:    1
  8707 ;; Hardware stack levels required when called:    5
  8708 ;; This function calls:
  8709 ;;		_IOCBF0_SetInterruptHandler
  8710 ;;		_IOCBF3_SetInterruptHandler
  8711 ;;		_IOCBF4_SetInterruptHandler
  8712 ;;		_IOCBF5_SetInterruptHandler
  8713 ;; This function is called by:
  8714 ;;		_SYSTEM_Initialize
  8715 ;; This function uses a non-reentrant model
  8716 ;;
  8717                           
  8718                           
  8719                           ;psect for function _PIN_MANAGER_Initialize
  8720  0B39                     _PIN_MANAGER_Initialize:
  8721  0B39                     l3546:	
  8722                           ;incstack = 0
  8723                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8724                           
  8725                           
  8726                           ;mcc_generated_files/pin_manager.c: 65:     LATA = 0x00;
  8727  0B39  0022               	movlb	2	; select bank2
  8728  0B3A  018C               	clrf	12	;volatile
  8729                           
  8730                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
  8731  0B3B  018D               	clrf	13	;volatile
  8732  0B3C                     l3548:
  8733                           
  8734                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0x33;
  8735  0B3C  3033               	movlw	51
  8736  0B3D  0021               	movlb	1	; select bank1
  8737  0B3E  008C               	movwf	12	;volatile
  8738  0B3F                     l3550:
  8739                           
  8740                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
  8741  0B3F  30FF               	movlw	255
  8742  0B40  008D               	movwf	13	;volatile
  8743  0B41                     l3552:
  8744                           
  8745                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xC0;
  8746  0B41  30C0               	movlw	192
  8747  0B42  0023               	movlb	3	; select bank3
  8748  0B43  008D               	movwf	13	;volatile
  8749  0B44                     l3554:
  8750                           
  8751                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x03;
  8752  0B44  3003               	movlw	3
  8753  0B45  008C               	movwf	12	;volatile
  8754                           
  8755                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  8756  0B46  0024               	movlb	4	; select bank4
  8757  0B47  018D               	clrf	13	;volatile
  8758                           
  8759                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  8760  0B48  018C               	clrf	12	;volatile
  8761  0B49                     l3556:
  8762                           
  8763                           ;mcc_generated_files/pin_manager.c: 85:     OPTION_REGbits.nWPUEN = 1;
  8764  0B49  0021               	movlb	1	; select bank1
  8765  0B4A  1795               	bsf	21,7	;volatile
  8766                           
  8767                           ;mcc_generated_files/pin_manager.c: 91:     APFCON0 = 0x00;
  8768  0B4B  0022               	movlb	2	; select bank2
  8769  0B4C  019D               	clrf	29	;volatile
  8770                           
  8771                           ;mcc_generated_files/pin_manager.c: 92:     APFCON1 = 0x00;
  8772  0B4D  019E               	clrf	30	;volatile
  8773  0B4E                     l3558:
  8774                           
  8775                           ;mcc_generated_files/pin_manager.c: 98:     IOCBFbits.IOCBF0 = 0;
  8776  0B4E  0027               	movlb	7	; select bank7
  8777  0B4F  1016               	bcf	22,0	;volatile
  8778  0B50                     l3560:
  8779                           
  8780                           ;mcc_generated_files/pin_manager.c: 100:     IOCBFbits.IOCBF3 = 0;
  8781  0B50  1196               	bcf	22,3	;volatile
  8782  0B51                     l3562:
  8783                           
  8784                           ;mcc_generated_files/pin_manager.c: 102:     IOCBFbits.IOCBF4 = 0;
  8785  0B51  1216               	bcf	22,4	;volatile
  8786  0B52                     l3564:
  8787                           
  8788                           ;mcc_generated_files/pin_manager.c: 104:     IOCBFbits.IOCBF5 = 0;
  8789  0B52  1296               	bcf	22,5	;volatile
  8790  0B53                     l3566:
  8791                           
  8792                           ;mcc_generated_files/pin_manager.c: 106:     IOCBNbits.IOCBN0 = 1;
  8793  0B53  1415               	bsf	21,0	;volatile
  8794  0B54                     l3568:
  8795                           
  8796                           ;mcc_generated_files/pin_manager.c: 108:     IOCBNbits.IOCBN3 = 1;
  8797  0B54  1595               	bsf	21,3	;volatile
  8798  0B55                     l3570:
  8799                           
  8800                           ;mcc_generated_files/pin_manager.c: 110:     IOCBNbits.IOCBN4 = 1;
  8801  0B55  1615               	bsf	21,4	;volatile
  8802  0B56                     l3572:
  8803                           
  8804                           ;mcc_generated_files/pin_manager.c: 112:     IOCBNbits.IOCBN5 = 1;
  8805  0B56  1695               	bsf	21,5	;volatile
  8806  0B57                     l3574:
  8807                           
  8808                           ;mcc_generated_files/pin_manager.c: 114:     IOCBPbits.IOCBP0 = 0;
  8809  0B57  1014               	bcf	20,0	;volatile
  8810  0B58                     l3576:
  8811                           
  8812                           ;mcc_generated_files/pin_manager.c: 116:     IOCBPbits.IOCBP3 = 0;
  8813  0B58  1194               	bcf	20,3	;volatile
  8814  0B59                     l3578:
  8815                           
  8816                           ;mcc_generated_files/pin_manager.c: 118:     IOCBPbits.IOCBP4 = 0;
  8817  0B59  1214               	bcf	20,4	;volatile
  8818  0B5A                     l3580:
  8819                           
  8820                           ;mcc_generated_files/pin_manager.c: 120:     IOCBPbits.IOCBP5 = 0;
  8821  0B5A  1294               	bcf	20,5	;volatile
  8822  0B5B                     l3582:
  8823                           
  8824                           ;mcc_generated_files/pin_manager.c: 125:     IOCBF0_SetInterruptHandler(IOCBF0_DefaultIn
      +                          terruptHandler);
  8825  0B5B  302B               	movlw	low _IOCBF0_DefaultInterruptHandler
  8826  0B5C  0020               	movlb	0	; select bank0
  8827  0B5D  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler
  8828  0B5E  3008               	movlw	high _IOCBF0_DefaultInterruptHandler
  8829  0B5F  00A1               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler+1
  8830  0B60  3188  2083  318B   	fcall	_IOCBF0_SetInterruptHandler
  8831  0B63                     l3584:
  8832                           
  8833                           ;mcc_generated_files/pin_manager.c: 126:     IOCBF3_SetInterruptHandler(IOCBF3_DefaultIn
      +                          terruptHandler);
  8834  0B63  302C               	movlw	low _IOCBF3_DefaultInterruptHandler
  8835  0B64  0020               	movlb	0	; select bank0
  8836  0B65  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler
  8837  0B66  3008               	movlw	high _IOCBF3_DefaultInterruptHandler
  8838  0B67  00A1               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler+1
  8839  0B68  3188  208C  318B   	fcall	_IOCBF3_SetInterruptHandler
  8840  0B6B                     l3586:
  8841                           
  8842                           ;mcc_generated_files/pin_manager.c: 127:     IOCBF4_SetInterruptHandler(IOCBF4_DefaultIn
      +                          terruptHandler);
  8843  0B6B  302D               	movlw	low _IOCBF4_DefaultInterruptHandler
  8844  0B6C  0020               	movlb	0	; select bank0
  8845  0B6D  00A0               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
  8846  0B6E  3008               	movlw	high _IOCBF4_DefaultInterruptHandler
  8847  0B6F  00A1               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
  8848  0B70  3188  2095  318B   	fcall	_IOCBF4_SetInterruptHandler
  8849  0B73                     l3588:
  8850                           
  8851                           ;mcc_generated_files/pin_manager.c: 128:     IOCBF5_SetInterruptHandler(IOCBF5_DefaultIn
      +                          terruptHandler);
  8852  0B73  3002               	movlw	low _IOCBF5_DefaultInterruptHandler
  8853  0B74  0020               	movlb	0	; select bank0
  8854  0B75  00A0               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler
  8855  0B76  3000               	movlw	high _IOCBF5_DefaultInterruptHandler
  8856  0B77  00A1               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler+1
  8857  0B78  3188  209E  318B   	fcall	_IOCBF5_SetInterruptHandler
  8858  0B7B                     l3590:
  8859                           
  8860                           ;mcc_generated_files/pin_manager.c: 131:     INTCONbits.IOCIE = 1;
  8861  0B7B  158B               	bsf	11,3	;volatile
  8862  0B7C                     l414:
  8863  0B7C  0008               	return
  8864  0B7D                     __end_of_PIN_MANAGER_Initialize:
  8865                           
  8866                           	psect	text28
  8867  089E                     __ptext28:	
  8868 ;; *************** function _IOCBF5_SetInterruptHandler *****************
  8869 ;; Defined at:
  8870 ;;		line 267 in file "mcc_generated_files/pin_manager.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8873 ;;		 -> sensor4(1), IOCBF5_DefaultInterruptHandler(1), 
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;		None
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  1    wreg      void 
  8878 ;; Registers used:
  8879 ;;		wreg
  8880 ;; Tracked objects:
  8881 ;;		On entry : 0/0
  8882 ;;		On exit  : 0/0
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8885 ;;      Params:         0       2       0       0       0       0
  8886 ;;      Locals:         0       0       0       0       0       0
  8887 ;;      Temps:          0       0       0       0       0       0
  8888 ;;      Totals:         0       2       0       0       0       0
  8889 ;;Total ram usage:        2 bytes
  8890 ;; Hardware stack levels used:    1
  8891 ;; Hardware stack levels required when called:    4
  8892 ;; This function calls:
  8893 ;;		Nothing
  8894 ;; This function is called by:
  8895 ;;		_PIN_MANAGER_Initialize
  8896 ;;		_main
  8897 ;; This function uses a non-reentrant model
  8898 ;;
  8899                           
  8900                           
  8901                           ;psect for function _IOCBF5_SetInterruptHandler
  8902  089E                     _IOCBF5_SetInterruptHandler:
  8903  089E                     l3532:	
  8904                           ;incstack = 0
  8905                           ; Regs used in _IOCBF5_SetInterruptHandler: [wreg]
  8906                           
  8907                           
  8908                           ;mcc_generated_files/pin_manager.c: 268:     IOCBF5_InterruptHandler = InterruptHandler;
  8909  089E  0020               	movlb	0	; select bank0
  8910  089F  0821               	movf	IOCBF5_SetInterruptHandler@InterruptHandler+1,w
  8911  08A0  0021               	movlb	1	; select bank1
  8912  08A1  00E4               	movwf	(_IOCBF5_InterruptHandler+1)^(0+128)
  8913  08A2  0020               	movlb	0	; select bank0
  8914  08A3  0820               	movf	IOCBF5_SetInterruptHandler@InterruptHandler,w
  8915  08A4  0021               	movlb	1	; select bank1
  8916  08A5  00E3               	movwf	_IOCBF5_InterruptHandler^(0+128)
  8917  08A6                     l458:
  8918  08A6  0008               	return
  8919  08A7                     __end_of_IOCBF5_SetInterruptHandler:
  8920                           
  8921                           	psect	text29
  8922  0895                     __ptext29:	
  8923 ;; *************** function _IOCBF4_SetInterruptHandler *****************
  8924 ;; Defined at:
  8925 ;;		line 237 in file "mcc_generated_files/pin_manager.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8928 ;;		 -> sensor3(1), IOCBF4_DefaultInterruptHandler(1), 
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;		None
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  1    wreg      void 
  8933 ;; Registers used:
  8934 ;;		wreg
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8940 ;;      Params:         0       2       0       0       0       0
  8941 ;;      Locals:         0       0       0       0       0       0
  8942 ;;      Temps:          0       0       0       0       0       0
  8943 ;;      Totals:         0       2       0       0       0       0
  8944 ;;Total ram usage:        2 bytes
  8945 ;; Hardware stack levels used:    1
  8946 ;; Hardware stack levels required when called:    4
  8947 ;; This function calls:
  8948 ;;		Nothing
  8949 ;; This function is called by:
  8950 ;;		_PIN_MANAGER_Initialize
  8951 ;;		_main
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           
  8956                           ;psect for function _IOCBF4_SetInterruptHandler
  8957  0895                     _IOCBF4_SetInterruptHandler:
  8958  0895                     l3530:	
  8959                           ;incstack = 0
  8960                           ; Regs used in _IOCBF4_SetInterruptHandler: [wreg]
  8961                           
  8962                           
  8963                           ;mcc_generated_files/pin_manager.c: 238:     IOCBF4_InterruptHandler = InterruptHandler;
  8964  0895  0020               	movlb	0	; select bank0
  8965  0896  0821               	movf	IOCBF4_SetInterruptHandler@InterruptHandler+1,w
  8966  0897  0021               	movlb	1	; select bank1
  8967  0898  00E6               	movwf	(_IOCBF4_InterruptHandler+1)^(0+128)
  8968  0899  0020               	movlb	0	; select bank0
  8969  089A  0820               	movf	IOCBF4_SetInterruptHandler@InterruptHandler,w
  8970  089B  0021               	movlb	1	; select bank1
  8971  089C  00E5               	movwf	_IOCBF4_InterruptHandler^(0+128)
  8972  089D                     l448:
  8973  089D  0008               	return
  8974  089E                     __end_of_IOCBF4_SetInterruptHandler:
  8975                           
  8976                           	psect	text30
  8977  088C                     __ptext30:	
  8978 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  8979 ;; Defined at:
  8980 ;;		line 207 in file "mcc_generated_files/pin_manager.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8983 ;;		 -> sensor2(1), IOCBF3_DefaultInterruptHandler(1), 
  8984 ;; Auto vars:     Size  Location     Type
  8985 ;;		None
  8986 ;; Return value:  Size  Location     Type
  8987 ;;                  1    wreg      void 
  8988 ;; Registers used:
  8989 ;;		wreg
  8990 ;; Tracked objects:
  8991 ;;		On entry : 0/0
  8992 ;;		On exit  : 0/0
  8993 ;;		Unchanged: 0/0
  8994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8995 ;;      Params:         0       2       0       0       0       0
  8996 ;;      Locals:         0       0       0       0       0       0
  8997 ;;      Temps:          0       0       0       0       0       0
  8998 ;;      Totals:         0       2       0       0       0       0
  8999 ;;Total ram usage:        2 bytes
  9000 ;; Hardware stack levels used:    1
  9001 ;; Hardware stack levels required when called:    4
  9002 ;; This function calls:
  9003 ;;		Nothing
  9004 ;; This function is called by:
  9005 ;;		_PIN_MANAGER_Initialize
  9006 ;;		_main
  9007 ;; This function uses a non-reentrant model
  9008 ;;
  9009                           
  9010                           
  9011                           ;psect for function _IOCBF3_SetInterruptHandler
  9012  088C                     _IOCBF3_SetInterruptHandler:
  9013  088C                     l3528:	
  9014                           ;incstack = 0
  9015                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  9016                           
  9017                           
  9018                           ;mcc_generated_files/pin_manager.c: 208:     IOCBF3_InterruptHandler = InterruptHandler;
  9019  088C  0020               	movlb	0	; select bank0
  9020  088D  0821               	movf	IOCBF3_SetInterruptHandler@InterruptHandler+1,w
  9021  088E  0021               	movlb	1	; select bank1
  9022  088F  00E8               	movwf	(_IOCBF3_InterruptHandler+1)^(0+128)
  9023  0890  0020               	movlb	0	; select bank0
  9024  0891  0820               	movf	IOCBF3_SetInterruptHandler@InterruptHandler,w
  9025  0892  0021               	movlb	1	; select bank1
  9026  0893  00E7               	movwf	_IOCBF3_InterruptHandler^(0+128)
  9027  0894                     l438:
  9028  0894  0008               	return
  9029  0895                     __end_of_IOCBF3_SetInterruptHandler:
  9030                           
  9031                           	psect	text31
  9032  0883                     __ptext31:	
  9033 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  9034 ;; Defined at:
  9035 ;;		line 177 in file "mcc_generated_files/pin_manager.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9038 ;;		 -> sensor1(1), IOCBF0_DefaultInterruptHandler(1), 
  9039 ;; Auto vars:     Size  Location     Type
  9040 ;;		None
  9041 ;; Return value:  Size  Location     Type
  9042 ;;                  1    wreg      void 
  9043 ;; Registers used:
  9044 ;;		wreg
  9045 ;; Tracked objects:
  9046 ;;		On entry : 0/0
  9047 ;;		On exit  : 0/0
  9048 ;;		Unchanged: 0/0
  9049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9050 ;;      Params:         0       2       0       0       0       0
  9051 ;;      Locals:         0       0       0       0       0       0
  9052 ;;      Temps:          0       0       0       0       0       0
  9053 ;;      Totals:         0       2       0       0       0       0
  9054 ;;Total ram usage:        2 bytes
  9055 ;; Hardware stack levels used:    1
  9056 ;; Hardware stack levels required when called:    4
  9057 ;; This function calls:
  9058 ;;		Nothing
  9059 ;; This function is called by:
  9060 ;;		_PIN_MANAGER_Initialize
  9061 ;;		_main
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065                           
  9066                           ;psect for function _IOCBF0_SetInterruptHandler
  9067  0883                     _IOCBF0_SetInterruptHandler:
  9068  0883                     l3526:	
  9069                           ;incstack = 0
  9070                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  9071                           
  9072                           
  9073                           ;mcc_generated_files/pin_manager.c: 178:     IOCBF0_InterruptHandler = InterruptHandler;
  9074  0883  0020               	movlb	0	; select bank0
  9075  0884  0821               	movf	IOCBF0_SetInterruptHandler@InterruptHandler+1,w
  9076  0885  0021               	movlb	1	; select bank1
  9077  0886  00EA               	movwf	(_IOCBF0_InterruptHandler+1)^(0+128)
  9078  0887  0020               	movlb	0	; select bank0
  9079  0888  0820               	movf	IOCBF0_SetInterruptHandler@InterruptHandler,w
  9080  0889  0021               	movlb	1	; select bank1
  9081  088A  00E9               	movwf	_IOCBF0_InterruptHandler^(0+128)
  9082  088B                     l428:
  9083  088B  0008               	return
  9084  088C                     __end_of_IOCBF0_SetInterruptHandler:
  9085                           
  9086                           	psect	text32
  9087  0848                     __ptext32:	
  9088 ;; *************** function _OSCILLATOR_Initialize *****************
  9089 ;; Defined at:
  9090 ;;		line 66 in file "mcc_generated_files/mcc.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;		None
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;		None
  9095 ;; Return value:  Size  Location     Type
  9096 ;;                  1    wreg      void 
  9097 ;; Registers used:
  9098 ;;		wreg, status,2
  9099 ;; Tracked objects:
  9100 ;;		On entry : 0/0
  9101 ;;		On exit  : 0/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9104 ;;      Params:         0       0       0       0       0       0
  9105 ;;      Locals:         0       0       0       0       0       0
  9106 ;;      Temps:          0       0       0       0       0       0
  9107 ;;      Totals:         0       0       0       0       0       0
  9108 ;;Total ram usage:        0 bytes
  9109 ;; Hardware stack levels used:    1
  9110 ;; Hardware stack levels required when called:    4
  9111 ;; This function calls:
  9112 ;;		Nothing
  9113 ;; This function is called by:
  9114 ;;		_SYSTEM_Initialize
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           
  9119                           ;psect for function _OSCILLATOR_Initialize
  9120  0848                     _OSCILLATOR_Initialize:
  9121  0848                     l3592:	
  9122                           ;incstack = 0
  9123                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9124                           
  9125                           
  9126                           ;mcc_generated_files/mcc.c: 69:     OSCCON = 0x70;
  9127  0848  3070               	movlw	112
  9128  0849  0021               	movlb	1	; select bank1
  9129  084A  0099               	movwf	25	;volatile
  9130  084B                     l3594:
  9131                           
  9132                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  9133  084B  0198               	clrf	24	;volatile
  9134  084C                     l3596:
  9135                           
  9136                           ;mcc_generated_files/mcc.c: 73:     BORCON = 0x00;
  9137  084C  0022               	movlb	2	; select bank2
  9138  084D  0196               	clrf	22	;volatile
  9139  084E                     l124:
  9140  084E  0008               	return
  9141  084F                     __end_of_OSCILLATOR_Initialize:
  9142                           
  9143                           	psect	text33
  9144  082E                     __ptext33:	
  9145 ;; *************** function _FVR_Initialize *****************
  9146 ;; Defined at:
  9147 ;;		line 58 in file "mcc_generated_files/fvr.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;		None
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;		None
  9152 ;; Return value:  Size  Location     Type
  9153 ;;                  1    wreg      void 
  9154 ;; Registers used:
  9155 ;;		wreg
  9156 ;; Tracked objects:
  9157 ;;		On entry : 0/0
  9158 ;;		On exit  : 0/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9161 ;;      Params:         0       0       0       0       0       0
  9162 ;;      Locals:         0       0       0       0       0       0
  9163 ;;      Temps:          0       0       0       0       0       0
  9164 ;;      Totals:         0       0       0       0       0       0
  9165 ;;Total ram usage:        0 bytes
  9166 ;; Hardware stack levels used:    1
  9167 ;; Hardware stack levels required when called:    4
  9168 ;; This function calls:
  9169 ;;		Nothing
  9170 ;; This function is called by:
  9171 ;;		_SYSTEM_Initialize
  9172 ;; This function uses a non-reentrant model
  9173 ;;
  9174                           
  9175                           
  9176                           ;psect for function _FVR_Initialize
  9177  082E                     _FVR_Initialize:
  9178  082E                     l3600:	
  9179                           ;incstack = 0
  9180                           ; Regs used in _FVR_Initialize: [wreg]
  9181                           
  9182                           
  9183                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x81;
  9184  082E  3081               	movlw	129
  9185  082F  0022               	movlb	2	; select bank2
  9186  0830  0097               	movwf	23	;volatile
  9187  0831                     l320:
  9188  0831  0008               	return
  9189  0832                     __end_of_FVR_Initialize:
  9190                           
  9191                           	psect	text34
  9192  0A56                     __ptext34:	
  9193 ;; *************** function _EUSART_Initialize *****************
  9194 ;; Defined at:
  9195 ;;		line 66 in file "mcc_generated_files/eusart.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;		None
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;		None
  9200 ;; Return value:  Size  Location     Type
  9201 ;;                  1    wreg      void 
  9202 ;; Registers used:
  9203 ;;		wreg, status,2, status,0, pclath, cstack
  9204 ;; Tracked objects:
  9205 ;;		On entry : 0/0
  9206 ;;		On exit  : 0/0
  9207 ;;		Unchanged: 0/0
  9208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9209 ;;      Params:         0       0       0       0       0       0
  9210 ;;      Locals:         0       0       0       0       0       0
  9211 ;;      Temps:          0       0       0       0       0       0
  9212 ;;      Totals:         0       0       0       0       0       0
  9213 ;;Total ram usage:        0 bytes
  9214 ;; Hardware stack levels used:    1
  9215 ;; Hardware stack levels required when called:    5
  9216 ;; This function calls:
  9217 ;;		_EUSART_SetErrorHandler
  9218 ;;		_EUSART_SetFramingErrorHandler
  9219 ;;		_EUSART_SetOverrunErrorHandler
  9220 ;; This function is called by:
  9221 ;;		_SYSTEM_Initialize
  9222 ;; This function uses a non-reentrant model
  9223 ;;
  9224                           
  9225                           
  9226                           ;psect for function _EUSART_Initialize
  9227  0A56                     _EUSART_Initialize:
  9228  0A56                     l3534:	
  9229                           ;incstack = 0
  9230                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9231                           
  9232                           
  9233                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  9234  0A56  3008               	movlw	8
  9235  0A57  0023               	movlb	3	; select bank3
  9236  0A58  009F               	movwf	31	;volatile
  9237                           
  9238                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  9239  0A59  3090               	movlw	144
  9240  0A5A  009D               	movwf	29	;volatile
  9241                           
  9242                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  9243  0A5B  3024               	movlw	36
  9244  0A5C  009E               	movwf	30	;volatile
  9245                           
  9246                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  9247  0A5D  3067               	movlw	103
  9248  0A5E  009B               	movwf	27	;volatile
  9249  0A5F                     l3536:
  9250                           
  9251                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  9252  0A5F  019C               	clrf	28	;volatile
  9253  0A60                     l3538:
  9254                           
  9255                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  9256  0A60  3000               	movlw	0
  9257  0A61  0020               	movlb	0	; select bank0
  9258  0A62  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  9259  0A63  3000               	movlw	0
  9260  0A64  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  9261  0A65  3188  2071  318A   	fcall	_EUSART_SetFramingErrorHandler
  9262  0A68                     l3540:
  9263                           
  9264                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  9265  0A68  3000               	movlw	0
  9266  0A69  0020               	movlb	0	; select bank0
  9267  0A6A  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  9268  0A6B  3000               	movlw	0
  9269  0A6C  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  9270  0A6D  3188  207A  318A   	fcall	_EUSART_SetOverrunErrorHandler
  9271  0A70                     l3542:
  9272                           
  9273                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  9274  0A70  3000               	movlw	0
  9275  0A71  0020               	movlb	0	; select bank0
  9276  0A72  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  9277  0A73  3000               	movlw	0
  9278  0A74  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  9279  0A75  3188  2068  318A   	fcall	_EUSART_SetErrorHandler
  9280  0A78                     l3544:
  9281                           
  9282                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  9283  0A78  01F6               	clrf	_eusartRxLastError	;volatile
  9284  0A79                     l43:
  9285  0A79  0008               	return
  9286  0A7A                     __end_of_EUSART_Initialize:
  9287                           
  9288                           	psect	text35
  9289  087A                     __ptext35:	
  9290 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  9291 ;; Defined at:
  9292 ;;		line 161 in file "mcc_generated_files/eusart.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9295 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  1    wreg      void 
  9300 ;; Registers used:
  9301 ;;		wreg
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9307 ;;      Params:         0       2       0       0       0       0
  9308 ;;      Locals:         0       0       0       0       0       0
  9309 ;;      Temps:          0       0       0       0       0       0
  9310 ;;      Totals:         0       2       0       0       0       0
  9311 ;;Total ram usage:        2 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; Hardware stack levels required when called:    4
  9314 ;; This function calls:
  9315 ;;		Nothing
  9316 ;; This function is called by:
  9317 ;;		_EUSART_Initialize
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321                           
  9322                           ;psect for function _EUSART_SetOverrunErrorHandler
  9323  087A                     _EUSART_SetOverrunErrorHandler:
  9324  087A                     l3502:	
  9325                           ;incstack = 0
  9326                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  9327                           
  9328                           
  9329                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  9330  087A  0020               	movlb	0	; select bank0
  9331  087B  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  9332  087C  0022               	movlb	2	; select bank2
  9333  087D  00D2               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  9334  087E  0020               	movlb	0	; select bank0
  9335  087F  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  9336  0880  0022               	movlb	2	; select bank2
  9337  0881  00D1               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  9338  0882                     l85:
  9339  0882  0008               	return
  9340  0883                     __end_of_EUSART_SetOverrunErrorHandler:
  9341                           
  9342                           	psect	text36
  9343  0871                     __ptext36:	
  9344 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  9345 ;; Defined at:
  9346 ;;		line 157 in file "mcc_generated_files/eusart.c"
  9347 ;; Parameters:    Size  Location     Type
  9348 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9349 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  9350 ;; Auto vars:     Size  Location     Type
  9351 ;;		None
  9352 ;; Return value:  Size  Location     Type
  9353 ;;                  1    wreg      void 
  9354 ;; Registers used:
  9355 ;;		wreg
  9356 ;; Tracked objects:
  9357 ;;		On entry : 0/0
  9358 ;;		On exit  : 0/0
  9359 ;;		Unchanged: 0/0
  9360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9361 ;;      Params:         0       2       0       0       0       0
  9362 ;;      Locals:         0       0       0       0       0       0
  9363 ;;      Temps:          0       0       0       0       0       0
  9364 ;;      Totals:         0       2       0       0       0       0
  9365 ;;Total ram usage:        2 bytes
  9366 ;; Hardware stack levels used:    1
  9367 ;; Hardware stack levels required when called:    4
  9368 ;; This function calls:
  9369 ;;		Nothing
  9370 ;; This function is called by:
  9371 ;;		_EUSART_Initialize
  9372 ;; This function uses a non-reentrant model
  9373 ;;
  9374                           
  9375                           
  9376                           ;psect for function _EUSART_SetFramingErrorHandler
  9377  0871                     _EUSART_SetFramingErrorHandler:
  9378  0871                     l3500:	
  9379                           ;incstack = 0
  9380                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9381                           
  9382                           
  9383                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  9384  0871  0020               	movlb	0	; select bank0
  9385  0872  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  9386  0873  0022               	movlb	2	; select bank2
  9387  0874  00D4               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  9388  0875  0020               	movlb	0	; select bank0
  9389  0876  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  9390  0877  0022               	movlb	2	; select bank2
  9391  0878  00D3               	movwf	_EUSART_FramingErrorHandler^(0+256)
  9392  0879                     l82:
  9393  0879  0008               	return
  9394  087A                     __end_of_EUSART_SetFramingErrorHandler:
  9395                           
  9396                           	psect	text37
  9397  0868                     __ptext37:	
  9398 ;; *************** function _EUSART_SetErrorHandler *****************
  9399 ;; Defined at:
  9400 ;;		line 165 in file "mcc_generated_files/eusart.c"
  9401 ;; Parameters:    Size  Location     Type
  9402 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9403 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;		None
  9406 ;; Return value:  Size  Location     Type
  9407 ;;                  1    wreg      void 
  9408 ;; Registers used:
  9409 ;;		wreg
  9410 ;; Tracked objects:
  9411 ;;		On entry : 0/0
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9415 ;;      Params:         0       2       0       0       0       0
  9416 ;;      Locals:         0       0       0       0       0       0
  9417 ;;      Temps:          0       0       0       0       0       0
  9418 ;;      Totals:         0       2       0       0       0       0
  9419 ;;Total ram usage:        2 bytes
  9420 ;; Hardware stack levels used:    1
  9421 ;; Hardware stack levels required when called:    4
  9422 ;; This function calls:
  9423 ;;		Nothing
  9424 ;; This function is called by:
  9425 ;;		_EUSART_Initialize
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           
  9430                           ;psect for function _EUSART_SetErrorHandler
  9431  0868                     _EUSART_SetErrorHandler:
  9432  0868                     l3504:	
  9433                           ;incstack = 0
  9434                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9435                           
  9436                           
  9437                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  9438  0868  0020               	movlb	0	; select bank0
  9439  0869  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9440  086A  0022               	movlb	2	; select bank2
  9441  086B  00D0               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  9442  086C  0020               	movlb	0	; select bank0
  9443  086D  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9444  086E  0022               	movlb	2	; select bank2
  9445  086F  00CF               	movwf	_EUSART_ErrorHandler^(0+256)
  9446  0870                     l88:
  9447  0870  0008               	return
  9448  0871                     __end_of_EUSART_SetErrorHandler:
  9449                           
  9450                           	psect	text38
  9451  095E                     __ptext38:	
  9452 ;; *************** function _CCP4_Initialize *****************
  9453 ;; Defined at:
  9454 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;		None
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;		None
  9459 ;; Return value:  Size  Location     Type
  9460 ;;                  1    wreg      void 
  9461 ;; Registers used:
  9462 ;;		wreg, status,2, status,0, pclath, cstack
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9468 ;;      Params:         0       0       0       0       0       0
  9469 ;;      Locals:         0       0       0       0       0       0
  9470 ;;      Temps:          0       0       0       0       0       0
  9471 ;;      Totals:         0       0       0       0       0       0
  9472 ;;Total ram usage:        0 bytes
  9473 ;; Hardware stack levels used:    1
  9474 ;; Hardware stack levels required when called:    5
  9475 ;; This function calls:
  9476 ;;		_CCP4_SetCallBack
  9477 ;; This function is called by:
  9478 ;;		_SYSTEM_Initialize
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           
  9483                           ;psect for function _CCP4_Initialize
  9484  095E                     _CCP4_Initialize:
  9485  095E                     l3602:	
  9486                           ;incstack = 0
  9487                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9488                           
  9489                           
  9490                           ;mcc_generated_files/ccp4.c: 70:  CCP4CON = 0x05;
  9491  095E  3005               	movlw	5
  9492  095F  0026               	movlb	6	; select bank6
  9493  0960  009A               	movwf	26	;volatile
  9494  0961                     l3604:
  9495                           
  9496                           ;mcc_generated_files/ccp4.c: 73:  CCPR4L = 0x00;
  9497  0961  0198               	clrf	24	;volatile
  9498  0962                     l3606:
  9499                           
  9500                           ;mcc_generated_files/ccp4.c: 76:  CCPR4H = 0x00;
  9501  0962  0199               	clrf	25	;volatile
  9502  0963                     l3608:
  9503                           
  9504                           ;mcc_generated_files/ccp4.c: 79:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  9505  0963  302A               	movlw	low _CCP4_DefaultCallBack
  9506  0964  0020               	movlb	0	; select bank0
  9507  0965  00A0               	movwf	CCP4_SetCallBack@customCallBack
  9508  0966  3008               	movlw	high _CCP4_DefaultCallBack
  9509  0967  00A1               	movwf	CCP4_SetCallBack@customCallBack+1
  9510  0968  3188  205F  3189   	fcall	_CCP4_SetCallBack
  9511  096B                     l3610:
  9512                           
  9513                           ;mcc_generated_files/ccp4.c: 83:     PIR3bits.CCP4IF = 0;
  9514  096B  0020               	movlb	0	; select bank0
  9515  096C  1293               	bcf	19,5	;volatile
  9516  096D                     l3612:
  9517                           
  9518                           ;mcc_generated_files/ccp4.c: 86:     PIE3bits.CCP4IE = 1;
  9519  096D  0021               	movlb	1	; select bank1
  9520  096E  1693               	bsf	19,5	;volatile
  9521  096F                     l343:
  9522  096F  0008               	return
  9523  0970                     __end_of_CCP4_Initialize:
  9524                           
  9525                           	psect	text39
  9526  085F                     __ptext39:	
  9527 ;; *************** function _CCP4_SetCallBack *****************
  9528 ;; Defined at:
  9529 ;;		line 104 in file "mcc_generated_files/ccp4.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  9532 ;;		 -> get_pulse(1), CCP4_DefaultCallBack(1), 
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;		None
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  1    wreg      void 
  9537 ;; Registers used:
  9538 ;;		wreg
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9544 ;;      Params:         0       2       0       0       0       0
  9545 ;;      Locals:         0       0       0       0       0       0
  9546 ;;      Temps:          0       0       0       0       0       0
  9547 ;;      Totals:         0       2       0       0       0       0
  9548 ;;Total ram usage:        2 bytes
  9549 ;; Hardware stack levels used:    1
  9550 ;; Hardware stack levels required when called:    4
  9551 ;; This function calls:
  9552 ;;		Nothing
  9553 ;; This function is called by:
  9554 ;;		_CCP4_Initialize
  9555 ;;		_main
  9556 ;; This function uses a non-reentrant model
  9557 ;;
  9558                           
  9559                           
  9560                           ;psect for function _CCP4_SetCallBack
  9561  085F                     _CCP4_SetCallBack:
  9562  085F                     l3524:	
  9563                           ;incstack = 0
  9564                           ; Regs used in _CCP4_SetCallBack: [wreg]
  9565                           
  9566                           
  9567                           ;mcc_generated_files/ccp4.c: 105:     CCP4_CallBack = customCallBack;
  9568  085F  0020               	movlb	0	; select bank0
  9569  0860  0821               	movf	CCP4_SetCallBack@customCallBack+1,w
  9570  0861  0022               	movlb	2	; select bank2
  9571  0862  00CE               	movwf	(_CCP4_CallBack+1)^(0+256)
  9572  0863  0020               	movlb	0	; select bank0
  9573  0864  0820               	movf	CCP4_SetCallBack@customCallBack,w
  9574  0865  0022               	movlb	2	; select bank2
  9575  0866  00CD               	movwf	_CCP4_CallBack^(0+256)
  9576  0867                     l349:
  9577  0867  0008               	return
  9578  0868                     __end_of_CCP4_SetCallBack:
  9579                           
  9580                           	psect	text40
  9581  084F                     __ptext40:	
  9582 ;; *************** function _ADC_Initialize *****************
  9583 ;; Defined at:
  9584 ;;		line 67 in file "mcc_generated_files/adc.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;		None
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;		None
  9589 ;; Return value:  Size  Location     Type
  9590 ;;                  1    wreg      void 
  9591 ;; Registers used:
  9592 ;;		wreg, status,2
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 0/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9598 ;;      Params:         0       0       0       0       0       0
  9599 ;;      Locals:         0       0       0       0       0       0
  9600 ;;      Temps:          0       0       0       0       0       0
  9601 ;;      Totals:         0       0       0       0       0       0
  9602 ;;Total ram usage:        0 bytes
  9603 ;; Hardware stack levels used:    1
  9604 ;; Hardware stack levels required when called:    4
  9605 ;; This function calls:
  9606 ;;		Nothing
  9607 ;; This function is called by:
  9608 ;;		_SYSTEM_Initialize
  9609 ;; This function uses a non-reentrant model
  9610 ;;
  9611                           
  9612                           
  9613                           ;psect for function _ADC_Initialize
  9614  084F                     _ADC_Initialize:
  9615  084F                     l3614:	
  9616                           ;incstack = 0
  9617                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9618                           
  9619                           
  9620                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  9621  084F  30D3               	movlw	211
  9622  0850  0021               	movlb	1	; select bank1
  9623  0851  009E               	movwf	30	;volatile
  9624  0852                     l3616:
  9625                           
  9626                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  9627  0852  019B               	clrf	27	;volatile
  9628  0853                     l3618:
  9629                           
  9630                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  9631  0853  019C               	clrf	28	;volatile
  9632                           
  9633                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  9634  0854  3001               	movlw	1
  9635  0855  009D               	movwf	29	;volatile
  9636  0856                     l267:
  9637  0856  0008               	return
  9638  0857                     __end_of_ADC_Initialize:
  9639                           
  9640                           	psect	intentry
  9641  0004                     __pintentry:	
  9642 ;; *************** function _INTERRUPT_InterruptManager *****************
  9643 ;; Defined at:
  9644 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;		None
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;		None
  9649 ;; Return value:  Size  Location     Type
  9650 ;;                  1    wreg      void 
  9651 ;; Registers used:
  9652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9653 ;; Tracked objects:
  9654 ;;		On entry : 0/0
  9655 ;;		On exit  : 0/0
  9656 ;;		Unchanged: 0/0
  9657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9658 ;;      Params:         0       0       0       0       0       0
  9659 ;;      Locals:         0       0       0       0       0       0
  9660 ;;      Temps:          0       0       0       0       0       0
  9661 ;;      Totals:         0       0       0       0       0       0
  9662 ;;Total ram usage:        0 bytes
  9663 ;; Hardware stack levels used:    1
  9664 ;; Hardware stack levels required when called:    3
  9665 ;; This function calls:
  9666 ;;		_CCP4_CaptureISR
  9667 ;;		_PIN_MANAGER_IOC
  9668 ;;		_TMR4_ISR
  9669 ;; This function is called by:
  9670 ;;		Interrupt level 1
  9671 ;; This function uses a non-reentrant model
  9672 ;;
  9673                           
  9674  0004                     _INTERRUPT_InterruptManager:
  9675                           
  9676                           ;incstack = 0
  9677  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  9678                           
  9679                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  9680  0005  3180               	pagesel	$
  9681  0006                     i1l3474:
  9682                           
  9683                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  9684  0006  1D8B               	btfss	11,3	;volatile
  9685  0007  2809               	goto	u373_21
  9686  0008  280A               	goto	u373_20
  9687  0009                     u373_21:
  9688  0009  2812               	goto	i1l305
  9689  000A                     u373_20:
  9690  000A                     i1l3476:
  9691  000A  1C0B               	btfss	11,0	;volatile
  9692  000B  280D               	goto	u374_21
  9693  000C  280E               	goto	u374_20
  9694  000D                     u374_21:
  9695  000D  2812               	goto	i1l305
  9696  000E                     u374_20:
  9697  000E                     i1l3478:
  9698                           
  9699                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  9700  000E  3189  21F2  3180   	fcall	_PIN_MANAGER_IOC
  9701                           
  9702                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  9703  0011  2832               	goto	i1l313
  9704  0012                     i1l305:	
  9705                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  9706                           
  9707  0012  1F0B               	btfss	11,6	;volatile
  9708  0013  2815               	goto	u375_21
  9709  0014  2816               	goto	u375_20
  9710  0015                     u375_21:
  9711  0015  2832               	goto	i1l313
  9712  0016                     u375_20:
  9713  0016                     i1l3480:
  9714                           
  9715                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.CCP4IE == 1 && PIR3bits.CCP4IF == 1)
  9716  0016  0021               	movlb	1	; select bank1
  9717  0017  1E93               	btfss	19,5	;volatile
  9718  0018  281A               	goto	u376_21
  9719  0019  281B               	goto	u376_20
  9720  001A                     u376_21:
  9721  001A  2824               	goto	i1l308
  9722  001B                     u376_20:
  9723  001B                     i1l3482:
  9724  001B  0020               	movlb	0	; select bank0
  9725  001C  1E93               	btfss	19,5	;volatile
  9726  001D  281F               	goto	u377_21
  9727  001E  2820               	goto	u377_20
  9728  001F                     u377_21:
  9729  001F  2824               	goto	i1l308
  9730  0020                     u377_20:
  9731  0020                     i1l3484:
  9732                           
  9733                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             CCP4_CaptureISR();
  9734  0020  3189  2184  3180   	fcall	_CCP4_CaptureISR
  9735                           
  9736                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  9737  0023  2832               	goto	i1l313
  9738  0024                     i1l308:	
  9739                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.TMR4IE == 1 && PI
      +                          R3bits.TMR4IF == 1)
  9740                           
  9741  0024  0021               	movlb	1	; select bank1
  9742  0025  1C93               	btfss	19,1	;volatile
  9743  0026  2828               	goto	u378_21
  9744  0027  2829               	goto	u378_20
  9745  0028                     u378_21:
  9746  0028  2832               	goto	i1l312
  9747  0029                     u378_20:
  9748  0029                     i1l3486:
  9749  0029  0020               	movlb	0	; select bank0
  9750  002A  1C93               	btfss	19,1	;volatile
  9751  002B  282D               	goto	u379_21
  9752  002C  282E               	goto	u379_20
  9753  002D                     u379_21:
  9754  002D  2832               	goto	i1l312
  9755  002E                     u379_20:
  9756  002E                     i1l3488:
  9757                           
  9758                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR4_ISR();
  9759  002E  3189  212F  3180   	fcall	_TMR4_ISR
  9760                           
  9761                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  9762  0031  2832               	goto	i1l313
  9763  0032                     i1l312:	
  9764                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  9765                           
  9766  0032                     i1l313:
  9767  0032  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9768  0033  0009               	retfie
  9769  0034                     __end_of_INTERRUPT_InterruptManager:
  9770                           
  9771                           	psect	text42
  9772  092F                     __ptext42:	
  9773 ;; *************** function _TMR4_ISR *****************
  9774 ;; Defined at:
  9775 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  9776 ;; Parameters:    Size  Location     Type
  9777 ;;		None
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;		None
  9780 ;; Return value:  Size  Location     Type
  9781 ;;                  1    wreg      void 
  9782 ;; Registers used:
  9783 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9784 ;; Tracked objects:
  9785 ;;		On entry : 0/0
  9786 ;;		On exit  : 0/0
  9787 ;;		Unchanged: 0/0
  9788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9789 ;;      Params:         0       0       0       0       0       0
  9790 ;;      Locals:         0       0       0       0       0       0
  9791 ;;      Temps:          0       0       0       0       0       0
  9792 ;;      Totals:         0       0       0       0       0       0
  9793 ;;Total ram usage:        0 bytes
  9794 ;; Hardware stack levels used:    1
  9795 ;; Hardware stack levels required when called:    2
  9796 ;; This function calls:
  9797 ;;		Absolute function
  9798 ;;		_TMR4_DefaultInterruptHandler
  9799 ;;		_send_data
  9800 ;; This function is called by:
  9801 ;;		_INTERRUPT_InterruptManager
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           
  9806                           ;psect for function _TMR4_ISR
  9807  092F                     _TMR4_ISR:
  9808  092F                     i1l3320:	
  9809                           ;incstack = 0
  9810                           ; Regs used in _TMR4_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9811                           
  9812                           
  9813                           ;mcc_generated_files/tmr4.c: 123:     PIR3bits.TMR4IF = 0;
  9814  092F  0020               	movlb	0	; select bank0
  9815  0930  1093               	bcf	19,1	;volatile
  9816  0931                     i1l3322:
  9817                           
  9818                           ;mcc_generated_files/tmr4.c: 125:     if(TMR4_InterruptHandler)
  9819  0931  0021               	movlb	1	; select bank1
  9820  0932  086B               	movf	_TMR4_InterruptHandler^(0+128),w
  9821  0933  046C               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
  9822  0934  1903               	btfsc	3,2
  9823  0935  2937               	goto	u343_21
  9824  0936  2938               	goto	u343_20
  9825  0937                     u343_21:
  9826  0937  293D               	goto	i1l244
  9827  0938                     u343_20:
  9828  0938                     i1l3324:
  9829                           
  9830                           ;mcc_generated_files/tmr4.c: 126:     {;mcc_generated_files/tmr4.c: 127:         TMR4_In
      +                          terruptHandler();
  9831  0938  086C               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
  9832  0939  008A               	movwf	10
  9833  093A  086B               	movf	_TMR4_InterruptHandler^(0+128),w
  9834  093B  000A               	callw
  9835  093C  3189               	pagesel	$
  9836  093D                     i1l244:
  9837  093D  0008               	return
  9838  093E                     __end_of_TMR4_ISR:
  9839                           
  9840                           	psect	text43
  9841  0003                     __ptext43:	
  9842 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  9843 ;; Defined at:
  9844 ;;		line 136 in file "mcc_generated_files/tmr4.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;		None
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;		None
  9849 ;; Return value:  Size  Location     Type
  9850 ;;                  1    wreg      void 
  9851 ;; Registers used:
  9852 ;;		None
  9853 ;; Tracked objects:
  9854 ;;		On entry : 0/0
  9855 ;;		On exit  : 0/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9858 ;;      Params:         0       0       0       0       0       0
  9859 ;;      Locals:         0       0       0       0       0       0
  9860 ;;      Temps:          0       0       0       0       0       0
  9861 ;;      Totals:         0       0       0       0       0       0
  9862 ;;Total ram usage:        0 bytes
  9863 ;; Hardware stack levels used:    1
  9864 ;; This function calls:
  9865 ;;		Nothing
  9866 ;; This function is called by:
  9867 ;;		_TMR4_Initialize
  9868 ;;		_TMR4_ISR
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           
  9873                           ;psect for function _TMR4_DefaultInterruptHandler
  9874  0003                     _TMR4_DefaultInterruptHandler:
  9875  0003                     i1l250:	
  9876                           ;incstack = 0
  9877                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  9878                           
  9879  0003  0008               	return
  9880  0004                     __end_of_TMR4_DefaultInterruptHandler:
  9881                           
  9882                           	psect	text44
  9883  0AC3                     __ptext44:	
  9884 ;; *************** function _send_data *****************
  9885 ;; Defined at:
  9886 ;;		line 70 in file "main.c"
  9887 ;; Parameters:    Size  Location     Type
  9888 ;;		None
  9889 ;; Auto vars:     Size  Location     Type
  9890 ;;  i               2    2[COMMON] int 
  9891 ;; Return value:  Size  Location     Type
  9892 ;;                  1    wreg      void 
  9893 ;; Registers used:
  9894 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9895 ;; Tracked objects:
  9896 ;;		On entry : 0/0
  9897 ;;		On exit  : 0/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9900 ;;      Params:         0       0       0       0       0       0
  9901 ;;      Locals:         2       0       0       0       0       0
  9902 ;;      Temps:          1       0       0       0       0       0
  9903 ;;      Totals:         3       0       0       0       0       0
  9904 ;;Total ram usage:        3 bytes
  9905 ;; Hardware stack levels used:    1
  9906 ;; Hardware stack levels required when called:    1
  9907 ;; This function calls:
  9908 ;;		_EUSART_Write
  9909 ;;		_EUSART_is_tx_ready
  9910 ;; This function is called by:
  9911 ;;		_main
  9912 ;;		_TMR4_ISR
  9913 ;; This function uses a non-reentrant model
  9914 ;;
  9915                           
  9916                           
  9917                           ;psect for function _send_data
  9918  0AC3                     _send_data:
  9919  0AC3                     i1l2758:	
  9920                           ;incstack = 0
  9921                           ; Regs used in _send_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9922                           
  9923                           
  9924                           ;main.c: 72:         aux_tempo++;
  9925  0AC3  3001               	movlw	1
  9926  0AC4  0021               	movlb	1	; select bank1
  9927  0AC5  07D6               	addwf	_aux_tempo^(0+128),f
  9928  0AC6  3000               	movlw	0
  9929  0AC7  3DD7               	addwfc	(_aux_tempo+1)^(0+128),f
  9930  0AC8                     i1l2760:
  9931                           
  9932                           ;main.c: 73:         if(aux_tempo == 14)
  9933  0AC8  300E               	movlw	14
  9934  0AC9  0656               	xorwf	_aux_tempo^(0+128),w
  9935  0ACA  0457               	iorwf	(_aux_tempo+1)^(0+128),w
  9936  0ACB  1D03               	btfss	3,2
  9937  0ACC  2ACE               	goto	u222_21
  9938  0ACD  2ACF               	goto	u222_20
  9939  0ACE                     u222_21:
  9940  0ACE  2AF7               	goto	i1l581
  9941  0ACF                     u222_20:
  9942  0ACF                     i1l2762:
  9943                           
  9944                           ;main.c: 74:         {;main.c: 75:             int i=0;
  9945  0ACF  01F9               	clrf	send_data@i
  9946  0AD0  01FA               	clrf	send_data@i+1
  9947                           
  9948                           ;main.c: 76:             while(i<5)
  9949  0AD1  2AE7               	goto	i1l2770
  9950  0AD2                     i1l2764:
  9951                           
  9952                           ;main.c: 77:             {;main.c: 78:                 if(EUSART_is_tx_ready())
  9953  0AD2  3189  2120  318A   	fcall	_EUSART_is_tx_ready
  9954  0AD5  3A00               	xorlw	0
  9955  0AD6  1903               	skipnz
  9956  0AD7  2AD9               	goto	u223_21
  9957  0AD8  2ADA               	goto	u223_20
  9958  0AD9                     u223_21:
  9959  0AD9  2AE7               	goto	i1l2770
  9960  0ADA                     u223_20:
  9961  0ADA                     i1l2766:
  9962                           
  9963                           ;main.c: 79:                     {;main.c: 80:                         EUSART_Write(byte
      +                          [i]);
  9964  0ADA  0879               	movf	send_data@i,w
  9965  0ADB  3E48               	addlw	(low (_byte| (0+256)))& (0+255)
  9966  0ADC  0086               	movwf	6
  9967  0ADD  3001               	movlw	1	; select bank2/3
  9968  0ADE  0087               	movwf	7
  9969  0ADF  0801               	movf	1,w
  9970  0AE0  3188  20B9  318A   	fcall	_EUSART_Write
  9971  0AE3                     i1l2768:
  9972                           
  9973                           ;main.c: 81:                         i++;
  9974  0AE3  3001               	movlw	1
  9975  0AE4  07F9               	addwf	send_data@i,f
  9976  0AE5  3000               	movlw	0
  9977  0AE6  3DFA               	addwfc	send_data@i+1,f
  9978  0AE7                     i1l2770:
  9979                           
  9980                           ;main.c: 76:             while(i<5)
  9981  0AE7  087A               	movf	send_data@i+1,w
  9982  0AE8  3A80               	xorlw	128
  9983  0AE9  00F8               	movwf	??_send_data
  9984  0AEA  3080               	movlw	128
  9985  0AEB  0278               	subwf	??_send_data,w
  9986  0AEC  1D03               	skipz
  9987  0AED  2AF0               	goto	u224_25
  9988  0AEE  3005               	movlw	5
  9989  0AEF  0279               	subwf	send_data@i,w
  9990  0AF0                     u224_25:
  9991  0AF0  1C03               	skipc
  9992  0AF1  2AF3               	goto	u224_21
  9993  0AF2  2AF4               	goto	u224_20
  9994  0AF3                     u224_21:
  9995  0AF3  2AD2               	goto	i1l2764
  9996  0AF4                     u224_20:
  9997  0AF4                     i1l2772:
  9998                           
  9999                           ;main.c: 85:             aux_tempo =0;
 10000  0AF4  0021               	movlb	1	; select bank1
 10001  0AF5  01D6               	clrf	_aux_tempo^(0+128)
 10002  0AF6  01D7               	clrf	(_aux_tempo+1)^(0+128)
 10003  0AF7                     i1l581:
 10004  0AF7  0008               	return
 10005  0AF8                     __end_of_send_data:
 10006                           
 10007                           	psect	text45
 10008  0920                     __ptext45:	
 10009 ;; *************** function _EUSART_is_tx_ready *****************
 10010 ;; Defined at:
 10011 ;;		line 94 in file "mcc_generated_files/eusart.c"
 10012 ;; Parameters:    Size  Location     Type
 10013 ;;		None
 10014 ;; Auto vars:     Size  Location     Type
 10015 ;;		None
 10016 ;; Return value:  Size  Location     Type
 10017 ;;                  1    wreg      _Bool 
 10018 ;; Registers used:
 10019 ;;		wreg, status,2
 10020 ;; Tracked objects:
 10021 ;;		On entry : 0/0
 10022 ;;		On exit  : 0/0
 10023 ;;		Unchanged: 0/0
 10024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10025 ;;      Params:         0       0       0       0       0       0
 10026 ;;      Locals:         1       0       0       0       0       0
 10027 ;;      Temps:          0       0       0       0       0       0
 10028 ;;      Totals:         1       0       0       0       0       0
 10029 ;;Total ram usage:        1 bytes
 10030 ;; Hardware stack levels used:    1
 10031 ;; This function calls:
 10032 ;;		Nothing
 10033 ;; This function is called by:
 10034 ;;		_send_data
 10035 ;; This function uses a non-reentrant model
 10036 ;;
 10037                           
 10038                           
 10039                           ;psect for function _EUSART_is_tx_ready
 10040  0920                     _EUSART_is_tx_ready:
 10041  0920                     i1l2472:	
 10042                           ;incstack = 0
 10043                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
 10044                           
 10045                           
 10046                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
 10047  0920  01F7               	clrf	_EUSART_is_tx_ready$167
 10048  0921                     i1l2474:
 10049  0921  0020               	movlb	0	; select bank0
 10050  0922  1E11               	btfss	17,4	;volatile
 10051  0923  2925               	goto	u191_21
 10052  0924  2926               	goto	u191_20
 10053  0925                     u191_21:
 10054  0925  292D               	goto	i1l2480
 10055  0926                     u191_20:
 10056  0926                     i1l2476:
 10057  0926  0023               	movlb	3	; select bank3
 10058  0927  1E9E               	btfss	30,5	;volatile
 10059  0928  292A               	goto	u192_21
 10060  0929  292B               	goto	u192_20
 10061  092A                     u192_21:
 10062  092A  292D               	goto	i1l2480
 10063  092B                     u192_20:
 10064  092B                     i1l2478:
 10065  092B  01F7               	clrf	_EUSART_is_tx_ready$167
 10066  092C  0AF7               	incf	_EUSART_is_tx_ready$167,f
 10067  092D                     i1l2480:
 10068  092D  0877               	movf	_EUSART_is_tx_ready$167,w
 10069  092E                     i1l48:
 10070  092E  0008               	return
 10071  092F                     __end_of_EUSART_is_tx_ready:
 10072                           
 10073                           	psect	text46
 10074  08B9                     __ptext46:	
 10075 ;; *************** function _EUSART_Write *****************
 10076 ;; Defined at:
 10077 ;;		line 132 in file "mcc_generated_files/eusart.c"
 10078 ;; Parameters:    Size  Location     Type
 10079 ;;  txData          1    wreg     unsigned char 
 10080 ;; Auto vars:     Size  Location     Type
 10081 ;;  txData          1    0[COMMON] unsigned char 
 10082 ;; Return value:  Size  Location     Type
 10083 ;;                  1    wreg      void 
 10084 ;; Registers used:
 10085 ;;		wreg
 10086 ;; Tracked objects:
 10087 ;;		On entry : 0/0
 10088 ;;		On exit  : 0/0
 10089 ;;		Unchanged: 0/0
 10090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10091 ;;      Params:         0       0       0       0       0       0
 10092 ;;      Locals:         1       0       0       0       0       0
 10093 ;;      Temps:          0       0       0       0       0       0
 10094 ;;      Totals:         1       0       0       0       0       0
 10095 ;;Total ram usage:        1 bytes
 10096 ;; Hardware stack levels used:    1
 10097 ;; This function calls:
 10098 ;;		Nothing
 10099 ;; This function is called by:
 10100 ;;		_send_data
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           
 10105                           ;psect for function _EUSART_Write
 10106  08B9                     _EUSART_Write:
 10107                           
 10108                           ;incstack = 0
 10109                           ; Regs used in _EUSART_Write: [wreg]
 10110                           ;EUSART_Write@txData stored from wreg
 10111  08B9  00F7               	movwf	EUSART_Write@txData
 10112  08BA                     i1l2500:
 10113  08BA                     i1l67:	
 10114                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
 10115                           
 10116                           
 10117                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
 10118  08BA  0020               	movlb	0	; select bank0
 10119  08BB  1E11               	btfss	17,4	;volatile
 10120  08BC  28BE               	goto	u195_21
 10121  08BD  28BF               	goto	u195_20
 10122  08BE                     u195_21:
 10123  08BE  28BA               	goto	i1l67
 10124  08BF                     u195_20:
 10125  08BF                     i1l2502:
 10126                           
 10127                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
 10128  08BF  0877               	movf	EUSART_Write@txData,w
 10129  08C0  0023               	movlb	3	; select bank3
 10130  08C1  009A               	movwf	26	;volatile
 10131  08C2                     i1l70:
 10132  08C2  0008               	return
 10133  08C3                     __end_of_EUSART_Write:
 10134                           
 10135                           	psect	text47
 10136  09F2                     __ptext47:	
 10137 ;; *************** function _PIN_MANAGER_IOC *****************
 10138 ;; Defined at:
 10139 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 10140 ;; Parameters:    Size  Location     Type
 10141 ;;		None
 10142 ;; Auto vars:     Size  Location     Type
 10143 ;;		None
 10144 ;; Return value:  Size  Location     Type
 10145 ;;                  1    wreg      void 
 10146 ;; Registers used:
 10147 ;;		wreg, status,2, status,0, pclath, cstack
 10148 ;; Tracked objects:
 10149 ;;		On entry : 0/0
 10150 ;;		On exit  : 0/0
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10153 ;;      Params:         0       0       0       0       0       0
 10154 ;;      Locals:         0       0       0       0       0       0
 10155 ;;      Temps:          0       0       0       0       0       0
 10156 ;;      Totals:         0       0       0       0       0       0
 10157 ;;Total ram usage:        0 bytes
 10158 ;; Hardware stack levels used:    1
 10159 ;; Hardware stack levels required when called:    2
 10160 ;; This function calls:
 10161 ;;		_IOCBF0_ISR
 10162 ;;		_IOCBF3_ISR
 10163 ;;		_IOCBF4_ISR
 10164 ;;		_IOCBF5_ISR
 10165 ;; This function is called by:
 10166 ;;		_INTERRUPT_InterruptManager
 10167 ;; This function uses a non-reentrant model
 10168 ;;
 10169                           
 10170                           
 10171                           ;psect for function _PIN_MANAGER_IOC
 10172  09F2                     _PIN_MANAGER_IOC:
 10173  09F2                     i1l3326:	
 10174                           ;incstack = 0
 10175                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 10176                           
 10177                           
 10178                           ;mcc_generated_files/pin_manager.c: 138:     if(IOCBFbits.IOCBF0 == 1)
 10179  09F2  0027               	movlb	7	; select bank7
 10180  09F3  1C16               	btfss	22,0	;volatile
 10181  09F4  29F6               	goto	u344_21
 10182  09F5  29F7               	goto	u344_20
 10183  09F6                     u344_21:
 10184  09F6  29FA               	goto	i1l3330
 10185  09F7                     u344_20:
 10186  09F7                     i1l3328:
 10187                           
 10188                           ;mcc_generated_files/pin_manager.c: 139:     {;mcc_generated_files/pin_manager.c: 140:  
      +                                 IOCBF0_ISR();
 10189  09F7  3188  20E4  3189   	fcall	_IOCBF0_ISR
 10190  09FA                     i1l3330:
 10191                           
 10192                           ;mcc_generated_files/pin_manager.c: 143:     if(IOCBFbits.IOCBF3 == 1)
 10193  09FA  0027               	movlb	7	; select bank7
 10194  09FB  1D96               	btfss	22,3	;volatile
 10195  09FC  29FE               	goto	u345_21
 10196  09FD  29FF               	goto	u345_20
 10197  09FE                     u345_21:
 10198  09FE  2A02               	goto	i1l3334
 10199  09FF                     u345_20:
 10200  09FF                     i1l3332:
 10201                           
 10202                           ;mcc_generated_files/pin_manager.c: 144:     {;mcc_generated_files/pin_manager.c: 145:  
      +                                 IOCBF3_ISR();
 10203  09FF  3188  20F3  3189   	fcall	_IOCBF3_ISR
 10204  0A02                     i1l3334:
 10205                           
 10206                           ;mcc_generated_files/pin_manager.c: 148:     if(IOCBFbits.IOCBF4 == 1)
 10207  0A02  0027               	movlb	7	; select bank7
 10208  0A03  1E16               	btfss	22,4	;volatile
 10209  0A04  2A06               	goto	u346_21
 10210  0A05  2A07               	goto	u346_20
 10211  0A06                     u346_21:
 10212  0A06  2A0A               	goto	i1l3338
 10213  0A07                     u346_20:
 10214  0A07                     i1l3336:
 10215                           
 10216                           ;mcc_generated_files/pin_manager.c: 149:     {;mcc_generated_files/pin_manager.c: 150:  
      +                                 IOCBF4_ISR();
 10217  0A07  3189  2102  3189   	fcall	_IOCBF4_ISR
 10218  0A0A                     i1l3338:
 10219                           
 10220                           ;mcc_generated_files/pin_manager.c: 153:     if(IOCBFbits.IOCBF5 == 1)
 10221  0A0A  0027               	movlb	7	; select bank7
 10222  0A0B  1E96               	btfss	22,5	;volatile
 10223  0A0C  2A0E               	goto	u347_21
 10224  0A0D  2A0F               	goto	u347_20
 10225  0A0E                     u347_21:
 10226  0A0E  2A12               	goto	i1l421
 10227  0A0F                     u347_20:
 10228  0A0F                     i1l3340:
 10229                           
 10230                           ;mcc_generated_files/pin_manager.c: 154:     {;mcc_generated_files/pin_manager.c: 155:  
      +                                 IOCBF5_ISR();
 10231  0A0F  3189  2111  3189   	fcall	_IOCBF5_ISR
 10232  0A12                     i1l421:
 10233  0A12  0008               	return
 10234  0A13                     __end_of_PIN_MANAGER_IOC:
 10235                           
 10236                           	psect	text48
 10237  0911                     __ptext48:	
 10238 ;; *************** function _IOCBF5_ISR *****************
 10239 ;; Defined at:
 10240 ;;		line 252 in file "mcc_generated_files/pin_manager.c"
 10241 ;; Parameters:    Size  Location     Type
 10242 ;;		None
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;		None
 10245 ;; Return value:  Size  Location     Type
 10246 ;;                  1    wreg      void 
 10247 ;; Registers used:
 10248 ;;		wreg, status,2, status,0, pclath, cstack
 10249 ;; Tracked objects:
 10250 ;;		On entry : 0/0
 10251 ;;		On exit  : 0/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10254 ;;      Params:         0       0       0       0       0       0
 10255 ;;      Locals:         0       0       0       0       0       0
 10256 ;;      Temps:          0       0       0       0       0       0
 10257 ;;      Totals:         0       0       0       0       0       0
 10258 ;;Total ram usage:        0 bytes
 10259 ;; Hardware stack levels used:    1
 10260 ;; Hardware stack levels required when called:    1
 10261 ;; This function calls:
 10262 ;;		Absolute function
 10263 ;;		_IOCBF5_DefaultInterruptHandler
 10264 ;;		_sensor4
 10265 ;; This function is called by:
 10266 ;;		_PIN_MANAGER_IOC
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           
 10270                           
 10271                           ;psect for function _IOCBF5_ISR
 10272  0911                     _IOCBF5_ISR:
 10273  0911                     i1l2750:	
 10274                           ;incstack = 0
 10275                           ; Regs used in _IOCBF5_ISR: [wreg+status,2+status,0+pclath+cstack]
 10276                           
 10277                           
 10278                           ;mcc_generated_files/pin_manager.c: 257:     if(IOCBF5_InterruptHandler)
 10279  0911  0021               	movlb	1	; select bank1
 10280  0912  0863               	movf	_IOCBF5_InterruptHandler^(0+128),w
 10281  0913  0464               	iorwf	(_IOCBF5_InterruptHandler+1)^(0+128),w
 10282  0914  1903               	btfsc	3,2
 10283  0915  2917               	goto	u220_21
 10284  0916  2918               	goto	u220_20
 10285  0917                     u220_21:
 10286  0917  291D               	goto	i1l2754
 10287  0918                     u220_20:
 10288  0918                     i1l2752:
 10289                           
 10290                           ;mcc_generated_files/pin_manager.c: 258:     {;mcc_generated_files/pin_manager.c: 259:  
      +                                 IOCBF5_InterruptHandler();
 10291  0918  0864               	movf	(_IOCBF5_InterruptHandler+1)^(0+128),w
 10292  0919  008A               	movwf	10
 10293  091A  0863               	movf	_IOCBF5_InterruptHandler^(0+128),w
 10294  091B  000A               	callw
 10295  091C  3189               	pagesel	$
 10296  091D                     i1l2754:
 10297                           
 10298                           ;mcc_generated_files/pin_manager.c: 261:     IOCBFbits.IOCBF5 = 0;
 10299  091D  0027               	movlb	7	; select bank7
 10300  091E  1296               	bcf	22,5	;volatile
 10301  091F                     i1l455:
 10302  091F  0008               	return
 10303  0920                     __end_of_IOCBF5_ISR:
 10304                           
 10305                           	psect	text49
 10306  0002                     __ptext49:	
 10307 ;; *************** function _IOCBF5_DefaultInterruptHandler *****************
 10308 ;; Defined at:
 10309 ;;		line 274 in file "mcc_generated_files/pin_manager.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;		None
 10312 ;; Auto vars:     Size  Location     Type
 10313 ;;		None
 10314 ;; Return value:  Size  Location     Type
 10315 ;;                  1    wreg      void 
 10316 ;; Registers used:
 10317 ;;		None
 10318 ;; Tracked objects:
 10319 ;;		On entry : 0/0
 10320 ;;		On exit  : 0/0
 10321 ;;		Unchanged: 0/0
 10322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10323 ;;      Params:         0       0       0       0       0       0
 10324 ;;      Locals:         0       0       0       0       0       0
 10325 ;;      Temps:          0       0       0       0       0       0
 10326 ;;      Totals:         0       0       0       0       0       0
 10327 ;;Total ram usage:        0 bytes
 10328 ;; Hardware stack levels used:    1
 10329 ;; This function calls:
 10330 ;;		Nothing
 10331 ;; This function is called by:
 10332 ;;		_PIN_MANAGER_Initialize
 10333 ;;		_IOCBF5_ISR
 10334 ;; This function uses a non-reentrant model
 10335 ;;
 10336                           
 10337                           
 10338                           ;psect for function _IOCBF5_DefaultInterruptHandler
 10339  0002                     _IOCBF5_DefaultInterruptHandler:
 10340  0002                     i1l461:	
 10341                           ;incstack = 0
 10342                           ; Regs used in _IOCBF5_DefaultInterruptHandler: []
 10343                           
 10344  0002  0008               	return
 10345  0003                     __end_of_IOCBF5_DefaultInterruptHandler:
 10346                           
 10347                           	psect	text50
 10348  08D9                     __ptext50:	
 10349 ;; *************** function _sensor4 *****************
 10350 ;; Defined at:
 10351 ;;		line 107 in file "main.c"
 10352 ;; Parameters:    Size  Location     Type
 10353 ;;		None
 10354 ;; Auto vars:     Size  Location     Type
 10355 ;;		None
 10356 ;; Return value:  Size  Location     Type
 10357 ;;                  1    wreg      void 
 10358 ;; Registers used:
 10359 ;;		wreg
 10360 ;; Tracked objects:
 10361 ;;		On entry : 0/0
 10362 ;;		On exit  : 0/0
 10363 ;;		Unchanged: 0/0
 10364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10365 ;;      Params:         0       0       0       0       0       0
 10366 ;;      Locals:         0       0       0       0       0       0
 10367 ;;      Temps:          1       0       0       0       0       0
 10368 ;;      Totals:         1       0       0       0       0       0
 10369 ;;Total ram usage:        1 bytes
 10370 ;; Hardware stack levels used:    1
 10371 ;; This function calls:
 10372 ;;		Nothing
 10373 ;; This function is called by:
 10374 ;;		_main
 10375 ;;		_IOCBF5_ISR
 10376 ;; This function uses a non-reentrant model
 10377 ;;
 10378                           
 10379                           
 10380                           ;psect for function _sensor4
 10381  08D9                     _sensor4:
 10382  08D9                     i1l2538:	
 10383                           ;incstack = 0
 10384                           ; Regs used in _sensor4: [wreg]
 10385                           
 10386                           
 10387                           ;main.c: 109:         and_ating=4;
 10388  08D9  3004               	movlw	4
 10389  08DA  00F7               	movwf	??_sensor4
 10390  08DB  0877               	movf	??_sensor4,w
 10391  08DC  0020               	movlb	0	; select bank0
 10392  08DD  00EF               	movwf	_and_ating
 10393                           
 10394                           ;main.c: 110:         and_ating2=3;
 10395  08DE  3003               	movlw	3
 10396  08DF  0021               	movlb	1	; select bank1
 10397  08E0  00C8               	movwf	_and_ating2^(0+128)
 10398  08E1  3000               	movlw	0
 10399  08E2  00C9               	movwf	(_and_ating2^(0+128)+1)
 10400  08E3                     i1l593:
 10401  08E3  0008               	return
 10402  08E4                     __end_of_sensor4:
 10403                           
 10404                           	psect	text51
 10405  0902                     __ptext51:	
 10406 ;; *************** function _IOCBF4_ISR *****************
 10407 ;; Defined at:
 10408 ;;		line 222 in file "mcc_generated_files/pin_manager.c"
 10409 ;; Parameters:    Size  Location     Type
 10410 ;;		None
 10411 ;; Auto vars:     Size  Location     Type
 10412 ;;		None
 10413 ;; Return value:  Size  Location     Type
 10414 ;;                  1    wreg      void 
 10415 ;; Registers used:
 10416 ;;		wreg, status,2, status,0, pclath, cstack
 10417 ;; Tracked objects:
 10418 ;;		On entry : 0/0
 10419 ;;		On exit  : 0/0
 10420 ;;		Unchanged: 0/0
 10421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10422 ;;      Params:         0       0       0       0       0       0
 10423 ;;      Locals:         0       0       0       0       0       0
 10424 ;;      Temps:          0       0       0       0       0       0
 10425 ;;      Totals:         0       0       0       0       0       0
 10426 ;;Total ram usage:        0 bytes
 10427 ;; Hardware stack levels used:    1
 10428 ;; Hardware stack levels required when called:    1
 10429 ;; This function calls:
 10430 ;;		Absolute function
 10431 ;;		_IOCBF4_DefaultInterruptHandler
 10432 ;;		_sensor3
 10433 ;; This function is called by:
 10434 ;;		_PIN_MANAGER_IOC
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           
 10439                           ;psect for function _IOCBF4_ISR
 10440  0902                     _IOCBF4_ISR:
 10441  0902                     i1l2744:	
 10442                           ;incstack = 0
 10443                           ; Regs used in _IOCBF4_ISR: [wreg+status,2+status,0+pclath+cstack]
 10444                           
 10445                           
 10446                           ;mcc_generated_files/pin_manager.c: 227:     if(IOCBF4_InterruptHandler)
 10447  0902  0021               	movlb	1	; select bank1
 10448  0903  0865               	movf	_IOCBF4_InterruptHandler^(0+128),w
 10449  0904  0466               	iorwf	(_IOCBF4_InterruptHandler+1)^(0+128),w
 10450  0905  1903               	btfsc	3,2
 10451  0906  2908               	goto	u219_21
 10452  0907  2909               	goto	u219_20
 10453  0908                     u219_21:
 10454  0908  290E               	goto	i1l2748
 10455  0909                     u219_20:
 10456  0909                     i1l2746:
 10457                           
 10458                           ;mcc_generated_files/pin_manager.c: 228:     {;mcc_generated_files/pin_manager.c: 229:  
      +                                 IOCBF4_InterruptHandler();
 10459  0909  0866               	movf	(_IOCBF4_InterruptHandler+1)^(0+128),w
 10460  090A  008A               	movwf	10
 10461  090B  0865               	movf	_IOCBF4_InterruptHandler^(0+128),w
 10462  090C  000A               	callw
 10463  090D  3189               	pagesel	$
 10464  090E                     i1l2748:
 10465                           
 10466                           ;mcc_generated_files/pin_manager.c: 231:     IOCBFbits.IOCBF4 = 0;
 10467  090E  0027               	movlb	7	; select bank7
 10468  090F  1216               	bcf	22,4	;volatile
 10469  0910                     i1l445:
 10470  0910  0008               	return
 10471  0911                     __end_of_IOCBF4_ISR:
 10472                           
 10473                           	psect	text52
 10474  082D                     __ptext52:	
 10475 ;; *************** function _IOCBF4_DefaultInterruptHandler *****************
 10476 ;; Defined at:
 10477 ;;		line 244 in file "mcc_generated_files/pin_manager.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;		None
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;		None
 10482 ;; Return value:  Size  Location     Type
 10483 ;;                  1    wreg      void 
 10484 ;; Registers used:
 10485 ;;		None
 10486 ;; Tracked objects:
 10487 ;;		On entry : 0/0
 10488 ;;		On exit  : 0/0
 10489 ;;		Unchanged: 0/0
 10490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10491 ;;      Params:         0       0       0       0       0       0
 10492 ;;      Locals:         0       0       0       0       0       0
 10493 ;;      Temps:          0       0       0       0       0       0
 10494 ;;      Totals:         0       0       0       0       0       0
 10495 ;;Total ram usage:        0 bytes
 10496 ;; Hardware stack levels used:    1
 10497 ;; This function calls:
 10498 ;;		Nothing
 10499 ;; This function is called by:
 10500 ;;		_PIN_MANAGER_Initialize
 10501 ;;		_IOCBF4_ISR
 10502 ;; This function uses a non-reentrant model
 10503 ;;
 10504                           
 10505                           
 10506                           ;psect for function _IOCBF4_DefaultInterruptHandler
 10507  082D                     _IOCBF4_DefaultInterruptHandler:
 10508  082D                     i1l451:	
 10509                           ;incstack = 0
 10510                           ; Regs used in _IOCBF4_DefaultInterruptHandler: []
 10511                           
 10512  082D  0008               	return
 10513  082E                     __end_of_IOCBF4_DefaultInterruptHandler:
 10514                           
 10515                           	psect	text53
 10516  08CE                     __ptext53:	
 10517 ;; *************** function _sensor3 *****************
 10518 ;; Defined at:
 10519 ;;		line 101 in file "main.c"
 10520 ;; Parameters:    Size  Location     Type
 10521 ;;		None
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;		None
 10524 ;; Return value:  Size  Location     Type
 10525 ;;                  1    wreg      void 
 10526 ;; Registers used:
 10527 ;;		wreg
 10528 ;; Tracked objects:
 10529 ;;		On entry : 0/0
 10530 ;;		On exit  : 0/0
 10531 ;;		Unchanged: 0/0
 10532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10533 ;;      Params:         0       0       0       0       0       0
 10534 ;;      Locals:         0       0       0       0       0       0
 10535 ;;      Temps:          1       0       0       0       0       0
 10536 ;;      Totals:         1       0       0       0       0       0
 10537 ;;Total ram usage:        1 bytes
 10538 ;; Hardware stack levels used:    1
 10539 ;; This function calls:
 10540 ;;		Nothing
 10541 ;; This function is called by:
 10542 ;;		_main
 10543 ;;		_IOCBF4_ISR
 10544 ;; This function uses a non-reentrant model
 10545 ;;
 10546                           
 10547                           
 10548                           ;psect for function _sensor3
 10549  08CE                     _sensor3:
 10550  08CE                     i1l2536:	
 10551                           ;incstack = 0
 10552                           ; Regs used in _sensor3: [wreg]
 10553                           
 10554                           
 10555                           ;main.c: 103:         and_ating=3;
 10556  08CE  3003               	movlw	3
 10557  08CF  00F7               	movwf	??_sensor3
 10558  08D0  0877               	movf	??_sensor3,w
 10559  08D1  0020               	movlb	0	; select bank0
 10560  08D2  00EF               	movwf	_and_ating
 10561                           
 10562                           ;main.c: 104:         and_ating2=2;
 10563  08D3  3002               	movlw	2
 10564  08D4  0021               	movlb	1	; select bank1
 10565  08D5  00C8               	movwf	_and_ating2^(0+128)
 10566  08D6  3000               	movlw	0
 10567  08D7  00C9               	movwf	(_and_ating2^(0+128)+1)
 10568  08D8                     i1l590:
 10569  08D8  0008               	return
 10570  08D9                     __end_of_sensor3:
 10571                           
 10572                           	psect	text54
 10573  08F3                     __ptext54:	
 10574 ;; *************** function _IOCBF3_ISR *****************
 10575 ;; Defined at:
 10576 ;;		line 192 in file "mcc_generated_files/pin_manager.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;		None
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;		None
 10581 ;; Return value:  Size  Location     Type
 10582 ;;                  1    wreg      void 
 10583 ;; Registers used:
 10584 ;;		wreg, status,2, status,0, pclath, cstack
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10590 ;;      Params:         0       0       0       0       0       0
 10591 ;;      Locals:         0       0       0       0       0       0
 10592 ;;      Temps:          0       0       0       0       0       0
 10593 ;;      Totals:         0       0       0       0       0       0
 10594 ;;Total ram usage:        0 bytes
 10595 ;; Hardware stack levels used:    1
 10596 ;; Hardware stack levels required when called:    1
 10597 ;; This function calls:
 10598 ;;		Absolute function
 10599 ;;		_IOCBF3_DefaultInterruptHandler
 10600 ;;		_sensor2
 10601 ;; This function is called by:
 10602 ;;		_PIN_MANAGER_IOC
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           
 10607                           ;psect for function _IOCBF3_ISR
 10608  08F3                     _IOCBF3_ISR:
 10609  08F3                     i1l2738:	
 10610                           ;incstack = 0
 10611                           ; Regs used in _IOCBF3_ISR: [wreg+status,2+status,0+pclath+cstack]
 10612                           
 10613                           
 10614                           ;mcc_generated_files/pin_manager.c: 197:     if(IOCBF3_InterruptHandler)
 10615  08F3  0021               	movlb	1	; select bank1
 10616  08F4  0867               	movf	_IOCBF3_InterruptHandler^(0+128),w
 10617  08F5  0468               	iorwf	(_IOCBF3_InterruptHandler+1)^(0+128),w
 10618  08F6  1903               	btfsc	3,2
 10619  08F7  28F9               	goto	u218_21
 10620  08F8  28FA               	goto	u218_20
 10621  08F9                     u218_21:
 10622  08F9  28FF               	goto	i1l2742
 10623  08FA                     u218_20:
 10624  08FA                     i1l2740:
 10625                           
 10626                           ;mcc_generated_files/pin_manager.c: 198:     {;mcc_generated_files/pin_manager.c: 199:  
      +                                 IOCBF3_InterruptHandler();
 10627  08FA  0868               	movf	(_IOCBF3_InterruptHandler+1)^(0+128),w
 10628  08FB  008A               	movwf	10
 10629  08FC  0867               	movf	_IOCBF3_InterruptHandler^(0+128),w
 10630  08FD  000A               	callw
 10631  08FE  3188               	pagesel	$
 10632  08FF                     i1l2742:
 10633                           
 10634                           ;mcc_generated_files/pin_manager.c: 201:     IOCBFbits.IOCBF3 = 0;
 10635  08FF  0027               	movlb	7	; select bank7
 10636  0900  1196               	bcf	22,3	;volatile
 10637  0901                     i1l435:
 10638  0901  0008               	return
 10639  0902                     __end_of_IOCBF3_ISR:
 10640                           
 10641                           	psect	text55
 10642  082C                     __ptext55:	
 10643 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
 10644 ;; Defined at:
 10645 ;;		line 214 in file "mcc_generated_files/pin_manager.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;		None
 10648 ;; Auto vars:     Size  Location     Type
 10649 ;;		None
 10650 ;; Return value:  Size  Location     Type
 10651 ;;                  1    wreg      void 
 10652 ;; Registers used:
 10653 ;;		None
 10654 ;; Tracked objects:
 10655 ;;		On entry : 0/0
 10656 ;;		On exit  : 0/0
 10657 ;;		Unchanged: 0/0
 10658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10659 ;;      Params:         0       0       0       0       0       0
 10660 ;;      Locals:         0       0       0       0       0       0
 10661 ;;      Temps:          0       0       0       0       0       0
 10662 ;;      Totals:         0       0       0       0       0       0
 10663 ;;Total ram usage:        0 bytes
 10664 ;; Hardware stack levels used:    1
 10665 ;; This function calls:
 10666 ;;		Nothing
 10667 ;; This function is called by:
 10668 ;;		_PIN_MANAGER_Initialize
 10669 ;;		_IOCBF3_ISR
 10670 ;; This function uses a non-reentrant model
 10671 ;;
 10672                           
 10673                           
 10674                           ;psect for function _IOCBF3_DefaultInterruptHandler
 10675  082C                     _IOCBF3_DefaultInterruptHandler:
 10676  082C                     i1l441:	
 10677                           ;incstack = 0
 10678                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
 10679                           
 10680  082C  0008               	return
 10681  082D                     __end_of_IOCBF3_DefaultInterruptHandler:
 10682                           
 10683                           	psect	text56
 10684  08C3                     __ptext56:	
 10685 ;; *************** function _sensor2 *****************
 10686 ;; Defined at:
 10687 ;;		line 95 in file "main.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;		None
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;		None
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  1    wreg      void 
 10694 ;; Registers used:
 10695 ;;		wreg
 10696 ;; Tracked objects:
 10697 ;;		On entry : 0/0
 10698 ;;		On exit  : 0/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10701 ;;      Params:         0       0       0       0       0       0
 10702 ;;      Locals:         0       0       0       0       0       0
 10703 ;;      Temps:          1       0       0       0       0       0
 10704 ;;      Totals:         1       0       0       0       0       0
 10705 ;;Total ram usage:        1 bytes
 10706 ;; Hardware stack levels used:    1
 10707 ;; This function calls:
 10708 ;;		Nothing
 10709 ;; This function is called by:
 10710 ;;		_main
 10711 ;;		_IOCBF3_ISR
 10712 ;; This function uses a non-reentrant model
 10713 ;;
 10714                           
 10715                           
 10716                           ;psect for function _sensor2
 10717  08C3                     _sensor2:
 10718  08C3                     i1l2534:	
 10719                           ;incstack = 0
 10720                           ; Regs used in _sensor2: [wreg]
 10721                           
 10722                           
 10723                           ;main.c: 97:         and_ating=2;
 10724  08C3  3002               	movlw	2
 10725  08C4  00F7               	movwf	??_sensor2
 10726  08C5  0877               	movf	??_sensor2,w
 10727  08C6  0020               	movlb	0	; select bank0
 10728  08C7  00EF               	movwf	_and_ating
 10729                           
 10730                           ;main.c: 98:         and_ating2=1;
 10731  08C8  3001               	movlw	1
 10732  08C9  0021               	movlb	1	; select bank1
 10733  08CA  00C8               	movwf	_and_ating2^(0+128)
 10734  08CB  3000               	movlw	0
 10735  08CC  00C9               	movwf	(_and_ating2^(0+128)+1)
 10736  08CD                     i1l587:
 10737  08CD  0008               	return
 10738  08CE                     __end_of_sensor2:
 10739                           
 10740                           	psect	text57
 10741  08E4                     __ptext57:	
 10742 ;; *************** function _IOCBF0_ISR *****************
 10743 ;; Defined at:
 10744 ;;		line 162 in file "mcc_generated_files/pin_manager.c"
 10745 ;; Parameters:    Size  Location     Type
 10746 ;;		None
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;		None
 10749 ;; Return value:  Size  Location     Type
 10750 ;;                  1    wreg      void 
 10751 ;; Registers used:
 10752 ;;		wreg, status,2, status,0, pclath, cstack
 10753 ;; Tracked objects:
 10754 ;;		On entry : 0/0
 10755 ;;		On exit  : 0/0
 10756 ;;		Unchanged: 0/0
 10757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10758 ;;      Params:         0       0       0       0       0       0
 10759 ;;      Locals:         0       0       0       0       0       0
 10760 ;;      Temps:          0       0       0       0       0       0
 10761 ;;      Totals:         0       0       0       0       0       0
 10762 ;;Total ram usage:        0 bytes
 10763 ;; Hardware stack levels used:    1
 10764 ;; Hardware stack levels required when called:    1
 10765 ;; This function calls:
 10766 ;;		Absolute function
 10767 ;;		_IOCBF0_DefaultInterruptHandler
 10768 ;;		_sensor1
 10769 ;; This function is called by:
 10770 ;;		_PIN_MANAGER_IOC
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774                           
 10775                           ;psect for function _IOCBF0_ISR
 10776  08E4                     _IOCBF0_ISR:
 10777  08E4                     i1l2732:	
 10778                           ;incstack = 0
 10779                           ; Regs used in _IOCBF0_ISR: [wreg+status,2+status,0+pclath+cstack]
 10780                           
 10781                           
 10782                           ;mcc_generated_files/pin_manager.c: 167:     if(IOCBF0_InterruptHandler)
 10783  08E4  0021               	movlb	1	; select bank1
 10784  08E5  0869               	movf	_IOCBF0_InterruptHandler^(0+128),w
 10785  08E6  046A               	iorwf	(_IOCBF0_InterruptHandler+1)^(0+128),w
 10786  08E7  1903               	btfsc	3,2
 10787  08E8  28EA               	goto	u217_21
 10788  08E9  28EB               	goto	u217_20
 10789  08EA                     u217_21:
 10790  08EA  28F0               	goto	i1l2736
 10791  08EB                     u217_20:
 10792  08EB                     i1l2734:
 10793                           
 10794                           ;mcc_generated_files/pin_manager.c: 168:     {;mcc_generated_files/pin_manager.c: 169:  
      +                                 IOCBF0_InterruptHandler();
 10795  08EB  086A               	movf	(_IOCBF0_InterruptHandler+1)^(0+128),w
 10796  08EC  008A               	movwf	10
 10797  08ED  0869               	movf	_IOCBF0_InterruptHandler^(0+128),w
 10798  08EE  000A               	callw
 10799  08EF  3188               	pagesel	$
 10800  08F0                     i1l2736:
 10801                           
 10802                           ;mcc_generated_files/pin_manager.c: 171:     IOCBFbits.IOCBF0 = 0;
 10803  08F0  0027               	movlb	7	; select bank7
 10804  08F1  1016               	bcf	22,0	;volatile
 10805  08F2                     i1l425:
 10806  08F2  0008               	return
 10807  08F3                     __end_of_IOCBF0_ISR:
 10808                           
 10809                           	psect	text58
 10810  082B                     __ptext58:	
 10811 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
 10812 ;; Defined at:
 10813 ;;		line 184 in file "mcc_generated_files/pin_manager.c"
 10814 ;; Parameters:    Size  Location     Type
 10815 ;;		None
 10816 ;; Auto vars:     Size  Location     Type
 10817 ;;		None
 10818 ;; Return value:  Size  Location     Type
 10819 ;;                  1    wreg      void 
 10820 ;; Registers used:
 10821 ;;		None
 10822 ;; Tracked objects:
 10823 ;;		On entry : 0/0
 10824 ;;		On exit  : 0/0
 10825 ;;		Unchanged: 0/0
 10826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10827 ;;      Params:         0       0       0       0       0       0
 10828 ;;      Locals:         0       0       0       0       0       0
 10829 ;;      Temps:          0       0       0       0       0       0
 10830 ;;      Totals:         0       0       0       0       0       0
 10831 ;;Total ram usage:        0 bytes
 10832 ;; Hardware stack levels used:    1
 10833 ;; This function calls:
 10834 ;;		Nothing
 10835 ;; This function is called by:
 10836 ;;		_PIN_MANAGER_Initialize
 10837 ;;		_IOCBF0_ISR
 10838 ;; This function uses a non-reentrant model
 10839 ;;
 10840                           
 10841                           
 10842                           ;psect for function _IOCBF0_DefaultInterruptHandler
 10843  082B                     _IOCBF0_DefaultInterruptHandler:
 10844  082B                     i1l431:	
 10845                           ;incstack = 0
 10846                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
 10847                           
 10848  082B  0008               	return
 10849  082C                     __end_of_IOCBF0_DefaultInterruptHandler:
 10850                           
 10851                           	psect	text59
 10852  0841                     __ptext59:	
 10853 ;; *************** function _sensor1 *****************
 10854 ;; Defined at:
 10855 ;;		line 89 in file "main.c"
 10856 ;; Parameters:    Size  Location     Type
 10857 ;;		None
 10858 ;; Auto vars:     Size  Location     Type
 10859 ;;		None
 10860 ;; Return value:  Size  Location     Type
 10861 ;;                  1    wreg      void 
 10862 ;; Registers used:
 10863 ;;		status,2
 10864 ;; Tracked objects:
 10865 ;;		On entry : 0/0
 10866 ;;		On exit  : 0/0
 10867 ;;		Unchanged: 0/0
 10868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10869 ;;      Params:         0       0       0       0       0       0
 10870 ;;      Locals:         0       0       0       0       0       0
 10871 ;;      Temps:          0       0       0       0       0       0
 10872 ;;      Totals:         0       0       0       0       0       0
 10873 ;;Total ram usage:        0 bytes
 10874 ;; Hardware stack levels used:    1
 10875 ;; This function calls:
 10876 ;;		Nothing
 10877 ;; This function is called by:
 10878 ;;		_main
 10879 ;;		_IOCBF0_ISR
 10880 ;; This function uses a non-reentrant model
 10881 ;;
 10882                           
 10883                           
 10884                           ;psect for function _sensor1
 10885  0841                     _sensor1:
 10886  0841                     i1l2530:	
 10887                           ;incstack = 0
 10888                           ; Regs used in _sensor1: [status,2]
 10889                           
 10890                           
 10891                           ;main.c: 91:         and_ating=1;
 10892  0841  0020               	movlb	0	; select bank0
 10893  0842  01EF               	clrf	_and_ating
 10894  0843  0AEF               	incf	_and_ating,f
 10895  0844                     i1l2532:
 10896                           
 10897                           ;main.c: 92:         and_ating2=0;
 10898  0844  0021               	movlb	1	; select bank1
 10899  0845  01C8               	clrf	_and_ating2^(0+128)
 10900  0846  01C9               	clrf	(_and_ating2+1)^(0+128)
 10901  0847                     i1l584:
 10902  0847  0008               	return
 10903  0848                     __end_of_sensor1:
 10904                           
 10905                           	psect	text60
 10906  0984                     __ptext60:	
 10907 ;; *************** function _CCP4_CaptureISR *****************
 10908 ;; Defined at:
 10909 ;;		line 89 in file "mcc_generated_files/ccp4.c"
 10910 ;; Parameters:    Size  Location     Type
 10911 ;;		None
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;  module          2    5[COMMON] struct CCPR4Reg_tag
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  1    wreg      void 
 10916 ;; Registers used:
 10917 ;;		wreg, status,2, status,0, pclath, cstack
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/0
 10920 ;;		On exit  : 0/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10923 ;;      Params:         0       0       0       0       0       0
 10924 ;;      Locals:         2       0       0       0       0       0
 10925 ;;      Temps:          1       0       0       0       0       0
 10926 ;;      Totals:         3       0       0       0       0       0
 10927 ;;Total ram usage:        3 bytes
 10928 ;; Hardware stack levels used:    1
 10929 ;; Hardware stack levels required when called:    2
 10930 ;; This function calls:
 10931 ;;		Absolute function
 10932 ;;		_CCP4_DefaultCallBack
 10933 ;;		_get_pulse
 10934 ;; This function is called by:
 10935 ;;		_INTERRUPT_InterruptManager
 10936 ;; This function uses a non-reentrant model
 10937 ;;
 10938                           
 10939                           
 10940                           ;psect for function _CCP4_CaptureISR
 10941  0984                     _CCP4_CaptureISR:
 10942  0984                     i1l3342:	
 10943                           ;incstack = 0
 10944                           ; Regs used in _CCP4_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
 10945                           
 10946                           
 10947                           ;mcc_generated_files/ccp4.c: 91:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 94:     PIR3bits.CCP4IF = 0;
 10948  0984  0020               	movlb	0	; select bank0
 10949  0985  1293               	bcf	19,5	;volatile
 10950  0986                     i1l3344:
 10951                           
 10952                           ;mcc_generated_files/ccp4.c: 97:     module.ccpr4l = CCPR4L;
 10953  0986  0026               	movlb	6	; select bank6
 10954  0987  0818               	movf	24,w	;volatile
 10955  0988  00FB               	movwf	??_CCP4_CaptureISR
 10956  0989  087B               	movf	??_CCP4_CaptureISR,w
 10957  098A  00FC               	movwf	CCP4_CaptureISR@module
 10958                           
 10959                           ;mcc_generated_files/ccp4.c: 98:     module.ccpr4h = CCPR4H;
 10960  098B  0819               	movf	25,w	;volatile
 10961  098C  00FB               	movwf	??_CCP4_CaptureISR
 10962  098D  087B               	movf	??_CCP4_CaptureISR,w
 10963  098E  00FD               	movwf	CCP4_CaptureISR@module+1
 10964  098F                     i1l3346:
 10965                           
 10966                           ;mcc_generated_files/ccp4.c: 101:     CCP4_CallBack(module.ccpr4_16Bit);
 10967  098F  087D               	movf	CCP4_CaptureISR@module+1,w
 10968  0990  00FA               	movwf	get_pulse@capturedValue+1
 10969  0991  087C               	movf	CCP4_CaptureISR@module,w
 10970  0992  00F9               	movwf	get_pulse@capturedValue
 10971  0993  0022               	movlb	2	; select bank2
 10972  0994  084E               	movf	(_CCP4_CallBack+1)^(0+256),w
 10973  0995  008A               	movwf	10
 10974  0996  084D               	movf	_CCP4_CallBack^(0+256),w
 10975  0997  000A               	callw
 10976  0998  3189               	pagesel	$
 10977  0999                     i1l346:
 10978  0999  0008               	return
 10979  099A                     __end_of_CCP4_CaptureISR:
 10980                           
 10981                           	psect	text61
 10982  082A                     __ptext61:	
 10983 ;; *************** function _CCP4_DefaultCallBack *****************
 10984 ;; Defined at:
 10985 ;;		line 60 in file "mcc_generated_files/ccp4.c"
 10986 ;; Parameters:    Size  Location     Type
 10987 ;;  capturedValu    2    2[COMMON] unsigned short 
 10988 ;; Auto vars:     Size  Location     Type
 10989 ;;		None
 10990 ;; Return value:  Size  Location     Type
 10991 ;;                  1    wreg      void 
 10992 ;; Registers used:
 10993 ;;		None
 10994 ;; Tracked objects:
 10995 ;;		On entry : 0/0
 10996 ;;		On exit  : 0/0
 10997 ;;		Unchanged: 0/0
 10998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10999 ;;      Params:         2       0       0       0       0       0
 11000 ;;      Locals:         0       0       0       0       0       0
 11001 ;;      Temps:          0       0       0       0       0       0
 11002 ;;      Totals:         2       0       0       0       0       0
 11003 ;;Total ram usage:        2 bytes
 11004 ;; Hardware stack levels used:    1
 11005 ;; This function calls:
 11006 ;;		Nothing
 11007 ;; This function is called by:
 11008 ;;		_CCP4_Initialize
 11009 ;;		_CCP4_CaptureISR
 11010 ;; This function uses a non-reentrant model
 11011 ;;
 11012                           
 11013                           
 11014                           ;psect for function _CCP4_DefaultCallBack
 11015  082A                     _CCP4_DefaultCallBack:
 11016  082A                     i1l340:	
 11017                           ;incstack = 0
 11018                           ; Regs used in _CCP4_DefaultCallBack: []
 11019                           
 11020  082A  0008               	return
 11021  082B                     __end_of_CCP4_DefaultCallBack:
 11022                           
 11023                           	psect	text62
 11024  0A9E                     __ptext62:	
 11025 ;; *************** function _get_pulse *****************
 11026 ;; Defined at:
 11027 ;;		line 113 in file "main.c"
 11028 ;; Parameters:    Size  Location     Type
 11029 ;;  capturedValu    2    2[COMMON] unsigned short 
 11030 ;; Auto vars:     Size  Location     Type
 11031 ;;		None
 11032 ;; Return value:  Size  Location     Type
 11033 ;;                  1    wreg      void 
 11034 ;; Registers used:
 11035 ;;		wreg, status,2, status,0, pclath, cstack
 11036 ;; Tracked objects:
 11037 ;;		On entry : 0/0
 11038 ;;		On exit  : 0/0
 11039 ;;		Unchanged: 0/0
 11040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11041 ;;      Params:         2       0       0       0       0       0
 11042 ;;      Locals:         0       0       0       0       0       0
 11043 ;;      Temps:          0       0       0       0       0       0
 11044 ;;      Totals:         2       0       0       0       0       0
 11045 ;;Total ram usage:        2 bytes
 11046 ;; Hardware stack levels used:    1
 11047 ;; Hardware stack levels required when called:    1
 11048 ;; This function calls:
 11049 ;;		_TMR1_WriteTimer
 11050 ;; This function is called by:
 11051 ;;		_main
 11052 ;;		_CCP4_CaptureISR
 11053 ;; This function uses a non-reentrant model
 11054 ;;
 11055                           
 11056                           
 11057                           ;psect for function _get_pulse
 11058  0A9E                     _get_pulse:
 11059  0A9E                     i1l2774:	
 11060                           ;incstack = 0
 11061                           ; Regs used in _get_pulse: [wreg+status,2+status,0+pclath+cstack]
 11062                           
 11063                           
 11064                           ;main.c: 113: void get_pulse(uint16_t capturedValue);main.c: 114:     {;main.c: 115:    
      +                               TMR1_WriteTimer(0);
 11065  0A9E  3000               	movlw	0
 11066  0A9F  00F7               	movwf	TMR1_WriteTimer@timerVal
 11067  0AA0  00F8               	movwf	TMR1_WriteTimer@timerVal+1
 11068  0AA1  3189  214D  318A   	fcall	_TMR1_WriteTimer
 11069  0AA4                     i1l2776:
 11070                           
 11071                           ;main.c: 116:         ccp_value = capturedValue;
 11072  0AA4  087A               	movf	get_pulse@capturedValue+1,w
 11073  0AA5  0021               	movlb	1	; select bank1
 11074  0AA6  00E0               	movwf	(_ccp_value+1)^(0+128)
 11075  0AA7  0879               	movf	get_pulse@capturedValue,w
 11076  0AA8  00DF               	movwf	_ccp_value^(0+128)
 11077  0AA9                     i1l2778:
 11078                           
 11079                           ;main.c: 117:         if(sentido == 1){
 11080  0AA9  0358               	decf	_sentido^(0+128),w
 11081  0AAA  0459               	iorwf	(_sentido+1)^(0+128),w
 11082  0AAB  1D03               	btfss	3,2
 11083  0AAC  2AAE               	goto	u225_21
 11084  0AAD  2AAF               	goto	u225_20
 11085  0AAE                     u225_21:
 11086  0AAE  2AB4               	goto	i1l2782
 11087  0AAF                     u225_20:
 11088  0AAF                     i1l2780:
 11089                           
 11090                           ;main.c: 118:             pulses++;
 11091  0AAF  3001               	movlw	1
 11092  0AB0  07E1               	addwf	_pulses^(0+128),f
 11093  0AB1  3000               	movlw	0
 11094  0AB2  3DE2               	addwfc	(_pulses+1)^(0+128),f
 11095                           
 11096                           ;main.c: 119:         }else if(sentido == 0 && pulses >= 0){
 11097  0AB3  2AC2               	goto	i1l599
 11098  0AB4                     i1l2782:
 11099  0AB4  0858               	movf	_sentido^(0+128),w
 11100  0AB5  0459               	iorwf	(_sentido+1)^(0+128),w
 11101  0AB6  1D03               	btfss	3,2
 11102  0AB7  2AB9               	goto	u226_21
 11103  0AB8  2ABA               	goto	u226_20
 11104  0AB9                     u226_21:
 11105  0AB9  2AC2               	goto	i1l599
 11106  0ABA                     u226_20:
 11107  0ABA                     i1l2784:
 11108  0ABA  1BE2               	btfsc	(_pulses+1)^(0+128),7
 11109  0ABB  2ABD               	goto	u227_21
 11110  0ABC  2ABE               	goto	u227_20
 11111  0ABD                     u227_21:
 11112  0ABD  2AC2               	goto	i1l599
 11113  0ABE                     u227_20:
 11114  0ABE                     i1l2786:
 11115                           
 11116                           ;main.c: 120:             pulses--;
 11117  0ABE  30FF               	movlw	255
 11118  0ABF  07E1               	addwf	_pulses^(0+128),f
 11119  0AC0  30FF               	movlw	255
 11120  0AC1  3DE2               	addwfc	(_pulses+1)^(0+128),f
 11121  0AC2                     i1l599:
 11122  0AC2  0008               	return
 11123  0AC3                     __end_of_get_pulse:
 11124                           
 11125                           	psect	text63
 11126  094D                     __ptext63:	
 11127 ;; *************** function _TMR1_WriteTimer *****************
 11128 ;; Defined at:
 11129 ;;		line 113 in file "mcc_generated_files/tmr1.c"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;  timerVal        2    0[COMMON] unsigned short 
 11132 ;; Auto vars:     Size  Location     Type
 11133 ;;		None
 11134 ;; Return value:  Size  Location     Type
 11135 ;;                  1    wreg      void 
 11136 ;; Registers used:
 11137 ;;		wreg, status,2
 11138 ;; Tracked objects:
 11139 ;;		On entry : 0/0
 11140 ;;		On exit  : 0/0
 11141 ;;		Unchanged: 0/0
 11142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11143 ;;      Params:         2       0       0       0       0       0
 11144 ;;      Locals:         0       0       0       0       0       0
 11145 ;;      Temps:          0       0       0       0       0       0
 11146 ;;      Totals:         2       0       0       0       0       0
 11147 ;;Total ram usage:        2 bytes
 11148 ;; Hardware stack levels used:    1
 11149 ;; This function calls:
 11150 ;;		Nothing
 11151 ;; This function is called by:
 11152 ;;		_get_pulse
 11153 ;;		_TMR1_Reload
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           
 11158                           ;psect for function _TMR1_WriteTimer
 11159  094D                     _TMR1_WriteTimer:
 11160  094D                     i1l2504:	
 11161                           ;incstack = 0
 11162                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 11163                           
 11164                           
 11165                           ;mcc_generated_files/tmr1.c: 113: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 114: {;mcc_generated_files/tmr1.c: 115:     if (T1CONbits.nT1SYNC == 1)
 11166  094D  0020               	movlb	0	; select bank0
 11167  094E  1D18               	btfss	24,2	;volatile
 11168  094F  2951               	goto	u196_21
 11169  0950  2952               	goto	u196_20
 11170  0951                     u196_21:
 11171  0951  2959               	goto	i1l2514
 11172  0952                     u196_20:
 11173  0952                     i1l2506:
 11174                           
 11175                           ;mcc_generated_files/tmr1.c: 116:     {;mcc_generated_files/tmr1.c: 118:         T1CONbi
      +                          ts.TMR1ON = 0;
 11176  0952  1018               	bcf	24,0	;volatile
 11177  0953                     i1l2508:
 11178                           
 11179                           ;mcc_generated_files/tmr1.c: 121:         TMR1H = (timerVal >> 8);
 11180  0953  0878               	movf	TMR1_WriteTimer@timerVal+1,w
 11181  0954  0097               	movwf	23	;volatile
 11182  0955                     i1l2510:
 11183                           
 11184                           ;mcc_generated_files/tmr1.c: 122:         TMR1L = timerVal;
 11185  0955  0877               	movf	TMR1_WriteTimer@timerVal,w
 11186  0956  0096               	movwf	22	;volatile
 11187  0957                     i1l2512:
 11188                           
 11189                           ;mcc_generated_files/tmr1.c: 125:         T1CONbits.TMR1ON =1;
 11190  0957  1418               	bsf	24,0	;volatile
 11191                           
 11192                           ;mcc_generated_files/tmr1.c: 126:     }
 11193  0958  295D               	goto	i1l160
 11194  0959                     i1l2514:
 11195                           
 11196                           ;mcc_generated_files/tmr1.c: 128:     {;mcc_generated_files/tmr1.c: 130:         TMR1H =
      +                           (timerVal >> 8);
 11197  0959  0878               	movf	TMR1_WriteTimer@timerVal+1,w
 11198  095A  0097               	movwf	23	;volatile
 11199  095B                     i1l2516:
 11200                           
 11201                           ;mcc_generated_files/tmr1.c: 131:         TMR1L = timerVal;
 11202  095B  0877               	movf	TMR1_WriteTimer@timerVal,w
 11203  095C  0096               	movwf	22	;volatile
 11204  095D                     i1l160:
 11205  095D  0008               	return
 11206  095E                     __end_of_TMR1_WriteTimer:
 11207  007E                     btemp	set	126	;btemp
 11208  007E                     int$flags	set	126
 11209  007E                     wtemp0	set	126
 11210                           
 11211                           	psect	config
 11212                           
 11213                           ;Config register CONFIG1 @ 0x8007
 11214                           ;	Oscillator Selection
 11215                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11216                           ;	Watchdog Timer Enable
 11217                           ;	WDTE = OFF, WDT disabled
 11218                           ;	Power-up Timer Enable
 11219                           ;	PWRTE = OFF, PWRT disabled
 11220                           ;	MCLR Pin Function Select
 11221                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11222                           ;	Flash Program Memory Code Protection
 11223                           ;	CP = OFF, Program memory code protection is disabled
 11224                           ;	Data Memory Code Protection
 11225                           ;	CPD = OFF, Data memory code protection is disabled
 11226                           ;	Brown-out Reset Enable
 11227                           ;	BOREN = ON, Brown-out Reset enabled
 11228                           ;	Clock Out Enable
 11229                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11230                           ;	Internal/External Switchover
 11231                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11232                           ;	Fail-Safe Clock Monitor Enable
 11233                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11234  8007                     	org	32775
 11235  8007  3FE4               	dw	16356
 11236                           
 11237                           ;Config register CONFIG2 @ 0x8008
 11238                           ;	Flash Memory Self-Write Protection
 11239                           ;	WRT = OFF, Write protection off
 11240                           ;	PLL Enable
 11241                           ;	PLLEN = OFF, 4x PLL disabled
 11242                           ;	Stack Overflow/Underflow Reset Enable
 11243                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11244                           ;	Brown-out Reset Voltage Selection
 11245                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11246                           ;	Low-Voltage Programming Enable
 11247                           ;	LVP = ON, Low-voltage programming enabled
 11248  8008                     	org	32776
 11249  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         120
    Persistent  60
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     79      80
    BANK1            80      0      79
    BANK2            80      0      61
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    IOCBF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor4(), IOCBF5_DefaultInterruptHandler(), 

    IOCBF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor4(), IOCBF5_DefaultInterruptHandler(), Absolute function(), 

    IOCBF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor3(), IOCBF4_DefaultInterruptHandler(), 

    IOCBF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor3(), IOCBF4_DefaultInterruptHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor2(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor2(), IOCBF3_DefaultInterruptHandler(), Absolute function(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor1(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor1(), IOCBF0_DefaultInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> get_pulse(), CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> get_pulse(), CCP4_DefaultCallBack(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> send_data(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> send_data(), Absolute function(), TMR4_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP4_CaptureISR
    _TMR4_ISR->_send_data
    _send_data->_EUSART_Write
    _send_data->_EUSART_is_tx_ready
    _IOCBF5_ISR->_sensor4
    _IOCBF4_ISR->_sensor3
    _IOCBF3_ISR->_sensor2
    _CCP4_CaptureISR->_CCP4_DefaultCallBack
    _CCP4_CaptureISR->_get_pulse
    _get_pulse->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_comunicacao
    _gerenciamento->_update
    _col_up->_min_up
    _col_down->_max_down
    _controle->___flmul
    _comunicacao->___fldiv
    ___xxtofl->_ADC_GetConversion
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF5_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16772
                   _CCP4_SetCallBack
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                        _comunicacao
                           _controle
                      _gerenciamento
 ---------------------------------------------------------------------------------
 (1) _gerenciamento                                        0     0      0    2450
                           _col_down
                             _col_up
                             _update
 ---------------------------------------------------------------------------------
 (2) _col_up                                               2     2      0     682
                                              5 BANK0      2     2      0
                                _abs
                             _min_up
 ---------------------------------------------------------------------------------
 (3) _min_up                                               5     5      0     312
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _col_down                                             2     2      0     638
                                              5 BANK0      2     2      0
                                _abs
                           _max_down
 ---------------------------------------------------------------------------------
 (3) _max_down                                             5     5      0     268
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     370
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _controle                                            18    18      0    6076
                                             44 BANK0     18    18      0
                  _ADC_GetConversion
                 _PWM3_LoadDutyValue
                            ___flmul
                             ___wmul
                           ___xxtofl
                             _update
 ---------------------------------------------------------------------------------
 (2) _update                                              10    10      0    1130
                                              0 BANK0     10    10      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2     500
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _comunicacao                                          9     9      0    5351
                                             70 BANK0      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              4 BANK0     14    10      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2873
                                             18 BANK0     26    18      8
                  _ADC_GetConversion (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             44 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1629
                     _ADC_Initialize
                    _CCP4_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     844
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF5_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF4_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     211
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     454
                    _CCP4_CaptureISR
                    _PIN_MANAGER_IOC
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0      92
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                          _send_data *
 ---------------------------------------------------------------------------------
 (6) _send_data                                            3     3      0      92
                                              1 COMMON     3     3      0
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (7) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCBF0_ISR
                         _IOCBF3_ISR
                         _IOCBF4_ISR
                         _IOCBF5_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCBF5_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF5_DefaultInterruptHandler *
                            _sensor4 *
 ---------------------------------------------------------------------------------
 (7) _sensor4                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _IOCBF5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCBF4_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF4_DefaultInterruptHandler *
                            _sensor3 *
 ---------------------------------------------------------------------------------
 (7) _sensor3                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _IOCBF4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCBF3_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                            _sensor2 *
 ---------------------------------------------------------------------------------
 (7) _sensor2                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCBF0_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF0_DefaultInterruptHandler *
                            _sensor1 *
 ---------------------------------------------------------------------------------
 (7) _sensor1                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CCP4_CaptureISR                                      3     3      0     362
                                              4 COMMON     3     3      0
                   Absolute function *
               _CCP4_DefaultCallBack *
                          _get_pulse *
 ---------------------------------------------------------------------------------
 (6) _get_pulse                                            2     0      2     315
                                              2 COMMON     2     0      2
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _CCP4_DefaultCallBack                                 2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP4_SetCallBack
   _IOCBF0_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _IOCBF4_SetInterruptHandler
   _IOCBF5_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
       _IOCBF4_SetInterruptHandler
       _IOCBF5_SetInterruptHandler
     _PWM3_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _WDT_Initialize
   _TMR4_SetInterruptHandler
   _comunicacao
     ___fldiv
       ___flmul (ARG)
         _ADC_GetConversion (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_GetConversion (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
     ___flmul
       _ADC_GetConversion (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
     ___fltol
     ___xxtofl
       _ADC_GetConversion (ARG)
   _controle
     _ADC_GetConversion
     _PWM3_LoadDutyValue
     ___flmul
       _ADC_GetConversion (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
     ___wmul
     ___xxtofl
       _ADC_GetConversion (ARG)
     _update
       _EUSART_Read
       _EUSART_is_rx_ready
   _gerenciamento
     _col_down
       _abs
       _max_down
     _col_up
       _abs
       _min_up
     _update
       _EUSART_Read
       _EUSART_is_rx_ready

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     Absolute function(Fake) *
     _CCP4_DefaultCallBack *
     _get_pulse *
       _TMR1_WriteTimer
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       Absolute function(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       _sensor1 *
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _sensor2 *
     _IOCBF4_ISR
       Absolute function(Fake) *
       _IOCBF4_DefaultInterruptHandler *
       _sensor3 *
     _IOCBF5_ISR
       Absolute function(Fake) *
       _IOCBF5_DefaultInterruptHandler *
       _sensor4 *
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *
     _send_data *
       _EUSART_Write
       _EUSART_is_tx_ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      EA       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3D      10       76.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      EA      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Dec 12 20:52:18 2020

                              _CCP4_Initialize 095E                                   ___fldiv@aexp 0065  
                                 ___fldiv@bexp 0064               ??_IOCBF3_DefaultInterruptHandler 0077  
              ?_IOCBF3_DefaultInterruptHandler 0077                                   ___fldiv@sign 005D  
                                           l43 0A79                                             l51 083A  
                                           l60 093E                                             l64 094C  
                                           l82 0879                                             l85 0882  
                                           l88 0870                         __end_of_FVR_Initialize 0832  
                          ___wmul@multiplicand 0022                                    _state_motor 00DE  
                          __Umul8_16@word_mpld 0026                                            l121 0A55  
                                          l124 084E                                            l127 0835  
                                          l320 0831                                            l225 0983  
                                          l146 07FF                                            l414 0B7C  
                                          l343 096F                                            l247 08B8  
                                          l185 085E                                            l610 0FFF  
                                          l282 0A28                                            l267 0856  
                                          l428 088B                                            l700 03CA  
                                          l604 0B2D                                            l349 0867  
                                          l285 0A33                                            l438 0894  
                                          l448 089D                                            l472 08AF  
                                          l704 0403                                            l624 0773  
                                          l458 08A6                                            l642 07B5  
                                          l475 09B5                                            l635 0CFC  
                                          l709 047F                                            l653 0C33  
                                          l662 0E9B                                            l646 07EF  
                                          l680 0E5A                                            l673 0DD4  
                                          l657 0C6D                                            l666 0F02  
                                          l691 0333                                            l668 0F2C  
                                          l861 09F1                                            l677 0E25  
                                          l687 02F8                                            l696 03A4  
                                          l859 09DD                                            _PR2 001B  
                                          _PR4 0416                                            _I_m 0159  
                              _timer1ReloadVal 00ED                                            _abs 09B6  
               ?_EUSART_SetFramingErrorHandler 0020                                _TMR2_Initialize 0857  
               CCP4_SetCallBack@customCallBack 0020                                            wreg 0009  
                                 ?_comunicacao 0077                               _CCP4_SetCallBack 085F  
                                 ___flmul@aexp 0044                                   ___flmul@bexp 0045  
           __end_of_IOCBF4_SetInterruptHandler 089E                     _IOCBF4_SetInterruptHandler 0895  
                                 ___flmul@sign 003F                                   ___flmul@temp 004A  
                                 ___flmul@prod 0046                        __end_of_CCP4_CaptureISR 099A  
                                 ?_EUSART_Read 0077                                   ___fltol@exp1 002A  
                                         ?_abs 0020                                           l1060 0BDC  
                                         l1300 0D20                                           l1053 0BF1  
                                         l1302 0DA9                                           l1063 0BF1  
                                         l1240 062A                                           l1232 05B5  
                                         l1216 04D7                                           l3000 048E  
                                         l1313 0D75                                           l1218 0633  
                                         l3010 04A2                                           l3002 048F  
                                         l1314 0D81                                           l1306 0D5B  
                                         l1322 09D1                                           l3100 05B2  
                                         l3020 04B9                                           l3004 0494  
                                         l3012 04A4                                           l1237 0601  
                                         l1238 061B                                           l3110 05CB  
                                         l3030 04CD                                           l3022 04BA  
                                         l3014 04AC                                           l3006 0499  
                                         l1262 0225                                           l1319 09D1  
                                         l3120 0612                                           l3112 05E3  
                                         l3104 05BA                                           l3024 04BF  
                                         l3032 04CF                                           l3016 04B1  
                                         l3008 04A1                                           l3200 0158  
                                         l1256 02A9                                           l3122 061A  
                                         l3106 05BF                                           l3114 05E7  
                                         l3050 0516                                           l3034 04DF  
                                         l3042 04F8                                           l3026 04C4  
                                         l3018 04B5                                           l3210 019B  
                                         l3202 015F                                           l1275 0A8D  
                                         l3124 0620                                           l3116 05F4  
                                         l3108 05C7                                           l3060 0535  
                                         l3052 051E                                           l3044 04FD  
                                         l3036 04EB                                           l3028 04CC  
                                         l1268 029D                                           l3220 01EE  
                                         l3212 01AF                                           l3204 0173  
                                         l3140 0061                                           l3300 0D6B  
                                         l1277 0A9D                                           l3126 0624  
                                         l3118 060F                                           l3070 0561  
                                         l3062 0543                                           l3054 0526  
                                         l3038 04EF                                           l3222 01F5  
                                         l3230 0205                                           l3214 01C4  
                                         l3206 017A                                           l3150 0076  
                                         l3142 0062                                           l3134 0053  
                                         l3310 0D9C                                           l3302 0D6F  
                                         l3128 0626                                           l3080 057C  
                                         l3072 0562                                           l3064 0547  
                                         l3056 052E                                           l3048 0506  
                                         l3232 0209                                           l3224 01F9  
                                         l3216 01DB                                           l3208 018E  
                                         l3160 008C                                           l3152 007E  
                                         l3144 0067                                           l3136 0059  
                                         l3312 0DA0                                           l3304 0D79  
                                         l3090 0591                                           l3082 057E  
                                         l3074 056A                                           l3066 0548  
                                         l3058 0530                                           l3250 0253  
                                         l3242 022A                                           l3234 020A  
                                         l3226 01FA                                           l3218 01E2  
                                         l3170 00A8                                           l3162 0091  
                                         l3154 0083                                           l3146 006C  
                                         l3138 005D                                           l3314 0DA1  
                                         l3306 0D83                                           l2610 0E43  
                                         l2602 0E0B                                           l3500 0871  
                                         l3084 0585                                           l3092 0595  
                                         l3068 054F                                           l3076 056E  
                                         l2620 0A85                                           l3260 0285  
                                         l3244 022F                                           l3252 0257  
                                         l3236 020E                                           l3228 0201  
                                         l3180 00C8                                           l3172 00AD  
                                         l3164 0096                                           l3156 0087  
                                         l3148 0074                                           l3308 0D97  
                                         l2540 09B6                                           l2612 0E50  
                                         l2604 0E1E                                           l3502 087A  
                                         l3094 0599                                           l3086 0589  
                                         l3078 0574                                           l2622 0A89  
                                         l3270 02A1                                           l3262 0287  
                                         l3254 0264                                           l3246 0237  
                                         l3238 0222                                           l3190 0123  
                                         l3182 00D5                                           l3174 00B2  
                                         l3166 009E                                           l3158 008B  
                                         l3350 0F9B                                           l3510 093E  
                                         l2542 09C4                                           l2614 0E56  
                                         l2606 0E37                                           l3504 0868  
                                         l3600 082E                                           l3096 059A  
                                         l3088 058A                                           l2624 0A94  
                                         l2616 0A7C                                           l3264 0294  
                                         l3256 026E                                           l3248 023B  
                                         l3192 0130                                           l3184 00EF  
                                         l3168 00A0                                           l3280 0D18  
                                         l3352 0FA3                                           l2720 0A15  
                                         l3512 0943                                           l2608 0E3F  
                                         l2560 0EC8                                           l2552 0E62  
                                         l2544 0E5B                                           l3610 096B  
                                         l3602 095E                                           l3530 0895  
                                         l3522 08B0                                           l3098 059E  
                                         l2626 0A99                                           l2618 0A7E  
                                         l3266 0298                                           l3258 027C  
                                         l3194 0137                                           l3186 00FC  
                                         l3178 00BB                                           l3290 0D41  
                                         l3282 0D28                                           l3274 0CFF  
                                         l3354 0FB7                                           l2722 0A21  
                                         l3514 0944                                           l3506 0836  
                                         l2562 0ED1                                           l2554 0E7A  
                                         l2546 0E5F                                           l3524 085F  
                                         l3612 096D                                           l3604 0961  
                                         l3540 0A68                                           l3532 089E  
                                         l3620 0970                                           l3268 0299  
                                         l3196 0144                                           l3188 0116  
                                         l3292 0D48                                           l3276 0D04  
                                         l3356 0FCB                                           l3348 0F2D  
                                         l2724 0A22                                           l3516 0949  
                                         l3700 0359                                           l2580 0F1F  
                                         l2572 0EE6                                           l2564 0ED6  
                                         l2556 0E91                                           l2900 0774  
                                         l3614 084F                                           l3606 0962  
                                         l3542 0A70                                           l3534 0A56  
                                         l3526 0883                                           l3550 0B3F  
                                         l3630 0980                                           l3622 0973  
                                         l3198 014B                                           l3294 0D4C  
                                         l3286 0D31                                           l3278 0D08  
                                         l3358 0FE5                                           l2726 0A26  
                                         l3518 094B                                           l3710 038C  
                                         l2590 0DEC                                           l2582 0DAA  
                                         l2574 0EFA                                           l2566 0EE3  
                                         l2558 0EB2                                           l2910 07A5  
                                         l2902 0775                                           l3616 0852  
                                         l3608 0963                                           l3544 0A78  
                                         l3536 0A5F                                           l3528 088C  
                                         l3560 0B50                                           l3552 0B41  
                                         l3632 08A7                                           l3640 0857  
                                         l3624 0974                                           l3296 0D54  
                                         l3288 0D36                                           l2728 0A2C  
                                         l3712 0399                                           l3704 0363  
                                         l3800 06D5                                           l2592 0DF6  
                                         l2576 0F14                                           l2920 07DD  
                                         l2904 0789                                           l2912 07A7  
                                         l3618 0853                                           l3538 0A60  
                                         l3570 0B55                                           l3562 0B51  
                                         l3554 0B44                                           l3546 0B39  
                                         l3634 08AA                                           l3650 07F4  
                                         l3642 085A                                           l3626 0976  
                                         l3298 0D62                                           l3730 03E7  
                                         l3714 03A0                                           l3706 037D  
                                         l3810 06F3                                           l2594 0DFB  
                                         l2586 0DB4                                           l2930 0C17  
                                         l2922 0BF2                                           l2578 0F1B  
                                         l2914 07B7                                           l2906 0797  
                                         l3580 0B5A                                           l3572 0B56  
                                         l3564 0B52                                           l3556 0B49  
                                         l3548 0B3C                                           l3636 08AB  
                                         l3652 07F5                                           l3644 085B  
                                         l3628 0978                                           l2756 099A  
                                         l3740 03F4                                           l3732 03EC  
                                         l3724 03BB                                           l3716 03B6  
                                         l3708 0387                                           l3660 02B9  
                                         l3820 071B                                           l3812 06FB  
                                         l2596 0E08                                           l2588 0DCB  
                                         l2940 0C46                                           l2932 0C23  
                                         l2924 0BF3                                           l2916 07C5  
                                         l2908 0799                                           l3900 0AFC  
                                         l3590 0B7B                                           l3582 0B5B  
                                         l3574 0B57                                           l3566 0B53  
                                         l3558 0B4E                                           l3638 08AC  
                                         l3654 07FC                                           l3646 085C  
                                         l3742 03FA                                           l3734 03F0  
                                         l3726 03C1                                           l3718 03B6  
                                         l3750 0427                                           l3662 02CA  
                                         l3830 0733                                           l3822 0720  
                                         l3814 0700                                           l3806 06D7  
                                         l2942 0C5B                                           l2926 0C07  
                                         l2934 0C25                                           l2918 07C8  
                                         l3902 0B30                                           l3592 0848  
                                         l3584 0B63                                           l3576 0B58  
                                         l3568 0B54                                           l3648 07F0  
                                         l2960 0B89                                           l3760 044B  
                                         l3752 042C                                           l3744 0411  
                                         l3728 03D8                                           l3680 0313  
                                         l3664 02D3                                           l3656 02AA  
                                         l3840 0769                                           l3832 0746  
                                         l3824 072E                                           l3816 070D  
                                         l3808 06EA                                           l2936 0C35  
                                         l2928 0C15                                           l3904 0B33  
                                         l3594 084B                                           l3586 0B6B  
                                         l3578 0B59                                           l2970 0BAE  
                                         l3770 09D5                                           l3762 0462  
                                         l3746 041E                                           l3690 0320  
                                         l3682 0318                                           l3674 02E9  
                                         l3666 02E4                                           l3658 02B2  
                                         l3842 076C                                           l3834 074F  
                                         l3818 0713                                           l2938 0C43  
                                         l3850 0C7E                                           l3596 084C  
                                         l3588 0B73                                           l2980 0BBC  
                                         l2972 0BB0                                           l2964 0B92  
                                         l3772 09D9                                           l3764 046D  
                                         l3748 0423                                           l3692 0326  
                                         l3684 031C                                           l3676 02EF  
                                         l3668 02E4                                           l3836 0757  
                                         l3860 0C9C                                           l3852 0C84  
                                         l3844 0C6E                                           l3598 0832  
                                         l3782 0A34                                           l2990 0BE1  
                                         l2974 0BB4                                           l2982 0BCC  
                                         l2966 0BA5                                           l2958 0B7D  
                                         l3774 09E2                                           l3766 0472  
                                         l3758 042F                                           l3694 0341  
                                         l3678 0306                                           l3838 075C  
                                         l3790 06B1                                           l3870 0CB6  
                                         l3862 0CA2                                           l3854 0C8A  
                                         l3846 0C71                                           l2992 0BE6  
                                         l2968 0BA6                                           l3776 09E7  
                                         l3768 09D2                                           l3696 0350  
                                         l3792 06B5                                           l3784 0634  
                                         l3880 0CD4                                           l3872 0CBC  
                                         l3864 0CA8                                           l3856 0C90  
                                         l3848 0C78                                           l2994 0480  
                                         l3778 09ED                                           l3698 0355  
                                         l3794 06B9                                           l3786 06AC  
                                         l3882 0CDA                                           l3874 0CC2  
                                         l3890 0CF2                                           l3858 0C96  
                                         l3866 0CAE                                           l2996 0486  
                                         l2988 0BD3                                           l3796 06CD  
                                         l3788 06AC                                           l3892 0CF4  
                                         l3884 0CE0                                           l3876 0CC8  
                                         l3868 0CB2                                           l2998 048A  
                                         l3798 06D3                                           l3894 0CF8  
                                         l3886 0CE6                                           l3878 0CCE  
                                         l3888 0CEC                                           l3896 0AF8  
                                         l3898 0AFB                                           u2000 0EB2  
                                         u2001 0EB1                                           u2010 0EC8  
                                         u2011 0EC7                                           u2100 0E37  
                                         u2020 0EE3                                           u2101 0E36  
                                         u2021 0EE2                                           u2005 0EAE  
                                         u2110 0E50                                           u2030 0EFA  
                                         u2111 0E4F                                           u2031 0EF9  
                                         u2015 0EC4                                           u3000 05F4  
                                         u2120 0E56                                           u2040 0F14  
                                         u3001 05F3                                           u2121 0E55  
                                         u2105 0E33                                           u2041 0F13  
                                         u2025 0EDF                                           u3010 060F  
                                         u2130 0A89                                           u2050 0F2C  
                                         u3011 060E                                           u2131 0A88  
                                         u2115 0E4C                                           u2051 0F2B  
                                         u2035 0EF6                                           u3020 0624  
                                         u3100 00B2                                           u2060 0DCB  
                                         u3021 0623                                           u3005 05F0  
                                         u3101 00B1                                           u2061 0DCA  
                                         u2045 0F10                                           _LATA 010C  
                                         u2150 0A99                                           u3030 0061  
                                         u2070 0DEC                                           _LATB 010D  
                                         u3015 060B                                           u2151 0A98  
                                         u3031 0060                                           u2215 09AB  
                                         u2071 0DEB                                           u2055 0F28  
                                         u3200 020E                                           u3040 0067  
                                         u2160 0A2C                                           u4000 0427  
                                         u2080 0E08                                           u2145 0A8E  
                                         u3201 020D                                           u3041 0066  
                                         u2161 0A2B                                           u4001 0426  
                                         u2081 0E07                                           u2065 0DC7  
                                         u3210 0222                                           u3130 01BA  
                                         u3050 006C                                           u4010 044B  
                                         u2090 0E1E                                           u3211 0221  
                                         u3115 0131                                           u3051 006B  
                                         u4011 044A                                           u2091 0E1D  
                                         u2075 0DE8                                           u3220 0229  
                                         u3140 01D1                                           u3060 008B  
                                         u3300 0D08                                           u4020 0462  
                                         u4100 072E                                           u2500 0797  
                                         u3221 0228                                           u3125 0160  
                                         u3061 008A                                           u3301 0D07  
                                         u4021 0461                                           u4101 072D  
                                         u2085 0E04                                           u2501 0796  
                                         u3230 022F                                           u3070 0091  
                                         u3310 0D28                                           u4030 047F  
                                         u4110 0746                                           u2510 07A5  
                                         u3231 022E                                           u3135 01B6  
                                         u3071 0090                                           u3311 0D27  
                                         u4031 047E                                           u4015 0447  
                                         u4111 0745                                           u2095 0E1A  
                                         u2511 07A4                                           u3240 023B  
                                         u3080 0096                                           u3400 0D8D  
                                         u4040 09D9                                           u4120 0769  
                                         u2520 07B5                                           u4200 0CA2  
                                         u3241 023A                                           u3145 01CD  
                                         u3081 0095                                           u4041 09D8  
                                         u4025 045E                                           u4121 0768  
                                         u4105 072A                                           u2521 07B4  
                                         u2505 0793                                           u4201 0CA1  
                                         u3250 0249                                           u3170 01F9  
                                         u3090 00AD                                           u3410 0D9C  
                                         u3330 0D47                                           u2530 07C5  
                                         u4210 0CA8                                           u4130 0C78  
                                         u3171 01F8                                           u3155 01DC  
                                         u3091 00AC                                           u3411 0D9B  
                                         u3331 0D46                                           u4035 047B  
                                         u4115 0742                                           u2531 07C4  
                                         u2515 07A1                                           u4211 0CA7  
                                         u4131 0C77                                           u3260 0264  
                                         u2700 0BD2                                           u3420 0DA0  
                                         u2540 07EF                                           u4300 0CE6  
                                         u4220 0CAE                                           u4140 0C7E  
                                         u3261 0263                                           u3165 01EF  
                                         u2701 0BD1                                           u3421 0D9F  
                                         u3405 0D89                                           u3325 0D3B  
                                         u4125 0765                                           u2541 07EE  
                                         u2525 07B1                                           u4301 0CE5  
                                         u4221 0CAD                                           u4141 0C7D  
                                         u3270 027C                                           u3190 0209  
                                         u3350 0D61                                           u4070 09ED  
                                         u2550 0C15                                           u4310 0CEC  
                                         u4230 0CBC                                           u4150 0C84  
                                         u3271 027B                                           u3255 0245  
                                         u3191 0208                                           u3351 0D60  
                                         u4071 09EC                                           u4055 09DE  
                                         u2551 0C14                                           u2535 07C1  
                                         u4311 0CEB                                           u4231 0CBB  
                                         u4151 0C83                                           u2800 04DF  
                                         u3280 0298                                           u2720 0BE1  
                                         u2640 0B89                                           u4080 06EA  
                                         u2560 0C23                                           u4320 0CF2  
                                         u4240 0CC2                                           u4160 0C8A  
                                         u2801 04DE                                           u3281 0297  
                                         u3265 0260                                           u3185 01FB  
                                         u2721 0BE0                                           u2641 0B88  
                                         u3345 0D55                                           u4065 09E3  
                                         u4081 06E9                                           u2561 0C22  
                                         u2545 07EB                                           u4321 0CF1  
                                         u4241 0CC1                                           u4161 0C89  
                                         u2810 04FD                                           u2730 0BE6  
                                         u2650 0B9F                                           u3370 0D6F  
                                         u3290 0D04                                           u4090 070D  
                                         u2570 0C33                                           u4250 0CC8  
                                         u4170 0C90                                           u2811 04FC  
                                         u3275 0278                                           u2731 0BE5  
                                         u2715 0BD4                                           u3371 0D6E  
                                         u3291 0D03                                           u4091 070C  
                                         u2571 0C32                                           u2555 0C11  
                                         u4251 0CC7                                           u4171 0C8F  
                                         u2820 0535                                           u2740 048E  
                                         u2660 0BB4                                           u3380 0D75  
                                         u2580 0C43                                           u4260 0CCE  
                                         u4180 0C96                                           u2821 0534  
                                         u2741 048D                                           u2661 0BB3  
                                         u3381 0D74                                           u3365 0D65  
                                         u4085 06E6                                           u2581 0C42  
                                         u2565 0C1F                                           u4261 0CCD  
                                         u4181 0C95                                           u2910 0589  
                                         u2750 0494                                           u2670 0BBB  
                                         u3390 0D79                                           u2590 0C6D  
                                         u4270 0CD4                                           u4190 0C9C  
                                         u2911 0588                                           u2751 0493  
                                         u2671 0BBA                                           u2655 0B9B  
                                         u3391 0D78                                           u4095 0709  
                                         u2591 0C6C                                           u2575 0C2F  
                                         u4271 0CD3                                           u4191 0C9B  
                                         u2760 0499                                           u3800 0943  
                                         u4280 0CDA                                           u2905 057F  
                                         u2761 0498                                           u4337 0A23  
                                         u3801 0942                                           u2585 0C3F  
                                         u4281 0CD9                                           u2930 0599  
                                         u2850 0547                                           u2770 04B9  
                                         u2690 0BCB                                           u3810 0949  
                                         u1970 09C4                                           u4290 0CE0  
                                         u2931 0598                                           u2851 0546  
                                         u2835 0536                                           u2771 04B8  
                                         u2691 0BCA                                           u3811 0948  
                                         u1971 09C3                                           u2595 0C69  
                                         u4291 0CDF                                           u2940 059E  
                                         u2780 04BF                                           u3900 0359  
                                         u3820 02B2                                           u1980 0E7A  
                                         u2941 059D                                           u2925 058B  
                                         u2845 053D                                           u2781 04BE  
                                         u2685 0BBD                                           u3901 0358  
                                         u3821 02B1                                           u1981 0E79  
                                         u2950 05B2                                           u2870 0561  
                                         u2790 04C4                                           u3910 037D  
                                         u1990 0E91                         get_pulse@capturedValue 0079  
                                         u2951 05B1                                           u2871 0560  
                                         u2791 04C3                                           u3911 037C  
                                         u1975 09C0                                           u1991 0E90  
                                         u2960 05B9                                           u2880 0574  
                                         u3920 0399                                           u3840 02E4  
                                         u2961 05B8                                           u2881 0573  
                                         u2865 0549                                           u3921 0398  
                                         u3841 02E3                                           u1985 0E76  
                                         u2970 05BF                                           u2890 057C  
                                         u3930 03A0                                           u3850 02EF  
                                         u2971 05BE                                           u2891 057B  
                                         u2875 055D                                           u3931 039F  
                                         u3915 0379                                           u3851 02EE  
                                         u3835 02BC                                           u1995 0E8D  
                                         u2980 05CB                                           u3940 03B6  
                                         u3860 0306                                           u2981 05CA  
                                         u3941 03B5                                           u3925 0395  
                                         u3861 0305                                           u3845 02E0  
                                         i1l70 08C2                                           u2990 05D9  
                                         u3950 03C1                                           u3870 031C  
                                         u3951 03C0                                           u3871 031B  
                                         i1l48 092E                                           u3960 03D8  
                                         u3880 0326                                           u3961 03D7  
                                         u3945 03B2                                           u3881 0325  
                                         u3865 0302                                           u3970 03F0  
                                         u3890 0341                                           i1l67 08BA  
                                         u2995 05D5                                           u3971 03EF  
                                         u3891 0340                                           u3980 03FA  
                                         u3981 03F9                                           u3965 03D4  
                                         u3990 0411                                           u3991 0410  
                                         u3895 033D                                           u3995 040D  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _WPUA 020C                                           _WPUB 020D  
                                         abs@a 0020                                           _main 0AF8  
                                         _byte 0148                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0034                                ___fldiv@new_exp 005E  
                   ??_TMR4_SetInterruptHandler 0022                                          ??_abs 0022  
                             comunicacao@speed 0067                                ?_FVR_Initialize 0077  
                                ?_EUSART_Write 0077                 __size_of_OSCILLATOR_Initialize 0007  
                          __size_of_IOCBF0_ISR 000F                            __size_of_IOCBF3_ISR 000F  
                __end_of_OSCILLATOR_Initialize 084F                            __size_of_IOCBF4_ISR 000F  
                          __size_of_IOCBF5_ISR 000F                                  ___fltol@sign1 0029  
                                        ?_main 0077                                __end_of___fldiv 0634  
                       ??_CCP4_DefaultCallBack 007B                                __end_of___flmul 02AA  
                              __end_of___fltol 0BF2                                          _T1CON 0018  
                                        _T2CON 001C                                          _T4CON 0417  
                                        i1l160 095D                                          i1l312 0032  
                                        i1l313 0032                                          i1l305 0012  
                                        i1l250 0003                                          i1l340 082A  
                                        i1l244 093D                                          i1l308 0024  
                                        i1l421 0A12                                          i1l431 082B  
                                        i1l425 08F2                                          i1l441 082C  
                                        i1l346 0999                                          i1l435 0901  
                                        i1l451 082D                                          i1l445 0910  
                                        i1l461 0002                                          i1l455 091F  
                                        i1l581 0AF7                                          i1l590 08D8  
                                        i1l584 0847                                          i1l593 08E3  
                                        i1l587 08CD                                          i1l599 0AC2  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                   update@i_1261 0024  
                                 update@i_1262 0028                                          _TXSTA 019E  
                              _TMR4_Initialize 0970                               __end_of_TMR4_ISR 093E  
                                        _andar 00D2                        __end_of_PIN_MANAGER_IOC 0A13  
                               _WDT_Initialize 0832                        __end_of_PWM3_Initialize 08B0  
                      __end_of_TMR1_Initialize 0800                                          pclath 000A  
                              __end_of_sensor1 0848                                __end_of_sensor2 08CE  
                              __end_of_sensor3 08D9                                __end_of_sensor4 08E4  
                                        status 0003                        __end_of_CCP4_Initialize 0970  
                                        wtemp0 007E                                _TMR1_WriteTimer 094D  
                              ??_gerenciamento 002A                                __initialization 0036  
                                 __end_of_main 0B39                                 ??_EUSART_Write 0077  
                      __end_of_TMR2_Initialize 085F                    ?_INTERRUPT_InterruptManager 0077  
                                       ??_main 006F                        _IOCBF0_InterruptHandler 00E9  
                       __end_of_WDT_Initialize 0836                               ?_CCP4_CaptureISR 0077  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0151  
                 ??_IOCBF5_SetInterruptHandler 0022                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR3H 0312  
                                       _CCPR4H 0319                                         _CCPR3L 0311  
                                       _CCPR4L 0318                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 083B  
                                       _BORCON 0116                                         _T1GCON 0019  
                      TMR1_WriteTimer@timerVal 0077                                         i1l2500 08BA  
                                       i1l2510 0955                                         i1l2502 08BF  
                                       i1l2512 0957                                         i1l2504 094D  
                                       i1l3320 092F                                         i1l2506 0952  
                                       i1l2514 0959                                         i1l2530 0841  
                                       i1l3330 09FA                                         i1l3322 0931  
                                       i1l2516 095B                                         i1l2508 0953  
                                       i1l2532 0844                                         i1l3340 0A0F  
                                       i1l3332 09FF                                         i1l3324 0938  
                                       i1l3342 0984                                         i1l2534 08C3  
                                       i1l3334 0A02                                         i1l3326 09F2  
                                       i1l3344 0986                                         i1l2536 08CE  
                                       i1l3336 0A07                                         i1l3328 09F7  
                                       i1l2480 092D                                         i1l2472 0920  
                                       i1l3346 098F                                         i1l2538 08D9  
                                       i1l3338 0A0A                                         i1l2474 0921  
                                       i1l2732 08E4                                         i1l2740 08FA  
                                       i1l2476 0926                                         i1l2734 08EB  
                                       i1l2742 08FF                                         i1l2750 0911  
                                       i1l2478 092B                                         i1l2736 08F0  
                                       i1l2744 0902                                         i1l2752 0918  
                                       i1l2760 0AC8                                         i1l3480 0016  
                                       i1l2738 08F3                                         i1l2746 0909  
                                       i1l2754 091D                                         i1l2770 0AE7  
                                       i1l2762 0ACF                                         i1l3482 001B  
                                       i1l3474 0006                                         i1l2780 0AAF  
                                       i1l2748 090E                                         i1l2772 0AF4  
                                       i1l2764 0AD2                                         i1l3484 0020  
                                       i1l3476 000A                                         i1l2782 0AB4  
                                       i1l2774 0A9E                                         i1l2766 0ADA  
                                       i1l2758 0AC3                                         i1l3486 0029  
                                       i1l3478 000E                                         i1l2784 0ABA  
                                       i1l2776 0AA4                                         u220_20 0918  
                                       i1l2768 0AE3                                         i1l3488 002E  
                                       u220_21 0917                                         i1l2786 0ABE  
                                       i1l2778 0AA9                                         u222_20 0ACF  
                                       u222_21 0ACE                                         u223_20 0ADA  
                                       u223_21 0AD9                                         u224_20 0AF4  
                                       u224_21 0AF3                                         u224_25 0AF0  
                                       u225_20 0AAF                                         u217_20 08EB  
                                       u225_21 0AAE                                         u217_21 08EA  
                                       u226_20 0ABA                                         u218_20 08FA  
                                       u226_21 0AB9                                         u218_21 08F9  
                                       u227_20 0ABE                                         u219_20 0909  
                                       _FVRCON 0117                                         u227_21 0ABD  
                                       u219_21 0908                     __end_of_EUSART_is_tx_ready 092F  
                                       u191_20 0926                                         u343_20 0938  
                                       u191_21 0925                                         u343_21 0937  
                                       u344_20 09F7                                         u192_20 092B  
                                       u344_21 09F6                                         u192_21 092A  
                                       u345_20 09FF                                         u345_21 09FE  
                                       u346_20 0A07                                         u346_21 0A06  
                                       u347_20 0A0F                                         u195_20 08BF  
                                       u347_21 0A0E                                         u195_21 08BE  
                                       u196_20 0952                                         u196_21 0951  
                                       u373_20 000A                                         u373_21 0009  
                              _max_origem_down 0072                                         u374_20 000E  
                                       u374_21 000D                                         u375_20 0016  
                                       u375_21 0015                                         u376_20 001B  
                                       u376_21 001A                                         u377_20 0020  
                                       u377_21 001F                                         u378_20 0029  
                                       _OSCCON 0099                                         u378_21 0028  
                                       u379_20 002E                                         u379_21 002D  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                               __end_of___xxtofl 0DAA  
                             __end_of_col_down 0C6E                                   _CCPTMRS0bits 029E  
                  __size_of_PWM3_LoadDutyValue 001C                                         ___wmul 09D2  
                                    ??___fldiv 0054                                      ??___flmul 003A  
                             __end_of_controle 0774                                      ??___fltol 0024  
                                       _col_up 0774                               __end_of_max_down 0E5B  
                      __end_of_TMR4_Initialize 0984                                         _min_up 0E5B  
                                _CCP4_CallBack 014D                                         _update 02AA  
                                       _pulses 00E1            __size_of_IOCBF5_SetInterruptHandler 0009  
         __end_of_TMR4_DefaultInterruptHandler 0004          __size_of_TMR4_DefaultInterruptHandler 0001  
                 _TMR4_DefaultInterruptHandler 0003                             __size_of__Umul8_16 0024  
                              ?_WDT_Initialize 0077                                      ??_sensor1 0077  
                                    ??_sensor2 0077                                      ??_sensor3 0077  
                                    ??_sensor4 0077                       ADC_GetConversion@channel 0023  
   IOCBF5_SetInterruptHandler@InterruptHandler 0020     IOCBF4_SetInterruptHandler@InterruptHandler 0020  
   IOCBF3_SetInterruptHandler@InterruptHandler 0020     IOCBF0_SetInterruptHandler@InterruptHandler 0020  
     TMR4_SetInterruptHandler@InterruptHandler 0020                               ?_PIN_MANAGER_IOC 0077  
                         __size_of_comunicacao 00D3                        __end_of_TMR1_WriteTimer 095E  
                                 ??_IOCBF0_ISR 0077                                   ??_IOCBF3_ISR 0078  
                                 ??_IOCBF4_ISR 0078                                   ??_IOCBF5_ISR 0078  
                             ?_TMR1_Initialize 0077                               ?_PWM3_Initialize 0077  
                                 ___xxtofl@arg 002E                           __size_of_EUSART_Read 000F  
                                 ___xxtofl@exp 002D                              _SYSTEM_Initialize 0A34  
                                 ___xxtofl@val 0024                        __end_of__initialization 004F  
                             ?_CCP4_Initialize 0077                             ?_SYSTEM_Initialize 0077  
                                   ___fltol@f1 0020                       __end_of_CCP4_SetCallBack 0868  
                               __pcstackCOMMON 0077                            ??_SYSTEM_Initialize 0022  
                                    ?_TMR4_ISR 0077         __end_of_IOCBF0_DefaultInterruptHandler 082C  
      __size_of_IOCBF0_DefaultInterruptHandler 0001                 _IOCBF0_DefaultInterruptHandler 082B  
                             ?_TMR2_Initialize 0077                             __end_of_IOCBF0_ISR 08F3  
                           __end_of_IOCBF3_ISR 0902                             __end_of_IOCBF4_ISR 0911  
                           __end_of_IOCBF5_ISR 0920                                 _OPTION_REGbits 0095  
                ?_TMR4_DefaultInterruptHandler 0077                ??_EUSART_SetOverrunErrorHandler 0022  
       __end_of_IOCBF3_DefaultInterruptHandler 082D        __size_of_IOCBF3_DefaultInterruptHandler 0001  
               _IOCBF3_DefaultInterruptHandler 082C                    ?_IOCBF4_SetInterruptHandler 0020  
                           __size_of_get_pulse 0025                      __end_of_SYSTEM_Initialize 0A56  
                                   __pbssBANK0 006F                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 08C3  
                                   _and_ating2 00C8                                     _and_origem 00DA  
                        _TMR4_InterruptHandler 00EB                              __end_of__Umul8_16 0A9E  
                             ??_FVR_Initialize 0020                                     __pmaintext 0AF8  
                                _min_fila_down 00CC                                        ?___wmul 0020  
                                   ??_TMR4_ISR 007B                                     __pintentry 0004  
                                      ?_col_up 0077                             __size_of_send_data 0035  
                                      _CCP3CON 0313                                        _CCP4CON 031A  
                                      _BAUDCON 019F                                        ?_min_up 0077  
                             ?_TMR4_Initialize 0077               ??_IOCBF4_DefaultInterruptHandler 0077  
              ?_IOCBF4_DefaultInterruptHandler 0077                                        _APFCON0 011D  
                                      _APFCON1 011E                                        ?_update 0077  
                      __size_of_ADC_Initialize 0008                                      ?___xxtofl 0024  
           __end_of_IOCBF5_SetInterruptHandler 08A7                     _IOCBF5_SetInterruptHandler 089E  
                                      _OSCTUNE 0098                                      ?_col_down 0077  
                     ??_EUSART_SetErrorHandler 0022                               ?_TMR1_WriteTimer 0077  
                                    ?_controle 0077                                      ?_max_down 0077  
                        controle@max_dutyValue 0058                           _ADC_InterruptHandler 00DC  
                                _min_origem_up 0070                              __end_of_get_pulse 0AC3  
                                      ___fldiv 0480                                        ___flmul 0053  
                                      ___fltol 0B7D                                __size_of___wmul 0020  
                              __size_of_col_up 007C                                        _and_dst 0074  
                              __size_of_min_up 00D2                                        __ptext1 0C6E  
                                      __ptext2 0774                                        __ptext3 0E5B  
                                      __ptext4 0BF2                                        __ptext5 0DAA  
                                      __ptext6 09B6                                        __ptext7 0634  
                                      __ptext8 02AA                                        __ptext9 0836  
                                      _fila_up 00B4                                __size_of_update 01D6  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 0848  
                                    _T2CONbits 001C                                   __size_of_abs 001C  
                                   ??___xxtofl 0028                  __size_of_CCP4_DefaultCallBack 0001  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 0022  
            __size_of_TMR4_SetInterruptHandler 0009                                      _IOCBFbits 0396  
                    ?_TMR4_SetInterruptHandler 0020                                      _IOCBNbits 0395  
                                      _sensor1 0841                                        _sensor2 08C3  
                                      _sensor3 08CE                                        _sensor4 08D9  
                                      _temp_mt 0155                                        _sentido 00D8  
                                    _IOCBPbits 0394                                     ??_col_down 0025  
                   __size_of_SYSTEM_Initialize 0022                                        clrloop0 083C  
                         end_of_initialization 004F                              __end_of_send_data 0AF8  
               ??_TMR4_DefaultInterruptHandler 0077                                     ??_controle 004C  
        __end_of_EUSART_SetOverrunErrorHandler 0883         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 087A                                     ??_max_down 0020  
                                      min_up@i 0023                              _EUSART_Initialize 0A56  
                        __end_of_gerenciamento 0CFD                             ?_EUSART_Initialize 0077  
                                    _RCSTAbits 019D                                  controle@count 005C  
                           _EUSART_is_rx_ready 0836                                        update@i 0026  
                                controle@route 0052                             _EUSART_is_tx_ready 0920  
                          ??_EUSART_Initialize 0022                               ??_WDT_Initialize 0020  
                          ?_EUSART_is_rx_ready 0077                            ?_EUSART_is_tx_ready 0077  
                        controle@min_dutyValue 0056                                  ___xxtofl@sign 002C  
                        __size_of_EUSART_Write 000A                                    ___fldiv@grs 0060  
                                  ___fldiv@rem 0059                   ??_IOCBF0_SetInterruptHandler 0022  
                 ??_IOCBF3_SetInterruptHandler 0022                __size_of_EUSART_SetErrorHandler 0009  
                                  ___flmul@grs 0040                      __end_of_EUSART_Initialize 0A7A  
                         ??_EUSART_is_rx_ready 0020                           ??_EUSART_is_tx_ready 0077  
                                    _TXSTAbits 019E                       __size_of_CCP4_CaptureISR 0016  
            CCP4_DefaultCallBack@capturedValue 0079                     __end_of_PWM3_LoadDutyValue 09B6  
                            controle@dutyValue 005A                              ?_CCP4_SetCallBack 0020  
                           ??_CCP4_SetCallBack 0022                     _EUSART_DefaultErrorHandler 0000  
                               __end_of___wmul 09F2                                   _EUSART_Write 08B9  
                               __end_of_col_up 07F0                              __size_of_TMR4_ISR 000F  
                               _ADC_Initialize 084F            __size_of_IOCBF0_SetInterruptHandler 0009  
          __size_of_IOCBF3_SetInterruptHandler 0009                         ?_OSCILLATOR_Initialize 0077  
                               __end_of_min_up 0F2D                                 __end_of_update 0480  
                                ??_comunicacao 0066                            start_initialization 0036  
              __size_of_PIN_MANAGER_Initialize 0044                                    __end_of_abs 09D2  
                                ??_EUSART_Read 0020                         _EUSART_is_tx_ready$167 0077  
                     __size_of_PIN_MANAGER_IOC 0021                 ?_EUSART_SetOverrunErrorHandler 0020  
                     __size_of_PWM3_Initialize 0009                       __size_of_TMR1_Initialize 0010  
                   _EUSART_FramingErrorHandler 0153                                       ??___wmul 0024  
                       _EUSART_SetErrorHandler 0868                       __size_of_CCP4_Initialize 0012  
                       __end_of_ADC_Initialize 0857                                      __Umul8_16 0A7A  
                                     ??_col_up 0025                                       ??_min_up 0020  
                                     ??_update 0020                          CCP4_CaptureISR@module 007C  
                                    ___fldiv@a 004C                                      ___fldiv@b 0050  
                                    ___flmul@a 0036                                      ___flmul@b 0032  
                                  __pbssCOMMON 0070                                      ___latbits 0001  
                                __pcstackBANK0 0020                       __size_of_TMR2_Initialize 0008  
                  ?_IOCBF5_SetInterruptHandler 0020                              __size_of___xxtofl 00AD  
                          comunicacao@position 006B         __end_of_IOCBF4_DefaultInterruptHandler 082E  
      __size_of_IOCBF4_DefaultInterruptHandler 0001                 _IOCBF4_DefaultInterruptHandler 082D  
                          __end_of_comunicacao 1000                              __size_of_col_down 007C  
                   __size_of_EUSART_Initialize 0024                            __end_of_EUSART_Read 094D  
                            __size_of_controle 0140                                      __pnvBANK1 00E3  
                                    __pnvBANK2 014D                                      _and_ating 006F  
                                    _ccp_value 00DF                              __size_of_max_down 00B1  
                      _IOCBF3_InterruptHandler 00E7                         _PIN_MANAGER_Initialize 0B39  
             __end_of_TMR4_SetInterruptHandler 08B9                                       ?___fldiv 004C  
                            ??_CCP4_CaptureISR 007B                                       ?___flmul 0032  
                                     ?___fltol 0020                                     ?__Umul8_16 0020  
                                    _fila_down 0134                                ?_ADC_Initialize 0077  
                 ??_INTERRUPT_InterruptManager 007E                                     send_data@i 0079  
                                    _distancia 00D0                                      _get_pulse 0A9E  
             ??_IOCBF5_DefaultInterruptHandler 0077                ?_IOCBF5_DefaultInterruptHandler 0077  
                                    _aux_tempo 00D6             __end_of_IOCBF0_SetInterruptHandler 088C  
                   _IOCBF0_SetInterruptHandler 0883             __end_of_IOCBF3_SetInterruptHandler 0895  
                   _IOCBF3_SetInterruptHandler 088C                                       ?_sensor1 0077  
                                     ?_sensor2 0077                                       ?_sensor3 0077  
                                     ?_sensor4 0077                       __size_of_TMR4_Initialize 0014  
                               ___wmul@product 0024                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0020                                      clear_ram0 083B  
                 __end_of_CCP4_DefaultCallBack 082B                                      _send_data 0AC3  
                                     _PIE3bits 0093                              _eusartRxLastError 0076  
                     __size_of_TMR1_WriteTimer 0011            __size_of_INTERRUPT_InterruptManager 0030  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0022  
                                     _PIR3bits 0013                                      _origem_up 0120  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR4_ISR 092F  
                            ??_PIN_MANAGER_IOC 0078                              ??_TMR1_Initialize 0020  
                            ??_PWM3_Initialize 0020                                     ?_get_pulse 0079  
                                   _ADCON0bits 009D                                      _out_value 00CA  
                            ___wmul@multiplier 0020                        __size_of_FVR_Initialize 0004  
                            ??_CCP4_Initialize 0022                                    _comunicacao 0F2D  
                                  _EUSART_Read 093E                                      controle@a 0054  
                            ??_TMR2_Initialize 0020                                     ?_send_data 0077  
                                    max_down@i 0023                              _ADC_GetConversion 0A13  
                      ??_OSCILLATOR_Initialize 0020                                    ??__Umul8_16 0022  
                          _EUSART_ErrorHandler 014F                             ?_ADC_GetConversion 0020  
                                  _max_fila_up 00CE                               __size_of___fldiv 01B4  
                             __size_of___flmul 0257                               __size_of___fltol 0075  
                     _TMR4_SetInterruptHandler 08B0                             _PWM3_LoadDutyValue 099A  
                          ??_ADC_GetConversion 0022                        _IOCBF4_InterruptHandler 00E5  
                                     ___xxtofl 0CFD                      __size_of_CCP4_SetCallBack 0009  
                                     __ptext10 093E                                       __ptext11 09D2  
                                     __ptext20 0A34                                       __ptext12 099A  
                                     __ptext21 0832                                       __ptext13 0A13  
                                   _T1GCONbits 0019                                       __ptext30 088C  
                                     __ptext22 0970                                       __ptext14 0F2D  
                                     __ptext31 0883                                       __ptext23 08B0  
                                     __ptext15 0CFD                                       __ptext40 084F  
                                     __ptext32 0848                                       __ptext24 0857  
                                     __ptext16 0B7D                                       __ptext33 082E  
                                     __ptext25 07F0                                       __ptext17 0053  
                                     __ptext50 08D9                                       __ptext42 092F  
                                     __ptext34 0A56                                       __ptext26 08A7  
                                     __ptext18 0A7A                                       __ptext51 0902  
                                     __ptext43 0003                                       __ptext35 087A  
                                     __ptext27 0B39                                       __ptext19 0480  
                                     __ptext60 0984                                       __ptext52 082D  
                                     __ptext44 0AC3                                       __ptext36 0871  
                                     __ptext28 089E                                       __ptext61 082A  
                                     __ptext53 08CE                                       __ptext45 0920  
                                     __ptext37 0868                                       __ptext29 0895  
                                     __ptext62 0A9E                                       __ptext54 08F3  
                                     __ptext46 08B9                                       __ptext38 095E  
                                     __ptext63 094D                                       __ptext55 082C  
                                     __ptext47 09F2                                       __ptext39 085F  
                                     __ptext56 08C3                                       __ptext48 0911  
                                     __ptext57 08E4                                       __ptext49 0002  
                                     __ptext58 082B                            ?_PWM3_LoadDutyValue 0020  
                                     __ptext59 0841                         __size_of_gerenciamento 008F  
                             __size_of_sensor1 0007                               __size_of_sensor2 000B  
                             __size_of_sensor3 000B                               __size_of_sensor4 000B  
                                     _col_down 0BF2                   ??_IOCBF4_SetInterruptHandler 0022  
                                   _IOCBF0_ISR 08E4                                     _IOCBF3_ISR 08F3  
                                   _IOCBF4_ISR 0902                                     _IOCBF5_ISR 0911  
                                     _controle 0634                                       _max_down 0DAA  
                            ??_TMR4_Initialize 0022                    __size_of_EUSART_is_rx_ready 0005  
                                __size_of_main 0041                    __size_of_EUSART_is_tx_ready 000F  
                    __end_of_ADC_GetConversion 0A34                        ?_EUSART_SetErrorHandler 0020  
                                     _sentido2 00D4  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
                         ??_PWM3_LoadDutyValue 0022                                       int$flags 007E  
                              controle@destiny 0050             __end_of_INTERRUPT_InterruptManager 0034  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 087A  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 0871  
                            ??_TMR1_WriteTimer 0079                                    ??_get_pulse 007B  
          __size_of_IOCBF4_SetInterruptHandler 0009                                      update@aux 0023  
                                   _INTCONbits 000B                           _CCP4_DefaultCallBack 082A  
                                   _FVRCONbits 0117                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000                                _CCP4_CaptureISR 0984  
                      ?_PIN_MANAGER_Initialize 0077                 __end_of_EUSART_SetErrorHandler 0871  
                                  ??_send_data 0078                               ??_ADC_Initialize 0020  
                                _gerenciamento 0C6E                                    _origem_down 00A0  
EUSART_SetFramingErrorHandler@interruptHandler 0020                    PWM3_LoadDutyValue@dutyValue 0020  
                               _FVR_Initialize 082E                         __Umul8_16@multiplicand 0020  
                        ?_CCP4_DefaultCallBack 0079                    ?_IOCBF0_SetInterruptHandler 0020  
                  ?_IOCBF3_SetInterruptHandler 0020                                    ?_IOCBF0_ISR 0077  
                           EUSART_Write@txData 0077                                    ?_IOCBF3_ISR 0077  
                                  ?_IOCBF4_ISR 0077                                    ?_IOCBF5_ISR 0077  
               __end_of_PIN_MANAGER_Initialize 0B7D               ??_IOCBF0_DefaultInterruptHandler 0077  
              ?_IOCBF0_DefaultInterruptHandler 0077         __end_of_IOCBF5_DefaultInterruptHandler 0003  
      __size_of_IOCBF5_DefaultInterruptHandler 0001                 _IOCBF5_DefaultInterruptHandler 0002  
                              _PIN_MANAGER_IOC 09F2                           __Umul8_16@multiplier 0028  
                   __size_of_ADC_GetConversion 0021                        _IOCBF5_InterruptHandler 00E3  
                              _TMR1_Initialize 07F0                                _PWM3_Initialize 08A7  
                            __Umul8_16@product 0024                                 ?_gerenciamento 0077  
