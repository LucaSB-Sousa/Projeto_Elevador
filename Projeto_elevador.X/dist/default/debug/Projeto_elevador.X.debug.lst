

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec 13 13:07:52 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     5                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	dabs	1,0x7E,2
    79  0000                     
    80                           ; Version 2.10
    81                           ; Generated 31/07/2019 GMT
    82                           ; 
    83                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC16F1827 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  008C                     	;# 
   144  008D                     	;# 
   145  0091                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0095                     	;# 
   150  0096                     	;# 
   151  0097                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009A                     	;# 
   155  009B                     	;# 
   156  009B                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  0111                     	;# 
   163  0112                     	;# 
   164  0113                     	;# 
   165  0114                     	;# 
   166  0115                     	;# 
   167  0116                     	;# 
   168  0117                     	;# 
   169  0118                     	;# 
   170  0119                     	;# 
   171  011A                     	;# 
   172  011B                     	;# 
   173  011D                     	;# 
   174  011E                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  0191                     	;# 
   178  0191                     	;# 
   179  0192                     	;# 
   180  0193                     	;# 
   181  0193                     	;# 
   182  0193                     	;# 
   183  0194                     	;# 
   184  0195                     	;# 
   185  0196                     	;# 
   186  0199                     	;# 
   187  019A                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019B                     	;# 
   192  019C                     	;# 
   193  019C                     	;# 
   194  019D                     	;# 
   195  019E                     	;# 
   196  019F                     	;# 
   197  020C                     	;# 
   198  020D                     	;# 
   199  0211                     	;# 
   200  0211                     	;# 
   201  0212                     	;# 
   202  0212                     	;# 
   203  0213                     	;# 
   204  0213                     	;# 
   205  0214                     	;# 
   206  0214                     	;# 
   207  0215                     	;# 
   208  0215                     	;# 
   209  0215                     	;# 
   210  0216                     	;# 
   211  0216                     	;# 
   212  0217                     	;# 
   213  0217                     	;# 
   214  0219                     	;# 
   215  021A                     	;# 
   216  021B                     	;# 
   217  021C                     	;# 
   218  021D                     	;# 
   219  021E                     	;# 
   220  021F                     	;# 
   221  0291                     	;# 
   222  0291                     	;# 
   223  0292                     	;# 
   224  0293                     	;# 
   225  0294                     	;# 
   226  0295                     	;# 
   227  0295                     	;# 
   228  0296                     	;# 
   229  0298                     	;# 
   230  0298                     	;# 
   231  0299                     	;# 
   232  029A                     	;# 
   233  029B                     	;# 
   234  029C                     	;# 
   235  029C                     	;# 
   236  029D                     	;# 
   237  029E                     	;# 
   238  029E                     	;# 
   239  0311                     	;# 
   240  0311                     	;# 
   241  0312                     	;# 
   242  0313                     	;# 
   243  0318                     	;# 
   244  0318                     	;# 
   245  0319                     	;# 
   246  031A                     	;# 
   247  0394                     	;# 
   248  0395                     	;# 
   249  0396                     	;# 
   250  039A                     	;# 
   251  039C                     	;# 
   252  039D                     	;# 
   253  039E                     	;# 
   254  039F                     	;# 
   255  0415                     	;# 
   256  0416                     	;# 
   257  0417                     	;# 
   258  041C                     	;# 
   259  041D                     	;# 
   260  041E                     	;# 
   261  0FE4                     	;# 
   262  0FE5                     	;# 
   263  0FE6                     	;# 
   264  0FE7                     	;# 
   265  0FE8                     	;# 
   266  0FE9                     	;# 
   267  0FEA                     	;# 
   268  0FEB                     	;# 
   269  0FED                     	;# 
   270  0FEE                     	;# 
   271  0FEF                     	;# 
   272  0000                     	;# 
   273  0001                     	;# 
   274  0002                     	;# 
   275  0003                     	;# 
   276  0004                     	;# 
   277  0005                     	;# 
   278  0006                     	;# 
   279  0007                     	;# 
   280  0008                     	;# 
   281  0009                     	;# 
   282  000A                     	;# 
   283  000B                     	;# 
   284  000C                     	;# 
   285  000D                     	;# 
   286  0011                     	;# 
   287  0012                     	;# 
   288  0013                     	;# 
   289  0014                     	;# 
   290  0015                     	;# 
   291  0016                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  001A                     	;# 
   297  001B                     	;# 
   298  001C                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  0091                     	;# 
   304  0092                     	;# 
   305  0093                     	;# 
   306  0094                     	;# 
   307  0095                     	;# 
   308  0096                     	;# 
   309  0097                     	;# 
   310  0098                     	;# 
   311  0099                     	;# 
   312  009A                     	;# 
   313  009B                     	;# 
   314  009B                     	;# 
   315  009C                     	;# 
   316  009D                     	;# 
   317  009E                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  0111                     	;# 
   321  0112                     	;# 
   322  0113                     	;# 
   323  0114                     	;# 
   324  0115                     	;# 
   325  0116                     	;# 
   326  0117                     	;# 
   327  0118                     	;# 
   328  0119                     	;# 
   329  011A                     	;# 
   330  011B                     	;# 
   331  011D                     	;# 
   332  011E                     	;# 
   333  018C                     	;# 
   334  018D                     	;# 
   335  0191                     	;# 
   336  0191                     	;# 
   337  0192                     	;# 
   338  0193                     	;# 
   339  0193                     	;# 
   340  0193                     	;# 
   341  0194                     	;# 
   342  0195                     	;# 
   343  0196                     	;# 
   344  0199                     	;# 
   345  019A                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019B                     	;# 
   350  019C                     	;# 
   351  019C                     	;# 
   352  019D                     	;# 
   353  019E                     	;# 
   354  019F                     	;# 
   355  020C                     	;# 
   356  020D                     	;# 
   357  0211                     	;# 
   358  0211                     	;# 
   359  0212                     	;# 
   360  0212                     	;# 
   361  0213                     	;# 
   362  0213                     	;# 
   363  0214                     	;# 
   364  0214                     	;# 
   365  0215                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0216                     	;# 
   369  0216                     	;# 
   370  0217                     	;# 
   371  0217                     	;# 
   372  0219                     	;# 
   373  021A                     	;# 
   374  021B                     	;# 
   375  021C                     	;# 
   376  021D                     	;# 
   377  021E                     	;# 
   378  021F                     	;# 
   379  0291                     	;# 
   380  0291                     	;# 
   381  0292                     	;# 
   382  0293                     	;# 
   383  0294                     	;# 
   384  0295                     	;# 
   385  0295                     	;# 
   386  0296                     	;# 
   387  0298                     	;# 
   388  0298                     	;# 
   389  0299                     	;# 
   390  029A                     	;# 
   391  029B                     	;# 
   392  029C                     	;# 
   393  029C                     	;# 
   394  029D                     	;# 
   395  029E                     	;# 
   396  029E                     	;# 
   397  0311                     	;# 
   398  0311                     	;# 
   399  0312                     	;# 
   400  0313                     	;# 
   401  0318                     	;# 
   402  0318                     	;# 
   403  0319                     	;# 
   404  031A                     	;# 
   405  0394                     	;# 
   406  0395                     	;# 
   407  0396                     	;# 
   408  039A                     	;# 
   409  039C                     	;# 
   410  039D                     	;# 
   411  039E                     	;# 
   412  039F                     	;# 
   413  0415                     	;# 
   414  0416                     	;# 
   415  0417                     	;# 
   416  041C                     	;# 
   417  041D                     	;# 
   418  041E                     	;# 
   419  0FE4                     	;# 
   420  0FE5                     	;# 
   421  0FE6                     	;# 
   422  0FE7                     	;# 
   423  0FE8                     	;# 
   424  0FE9                     	;# 
   425  0FEA                     	;# 
   426  0FEB                     	;# 
   427  0FED                     	;# 
   428  0FEE                     	;# 
   429  0FEF                     	;# 
   430  0000                     	;# 
   431  0001                     	;# 
   432  0002                     	;# 
   433  0003                     	;# 
   434  0004                     	;# 
   435  0005                     	;# 
   436  0006                     	;# 
   437  0007                     	;# 
   438  0008                     	;# 
   439  0009                     	;# 
   440  000A                     	;# 
   441  000B                     	;# 
   442  000C                     	;# 
   443  000D                     	;# 
   444  0011                     	;# 
   445  0012                     	;# 
   446  0013                     	;# 
   447  0014                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0016                     	;# 
   451  0017                     	;# 
   452  0018                     	;# 
   453  0019                     	;# 
   454  001A                     	;# 
   455  001B                     	;# 
   456  001C                     	;# 
   457  001E                     	;# 
   458  001F                     	;# 
   459  008C                     	;# 
   460  008D                     	;# 
   461  0091                     	;# 
   462  0092                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0095                     	;# 
   466  0096                     	;# 
   467  0097                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009A                     	;# 
   471  009B                     	;# 
   472  009B                     	;# 
   473  009C                     	;# 
   474  009D                     	;# 
   475  009E                     	;# 
   476  010C                     	;# 
   477  010D                     	;# 
   478  0111                     	;# 
   479  0112                     	;# 
   480  0113                     	;# 
   481  0114                     	;# 
   482  0115                     	;# 
   483  0116                     	;# 
   484  0117                     	;# 
   485  0118                     	;# 
   486  0119                     	;# 
   487  011A                     	;# 
   488  011B                     	;# 
   489  011D                     	;# 
   490  011E                     	;# 
   491  018C                     	;# 
   492  018D                     	;# 
   493  0191                     	;# 
   494  0191                     	;# 
   495  0192                     	;# 
   496  0193                     	;# 
   497  0193                     	;# 
   498  0193                     	;# 
   499  0194                     	;# 
   500  0195                     	;# 
   501  0196                     	;# 
   502  0199                     	;# 
   503  019A                     	;# 
   504  019B                     	;# 
   505  019B                     	;# 
   506  019B                     	;# 
   507  019B                     	;# 
   508  019C                     	;# 
   509  019C                     	;# 
   510  019D                     	;# 
   511  019E                     	;# 
   512  019F                     	;# 
   513  020C                     	;# 
   514  020D                     	;# 
   515  0211                     	;# 
   516  0211                     	;# 
   517  0212                     	;# 
   518  0212                     	;# 
   519  0213                     	;# 
   520  0213                     	;# 
   521  0214                     	;# 
   522  0214                     	;# 
   523  0215                     	;# 
   524  0215                     	;# 
   525  0215                     	;# 
   526  0216                     	;# 
   527  0216                     	;# 
   528  0217                     	;# 
   529  0217                     	;# 
   530  0219                     	;# 
   531  021A                     	;# 
   532  021B                     	;# 
   533  021C                     	;# 
   534  021D                     	;# 
   535  021E                     	;# 
   536  021F                     	;# 
   537  0291                     	;# 
   538  0291                     	;# 
   539  0292                     	;# 
   540  0293                     	;# 
   541  0294                     	;# 
   542  0295                     	;# 
   543  0295                     	;# 
   544  0296                     	;# 
   545  0298                     	;# 
   546  0298                     	;# 
   547  0299                     	;# 
   548  029A                     	;# 
   549  029B                     	;# 
   550  029C                     	;# 
   551  029C                     	;# 
   552  029D                     	;# 
   553  029E                     	;# 
   554  029E                     	;# 
   555  0311                     	;# 
   556  0311                     	;# 
   557  0312                     	;# 
   558  0313                     	;# 
   559  0318                     	;# 
   560  0318                     	;# 
   561  0319                     	;# 
   562  031A                     	;# 
   563  0394                     	;# 
   564  0395                     	;# 
   565  0396                     	;# 
   566  039A                     	;# 
   567  039C                     	;# 
   568  039D                     	;# 
   569  039E                     	;# 
   570  039F                     	;# 
   571  0415                     	;# 
   572  0416                     	;# 
   573  0417                     	;# 
   574  041C                     	;# 
   575  041D                     	;# 
   576  041E                     	;# 
   577  0FE4                     	;# 
   578  0FE5                     	;# 
   579  0FE6                     	;# 
   580  0FE7                     	;# 
   581  0FE8                     	;# 
   582  0FE9                     	;# 
   583  0FEA                     	;# 
   584  0FEB                     	;# 
   585  0FED                     	;# 
   586  0FEE                     	;# 
   587  0FEF                     	;# 
   588  0000                     	;# 
   589  0001                     	;# 
   590  0002                     	;# 
   591  0003                     	;# 
   592  0004                     	;# 
   593  0005                     	;# 
   594  0006                     	;# 
   595  0007                     	;# 
   596  0008                     	;# 
   597  0009                     	;# 
   598  000A                     	;# 
   599  000B                     	;# 
   600  000C                     	;# 
   601  000D                     	;# 
   602  0011                     	;# 
   603  0012                     	;# 
   604  0013                     	;# 
   605  0014                     	;# 
   606  0015                     	;# 
   607  0016                     	;# 
   608  0016                     	;# 
   609  0017                     	;# 
   610  0018                     	;# 
   611  0019                     	;# 
   612  001A                     	;# 
   613  001B                     	;# 
   614  001C                     	;# 
   615  001E                     	;# 
   616  001F                     	;# 
   617  008C                     	;# 
   618  008D                     	;# 
   619  0091                     	;# 
   620  0092                     	;# 
   621  0093                     	;# 
   622  0094                     	;# 
   623  0095                     	;# 
   624  0096                     	;# 
   625  0097                     	;# 
   626  0098                     	;# 
   627  0099                     	;# 
   628  009A                     	;# 
   629  009B                     	;# 
   630  009B                     	;# 
   631  009C                     	;# 
   632  009D                     	;# 
   633  009E                     	;# 
   634  010C                     	;# 
   635  010D                     	;# 
   636  0111                     	;# 
   637  0112                     	;# 
   638  0113                     	;# 
   639  0114                     	;# 
   640  0115                     	;# 
   641  0116                     	;# 
   642  0117                     	;# 
   643  0118                     	;# 
   644  0119                     	;# 
   645  011A                     	;# 
   646  011B                     	;# 
   647  011D                     	;# 
   648  011E                     	;# 
   649  018C                     	;# 
   650  018D                     	;# 
   651  0191                     	;# 
   652  0191                     	;# 
   653  0192                     	;# 
   654  0193                     	;# 
   655  0193                     	;# 
   656  0193                     	;# 
   657  0194                     	;# 
   658  0195                     	;# 
   659  0196                     	;# 
   660  0199                     	;# 
   661  019A                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019B                     	;# 
   665  019B                     	;# 
   666  019C                     	;# 
   667  019C                     	;# 
   668  019D                     	;# 
   669  019E                     	;# 
   670  019F                     	;# 
   671  020C                     	;# 
   672  020D                     	;# 
   673  0211                     	;# 
   674  0211                     	;# 
   675  0212                     	;# 
   676  0212                     	;# 
   677  0213                     	;# 
   678  0213                     	;# 
   679  0214                     	;# 
   680  0214                     	;# 
   681  0215                     	;# 
   682  0215                     	;# 
   683  0215                     	;# 
   684  0216                     	;# 
   685  0216                     	;# 
   686  0217                     	;# 
   687  0217                     	;# 
   688  0219                     	;# 
   689  021A                     	;# 
   690  021B                     	;# 
   691  021C                     	;# 
   692  021D                     	;# 
   693  021E                     	;# 
   694  021F                     	;# 
   695  0291                     	;# 
   696  0291                     	;# 
   697  0292                     	;# 
   698  0293                     	;# 
   699  0294                     	;# 
   700  0295                     	;# 
   701  0295                     	;# 
   702  0296                     	;# 
   703  0298                     	;# 
   704  0298                     	;# 
   705  0299                     	;# 
   706  029A                     	;# 
   707  029B                     	;# 
   708  029C                     	;# 
   709  029C                     	;# 
   710  029D                     	;# 
   711  029E                     	;# 
   712  029E                     	;# 
   713  0311                     	;# 
   714  0311                     	;# 
   715  0312                     	;# 
   716  0313                     	;# 
   717  0318                     	;# 
   718  0318                     	;# 
   719  0319                     	;# 
   720  031A                     	;# 
   721  0394                     	;# 
   722  0395                     	;# 
   723  0396                     	;# 
   724  039A                     	;# 
   725  039C                     	;# 
   726  039D                     	;# 
   727  039E                     	;# 
   728  039F                     	;# 
   729  0415                     	;# 
   730  0416                     	;# 
   731  0417                     	;# 
   732  041C                     	;# 
   733  041D                     	;# 
   734  041E                     	;# 
   735  0FE4                     	;# 
   736  0FE5                     	;# 
   737  0FE6                     	;# 
   738  0FE7                     	;# 
   739  0FE8                     	;# 
   740  0FE9                     	;# 
   741  0FEA                     	;# 
   742  0FEB                     	;# 
   743  0FED                     	;# 
   744  0FEE                     	;# 
   745  0FEF                     	;# 
   746  0000                     	;# 
   747  0001                     	;# 
   748  0002                     	;# 
   749  0003                     	;# 
   750  0004                     	;# 
   751  0005                     	;# 
   752  0006                     	;# 
   753  0007                     	;# 
   754  0008                     	;# 
   755  0009                     	;# 
   756  000A                     	;# 
   757  000B                     	;# 
   758  000C                     	;# 
   759  000D                     	;# 
   760  0011                     	;# 
   761  0012                     	;# 
   762  0013                     	;# 
   763  0014                     	;# 
   764  0015                     	;# 
   765  0016                     	;# 
   766  0016                     	;# 
   767  0017                     	;# 
   768  0018                     	;# 
   769  0019                     	;# 
   770  001A                     	;# 
   771  001B                     	;# 
   772  001C                     	;# 
   773  001E                     	;# 
   774  001F                     	;# 
   775  008C                     	;# 
   776  008D                     	;# 
   777  0091                     	;# 
   778  0092                     	;# 
   779  0093                     	;# 
   780  0094                     	;# 
   781  0095                     	;# 
   782  0096                     	;# 
   783  0097                     	;# 
   784  0098                     	;# 
   785  0099                     	;# 
   786  009A                     	;# 
   787  009B                     	;# 
   788  009B                     	;# 
   789  009C                     	;# 
   790  009D                     	;# 
   791  009E                     	;# 
   792  010C                     	;# 
   793  010D                     	;# 
   794  0111                     	;# 
   795  0112                     	;# 
   796  0113                     	;# 
   797  0114                     	;# 
   798  0115                     	;# 
   799  0116                     	;# 
   800  0117                     	;# 
   801  0118                     	;# 
   802  0119                     	;# 
   803  011A                     	;# 
   804  011B                     	;# 
   805  011D                     	;# 
   806  011E                     	;# 
   807  018C                     	;# 
   808  018D                     	;# 
   809  0191                     	;# 
   810  0191                     	;# 
   811  0192                     	;# 
   812  0193                     	;# 
   813  0193                     	;# 
   814  0193                     	;# 
   815  0194                     	;# 
   816  0195                     	;# 
   817  0196                     	;# 
   818  0199                     	;# 
   819  019A                     	;# 
   820  019B                     	;# 
   821  019B                     	;# 
   822  019B                     	;# 
   823  019B                     	;# 
   824  019C                     	;# 
   825  019C                     	;# 
   826  019D                     	;# 
   827  019E                     	;# 
   828  019F                     	;# 
   829  020C                     	;# 
   830  020D                     	;# 
   831  0211                     	;# 
   832  0211                     	;# 
   833  0212                     	;# 
   834  0212                     	;# 
   835  0213                     	;# 
   836  0213                     	;# 
   837  0214                     	;# 
   838  0214                     	;# 
   839  0215                     	;# 
   840  0215                     	;# 
   841  0215                     	;# 
   842  0216                     	;# 
   843  0216                     	;# 
   844  0217                     	;# 
   845  0217                     	;# 
   846  0219                     	;# 
   847  021A                     	;# 
   848  021B                     	;# 
   849  021C                     	;# 
   850  021D                     	;# 
   851  021E                     	;# 
   852  021F                     	;# 
   853  0291                     	;# 
   854  0291                     	;# 
   855  0292                     	;# 
   856  0293                     	;# 
   857  0294                     	;# 
   858  0295                     	;# 
   859  0295                     	;# 
   860  0296                     	;# 
   861  0298                     	;# 
   862  0298                     	;# 
   863  0299                     	;# 
   864  029A                     	;# 
   865  029B                     	;# 
   866  029C                     	;# 
   867  029C                     	;# 
   868  029D                     	;# 
   869  029E                     	;# 
   870  029E                     	;# 
   871  0311                     	;# 
   872  0311                     	;# 
   873  0312                     	;# 
   874  0313                     	;# 
   875  0318                     	;# 
   876  0318                     	;# 
   877  0319                     	;# 
   878  031A                     	;# 
   879  0394                     	;# 
   880  0395                     	;# 
   881  0396                     	;# 
   882  039A                     	;# 
   883  039C                     	;# 
   884  039D                     	;# 
   885  039E                     	;# 
   886  039F                     	;# 
   887  0415                     	;# 
   888  0416                     	;# 
   889  0417                     	;# 
   890  041C                     	;# 
   891  041D                     	;# 
   892  041E                     	;# 
   893  0FE4                     	;# 
   894  0FE5                     	;# 
   895  0FE6                     	;# 
   896  0FE7                     	;# 
   897  0FE8                     	;# 
   898  0FE9                     	;# 
   899  0FEA                     	;# 
   900  0FEB                     	;# 
   901  0FED                     	;# 
   902  0FEE                     	;# 
   903  0FEF                     	;# 
   904  0000                     	;# 
   905  0001                     	;# 
   906  0002                     	;# 
   907  0003                     	;# 
   908  0004                     	;# 
   909  0005                     	;# 
   910  0006                     	;# 
   911  0007                     	;# 
   912  0008                     	;# 
   913  0009                     	;# 
   914  000A                     	;# 
   915  000B                     	;# 
   916  000C                     	;# 
   917  000D                     	;# 
   918  0011                     	;# 
   919  0012                     	;# 
   920  0013                     	;# 
   921  0014                     	;# 
   922  0015                     	;# 
   923  0016                     	;# 
   924  0016                     	;# 
   925  0017                     	;# 
   926  0018                     	;# 
   927  0019                     	;# 
   928  001A                     	;# 
   929  001B                     	;# 
   930  001C                     	;# 
   931  001E                     	;# 
   932  001F                     	;# 
   933  008C                     	;# 
   934  008D                     	;# 
   935  0091                     	;# 
   936  0092                     	;# 
   937  0093                     	;# 
   938  0094                     	;# 
   939  0095                     	;# 
   940  0096                     	;# 
   941  0097                     	;# 
   942  0098                     	;# 
   943  0099                     	;# 
   944  009A                     	;# 
   945  009B                     	;# 
   946  009B                     	;# 
   947  009C                     	;# 
   948  009D                     	;# 
   949  009E                     	;# 
   950  010C                     	;# 
   951  010D                     	;# 
   952  0111                     	;# 
   953  0112                     	;# 
   954  0113                     	;# 
   955  0114                     	;# 
   956  0115                     	;# 
   957  0116                     	;# 
   958  0117                     	;# 
   959  0118                     	;# 
   960  0119                     	;# 
   961  011A                     	;# 
   962  011B                     	;# 
   963  011D                     	;# 
   964  011E                     	;# 
   965  018C                     	;# 
   966  018D                     	;# 
   967  0191                     	;# 
   968  0191                     	;# 
   969  0192                     	;# 
   970  0193                     	;# 
   971  0193                     	;# 
   972  0193                     	;# 
   973  0194                     	;# 
   974  0195                     	;# 
   975  0196                     	;# 
   976  0199                     	;# 
   977  019A                     	;# 
   978  019B                     	;# 
   979  019B                     	;# 
   980  019B                     	;# 
   981  019B                     	;# 
   982  019C                     	;# 
   983  019C                     	;# 
   984  019D                     	;# 
   985  019E                     	;# 
   986  019F                     	;# 
   987  020C                     	;# 
   988  020D                     	;# 
   989  0211                     	;# 
   990  0211                     	;# 
   991  0212                     	;# 
   992  0212                     	;# 
   993  0213                     	;# 
   994  0213                     	;# 
   995  0214                     	;# 
   996  0214                     	;# 
   997  0215                     	;# 
   998  0215                     	;# 
   999  0215                     	;# 
  1000  0216                     	;# 
  1001  0216                     	;# 
  1002  0217                     	;# 
  1003  0217                     	;# 
  1004  0219                     	;# 
  1005  021A                     	;# 
  1006  021B                     	;# 
  1007  021C                     	;# 
  1008  021D                     	;# 
  1009  021E                     	;# 
  1010  021F                     	;# 
  1011  0291                     	;# 
  1012  0291                     	;# 
  1013  0292                     	;# 
  1014  0293                     	;# 
  1015  0294                     	;# 
  1016  0295                     	;# 
  1017  0295                     	;# 
  1018  0296                     	;# 
  1019  0298                     	;# 
  1020  0298                     	;# 
  1021  0299                     	;# 
  1022  029A                     	;# 
  1023  029B                     	;# 
  1024  029C                     	;# 
  1025  029C                     	;# 
  1026  029D                     	;# 
  1027  029E                     	;# 
  1028  029E                     	;# 
  1029  0311                     	;# 
  1030  0311                     	;# 
  1031  0312                     	;# 
  1032  0313                     	;# 
  1033  0318                     	;# 
  1034  0318                     	;# 
  1035  0319                     	;# 
  1036  031A                     	;# 
  1037  0394                     	;# 
  1038  0395                     	;# 
  1039  0396                     	;# 
  1040  039A                     	;# 
  1041  039C                     	;# 
  1042  039D                     	;# 
  1043  039E                     	;# 
  1044  039F                     	;# 
  1045  0415                     	;# 
  1046  0416                     	;# 
  1047  0417                     	;# 
  1048  041C                     	;# 
  1049  041D                     	;# 
  1050  041E                     	;# 
  1051  0FE4                     	;# 
  1052  0FE5                     	;# 
  1053  0FE6                     	;# 
  1054  0FE7                     	;# 
  1055  0FE8                     	;# 
  1056  0FE9                     	;# 
  1057  0FEA                     	;# 
  1058  0FEB                     	;# 
  1059  0FED                     	;# 
  1060  0FEE                     	;# 
  1061  0FEF                     	;# 
  1062  0000                     	;# 
  1063  0001                     	;# 
  1064  0002                     	;# 
  1065  0003                     	;# 
  1066  0004                     	;# 
  1067  0005                     	;# 
  1068  0006                     	;# 
  1069  0007                     	;# 
  1070  0008                     	;# 
  1071  0009                     	;# 
  1072  000A                     	;# 
  1073  000B                     	;# 
  1074  000C                     	;# 
  1075  000D                     	;# 
  1076  0011                     	;# 
  1077  0012                     	;# 
  1078  0013                     	;# 
  1079  0014                     	;# 
  1080  0015                     	;# 
  1081  0016                     	;# 
  1082  0016                     	;# 
  1083  0017                     	;# 
  1084  0018                     	;# 
  1085  0019                     	;# 
  1086  001A                     	;# 
  1087  001B                     	;# 
  1088  001C                     	;# 
  1089  001E                     	;# 
  1090  001F                     	;# 
  1091  008C                     	;# 
  1092  008D                     	;# 
  1093  0091                     	;# 
  1094  0092                     	;# 
  1095  0093                     	;# 
  1096  0094                     	;# 
  1097  0095                     	;# 
  1098  0096                     	;# 
  1099  0097                     	;# 
  1100  0098                     	;# 
  1101  0099                     	;# 
  1102  009A                     	;# 
  1103  009B                     	;# 
  1104  009B                     	;# 
  1105  009C                     	;# 
  1106  009D                     	;# 
  1107  009E                     	;# 
  1108  010C                     	;# 
  1109  010D                     	;# 
  1110  0111                     	;# 
  1111  0112                     	;# 
  1112  0113                     	;# 
  1113  0114                     	;# 
  1114  0115                     	;# 
  1115  0116                     	;# 
  1116  0117                     	;# 
  1117  0118                     	;# 
  1118  0119                     	;# 
  1119  011A                     	;# 
  1120  011B                     	;# 
  1121  011D                     	;# 
  1122  011E                     	;# 
  1123  018C                     	;# 
  1124  018D                     	;# 
  1125  0191                     	;# 
  1126  0191                     	;# 
  1127  0192                     	;# 
  1128  0193                     	;# 
  1129  0193                     	;# 
  1130  0193                     	;# 
  1131  0194                     	;# 
  1132  0195                     	;# 
  1133  0196                     	;# 
  1134  0199                     	;# 
  1135  019A                     	;# 
  1136  019B                     	;# 
  1137  019B                     	;# 
  1138  019B                     	;# 
  1139  019B                     	;# 
  1140  019C                     	;# 
  1141  019C                     	;# 
  1142  019D                     	;# 
  1143  019E                     	;# 
  1144  019F                     	;# 
  1145  020C                     	;# 
  1146  020D                     	;# 
  1147  0211                     	;# 
  1148  0211                     	;# 
  1149  0212                     	;# 
  1150  0212                     	;# 
  1151  0213                     	;# 
  1152  0213                     	;# 
  1153  0214                     	;# 
  1154  0214                     	;# 
  1155  0215                     	;# 
  1156  0215                     	;# 
  1157  0215                     	;# 
  1158  0216                     	;# 
  1159  0216                     	;# 
  1160  0217                     	;# 
  1161  0217                     	;# 
  1162  0219                     	;# 
  1163  021A                     	;# 
  1164  021B                     	;# 
  1165  021C                     	;# 
  1166  021D                     	;# 
  1167  021E                     	;# 
  1168  021F                     	;# 
  1169  0291                     	;# 
  1170  0291                     	;# 
  1171  0292                     	;# 
  1172  0293                     	;# 
  1173  0294                     	;# 
  1174  0295                     	;# 
  1175  0295                     	;# 
  1176  0296                     	;# 
  1177  0298                     	;# 
  1178  0298                     	;# 
  1179  0299                     	;# 
  1180  029A                     	;# 
  1181  029B                     	;# 
  1182  029C                     	;# 
  1183  029C                     	;# 
  1184  029D                     	;# 
  1185  029E                     	;# 
  1186  029E                     	;# 
  1187  0311                     	;# 
  1188  0311                     	;# 
  1189  0312                     	;# 
  1190  0313                     	;# 
  1191  0318                     	;# 
  1192  0318                     	;# 
  1193  0319                     	;# 
  1194  031A                     	;# 
  1195  0394                     	;# 
  1196  0395                     	;# 
  1197  0396                     	;# 
  1198  039A                     	;# 
  1199  039C                     	;# 
  1200  039D                     	;# 
  1201  039E                     	;# 
  1202  039F                     	;# 
  1203  0415                     	;# 
  1204  0416                     	;# 
  1205  0417                     	;# 
  1206  041C                     	;# 
  1207  041D                     	;# 
  1208  041E                     	;# 
  1209  0FE4                     	;# 
  1210  0FE5                     	;# 
  1211  0FE6                     	;# 
  1212  0FE7                     	;# 
  1213  0FE8                     	;# 
  1214  0FE9                     	;# 
  1215  0FEA                     	;# 
  1216  0FEB                     	;# 
  1217  0FED                     	;# 
  1218  0FEE                     	;# 
  1219  0FEF                     	;# 
  1220  0000                     	;# 
  1221  0001                     	;# 
  1222  0002                     	;# 
  1223  0003                     	;# 
  1224  0004                     	;# 
  1225  0005                     	;# 
  1226  0006                     	;# 
  1227  0007                     	;# 
  1228  0008                     	;# 
  1229  0009                     	;# 
  1230  000A                     	;# 
  1231  000B                     	;# 
  1232  000C                     	;# 
  1233  000D                     	;# 
  1234  0011                     	;# 
  1235  0012                     	;# 
  1236  0013                     	;# 
  1237  0014                     	;# 
  1238  0015                     	;# 
  1239  0016                     	;# 
  1240  0016                     	;# 
  1241  0017                     	;# 
  1242  0018                     	;# 
  1243  0019                     	;# 
  1244  001A                     	;# 
  1245  001B                     	;# 
  1246  001C                     	;# 
  1247  001E                     	;# 
  1248  001F                     	;# 
  1249  008C                     	;# 
  1250  008D                     	;# 
  1251  0091                     	;# 
  1252  0092                     	;# 
  1253  0093                     	;# 
  1254  0094                     	;# 
  1255  0095                     	;# 
  1256  0096                     	;# 
  1257  0097                     	;# 
  1258  0098                     	;# 
  1259  0099                     	;# 
  1260  009A                     	;# 
  1261  009B                     	;# 
  1262  009B                     	;# 
  1263  009C                     	;# 
  1264  009D                     	;# 
  1265  009E                     	;# 
  1266  010C                     	;# 
  1267  010D                     	;# 
  1268  0111                     	;# 
  1269  0112                     	;# 
  1270  0113                     	;# 
  1271  0114                     	;# 
  1272  0115                     	;# 
  1273  0116                     	;# 
  1274  0117                     	;# 
  1275  0118                     	;# 
  1276  0119                     	;# 
  1277  011A                     	;# 
  1278  011B                     	;# 
  1279  011D                     	;# 
  1280  011E                     	;# 
  1281  018C                     	;# 
  1282  018D                     	;# 
  1283  0191                     	;# 
  1284  0191                     	;# 
  1285  0192                     	;# 
  1286  0193                     	;# 
  1287  0193                     	;# 
  1288  0193                     	;# 
  1289  0194                     	;# 
  1290  0195                     	;# 
  1291  0196                     	;# 
  1292  0199                     	;# 
  1293  019A                     	;# 
  1294  019B                     	;# 
  1295  019B                     	;# 
  1296  019B                     	;# 
  1297  019B                     	;# 
  1298  019C                     	;# 
  1299  019C                     	;# 
  1300  019D                     	;# 
  1301  019E                     	;# 
  1302  019F                     	;# 
  1303  020C                     	;# 
  1304  020D                     	;# 
  1305  0211                     	;# 
  1306  0211                     	;# 
  1307  0212                     	;# 
  1308  0212                     	;# 
  1309  0213                     	;# 
  1310  0213                     	;# 
  1311  0214                     	;# 
  1312  0214                     	;# 
  1313  0215                     	;# 
  1314  0215                     	;# 
  1315  0215                     	;# 
  1316  0216                     	;# 
  1317  0216                     	;# 
  1318  0217                     	;# 
  1319  0217                     	;# 
  1320  0219                     	;# 
  1321  021A                     	;# 
  1322  021B                     	;# 
  1323  021C                     	;# 
  1324  021D                     	;# 
  1325  021E                     	;# 
  1326  021F                     	;# 
  1327  0291                     	;# 
  1328  0291                     	;# 
  1329  0292                     	;# 
  1330  0293                     	;# 
  1331  0294                     	;# 
  1332  0295                     	;# 
  1333  0295                     	;# 
  1334  0296                     	;# 
  1335  0298                     	;# 
  1336  0298                     	;# 
  1337  0299                     	;# 
  1338  029A                     	;# 
  1339  029B                     	;# 
  1340  029C                     	;# 
  1341  029C                     	;# 
  1342  029D                     	;# 
  1343  029E                     	;# 
  1344  029E                     	;# 
  1345  0311                     	;# 
  1346  0311                     	;# 
  1347  0312                     	;# 
  1348  0313                     	;# 
  1349  0318                     	;# 
  1350  0318                     	;# 
  1351  0319                     	;# 
  1352  031A                     	;# 
  1353  0394                     	;# 
  1354  0395                     	;# 
  1355  0396                     	;# 
  1356  039A                     	;# 
  1357  039C                     	;# 
  1358  039D                     	;# 
  1359  039E                     	;# 
  1360  039F                     	;# 
  1361  0415                     	;# 
  1362  0416                     	;# 
  1363  0417                     	;# 
  1364  041C                     	;# 
  1365  041D                     	;# 
  1366  041E                     	;# 
  1367  0FE4                     	;# 
  1368  0FE5                     	;# 
  1369  0FE6                     	;# 
  1370  0FE7                     	;# 
  1371  0FE8                     	;# 
  1372  0FE9                     	;# 
  1373  0FEA                     	;# 
  1374  0FEB                     	;# 
  1375  0FED                     	;# 
  1376  0FEE                     	;# 
  1377  0FEF                     	;# 
  1378  0000                     	;# 
  1379  0001                     	;# 
  1380  0002                     	;# 
  1381  0003                     	;# 
  1382  0004                     	;# 
  1383  0005                     	;# 
  1384  0006                     	;# 
  1385  0007                     	;# 
  1386  0008                     	;# 
  1387  0009                     	;# 
  1388  000A                     	;# 
  1389  000B                     	;# 
  1390  000C                     	;# 
  1391  000D                     	;# 
  1392  0011                     	;# 
  1393  0012                     	;# 
  1394  0013                     	;# 
  1395  0014                     	;# 
  1396  0015                     	;# 
  1397  0016                     	;# 
  1398  0016                     	;# 
  1399  0017                     	;# 
  1400  0018                     	;# 
  1401  0019                     	;# 
  1402  001A                     	;# 
  1403  001B                     	;# 
  1404  001C                     	;# 
  1405  001E                     	;# 
  1406  001F                     	;# 
  1407  008C                     	;# 
  1408  008D                     	;# 
  1409  0091                     	;# 
  1410  0092                     	;# 
  1411  0093                     	;# 
  1412  0094                     	;# 
  1413  0095                     	;# 
  1414  0096                     	;# 
  1415  0097                     	;# 
  1416  0098                     	;# 
  1417  0099                     	;# 
  1418  009A                     	;# 
  1419  009B                     	;# 
  1420  009B                     	;# 
  1421  009C                     	;# 
  1422  009D                     	;# 
  1423  009E                     	;# 
  1424  010C                     	;# 
  1425  010D                     	;# 
  1426  0111                     	;# 
  1427  0112                     	;# 
  1428  0113                     	;# 
  1429  0114                     	;# 
  1430  0115                     	;# 
  1431  0116                     	;# 
  1432  0117                     	;# 
  1433  0118                     	;# 
  1434  0119                     	;# 
  1435  011A                     	;# 
  1436  011B                     	;# 
  1437  011D                     	;# 
  1438  011E                     	;# 
  1439  018C                     	;# 
  1440  018D                     	;# 
  1441  0191                     	;# 
  1442  0191                     	;# 
  1443  0192                     	;# 
  1444  0193                     	;# 
  1445  0193                     	;# 
  1446  0193                     	;# 
  1447  0194                     	;# 
  1448  0195                     	;# 
  1449  0196                     	;# 
  1450  0199                     	;# 
  1451  019A                     	;# 
  1452  019B                     	;# 
  1453  019B                     	;# 
  1454  019B                     	;# 
  1455  019B                     	;# 
  1456  019C                     	;# 
  1457  019C                     	;# 
  1458  019D                     	;# 
  1459  019E                     	;# 
  1460  019F                     	;# 
  1461  020C                     	;# 
  1462  020D                     	;# 
  1463  0211                     	;# 
  1464  0211                     	;# 
  1465  0212                     	;# 
  1466  0212                     	;# 
  1467  0213                     	;# 
  1468  0213                     	;# 
  1469  0214                     	;# 
  1470  0214                     	;# 
  1471  0215                     	;# 
  1472  0215                     	;# 
  1473  0215                     	;# 
  1474  0216                     	;# 
  1475  0216                     	;# 
  1476  0217                     	;# 
  1477  0217                     	;# 
  1478  0219                     	;# 
  1479  021A                     	;# 
  1480  021B                     	;# 
  1481  021C                     	;# 
  1482  021D                     	;# 
  1483  021E                     	;# 
  1484  021F                     	;# 
  1485  0291                     	;# 
  1486  0291                     	;# 
  1487  0292                     	;# 
  1488  0293                     	;# 
  1489  0294                     	;# 
  1490  0295                     	;# 
  1491  0295                     	;# 
  1492  0296                     	;# 
  1493  0298                     	;# 
  1494  0298                     	;# 
  1495  0299                     	;# 
  1496  029A                     	;# 
  1497  029B                     	;# 
  1498  029C                     	;# 
  1499  029C                     	;# 
  1500  029D                     	;# 
  1501  029E                     	;# 
  1502  029E                     	;# 
  1503  0311                     	;# 
  1504  0311                     	;# 
  1505  0312                     	;# 
  1506  0313                     	;# 
  1507  0318                     	;# 
  1508  0318                     	;# 
  1509  0319                     	;# 
  1510  031A                     	;# 
  1511  0394                     	;# 
  1512  0395                     	;# 
  1513  0396                     	;# 
  1514  039A                     	;# 
  1515  039C                     	;# 
  1516  039D                     	;# 
  1517  039E                     	;# 
  1518  039F                     	;# 
  1519  0415                     	;# 
  1520  0416                     	;# 
  1521  0417                     	;# 
  1522  041C                     	;# 
  1523  041D                     	;# 
  1524  041E                     	;# 
  1525  0FE4                     	;# 
  1526  0FE5                     	;# 
  1527  0FE6                     	;# 
  1528  0FE7                     	;# 
  1529  0FE8                     	;# 
  1530  0FE9                     	;# 
  1531  0FEA                     	;# 
  1532  0FEB                     	;# 
  1533  0FED                     	;# 
  1534  0FEE                     	;# 
  1535  0FEF                     	;# 
  1536  0000                     	;# 
  1537  0001                     	;# 
  1538  0002                     	;# 
  1539  0003                     	;# 
  1540  0004                     	;# 
  1541  0005                     	;# 
  1542  0006                     	;# 
  1543  0007                     	;# 
  1544  0008                     	;# 
  1545  0009                     	;# 
  1546  000A                     	;# 
  1547  000B                     	;# 
  1548  000C                     	;# 
  1549  000D                     	;# 
  1550  0011                     	;# 
  1551  0012                     	;# 
  1552  0013                     	;# 
  1553  0014                     	;# 
  1554  0015                     	;# 
  1555  0016                     	;# 
  1556  0016                     	;# 
  1557  0017                     	;# 
  1558  0018                     	;# 
  1559  0019                     	;# 
  1560  001A                     	;# 
  1561  001B                     	;# 
  1562  001C                     	;# 
  1563  001E                     	;# 
  1564  001F                     	;# 
  1565  008C                     	;# 
  1566  008D                     	;# 
  1567  0091                     	;# 
  1568  0092                     	;# 
  1569  0093                     	;# 
  1570  0094                     	;# 
  1571  0095                     	;# 
  1572  0096                     	;# 
  1573  0097                     	;# 
  1574  0098                     	;# 
  1575  0099                     	;# 
  1576  009A                     	;# 
  1577  009B                     	;# 
  1578  009B                     	;# 
  1579  009C                     	;# 
  1580  009D                     	;# 
  1581  009E                     	;# 
  1582  010C                     	;# 
  1583  010D                     	;# 
  1584  0111                     	;# 
  1585  0112                     	;# 
  1586  0113                     	;# 
  1587  0114                     	;# 
  1588  0115                     	;# 
  1589  0116                     	;# 
  1590  0117                     	;# 
  1591  0118                     	;# 
  1592  0119                     	;# 
  1593  011A                     	;# 
  1594  011B                     	;# 
  1595  011D                     	;# 
  1596  011E                     	;# 
  1597  018C                     	;# 
  1598  018D                     	;# 
  1599  0191                     	;# 
  1600  0191                     	;# 
  1601  0192                     	;# 
  1602  0193                     	;# 
  1603  0193                     	;# 
  1604  0193                     	;# 
  1605  0194                     	;# 
  1606  0195                     	;# 
  1607  0196                     	;# 
  1608  0199                     	;# 
  1609  019A                     	;# 
  1610  019B                     	;# 
  1611  019B                     	;# 
  1612  019B                     	;# 
  1613  019B                     	;# 
  1614  019C                     	;# 
  1615  019C                     	;# 
  1616  019D                     	;# 
  1617  019E                     	;# 
  1618  019F                     	;# 
  1619  020C                     	;# 
  1620  020D                     	;# 
  1621  0211                     	;# 
  1622  0211                     	;# 
  1623  0212                     	;# 
  1624  0212                     	;# 
  1625  0213                     	;# 
  1626  0213                     	;# 
  1627  0214                     	;# 
  1628  0214                     	;# 
  1629  0215                     	;# 
  1630  0215                     	;# 
  1631  0215                     	;# 
  1632  0216                     	;# 
  1633  0216                     	;# 
  1634  0217                     	;# 
  1635  0217                     	;# 
  1636  0219                     	;# 
  1637  021A                     	;# 
  1638  021B                     	;# 
  1639  021C                     	;# 
  1640  021D                     	;# 
  1641  021E                     	;# 
  1642  021F                     	;# 
  1643  0291                     	;# 
  1644  0291                     	;# 
  1645  0292                     	;# 
  1646  0293                     	;# 
  1647  0294                     	;# 
  1648  0295                     	;# 
  1649  0295                     	;# 
  1650  0296                     	;# 
  1651  0298                     	;# 
  1652  0298                     	;# 
  1653  0299                     	;# 
  1654  029A                     	;# 
  1655  029B                     	;# 
  1656  029C                     	;# 
  1657  029C                     	;# 
  1658  029D                     	;# 
  1659  029E                     	;# 
  1660  029E                     	;# 
  1661  0311                     	;# 
  1662  0311                     	;# 
  1663  0312                     	;# 
  1664  0313                     	;# 
  1665  0318                     	;# 
  1666  0318                     	;# 
  1667  0319                     	;# 
  1668  031A                     	;# 
  1669  0394                     	;# 
  1670  0395                     	;# 
  1671  0396                     	;# 
  1672  039A                     	;# 
  1673  039C                     	;# 
  1674  039D                     	;# 
  1675  039E                     	;# 
  1676  039F                     	;# 
  1677  0415                     	;# 
  1678  0416                     	;# 
  1679  0417                     	;# 
  1680  041C                     	;# 
  1681  041D                     	;# 
  1682  041E                     	;# 
  1683  0FE4                     	;# 
  1684  0FE5                     	;# 
  1685  0FE6                     	;# 
  1686  0FE7                     	;# 
  1687  0FE8                     	;# 
  1688  0FE9                     	;# 
  1689  0FEA                     	;# 
  1690  0FEB                     	;# 
  1691  0FED                     	;# 
  1692  0FEE                     	;# 
  1693  0FEF                     	;# 
  1694  0000                     	;# 
  1695  0001                     	;# 
  1696  0002                     	;# 
  1697  0003                     	;# 
  1698  0004                     	;# 
  1699  0005                     	;# 
  1700  0006                     	;# 
  1701  0007                     	;# 
  1702  0008                     	;# 
  1703  0009                     	;# 
  1704  000A                     	;# 
  1705  000B                     	;# 
  1706  000C                     	;# 
  1707  000D                     	;# 
  1708  0011                     	;# 
  1709  0012                     	;# 
  1710  0013                     	;# 
  1711  0014                     	;# 
  1712  0015                     	;# 
  1713  0016                     	;# 
  1714  0016                     	;# 
  1715  0017                     	;# 
  1716  0018                     	;# 
  1717  0019                     	;# 
  1718  001A                     	;# 
  1719  001B                     	;# 
  1720  001C                     	;# 
  1721  001E                     	;# 
  1722  001F                     	;# 
  1723  008C                     	;# 
  1724  008D                     	;# 
  1725  0091                     	;# 
  1726  0092                     	;# 
  1727  0093                     	;# 
  1728  0094                     	;# 
  1729  0095                     	;# 
  1730  0096                     	;# 
  1731  0097                     	;# 
  1732  0098                     	;# 
  1733  0099                     	;# 
  1734  009A                     	;# 
  1735  009B                     	;# 
  1736  009B                     	;# 
  1737  009C                     	;# 
  1738  009D                     	;# 
  1739  009E                     	;# 
  1740  010C                     	;# 
  1741  010D                     	;# 
  1742  0111                     	;# 
  1743  0112                     	;# 
  1744  0113                     	;# 
  1745  0114                     	;# 
  1746  0115                     	;# 
  1747  0116                     	;# 
  1748  0117                     	;# 
  1749  0118                     	;# 
  1750  0119                     	;# 
  1751  011A                     	;# 
  1752  011B                     	;# 
  1753  011D                     	;# 
  1754  011E                     	;# 
  1755  018C                     	;# 
  1756  018D                     	;# 
  1757  0191                     	;# 
  1758  0191                     	;# 
  1759  0192                     	;# 
  1760  0193                     	;# 
  1761  0193                     	;# 
  1762  0193                     	;# 
  1763  0194                     	;# 
  1764  0195                     	;# 
  1765  0196                     	;# 
  1766  0199                     	;# 
  1767  019A                     	;# 
  1768  019B                     	;# 
  1769  019B                     	;# 
  1770  019B                     	;# 
  1771  019B                     	;# 
  1772  019C                     	;# 
  1773  019C                     	;# 
  1774  019D                     	;# 
  1775  019E                     	;# 
  1776  019F                     	;# 
  1777  020C                     	;# 
  1778  020D                     	;# 
  1779  0211                     	;# 
  1780  0211                     	;# 
  1781  0212                     	;# 
  1782  0212                     	;# 
  1783  0213                     	;# 
  1784  0213                     	;# 
  1785  0214                     	;# 
  1786  0214                     	;# 
  1787  0215                     	;# 
  1788  0215                     	;# 
  1789  0215                     	;# 
  1790  0216                     	;# 
  1791  0216                     	;# 
  1792  0217                     	;# 
  1793  0217                     	;# 
  1794  0219                     	;# 
  1795  021A                     	;# 
  1796  021B                     	;# 
  1797  021C                     	;# 
  1798  021D                     	;# 
  1799  021E                     	;# 
  1800  021F                     	;# 
  1801  0291                     	;# 
  1802  0291                     	;# 
  1803  0292                     	;# 
  1804  0293                     	;# 
  1805  0294                     	;# 
  1806  0295                     	;# 
  1807  0295                     	;# 
  1808  0296                     	;# 
  1809  0298                     	;# 
  1810  0298                     	;# 
  1811  0299                     	;# 
  1812  029A                     	;# 
  1813  029B                     	;# 
  1814  029C                     	;# 
  1815  029C                     	;# 
  1816  029D                     	;# 
  1817  029E                     	;# 
  1818  029E                     	;# 
  1819  0311                     	;# 
  1820  0311                     	;# 
  1821  0312                     	;# 
  1822  0313                     	;# 
  1823  0318                     	;# 
  1824  0318                     	;# 
  1825  0319                     	;# 
  1826  031A                     	;# 
  1827  0394                     	;# 
  1828  0395                     	;# 
  1829  0396                     	;# 
  1830  039A                     	;# 
  1831  039C                     	;# 
  1832  039D                     	;# 
  1833  039E                     	;# 
  1834  039F                     	;# 
  1835  0415                     	;# 
  1836  0416                     	;# 
  1837  0417                     	;# 
  1838  041C                     	;# 
  1839  041D                     	;# 
  1840  041E                     	;# 
  1841  0FE4                     	;# 
  1842  0FE5                     	;# 
  1843  0FE6                     	;# 
  1844  0FE7                     	;# 
  1845  0FE8                     	;# 
  1846  0FE9                     	;# 
  1847  0FEA                     	;# 
  1848  0FEB                     	;# 
  1849  0FED                     	;# 
  1850  0FEE                     	;# 
  1851  0FEF                     	;# 
  1852  0000                     	;# 
  1853  0001                     	;# 
  1854  0002                     	;# 
  1855  0003                     	;# 
  1856  0004                     	;# 
  1857  0005                     	;# 
  1858  0006                     	;# 
  1859  0007                     	;# 
  1860  0008                     	;# 
  1861  0009                     	;# 
  1862  000A                     	;# 
  1863  000B                     	;# 
  1864  000C                     	;# 
  1865  000D                     	;# 
  1866  0011                     	;# 
  1867  0012                     	;# 
  1868  0013                     	;# 
  1869  0014                     	;# 
  1870  0015                     	;# 
  1871  0016                     	;# 
  1872  0016                     	;# 
  1873  0017                     	;# 
  1874  0018                     	;# 
  1875  0019                     	;# 
  1876  001A                     	;# 
  1877  001B                     	;# 
  1878  001C                     	;# 
  1879  001E                     	;# 
  1880  001F                     	;# 
  1881  008C                     	;# 
  1882  008D                     	;# 
  1883  0091                     	;# 
  1884  0092                     	;# 
  1885  0093                     	;# 
  1886  0094                     	;# 
  1887  0095                     	;# 
  1888  0096                     	;# 
  1889  0097                     	;# 
  1890  0098                     	;# 
  1891  0099                     	;# 
  1892  009A                     	;# 
  1893  009B                     	;# 
  1894  009B                     	;# 
  1895  009C                     	;# 
  1896  009D                     	;# 
  1897  009E                     	;# 
  1898  010C                     	;# 
  1899  010D                     	;# 
  1900  0111                     	;# 
  1901  0112                     	;# 
  1902  0113                     	;# 
  1903  0114                     	;# 
  1904  0115                     	;# 
  1905  0116                     	;# 
  1906  0117                     	;# 
  1907  0118                     	;# 
  1908  0119                     	;# 
  1909  011A                     	;# 
  1910  011B                     	;# 
  1911  011D                     	;# 
  1912  011E                     	;# 
  1913  018C                     	;# 
  1914  018D                     	;# 
  1915  0191                     	;# 
  1916  0191                     	;# 
  1917  0192                     	;# 
  1918  0193                     	;# 
  1919  0193                     	;# 
  1920  0193                     	;# 
  1921  0194                     	;# 
  1922  0195                     	;# 
  1923  0196                     	;# 
  1924  0199                     	;# 
  1925  019A                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019C                     	;# 
  1931  019C                     	;# 
  1932  019D                     	;# 
  1933  019E                     	;# 
  1934  019F                     	;# 
  1935  020C                     	;# 
  1936  020D                     	;# 
  1937  0211                     	;# 
  1938  0211                     	;# 
  1939  0212                     	;# 
  1940  0212                     	;# 
  1941  0213                     	;# 
  1942  0213                     	;# 
  1943  0214                     	;# 
  1944  0214                     	;# 
  1945  0215                     	;# 
  1946  0215                     	;# 
  1947  0215                     	;# 
  1948  0216                     	;# 
  1949  0216                     	;# 
  1950  0217                     	;# 
  1951  0217                     	;# 
  1952  0219                     	;# 
  1953  021A                     	;# 
  1954  021B                     	;# 
  1955  021C                     	;# 
  1956  021D                     	;# 
  1957  021E                     	;# 
  1958  021F                     	;# 
  1959  0291                     	;# 
  1960  0291                     	;# 
  1961  0292                     	;# 
  1962  0293                     	;# 
  1963  0294                     	;# 
  1964  0295                     	;# 
  1965  0295                     	;# 
  1966  0296                     	;# 
  1967  0298                     	;# 
  1968  0298                     	;# 
  1969  0299                     	;# 
  1970  029A                     	;# 
  1971  029B                     	;# 
  1972  029C                     	;# 
  1973  029C                     	;# 
  1974  029D                     	;# 
  1975  029E                     	;# 
  1976  029E                     	;# 
  1977  0311                     	;# 
  1978  0311                     	;# 
  1979  0312                     	;# 
  1980  0313                     	;# 
  1981  0318                     	;# 
  1982  0318                     	;# 
  1983  0319                     	;# 
  1984  031A                     	;# 
  1985  0394                     	;# 
  1986  0395                     	;# 
  1987  0396                     	;# 
  1988  039A                     	;# 
  1989  039C                     	;# 
  1990  039D                     	;# 
  1991  039E                     	;# 
  1992  039F                     	;# 
  1993  0415                     	;# 
  1994  0416                     	;# 
  1995  0417                     	;# 
  1996  041C                     	;# 
  1997  041D                     	;# 
  1998  041E                     	;# 
  1999  0FE4                     	;# 
  2000  0FE5                     	;# 
  2001  0FE6                     	;# 
  2002  0FE7                     	;# 
  2003  0FE8                     	;# 
  2004  0FE9                     	;# 
  2005  0FEA                     	;# 
  2006  0FEB                     	;# 
  2007  0FED                     	;# 
  2008  0FEE                     	;# 
  2009  0FEF                     	;# 
  2010  0000                     	;# 
  2011  0001                     	;# 
  2012  0002                     	;# 
  2013  0003                     	;# 
  2014  0004                     	;# 
  2015  0005                     	;# 
  2016  0006                     	;# 
  2017  0007                     	;# 
  2018  0008                     	;# 
  2019  0009                     	;# 
  2020  000A                     	;# 
  2021  000B                     	;# 
  2022  000C                     	;# 
  2023  000D                     	;# 
  2024  0011                     	;# 
  2025  0012                     	;# 
  2026  0013                     	;# 
  2027  0014                     	;# 
  2028  0015                     	;# 
  2029  0016                     	;# 
  2030  0016                     	;# 
  2031  0017                     	;# 
  2032  0018                     	;# 
  2033  0019                     	;# 
  2034  001A                     	;# 
  2035  001B                     	;# 
  2036  001C                     	;# 
  2037  001E                     	;# 
  2038  001F                     	;# 
  2039  008C                     	;# 
  2040  008D                     	;# 
  2041  0091                     	;# 
  2042  0092                     	;# 
  2043  0093                     	;# 
  2044  0094                     	;# 
  2045  0095                     	;# 
  2046  0096                     	;# 
  2047  0097                     	;# 
  2048  0098                     	;# 
  2049  0099                     	;# 
  2050  009A                     	;# 
  2051  009B                     	;# 
  2052  009B                     	;# 
  2053  009C                     	;# 
  2054  009D                     	;# 
  2055  009E                     	;# 
  2056  010C                     	;# 
  2057  010D                     	;# 
  2058  0111                     	;# 
  2059  0112                     	;# 
  2060  0113                     	;# 
  2061  0114                     	;# 
  2062  0115                     	;# 
  2063  0116                     	;# 
  2064  0117                     	;# 
  2065  0118                     	;# 
  2066  0119                     	;# 
  2067  011A                     	;# 
  2068  011B                     	;# 
  2069  011D                     	;# 
  2070  011E                     	;# 
  2071  018C                     	;# 
  2072  018D                     	;# 
  2073  0191                     	;# 
  2074  0191                     	;# 
  2075  0192                     	;# 
  2076  0193                     	;# 
  2077  0193                     	;# 
  2078  0193                     	;# 
  2079  0194                     	;# 
  2080  0195                     	;# 
  2081  0196                     	;# 
  2082  0199                     	;# 
  2083  019A                     	;# 
  2084  019B                     	;# 
  2085  019B                     	;# 
  2086  019B                     	;# 
  2087  019B                     	;# 
  2088  019C                     	;# 
  2089  019C                     	;# 
  2090  019D                     	;# 
  2091  019E                     	;# 
  2092  019F                     	;# 
  2093  020C                     	;# 
  2094  020D                     	;# 
  2095  0211                     	;# 
  2096  0211                     	;# 
  2097  0212                     	;# 
  2098  0212                     	;# 
  2099  0213                     	;# 
  2100  0213                     	;# 
  2101  0214                     	;# 
  2102  0214                     	;# 
  2103  0215                     	;# 
  2104  0215                     	;# 
  2105  0215                     	;# 
  2106  0216                     	;# 
  2107  0216                     	;# 
  2108  0217                     	;# 
  2109  0217                     	;# 
  2110  0219                     	;# 
  2111  021A                     	;# 
  2112  021B                     	;# 
  2113  021C                     	;# 
  2114  021D                     	;# 
  2115  021E                     	;# 
  2116  021F                     	;# 
  2117  0291                     	;# 
  2118  0291                     	;# 
  2119  0292                     	;# 
  2120  0293                     	;# 
  2121  0294                     	;# 
  2122  0295                     	;# 
  2123  0295                     	;# 
  2124  0296                     	;# 
  2125  0298                     	;# 
  2126  0298                     	;# 
  2127  0299                     	;# 
  2128  029A                     	;# 
  2129  029B                     	;# 
  2130  029C                     	;# 
  2131  029C                     	;# 
  2132  029D                     	;# 
  2133  029E                     	;# 
  2134  029E                     	;# 
  2135  0311                     	;# 
  2136  0311                     	;# 
  2137  0312                     	;# 
  2138  0313                     	;# 
  2139  0318                     	;# 
  2140  0318                     	;# 
  2141  0319                     	;# 
  2142  031A                     	;# 
  2143  0394                     	;# 
  2144  0395                     	;# 
  2145  0396                     	;# 
  2146  039A                     	;# 
  2147  039C                     	;# 
  2148  039D                     	;# 
  2149  039E                     	;# 
  2150  039F                     	;# 
  2151  0415                     	;# 
  2152  0416                     	;# 
  2153  0417                     	;# 
  2154  041C                     	;# 
  2155  041D                     	;# 
  2156  041E                     	;# 
  2157  0FE4                     	;# 
  2158  0FE5                     	;# 
  2159  0FE6                     	;# 
  2160  0FE7                     	;# 
  2161  0FE8                     	;# 
  2162  0FE9                     	;# 
  2163  0FEA                     	;# 
  2164  0FEB                     	;# 
  2165  0FED                     	;# 
  2166  0FEE                     	;# 
  2167  0FEF                     	;# 
  2168                           
  2169 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2170  0000                     
  2171 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2172  0000                     
  2173 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2174  0000                     
  2175                           	psect	nvBANK1
  2176  00E0                     __pnvBANK1:	
  2177  00E0                     _IOCBF5_InterruptHandler:	
  2178  00E0                     	ds	2
  2179  00E2                     _IOCBF4_InterruptHandler:	
  2180  00E2                     	ds	2
  2181  00E4                     _IOCBF3_InterruptHandler:	
  2182  00E4                     	ds	2
  2183  00E6                     _IOCBF0_InterruptHandler:	
  2184  00E6                     	ds	2
  2185  00E8                     _CCP4_CallBack:	
  2186  00E8                     	ds	2
  2187  00EA                     _TMR4_InterruptHandler:	
  2188  00EA                     	ds	2
  2189  00EC                     _timer1ReloadVal:	
  2190  00EC                     	ds	2
  2191  00EE                     _EUSART_FramingErrorHandler:	
  2192  00EE                     	ds	2
  2193                           
  2194                           	psect	nvBANK2
  2195  0140                     __pnvBANK2:	
  2196  0140                     _EUSART_ErrorHandler:	
  2197  0140                     	ds	2
  2198  0142                     _EUSART_OverrunErrorHandler:	
  2199  0142                     	ds	2
  2200  0144                     _temp_mt:	
  2201  0144                     	ds	4
  2202  0148                     _I_m:	
  2203  0148                     	ds	4
  2204  000B                     _INTCONbits	set	11
  2205  0013                     _PIR3bits	set	19
  2206  001C                     _T2CONbits	set	28
  2207  001C                     _T2CON	set	28
  2208  001A                     _TMR2	set	26
  2209  001B                     _PR2	set	27
  2210  0019                     _T1GCONbits	set	25
  2211  0018                     _T1CONbits	set	24
  2212  0018                     _T1CON	set	24
  2213  0016                     _TMR1L	set	22
  2214  0017                     _TMR1H	set	23
  2215  0019                     _T1GCON	set	25
  2216  0011                     _PIR1bits	set	17
  2217  0095                     _OPTION_REGbits	set	149
  2218  008D                     _TRISB	set	141
  2219  008C                     _TRISA	set	140
  2220  009D                     _ADCON0bits	set	157
  2221  009D                     _ADCON0	set	157
  2222  009C                     _ADRESH	set	156
  2223  009B                     _ADRESL	set	155
  2224  009E                     _ADCON1	set	158
  2225  0093                     _PIE3bits	set	147
  2226  0097                     _WDTCON	set	151
  2227  0098                     _OSCTUNE	set	152
  2228  0099                     _OSCCON	set	153
  2229  010C                     _LATAbits	set	268
  2230  011E                     _APFCON1	set	286
  2231  011D                     _APFCON0	set	285
  2232  010D                     _LATB	set	269
  2233  010C                     _LATA	set	268
  2234  0117                     _FVRCONbits	set	279
  2235  0117                     _FVRCON	set	279
  2236  0116                     _BORCON	set	278
  2237  018C                     _ANSELA	set	396
  2238  018D                     _ANSELB	set	397
  2239  019A                     _TXREG	set	410
  2240  0199                     _RCREG	set	409
  2241  019D                     _RCSTAbits	set	413
  2242  019E                     _TXSTAbits	set	414
  2243  019C                     _SPBRGH	set	412
  2244  019B                     _SPBRGL	set	411
  2245  019E                     _TXSTA	set	414
  2246  019D                     _RCSTA	set	413
  2247  019F                     _BAUDCON	set	415
  2248  020C                     _WPUA	set	524
  2249  020D                     _WPUB	set	525
  2250  029E                     _CCPTMRS0bits	set	670
  2251  0312                     _CCPR3H	set	786
  2252  0311                     _CCPR3L	set	785
  2253  0313                     _CCP3CON	set	787
  2254  0319                     _CCPR4H	set	793
  2255  0318                     _CCPR4L	set	792
  2256  031A                     _CCP4CON	set	794
  2257  0394                     _IOCBPbits	set	916
  2258  0395                     _IOCBNbits	set	917
  2259  0396                     _IOCBFbits	set	918
  2260  0417                     _T4CONbits	set	1047
  2261  0417                     _T4CON	set	1047
  2262  0415                     _TMR4	set	1045
  2263  0416                     _PR4	set	1046
  2264                           
  2265                           ; #config settings
  2266  0000                     
  2267                           	psect	cinit
  2268  0036                     start_initialization:	
  2269  0036                     __initialization:	
  2270                           
  2271                           ; Clear objects allocated to COMMON
  2272  0036  01F0               	clrf	__pbssCOMMON& (0+127)
  2273  0037  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2274  0038  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2275  0039  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2276  003A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2277  003B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2278  003C  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  2279                           
  2280                           ; Clear objects allocated to BANK0
  2281  003D  0020               	movlb	0	; select bank0
  2282  003E  01EF               	clrf	__pbssBANK0& (0+127)
  2283                           
  2284                           ; Clear objects allocated to BANK1
  2285  003F  30A0               	movlw	low __pbssBANK1
  2286  0040  0084               	movwf	4
  2287  0041  3000               	movlw	high __pbssBANK1
  2288  0042  0085               	movwf	5
  2289  0043  3040               	movlw	64
  2290  0044  3188  2023  3180   	fcall	clear_ram0
  2291                           
  2292                           ; Clear objects allocated to BANK2
  2293  0047  3020               	movlw	low __pbssBANK2
  2294  0048  0084               	movwf	4
  2295  0049  3001               	movlw	high __pbssBANK2
  2296  004A  0085               	movwf	5
  2297  004B  3020               	movlw	32
  2298  004C  3188  2023  3180   	fcall	clear_ram0
  2299  004F                     end_of_initialization:	
  2300                           ;End of C runtime variable initialization code
  2301                           
  2302  004F                     __end_of__initialization:	
  2303  004F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2304  0050  0020               	movlb	0
  2305  0051  318A  2AEF         	ljmp	_main	;jump to C main() function
  2306                           
  2307                           	psect	bssCOMMON
  2308  0070                     __pbssCOMMON:	
  2309  0070                     _min_origem_up:	
  2310  0070                     	ds	2
  2311  0072                     _max_origem_down:	
  2312  0072                     	ds	2
  2313  0074                     _and_dst:	
  2314  0074                     	ds	2
  2315  0076                     _eusartRxLastError:	
  2316  0076                     	ds	1
  2317                           
  2318                           	psect	bssBANK0
  2319  006F                     __pbssBANK0:	
  2320  006F                     _and_ating:	
  2321  006F                     	ds	1
  2322                           
  2323                           	psect	bssBANK1
  2324  00A0                     __pbssBANK1:	
  2325  00A0                     _origem_down:	
  2326  00A0                     	ds	16
  2327  00B0                     _fila_up:	
  2328  00B0                     	ds	16
  2329  00C0                     _byte:	
  2330  00C0                     	ds	5
  2331  00C5                     _and_ating2:	
  2332  00C5                     	ds	2
  2333  00C7                     _out_value:	
  2334  00C7                     	ds	2
  2335  00C9                     _min_fila_down:	
  2336  00C9                     	ds	2
  2337  00CB                     _max_fila_up:	
  2338  00CB                     	ds	2
  2339  00CD                     _distancia:	
  2340  00CD                     	ds	2
  2341  00CF                     _andar:	
  2342  00CF                     	ds	2
  2343  00D1                     _sentido2:	
  2344  00D1                     	ds	2
  2345  00D3                     _aux_tempo:	
  2346  00D3                     	ds	2
  2347  00D5                     _sentido:	
  2348  00D5                     	ds	2
  2349  00D7                     _and_origem:	
  2350  00D7                     	ds	2
  2351  00D9                     _ADC_InterruptHandler:	
  2352  00D9                     	ds	2
  2353  00DB                     _state_motor:	
  2354  00DB                     	ds	1
  2355  00DC                     _ccp_value:	
  2356  00DC                     	ds	2
  2357  00DE                     _pulses:	
  2358  00DE                     	ds	2
  2359                           
  2360                           	psect	bssBANK2
  2361  0120                     __pbssBANK2:	
  2362  0120                     _origem_up:	
  2363  0120                     	ds	16
  2364  0130                     _fila_down:	
  2365  0130                     	ds	16
  2366                           
  2367                           	psect	clrtext
  2368  0823                     clear_ram0:	
  2369                           ;	Called with FSR0 containing the base address, and
  2370                           ;	WREG with the size to clear
  2371                           
  2372  0823  0064               	clrwdt	;clear the watchdog before getting into this loop
  2373  0824                     clrloop0:	
  2374  0824  0180               	clrf	0	;clear RAM location pointed to by FSR
  2375  0825  3101               	addfsr 0,1
  2376  0826  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2377  0827  2824               	goto	clrloop0	;have we reached the end yet?
  2378  0828  3400               	retlw	0	;all done for this memory range, return
  2379                           
  2380                           	psect	cstackCOMMON
  2381  0077                     __pcstackCOMMON:	
  2382  0077                     ?_PIN_MANAGER_Initialize:	
  2383  0077                     ?_OSCILLATOR_Initialize:	
  2384                           ; 1 bytes @ 0x0
  2385                           
  2386  0077                     ?_WDT_Initialize:	
  2387                           ; 1 bytes @ 0x0
  2388                           
  2389  0077                     ?_FVR_Initialize:	
  2390                           ; 1 bytes @ 0x0
  2391                           
  2392  0077                     ?_CCP4_Initialize:	
  2393                           ; 1 bytes @ 0x0
  2394                           
  2395  0077                     ?_ADC_Initialize:	
  2396                           ; 1 bytes @ 0x0
  2397                           
  2398  0077                     ?_TMR4_Initialize:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401  0077                     ?_PWM3_Initialize:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404  0077                     ?_TMR2_Initialize:	
  2405                           ; 1 bytes @ 0x0
  2406                           
  2407  0077                     ?_TMR1_Initialize:	
  2408                           ; 1 bytes @ 0x0
  2409                           
  2410  0077                     ?_TMR4_DefaultInterruptHandler:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413  0077                     ??_TMR4_DefaultInterruptHandler:	
  2414                           ; 1 bytes @ 0x0
  2415                           
  2416  0077                     ?_PIN_MANAGER_IOC:	
  2417                           ; 1 bytes @ 0x0
  2418                           
  2419  0077                     ?_CCP4_CaptureISR:	
  2420                           ; 1 bytes @ 0x0
  2421                           
  2422  0077                     ?_IOCBF0_DefaultInterruptHandler:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  0077                     ??_IOCBF0_DefaultInterruptHandler:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428  0077                     ?_IOCBF3_DefaultInterruptHandler:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431  0077                     ??_IOCBF3_DefaultInterruptHandler:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434  0077                     ?_IOCBF4_DefaultInterruptHandler:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  0077                     ??_IOCBF4_DefaultInterruptHandler:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0077                     ?_IOCBF5_DefaultInterruptHandler:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  0077                     ??_IOCBF5_DefaultInterruptHandler:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446  0077                     ?_IOCBF0_ISR:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449  0077                     ??_IOCBF0_ISR:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  0077                     ?_IOCBF3_ISR:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455  0077                     ?_IOCBF4_ISR:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458  0077                     ?_IOCBF5_ISR:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461  0077                     ?_comunicacao:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464  0077                     ?_controle:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  0077                     ?_gerenciamento:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  0077                     ?_update:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473  0077                     ?_col_up:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476  0077                     ?_col_down:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479  0077                     ?_min_up:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482  0077                     ?_max_down:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485  0077                     ?_EUSART_Initialize:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488  0077                     ?_EUSART_is_tx_ready:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491  0077                     ??_EUSART_is_tx_ready:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494  0077                     ?_EUSART_is_rx_ready:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497  0077                     ?_EUSART_Read:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500  0077                     ?_EUSART_Write:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503  0077                     ??_EUSART_Write:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506  0077                     ?_SYSTEM_Initialize:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509  0077                     ?_TMR1_WriteTimer:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512  0077                     ?_TMR4_ISR:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515  0077                     ?_INTERRUPT_InterruptManager:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518  0077                     ?_send_data:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521  0077                     ?_sensor1:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524  0077                     ??_sensor1:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527  0077                     ?_sensor2:	
  2528                           ; 1 bytes @ 0x0
  2529                           
  2530  0077                     ??_sensor2:	
  2531                           ; 1 bytes @ 0x0
  2532                           
  2533  0077                     ?_sensor3:	
  2534                           ; 1 bytes @ 0x0
  2535                           
  2536  0077                     ??_sensor3:	
  2537                           ; 1 bytes @ 0x0
  2538                           
  2539  0077                     ?_sensor4:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542  0077                     ??_sensor4:	
  2543                           ; 1 bytes @ 0x0
  2544                           
  2545  0077                     ?_main:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548  0077                     _EUSART_is_tx_ready$167:	
  2549                           ; 1 bytes @ 0x0
  2550                           
  2551  0077                     EUSART_Write@txData:	
  2552                           ; 1 bytes @ 0x0
  2553                           
  2554  0077                     TMR1_WriteTimer@timerVal:	
  2555                           ; 1 bytes @ 0x0
  2556                           
  2557                           
  2558                           ; 2 bytes @ 0x0
  2559  0077                     	ds	1
  2560  0078                     ??_PIN_MANAGER_IOC:	
  2561  0078                     ??_IOCBF3_ISR:	
  2562                           ; 1 bytes @ 0x1
  2563                           
  2564  0078                     ??_IOCBF4_ISR:	
  2565                           ; 1 bytes @ 0x1
  2566                           
  2567  0078                     ??_IOCBF5_ISR:	
  2568                           ; 1 bytes @ 0x1
  2569                           
  2570  0078                     ??_send_data:	
  2571                           ; 1 bytes @ 0x1
  2572                           
  2573                           
  2574                           ; 1 bytes @ 0x1
  2575  0078                     	ds	1
  2576  0079                     ??_TMR1_WriteTimer:	
  2577  0079                     ?_CCP4_DefaultCallBack:	
  2578                           ; 1 bytes @ 0x2
  2579                           
  2580  0079                     ?_get_pulse:	
  2581                           ; 1 bytes @ 0x2
  2582                           
  2583  0079                     CCP4_DefaultCallBack@capturedValue:	
  2584                           ; 1 bytes @ 0x2
  2585                           
  2586  0079                     send_data@i:	
  2587                           ; 2 bytes @ 0x2
  2588                           
  2589  0079                     get_pulse@capturedValue:	
  2590                           ; 2 bytes @ 0x2
  2591                           
  2592                           
  2593                           ; 2 bytes @ 0x2
  2594  0079                     	ds	2
  2595  007B                     ??_CCP4_CaptureISR:	
  2596  007B                     ??_TMR4_ISR:	
  2597                           ; 1 bytes @ 0x4
  2598                           
  2599  007B                     ??_CCP4_DefaultCallBack:	
  2600                           ; 1 bytes @ 0x4
  2601                           
  2602  007B                     ??_get_pulse:	
  2603                           ; 1 bytes @ 0x4
  2604                           
  2605                           
  2606                           ; 1 bytes @ 0x4
  2607  007B                     	ds	1
  2608  007C                     CCP4_CaptureISR@module:	
  2609                           
  2610                           ; 2 bytes @ 0x5
  2611  007C                     	ds	2
  2612  007E                     ??_INTERRUPT_InterruptManager:	
  2613                           
  2614                           	psect	cstackBANK0
  2615  0020                     __pcstackBANK0:	
  2616                           ; 1 bytes @ 0x7
  2617                           
  2618  0020                     ?_EUSART_SetFramingErrorHandler:	
  2619  0020                     ?_EUSART_SetOverrunErrorHandler:	
  2620                           ; 1 bytes @ 0x0
  2621                           
  2622  0020                     ?_EUSART_SetErrorHandler:	
  2623                           ; 1 bytes @ 0x0
  2624                           
  2625  0020                     ??_OSCILLATOR_Initialize:	
  2626                           ; 1 bytes @ 0x0
  2627                           
  2628  0020                     ??_WDT_Initialize:	
  2629                           ; 1 bytes @ 0x0
  2630                           
  2631  0020                     ??_FVR_Initialize:	
  2632                           ; 1 bytes @ 0x0
  2633                           
  2634  0020                     ??_ADC_Initialize:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637  0020                     ??_PWM3_Initialize:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640  0020                     ??_TMR2_Initialize:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643  0020                     ??_TMR1_Initialize:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646  0020                     ?_TMR4_SetInterruptHandler:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649  0020                     ?_CCP4_SetCallBack:	
  2650                           ; 1 bytes @ 0x0
  2651                           
  2652  0020                     ?_IOCBF0_SetInterruptHandler:	
  2653                           ; 1 bytes @ 0x0
  2654                           
  2655  0020                     ?_IOCBF3_SetInterruptHandler:	
  2656                           ; 1 bytes @ 0x0
  2657                           
  2658  0020                     ?_IOCBF4_SetInterruptHandler:	
  2659                           ; 1 bytes @ 0x0
  2660                           
  2661  0020                     ?_IOCBF5_SetInterruptHandler:	
  2662                           ; 1 bytes @ 0x0
  2663                           
  2664  0020                     ??_min_up:	
  2665                           ; 1 bytes @ 0x0
  2666                           
  2667  0020                     ??_max_down:	
  2668                           ; 1 bytes @ 0x0
  2669                           
  2670  0020                     ??_EUSART_is_rx_ready:	
  2671                           ; 1 bytes @ 0x0
  2672                           
  2673  0020                     ??_EUSART_Read:	
  2674                           ; 1 bytes @ 0x0
  2675                           
  2676  0020                     ?_PWM3_LoadDutyValue:	
  2677                           ; 1 bytes @ 0x0
  2678                           
  2679  0020                     ?_abs:	
  2680                           ; 1 bytes @ 0x0
  2681                           
  2682  0020                     ?__Umul8_16:	
  2683                           ; 2 bytes @ 0x0
  2684                           
  2685  0020                     ?_ADC_GetConversion:	
  2686                           ; 2 bytes @ 0x0
  2687                           
  2688  0020                     ?___wmul:	
  2689                           ; 2 bytes @ 0x0
  2690                           
  2691  0020                     ?___fltol:	
  2692                           ; 2 bytes @ 0x0
  2693                           
  2694  0020                     __Umul8_16@multiplicand:	
  2695                           ; 4 bytes @ 0x0
  2696                           
  2697  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2698                           ; 1 bytes @ 0x0
  2699                           
  2700  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2701                           ; 2 bytes @ 0x0
  2702                           
  2703  0020                     EUSART_SetErrorHandler@interruptHandler:	
  2704                           ; 2 bytes @ 0x0
  2705                           
  2706  0020                     TMR4_SetInterruptHandler@InterruptHandler:	
  2707                           ; 2 bytes @ 0x0
  2708                           
  2709  0020                     CCP4_SetCallBack@customCallBack:	
  2710                           ; 2 bytes @ 0x0
  2711                           
  2712  0020                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  2713                           ; 2 bytes @ 0x0
  2714                           
  2715  0020                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  2716                           ; 2 bytes @ 0x0
  2717                           
  2718  0020                     IOCBF4_SetInterruptHandler@InterruptHandler:	
  2719                           ; 2 bytes @ 0x0
  2720                           
  2721  0020                     IOCBF5_SetInterruptHandler@InterruptHandler:	
  2722                           ; 2 bytes @ 0x0
  2723                           
  2724  0020                     PWM3_LoadDutyValue@dutyValue:	
  2725                           ; 2 bytes @ 0x0
  2726                           
  2727  0020                     ___wmul@multiplier:	
  2728                           ; 2 bytes @ 0x0
  2729                           
  2730  0020                     abs@a:	
  2731                           ; 2 bytes @ 0x0
  2732                           
  2733  0020                     ___fltol@f1:	
  2734                           ; 2 bytes @ 0x0
  2735                           
  2736                           
  2737                           ; 4 bytes @ 0x0
  2738  0020                     	ds	2
  2739  0022                     ??_EUSART_SetFramingErrorHandler:	
  2740  0022                     ??_EUSART_SetOverrunErrorHandler:	
  2741                           ; 1 bytes @ 0x2
  2742                           
  2743  0022                     ??_EUSART_SetErrorHandler:	
  2744                           ; 1 bytes @ 0x2
  2745                           
  2746  0022                     ??_PIN_MANAGER_Initialize:	
  2747                           ; 1 bytes @ 0x2
  2748                           
  2749  0022                     ??_CCP4_Initialize:	
  2750                           ; 1 bytes @ 0x2
  2751                           
  2752  0022                     ??_TMR4_Initialize:	
  2753                           ; 1 bytes @ 0x2
  2754                           
  2755  0022                     ??_TMR4_SetInterruptHandler:	
  2756                           ; 1 bytes @ 0x2
  2757                           
  2758  0022                     ??_CCP4_SetCallBack:	
  2759                           ; 1 bytes @ 0x2
  2760                           
  2761  0022                     ??_IOCBF0_SetInterruptHandler:	
  2762                           ; 1 bytes @ 0x2
  2763                           
  2764  0022                     ??_IOCBF3_SetInterruptHandler:	
  2765                           ; 1 bytes @ 0x2
  2766                           
  2767  0022                     ??_IOCBF4_SetInterruptHandler:	
  2768                           ; 1 bytes @ 0x2
  2769                           
  2770  0022                     ??_IOCBF5_SetInterruptHandler:	
  2771                           ; 1 bytes @ 0x2
  2772                           
  2773  0022                     ??_abs:	
  2774                           ; 1 bytes @ 0x2
  2775                           
  2776  0022                     ??__Umul8_16:	
  2777                           ; 1 bytes @ 0x2
  2778                           
  2779  0022                     ??_EUSART_Initialize:	
  2780                           ; 1 bytes @ 0x2
  2781                           
  2782  0022                     ??_SYSTEM_Initialize:	
  2783                           ; 1 bytes @ 0x2
  2784                           
  2785  0022                     ??_ADC_GetConversion:	
  2786                           ; 1 bytes @ 0x2
  2787                           
  2788  0022                     ??_PWM3_LoadDutyValue:	
  2789                           ; 1 bytes @ 0x2
  2790                           
  2791  0022                     ___wmul@multiplicand:	
  2792                           ; 1 bytes @ 0x2
  2793                           
  2794                           
  2795                           ; 2 bytes @ 0x2
  2796  0022                     	ds	1
  2797  0023                     ADC_GetConversion@channel:	
  2798  0023                     min_up@i:	
  2799                           ; 1 bytes @ 0x3
  2800                           
  2801  0023                     max_down@i:	
  2802                           ; 2 bytes @ 0x3
  2803                           
  2804                           
  2805                           ; 2 bytes @ 0x3
  2806  0023                     	ds	1
  2807  0024                     ??___wmul:	
  2808  0024                     ??___fltol:	
  2809                           ; 1 bytes @ 0x4
  2810                           
  2811  0024                     ?___xxtofl:	
  2812                           ; 1 bytes @ 0x4
  2813                           
  2814  0024                     ___wmul@product:	
  2815                           ; 4 bytes @ 0x4
  2816                           
  2817  0024                     __Umul8_16@product:	
  2818                           ; 2 bytes @ 0x4
  2819                           
  2820  0024                     ___xxtofl@val:	
  2821                           ; 2 bytes @ 0x4
  2822                           
  2823                           
  2824                           ; 4 bytes @ 0x4
  2825  0024                     	ds	1
  2826  0025                     ??_update:	
  2827  0025                     ??_col_up:	
  2828                           ; 1 bytes @ 0x5
  2829                           
  2830  0025                     ??_col_down:	
  2831                           ; 1 bytes @ 0x5
  2832                           
  2833                           
  2834                           ; 1 bytes @ 0x5
  2835  0025                     	ds	1
  2836  0026                     __Umul8_16@word_mpld:	
  2837                           
  2838                           ; 2 bytes @ 0x6
  2839  0026                     	ds	2
  2840  0028                     ??___xxtofl:	
  2841  0028                     update@aux:	
  2842                           ; 1 bytes @ 0x8
  2843                           
  2844  0028                     __Umul8_16@multiplier:	
  2845                           ; 1 bytes @ 0x8
  2846                           
  2847                           
  2848                           ; 1 bytes @ 0x8
  2849  0028                     	ds	1
  2850  0029                     ___fltol@sign1:	
  2851  0029                     update@i_1261:	
  2852                           ; 1 bytes @ 0x9
  2853                           
  2854                           
  2855                           ; 2 bytes @ 0x9
  2856  0029                     	ds	1
  2857  002A                     ___fltol@exp1:	
  2858                           
  2859                           ; 1 bytes @ 0xA
  2860  002A                     	ds	1
  2861  002B                     update@i:	
  2862                           
  2863                           ; 2 bytes @ 0xB
  2864  002B                     	ds	1
  2865  002C                     ___xxtofl@sign:	
  2866                           
  2867                           ; 1 bytes @ 0xC
  2868  002C                     	ds	1
  2869  002D                     ___xxtofl@exp:	
  2870  002D                     update@i_1262:	
  2871                           ; 1 bytes @ 0xD
  2872                           
  2873                           
  2874                           ; 2 bytes @ 0xD
  2875  002D                     	ds	1
  2876  002E                     ___xxtofl@arg:	
  2877                           
  2878                           ; 4 bytes @ 0xE
  2879  002E                     	ds	1
  2880  002F                     ??_gerenciamento:	
  2881                           
  2882                           ; 1 bytes @ 0xF
  2883  002F                     	ds	3
  2884  0032                     ?___flmul:	
  2885  0032                     ___flmul@b:	
  2886                           ; 4 bytes @ 0x12
  2887                           
  2888                           
  2889                           ; 4 bytes @ 0x12
  2890  0032                     	ds	4
  2891  0036                     ___flmul@a:	
  2892                           
  2893                           ; 4 bytes @ 0x16
  2894  0036                     	ds	4
  2895  003A                     ??___flmul:	
  2896                           
  2897                           ; 1 bytes @ 0x1A
  2898  003A                     	ds	5
  2899  003F                     ___flmul@sign:	
  2900                           
  2901                           ; 1 bytes @ 0x1F
  2902  003F                     	ds	1
  2903  0040                     ___flmul@grs:	
  2904                           
  2905                           ; 4 bytes @ 0x20
  2906  0040                     	ds	4
  2907  0044                     ___flmul@aexp:	
  2908                           
  2909                           ; 1 bytes @ 0x24
  2910  0044                     	ds	1
  2911  0045                     ___flmul@bexp:	
  2912                           
  2913                           ; 1 bytes @ 0x25
  2914  0045                     	ds	1
  2915  0046                     ___flmul@prod:	
  2916                           
  2917                           ; 4 bytes @ 0x26
  2918  0046                     	ds	4
  2919  004A                     ___flmul@temp:	
  2920                           
  2921                           ; 2 bytes @ 0x2A
  2922  004A                     	ds	2
  2923  004C                     ??_controle:	
  2924  004C                     ?___fldiv:	
  2925                           ; 1 bytes @ 0x2C
  2926                           
  2927  004C                     ___fldiv@a:	
  2928                           ; 4 bytes @ 0x2C
  2929                           
  2930                           
  2931                           ; 4 bytes @ 0x2C
  2932  004C                     	ds	4
  2933  0050                     controle@destiny:	
  2934  0050                     ___fldiv@b:	
  2935                           ; 2 bytes @ 0x30
  2936                           
  2937                           
  2938                           ; 4 bytes @ 0x30
  2939  0050                     	ds	2
  2940  0052                     controle@route:	
  2941                           
  2942                           ; 2 bytes @ 0x32
  2943  0052                     	ds	2
  2944  0054                     ??___fldiv:	
  2945  0054                     controle@a:	
  2946                           ; 1 bytes @ 0x34
  2947                           
  2948                           
  2949                           ; 2 bytes @ 0x34
  2950  0054                     	ds	2
  2951  0056                     controle@min_dutyValue:	
  2952                           
  2953                           ; 2 bytes @ 0x36
  2954  0056                     	ds	2
  2955  0058                     controle@max_dutyValue:	
  2956                           
  2957                           ; 2 bytes @ 0x38
  2958  0058                     	ds	1
  2959  0059                     ___fldiv@rem:	
  2960                           
  2961                           ; 4 bytes @ 0x39
  2962  0059                     	ds	1
  2963  005A                     controle@dutyValue:	
  2964                           
  2965                           ; 2 bytes @ 0x3A
  2966  005A                     	ds	2
  2967  005C                     controle@count:	
  2968                           
  2969                           ; 2 bytes @ 0x3C
  2970  005C                     	ds	1
  2971  005D                     ___fldiv@sign:	
  2972                           
  2973                           ; 1 bytes @ 0x3D
  2974  005D                     	ds	1
  2975  005E                     ___fldiv@new_exp:	
  2976                           
  2977                           ; 2 bytes @ 0x3E
  2978  005E                     	ds	2
  2979  0060                     ___fldiv@grs:	
  2980                           
  2981                           ; 4 bytes @ 0x40
  2982  0060                     	ds	4
  2983  0064                     ___fldiv@bexp:	
  2984                           
  2985                           ; 1 bytes @ 0x44
  2986  0064                     	ds	1
  2987  0065                     ___fldiv@aexp:	
  2988                           
  2989                           ; 1 bytes @ 0x45
  2990  0065                     	ds	1
  2991  0066                     ??_comunicacao:	
  2992                           
  2993                           ; 1 bytes @ 0x46
  2994  0066                     	ds	1
  2995  0067                     comunicacao@speed:	
  2996                           
  2997                           ; 4 bytes @ 0x47
  2998  0067                     	ds	4
  2999  006B                     comunicacao@position:	
  3000                           
  3001                           ; 4 bytes @ 0x4B
  3002  006B                     	ds	4
  3003  006F                     ??_main:	
  3004                           
  3005                           	psect	maintext
  3006  0AEF                     __pmaintext:	
  3007                           ; 1 bytes @ 0x4F
  3008 ;;
  3009 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3010 ;;
  3011 ;; *************** function _main *****************
  3012 ;; Defined at:
  3013 ;;		line 125 in file "main.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : B1F/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3027 ;;      Params:         0       0       0       0       0       0
  3028 ;;      Locals:         0       0       0       0       0       0
  3029 ;;      Temps:          0       0       0       0       0       0
  3030 ;;      Totals:         0       0       0       0       0       0
  3031 ;;Total ram usage:        0 bytes
  3032 ;; Hardware stack levels required when called:    7
  3033 ;; This function calls:
  3034 ;;		_CCP4_SetCallBack
  3035 ;;		_IOCBF0_SetInterruptHandler
  3036 ;;		_IOCBF3_SetInterruptHandler
  3037 ;;		_IOCBF4_SetInterruptHandler
  3038 ;;		_IOCBF5_SetInterruptHandler
  3039 ;;		_SYSTEM_Initialize
  3040 ;;		_TMR4_SetInterruptHandler
  3041 ;;		_comunicacao
  3042 ;;		_controle
  3043 ;;		_gerenciamento
  3044 ;; This function is called by:
  3045 ;;		Startup code after reset
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           
  3050                           ;psect for function _main
  3051  0AEF                     _main:	
  3052  0AEF                     l3951:	
  3053                           ;incstack = 0
  3054                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3055                           
  3056                           
  3057                           ;main.c: 129:     SYSTEM_Initialize();
  3058  0AEF  318A  222C  318A   	fcall	_SYSTEM_Initialize
  3059  0AF2                     l3953:	
  3060                           
  3061                           ;main.c: 130:     (INTCONbits.GIE = 1);
  3062  0AF2  178B               	bsf	11,7	;volatile
  3063  0AF3                     l3955:	
  3064                           
  3065                           ;main.c: 131:     (INTCONbits.PEIE = 1);
  3066  0AF3  170B               	bsf	11,6	;volatile
  3067                           
  3068                           ;main.c: 134:     TMR4_SetInterruptHandler(send_data);
  3069  0AF4  30BB               	movlw	low _send_data
  3070  0AF5  0020               	movlb	0	; select bank0
  3071  0AF6  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  3072  0AF7  300A               	movlw	high _send_data
  3073  0AF8  00A1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  3074  0AF9  3188  2098  318A   	fcall	_TMR4_SetInterruptHandler
  3075                           
  3076                           ;main.c: 135:     IOCBF0_SetInterruptHandler(sensor1);
  3077  0AFC  3029               	movlw	low _sensor1
  3078  0AFD  0020               	movlb	0	; select bank0
  3079  0AFE  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler
  3080  0AFF  3008               	movlw	high _sensor1
  3081  0B00  00A1               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler+1
  3082  0B01  3188  206B  318A   	fcall	_IOCBF0_SetInterruptHandler
  3083                           
  3084                           ;main.c: 136:     IOCBF3_SetInterruptHandler(sensor2);
  3085  0B04  30AB               	movlw	low _sensor2
  3086  0B05  0020               	movlb	0	; select bank0
  3087  0B06  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler
  3088  0B07  3008               	movlw	high _sensor2
  3089  0B08  00A1               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler+1
  3090  0B09  3188  2074  318A   	fcall	_IOCBF3_SetInterruptHandler
  3091                           
  3092                           ;main.c: 137:     IOCBF4_SetInterruptHandler(sensor3);
  3093  0B0C  30B6               	movlw	low _sensor3
  3094  0B0D  0020               	movlb	0	; select bank0
  3095  0B0E  00A0               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
  3096  0B0F  3008               	movlw	high _sensor3
  3097  0B10  00A1               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
  3098  0B11  3188  207D  318A   	fcall	_IOCBF4_SetInterruptHandler
  3099                           
  3100                           ;main.c: 138:     IOCBF5_SetInterruptHandler(sensor4);
  3101  0B14  30C1               	movlw	low _sensor4
  3102  0B15  0020               	movlb	0	; select bank0
  3103  0B16  00A0               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler
  3104  0B17  3008               	movlw	high _sensor4
  3105  0B18  00A1               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler+1
  3106  0B19  3188  2086  318A   	fcall	_IOCBF5_SetInterruptHandler
  3107                           
  3108                           ;main.c: 139:     CCP4_SetCallBack(get_pulse);
  3109  0B1C  3096               	movlw	low _get_pulse
  3110  0B1D  0020               	movlb	0	; select bank0
  3111  0B1E  00A0               	movwf	CCP4_SetCallBack@customCallBack
  3112  0B1F  300A               	movlw	high _get_pulse
  3113  0B20  00A1               	movwf	CCP4_SetCallBack@customCallBack+1
  3114  0B21  3188  2047  318A   	fcall	_CCP4_SetCallBack
  3115  0B24                     l604:	
  3116                           ;main.c: 147:     while (1)
  3117                           
  3118                           
  3119                           ;main.c: 148:     {;main.c: 149:        comunicacao ();
  3120  0B24  318F  272B  318A   	fcall	_comunicacao
  3121  0B27                     l3957:	
  3122                           
  3123                           ;main.c: 150:        controle();
  3124  0B27  3186  2642  318A   	fcall	_controle
  3125  0B2A                     l3959:	
  3126                           
  3127                           ;main.c: 151:        gerenciamento();
  3128  0B2A  318C  2465  318A   	fcall	_gerenciamento
  3129  0B2D  2B24               	goto	l604
  3130  0B2E  3180  2834         	ljmp	start
  3131  0B30                     __end_of_main:	
  3132                           
  3133                           	psect	text1
  3134  0C65                     __ptext1:	
  3135 ;; *************** function _gerenciamento *****************
  3136 ;; Defined at:
  3137 ;;		line 229 in file "main.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;		None
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;		None
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3151 ;;      Params:         0       0       0       0       0       0
  3152 ;;      Locals:         0       0       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0
  3154 ;;      Totals:         0       0       0       0       0       0
  3155 ;;Total ram usage:        0 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    6
  3158 ;; This function calls:
  3159 ;;		_abs
  3160 ;;		_col_down
  3161 ;;		_col_up
  3162 ;;		_update
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _gerenciamento
  3170  0C65                     _gerenciamento:	
  3171  0C65                     l3899:	
  3172                           ;incstack = 0
  3173                           ; Regs used in _gerenciamento: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3174                           
  3175                           
  3176                           ;main.c: 231:     update();
  3177  0C65  3182  22AA  318C   	fcall	_update
  3178  0C68                     l3901:	
  3179                           
  3180                           ;main.c: 236:    if(fila_up[0]!=out_value||fila_up[1]!=out_value||fila_up[2]!=out_value|
      +                          |fila_up[3]!=out_value||fila_up[4]!=out_value||fila_up[5]!=out_value||fila_up[6]!=out_va
      +                          lue||fila_up[7]!=out_value)
  3181  0C68  0021               	movlb	1	; select bank1
  3182  0C69  0830               	movf	_fila_up^(0+128),w
  3183  0C6A  0431               	iorwf	(_fila_up+1)^(0+128),w
  3184  0C6B  1D03               	btfss	3,2
  3185  0C6C  2C6E               	goto	u4071
  3186  0C6D  2C6F               	goto	u4070
  3187  0C6E                     u4071:	
  3188  0C6E  2C99               	goto	l3917
  3189  0C6F                     u4070:	
  3190  0C6F                     l3903:	
  3191  0C6F  0832               	movf	(_fila_up^(0+128)+2),w
  3192  0C70  0433               	iorwf	((_fila_up+1)^(0+128)+2),w
  3193  0C71  1D03               	btfss	3,2
  3194  0C72  2C74               	goto	u4081
  3195  0C73  2C75               	goto	u4080
  3196  0C74                     u4081:	
  3197  0C74  2C99               	goto	l3917
  3198  0C75                     u4080:	
  3199  0C75                     l3905:	
  3200  0C75  0834               	movf	(_fila_up^(0+128)+4),w
  3201  0C76  0435               	iorwf	((_fila_up+1)^(0+128)+4),w
  3202  0C77  1D03               	btfss	3,2
  3203  0C78  2C7A               	goto	u4091
  3204  0C79  2C7B               	goto	u4090
  3205  0C7A                     u4091:	
  3206  0C7A  2C99               	goto	l3917
  3207  0C7B                     u4090:	
  3208  0C7B                     l3907:	
  3209  0C7B  0836               	movf	(_fila_up^(0+128)+6),w
  3210  0C7C  0437               	iorwf	((_fila_up+1)^(0+128)+6),w
  3211  0C7D  1D03               	btfss	3,2
  3212  0C7E  2C80               	goto	u4101
  3213  0C7F  2C81               	goto	u4100
  3214  0C80                     u4101:	
  3215  0C80  2C99               	goto	l3917
  3216  0C81                     u4100:	
  3217  0C81                     l3909:	
  3218  0C81  0838               	movf	(_fila_up^(0+128)+8),w
  3219  0C82  0439               	iorwf	((_fila_up+1)^(0+128)+8),w
  3220  0C83  1D03               	btfss	3,2
  3221  0C84  2C86               	goto	u4111
  3222  0C85  2C87               	goto	u4110
  3223  0C86                     u4111:	
  3224  0C86  2C99               	goto	l3917
  3225  0C87                     u4110:	
  3226  0C87                     l3911:	
  3227  0C87  083A               	movf	(_fila_up^(0+128)+10),w
  3228  0C88  043B               	iorwf	((_fila_up+1)^(0+128)+10),w
  3229  0C89  1D03               	btfss	3,2
  3230  0C8A  2C8C               	goto	u4121
  3231  0C8B  2C8D               	goto	u4120
  3232  0C8C                     u4121:	
  3233  0C8C  2C99               	goto	l3917
  3234  0C8D                     u4120:	
  3235  0C8D                     l3913:	
  3236  0C8D  083C               	movf	(_fila_up^(0+128)+12),w
  3237  0C8E  043D               	iorwf	((_fila_up+1)^(0+128)+12),w
  3238  0C8F  1D03               	btfss	3,2
  3239  0C90  2C92               	goto	u4131
  3240  0C91  2C93               	goto	u4130
  3241  0C92                     u4131:	
  3242  0C92  2C99               	goto	l3917
  3243  0C93                     u4130:	
  3244  0C93                     l3915:	
  3245  0C93  083E               	movf	(_fila_up^(0+128)+14),w
  3246  0C94  043F               	iorwf	((_fila_up+1)^(0+128)+14),w
  3247  0C95  1903               	btfsc	3,2
  3248  0C96  2C98               	goto	u4141
  3249  0C97  2C99               	goto	u4140
  3250  0C98                     u4141:	
  3251  0C98  2CA1               	goto	l3921
  3252  0C99                     u4140:	
  3253  0C99                     l3917:	
  3254                           
  3255                           ;main.c: 237:    {;main.c: 238:      sentido2=1;
  3256  0C99  3001               	movlw	1
  3257  0C9A  00D1               	movwf	_sentido2^(0+128)
  3258  0C9B  3000               	movlw	0
  3259  0C9C  00D2               	movwf	(_sentido2^(0+128)+1)
  3260  0C9D                     l3919:	
  3261                           
  3262                           ;main.c: 239:      col_up();
  3263  0C9D  3187  2782  318C   	fcall	_col_up
  3264                           
  3265                           ;main.c: 240:    }
  3266  0CA0  2CFA               	goto	l636
  3267  0CA1                     l3921:	
  3268  0CA1  0820               	movf	_origem_down^(0+128),w
  3269  0CA2  0421               	iorwf	(_origem_down+1)^(0+128),w
  3270  0CA3  1D03               	btfss	3,2
  3271  0CA4  2CA6               	goto	u4151
  3272  0CA5  2CA7               	goto	u4150
  3273  0CA6                     u4151:	
  3274  0CA6  2CD1               	goto	l3937
  3275  0CA7                     u4150:	
  3276  0CA7                     l3923:	
  3277  0CA7  0822               	movf	(_origem_down^(0+128)+2),w
  3278  0CA8  0423               	iorwf	((_origem_down+1)^(0+128)+2),w
  3279  0CA9  1D03               	btfss	3,2
  3280  0CAA  2CAC               	goto	u4161
  3281  0CAB  2CAD               	goto	u4160
  3282  0CAC                     u4161:	
  3283  0CAC  2CD1               	goto	l3937
  3284  0CAD                     u4160:	
  3285  0CAD                     l3925:	
  3286  0CAD  0824               	movf	(_origem_down^(0+128)+4),w
  3287  0CAE  0425               	iorwf	((_origem_down+1)^(0+128)+4),w
  3288  0CAF  1D03               	btfss	3,2
  3289  0CB0  2CB2               	goto	u4171
  3290  0CB1  2CB3               	goto	u4170
  3291  0CB2                     u4171:	
  3292  0CB2  2CD1               	goto	l3937
  3293  0CB3                     u4170:	
  3294  0CB3                     l3927:	
  3295  0CB3  0826               	movf	(_origem_down^(0+128)+6),w
  3296  0CB4  0427               	iorwf	((_origem_down+1)^(0+128)+6),w
  3297  0CB5  1D03               	btfss	3,2
  3298  0CB6  2CB8               	goto	u4181
  3299  0CB7  2CB9               	goto	u4180
  3300  0CB8                     u4181:	
  3301  0CB8  2CD1               	goto	l3937
  3302  0CB9                     u4180:	
  3303  0CB9                     l3929:	
  3304  0CB9  0828               	movf	(_origem_down^(0+128)+8),w
  3305  0CBA  0429               	iorwf	((_origem_down+1)^(0+128)+8),w
  3306  0CBB  1D03               	btfss	3,2
  3307  0CBC  2CBE               	goto	u4191
  3308  0CBD  2CBF               	goto	u4190
  3309  0CBE                     u4191:	
  3310  0CBE  2CD1               	goto	l3937
  3311  0CBF                     u4190:	
  3312  0CBF                     l3931:	
  3313  0CBF  082A               	movf	(_origem_down^(0+128)+10),w
  3314  0CC0  042B               	iorwf	((_origem_down+1)^(0+128)+10),w
  3315  0CC1  1D03               	btfss	3,2
  3316  0CC2  2CC4               	goto	u4201
  3317  0CC3  2CC5               	goto	u4200
  3318  0CC4                     u4201:	
  3319  0CC4  2CD1               	goto	l3937
  3320  0CC5                     u4200:	
  3321  0CC5                     l3933:	
  3322  0CC5  082C               	movf	(_origem_down^(0+128)+12),w
  3323  0CC6  042D               	iorwf	((_origem_down+1)^(0+128)+12),w
  3324  0CC7  1D03               	btfss	3,2
  3325  0CC8  2CCA               	goto	u4211
  3326  0CC9  2CCB               	goto	u4210
  3327  0CCA                     u4211:	
  3328  0CCA  2CD1               	goto	l3937
  3329  0CCB                     u4210:	
  3330  0CCB                     l3935:	
  3331  0CCB  082E               	movf	(_origem_down^(0+128)+14),w
  3332  0CCC  042F               	iorwf	((_origem_down+1)^(0+128)+14),w
  3333  0CCD  1903               	btfsc	3,2
  3334  0CCE  2CD0               	goto	u4221
  3335  0CCF  2CD1               	goto	u4220
  3336  0CD0                     u4221:	
  3337  0CD0  2CD7               	goto	l3941
  3338  0CD1                     u4220:	
  3339  0CD1                     l3937:	
  3340                           
  3341                           ;main.c: 244:    {;main.c: 245:      sentido2=0;
  3342  0CD1  01D1               	clrf	_sentido2^(0+128)
  3343  0CD2  01D2               	clrf	(_sentido2+1)^(0+128)
  3344  0CD3                     l3939:	
  3345                           
  3346                           ;main.c: 246:      col_down();
  3347  0CD3  318B  23E9  318C   	fcall	_col_down
  3348                           
  3349                           ;main.c: 247:    }
  3350  0CD6  2CFA               	goto	l636
  3351  0CD7                     l3941:	
  3352                           
  3353                           ;main.c: 251:    {;main.c: 252:      sentido2=2;
  3354  0CD7  3002               	movlw	2
  3355  0CD8  00D1               	movwf	_sentido2^(0+128)
  3356  0CD9  3000               	movlw	0
  3357  0CDA  00D2               	movwf	(_sentido2^(0+128)+1)
  3358  0CDB                     l3943:	
  3359                           
  3360                           ;main.c: 253:      distancia=abs(and_ating-1);
  3361  0CDB  0020               	movlb	0	; select bank0
  3362  0CDC  086F               	movf	_and_ating,w
  3363  0CDD  3EFF               	addlw	255
  3364  0CDE  00A0               	movwf	abs@a
  3365  0CDF  30FF               	movlw	255
  3366  0CE0  1803               	skipnc
  3367  0CE1  3000               	movlw	0
  3368  0CE2  00A1               	movwf	abs@a+1
  3369  0CE3  3189  21AE  318C   	fcall	_abs
  3370  0CE6  0020               	movlb	0	; select bank0
  3371  0CE7  0821               	movf	?_abs+1,w
  3372  0CE8  0021               	movlb	1	; select bank1
  3373  0CE9  00CE               	movwf	(_distancia+1)^(0+128)
  3374  0CEA  0020               	movlb	0	; select bank0
  3375  0CEB  0820               	movf	?_abs,w
  3376  0CEC  0021               	movlb	1	; select bank1
  3377  0CED  00CD               	movwf	_distancia^(0+128)
  3378  0CEE                     l3945:	
  3379                           
  3380                           ;main.c: 254:       if(and_ating > 1)
  3381  0CEE  3002               	movlw	2
  3382  0CEF  0020               	movlb	0	; select bank0
  3383  0CF0  026F               	subwf	_and_ating,w
  3384  0CF1  1C03               	skipc
  3385  0CF2  2CF4               	goto	u4231
  3386  0CF3  2CF5               	goto	u4230
  3387  0CF4                     u4231:	
  3388  0CF4  2CFA               	goto	l636
  3389  0CF5                     u4230:	
  3390  0CF5                     l3947:	
  3391                           
  3392                           ;main.c: 255:          {;main.c: 256:           sentido = 0;
  3393  0CF5  0021               	movlb	1	; select bank1
  3394  0CF6  01D5               	clrf	_sentido^(0+128)
  3395  0CF7  01D6               	clrf	(_sentido+1)^(0+128)
  3396  0CF8                     l3949:	
  3397                           
  3398                           ;main.c: 257:            LATAbits.LATA2 = 0;
  3399  0CF8  0022               	movlb	2	; select bank2
  3400  0CF9  110C               	bcf	12,2	;volatile
  3401  0CFA                     l636:	
  3402  0CFA  0008               	return
  3403  0CFB                     __end_of_gerenciamento:	
  3404                           
  3405                           	psect	text2
  3406  0782                     __ptext2:	
  3407 ;; *************** function _col_up *****************
  3408 ;; Defined at:
  3409 ;;		line 264 in file "main.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;		None
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;		None
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3423 ;;      Params:         0       0       0       0       0       0
  3424 ;;      Locals:         0       0       0       0       0       0
  3425 ;;      Temps:          0       2       0       0       0       0
  3426 ;;      Totals:         0       2       0       0       0       0
  3427 ;;Total ram usage:        2 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; Hardware stack levels required when called:    5
  3430 ;; This function calls:
  3431 ;;		_abs
  3432 ;;		_min_up
  3433 ;; This function is called by:
  3434 ;;		_gerenciamento
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           
  3439                           ;psect for function _col_up
  3440  0782                     _col_up:	
  3441  0782                     l2937:	
  3442                           ;incstack = 0
  3443                           ; Regs used in _col_up: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3444                           
  3445                           
  3446                           ;main.c: 266:         while(and_ating!=min_origem_up)
  3447  0782  2FB5               	goto	l2949
  3448  0783                     l2939:	
  3449                           
  3450                           ;main.c: 267:         {;main.c: 268:             distancia=abs(and_ating-min_origem_up);
  3451  0783  086F               	movf	_and_ating,w
  3452  0784  00A5               	movwf	??_col_up
  3453  0785  0870               	movf	_min_origem_up,w
  3454  0786  0225               	subwf	??_col_up,w
  3455  0787  00A0               	movwf	abs@a
  3456  0788  0971               	comf	_min_origem_up+1,w
  3457  0789  1803               	skipnc
  3458  078A  0A89               	incf	9,f
  3459  078B  00A1               	movwf	abs@a+1
  3460  078C  3189  21AE  3187   	fcall	_abs
  3461  078F  0020               	movlb	0	; select bank0
  3462  0790  0821               	movf	?_abs+1,w
  3463  0791  0021               	movlb	1	; select bank1
  3464  0792  00CE               	movwf	(_distancia+1)^(0+128)
  3465  0793  0020               	movlb	0	; select bank0
  3466  0794  0820               	movf	?_abs,w
  3467  0795  0021               	movlb	1	; select bank1
  3468  0796  00CD               	movwf	_distancia^(0+128)
  3469  0797                     l2941:	
  3470                           
  3471                           ;main.c: 269:             if(and_ating>min_origem_up)
  3472  0797  0871               	movf	_min_origem_up+1,w
  3473  0798  3A80               	xorlw	128
  3474  0799  0020               	movlb	0	; select bank0
  3475  079A  00A5               	movwf	??_col_up
  3476  079B  3080               	movlw	128
  3477  079C  0225               	subwf	??_col_up,w
  3478  079D  1D03               	skipz
  3479  079E  2FA1               	goto	u2475
  3480  079F  086F               	movf	_and_ating,w
  3481  07A0  0270               	subwf	_min_origem_up,w
  3482  07A1                     u2475:	
  3483  07A1  1803               	skipnc
  3484  07A2  2FA4               	goto	u2471
  3485  07A3  2FA5               	goto	u2470
  3486  07A4                     u2471:	
  3487  07A4  2FA7               	goto	l2945
  3488  07A5                     u2470:	
  3489  07A5                     l2943:	
  3490                           
  3491                           ;main.c: 270:             {;main.c: 271:                 LATAbits.LATA2 = 0;
  3492  07A5  0022               	movlb	2	; select bank2
  3493  07A6  110C               	bcf	12,2	;volatile
  3494  07A7                     l2945:	
  3495                           
  3496                           ;main.c: 273:             if(and_ating<min_origem_up)
  3497  07A7  0871               	movf	_min_origem_up+1,w
  3498  07A8  3A80               	xorlw	128
  3499  07A9  3C80               	sublw	128
  3500  07AA  1D03               	skipz
  3501  07AB  2FAF               	goto	u2485
  3502  07AC  0870               	movf	_min_origem_up,w
  3503  07AD  0020               	movlb	0	; select bank0
  3504  07AE  026F               	subwf	_and_ating,w
  3505  07AF                     u2485:	
  3506  07AF  1803               	skipnc
  3507  07B0  2FB2               	goto	u2481
  3508  07B1  2FB3               	goto	u2480
  3509  07B2                     u2481:	
  3510  07B2  2FB5               	goto	l2949
  3511  07B3                     u2480:	
  3512  07B3                     l2947:	
  3513                           
  3514                           ;main.c: 274:             {;main.c: 276:                 LATAbits.LATA2 = 1;
  3515  07B3  0022               	movlb	2	; select bank2
  3516  07B4  150C               	bsf	12,2	;volatile
  3517  07B5                     l2949:	
  3518                           
  3519                           ;main.c: 266:         while(and_ating!=min_origem_up)
  3520  07B5  0020               	movlb	0	; select bank0
  3521  07B6  086F               	movf	_and_ating,w
  3522  07B7  00A5               	movwf	??_col_up
  3523  07B8  01A6               	clrf	??_col_up+1
  3524  07B9  0871               	movf	_min_origem_up+1,w
  3525  07BA  0626               	xorwf	??_col_up+1,w
  3526  07BB  1D03               	skipz
  3527  07BC  2FBF               	goto	u2495
  3528  07BD  0870               	movf	_min_origem_up,w
  3529  07BE  0625               	xorwf	??_col_up,w
  3530  07BF                     u2495:	
  3531  07BF  1D03               	skipz
  3532  07C0  2FC2               	goto	u2491
  3533  07C1  2FC3               	goto	u2490
  3534  07C2                     u2491:	
  3535  07C2  2F83               	goto	l2939
  3536  07C3                     u2490:	
  3537  07C3                     l643:	
  3538                           
  3539                           ;main.c: 279:         LATAbits.LATA2 = 1;
  3540  07C3  0022               	movlb	2	; select bank2
  3541  07C4  150C               	bsf	12,2	;volatile
  3542  07C5                     l2951:	
  3543                           
  3544                           ;main.c: 281:         {;main.c: 282:             if(and_ating==min_origem_up)
  3545  07C5  0020               	movlb	0	; select bank0
  3546  07C6  086F               	movf	_and_ating,w
  3547  07C7  00A5               	movwf	??_col_up
  3548  07C8  01A6               	clrf	??_col_up+1
  3549  07C9  0871               	movf	_min_origem_up+1,w
  3550  07CA  0626               	xorwf	??_col_up+1,w
  3551  07CB  1D03               	skipz
  3552  07CC  2FCF               	goto	u2505
  3553  07CD  0870               	movf	_min_origem_up,w
  3554  07CE  0625               	xorwf	??_col_up,w
  3555  07CF                     u2505:	
  3556  07CF  1D03               	skipz
  3557  07D0  2FD2               	goto	u2501
  3558  07D1  2FD3               	goto	u2500
  3559  07D2                     u2501:	
  3560  07D2  2FEB               	goto	l2957
  3561  07D3                     u2500:	
  3562  07D3                     l2953:	
  3563                           
  3564                           ;main.c: 283:             {;main.c: 284:                 min_up();
  3565  07D3  318E  2659  3187   	fcall	_min_up
  3566  07D6                     l2955:	
  3567                           
  3568                           ;main.c: 285:                 distancia=abs(and_ating-min_origem_up);
  3569  07D6  0020               	movlb	0	; select bank0
  3570  07D7  086F               	movf	_and_ating,w
  3571  07D8  00A5               	movwf	??_col_up
  3572  07D9  0870               	movf	_min_origem_up,w
  3573  07DA  0225               	subwf	??_col_up,w
  3574  07DB  00A0               	movwf	abs@a
  3575  07DC  0971               	comf	_min_origem_up+1,w
  3576  07DD  1803               	skipnc
  3577  07DE  0A89               	incf	9,f
  3578  07DF  00A1               	movwf	abs@a+1
  3579  07E0  3189  21AE  3187   	fcall	_abs
  3580  07E3  0020               	movlb	0	; select bank0
  3581  07E4  0821               	movf	?_abs+1,w
  3582  07E5  0021               	movlb	1	; select bank1
  3583  07E6  00CE               	movwf	(_distancia+1)^(0+128)
  3584  07E7  0020               	movlb	0	; select bank0
  3585  07E8  0820               	movf	?_abs,w
  3586  07E9  0021               	movlb	1	; select bank1
  3587  07EA  00CD               	movwf	_distancia^(0+128)
  3588  07EB                     l2957:	
  3589                           
  3590                           ;main.c: 287:         }while (and_ating!=max_fila_up);
  3591  07EB  0020               	movlb	0	; select bank0
  3592  07EC  086F               	movf	_and_ating,w
  3593  07ED  00A5               	movwf	??_col_up
  3594  07EE  01A6               	clrf	??_col_up+1
  3595  07EF  0021               	movlb	1	; select bank1
  3596  07F0  084C               	movf	(_max_fila_up+1)^(0+128),w
  3597  07F1  0020               	movlb	0	; select bank0
  3598  07F2  0626               	xorwf	??_col_up+1,w
  3599  07F3  1D03               	skipz
  3600  07F4  2FF9               	goto	u2515
  3601  07F5  0021               	movlb	1	; select bank1
  3602  07F6  084B               	movf	_max_fila_up^(0+128),w
  3603  07F7  0020               	movlb	0	; select bank0
  3604  07F8  0625               	xorwf	??_col_up,w
  3605  07F9                     u2515:	
  3606  07F9  1D03               	skipz
  3607  07FA  2FFC               	goto	u2511
  3608  07FB  2FFD               	goto	u2510
  3609  07FC                     u2511:	
  3610  07FC  2FC5               	goto	l2951
  3611  07FD                     u2510:	
  3612  07FD                     l647:	
  3613  07FD  0008               	return
  3614  07FE                     __end_of_col_up:	
  3615                           
  3616                           	psect	text3
  3617  0BE9                     __ptext3:	
  3618 ;; *************** function _col_down *****************
  3619 ;; Defined at:
  3620 ;;		line 290 in file "main.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;		None
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;		None
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      void 
  3627 ;; Registers used:
  3628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3634 ;;      Params:         0       0       0       0       0       0
  3635 ;;      Locals:         0       0       0       0       0       0
  3636 ;;      Temps:          0       2       0       0       0       0
  3637 ;;      Totals:         0       2       0       0       0       0
  3638 ;;Total ram usage:        2 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    5
  3641 ;; This function calls:
  3642 ;;		_abs
  3643 ;;		_max_down
  3644 ;; This function is called by:
  3645 ;;		_gerenciamento
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           
  3650                           ;psect for function _col_down
  3651  0BE9                     _col_down:	
  3652  0BE9                     l2959:	
  3653                           ;incstack = 0
  3654                           ; Regs used in _col_down: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3655                           
  3656                           
  3657                           ;main.c: 292:         while(and_ating!=max_origem_down)
  3658  0BE9  2C1C               	goto	l2971
  3659  0BEA                     l2961:	
  3660                           
  3661                           ;main.c: 293:         {;main.c: 294:             distancia = abs(and_ating-max_origem_do
      +                          wn);
  3662  0BEA  086F               	movf	_and_ating,w
  3663  0BEB  00A5               	movwf	??_col_down
  3664  0BEC  0872               	movf	_max_origem_down,w
  3665  0BED  0225               	subwf	??_col_down,w
  3666  0BEE  00A0               	movwf	abs@a
  3667  0BEF  0973               	comf	_max_origem_down+1,w
  3668  0BF0  1803               	skipnc
  3669  0BF1  0A89               	incf	9,f
  3670  0BF2  00A1               	movwf	abs@a+1
  3671  0BF3  3189  21AE  318B   	fcall	_abs
  3672  0BF6  0020               	movlb	0	; select bank0
  3673  0BF7  0821               	movf	?_abs+1,w
  3674  0BF8  0021               	movlb	1	; select bank1
  3675  0BF9  00CE               	movwf	(_distancia+1)^(0+128)
  3676  0BFA  0020               	movlb	0	; select bank0
  3677  0BFB  0820               	movf	?_abs,w
  3678  0BFC  0021               	movlb	1	; select bank1
  3679  0BFD  00CD               	movwf	_distancia^(0+128)
  3680  0BFE                     l2963:	
  3681                           
  3682                           ;main.c: 295:             if(and_ating>max_origem_down)
  3683  0BFE  0873               	movf	_max_origem_down+1,w
  3684  0BFF  3A80               	xorlw	128
  3685  0C00  0020               	movlb	0	; select bank0
  3686  0C01  00A5               	movwf	??_col_down
  3687  0C02  3080               	movlw	128
  3688  0C03  0225               	subwf	??_col_down,w
  3689  0C04  1D03               	skipz
  3690  0C05  2C08               	goto	u2525
  3691  0C06  086F               	movf	_and_ating,w
  3692  0C07  0272               	subwf	_max_origem_down,w
  3693  0C08                     u2525:	
  3694  0C08  1803               	skipnc
  3695  0C09  2C0B               	goto	u2521
  3696  0C0A  2C0C               	goto	u2520
  3697  0C0B                     u2521:	
  3698  0C0B  2C0E               	goto	l2967
  3699  0C0C                     u2520:	
  3700  0C0C                     l2965:	
  3701                           
  3702                           ;main.c: 296:             {;main.c: 297:                 LATAbits.LATA2 = 0;
  3703  0C0C  0022               	movlb	2	; select bank2
  3704  0C0D  110C               	bcf	12,2	;volatile
  3705  0C0E                     l2967:	
  3706                           
  3707                           ;main.c: 299:             if(and_ating<max_origem_down)
  3708  0C0E  0873               	movf	_max_origem_down+1,w
  3709  0C0F  3A80               	xorlw	128
  3710  0C10  3C80               	sublw	128
  3711  0C11  1D03               	skipz
  3712  0C12  2C16               	goto	u2535
  3713  0C13  0872               	movf	_max_origem_down,w
  3714  0C14  0020               	movlb	0	; select bank0
  3715  0C15  026F               	subwf	_and_ating,w
  3716  0C16                     u2535:	
  3717  0C16  1803               	skipnc
  3718  0C17  2C19               	goto	u2531
  3719  0C18  2C1A               	goto	u2530
  3720  0C19                     u2531:	
  3721  0C19  2C1C               	goto	l2971
  3722  0C1A                     u2530:	
  3723  0C1A                     l2969:	
  3724                           
  3725                           ;main.c: 300:             {;main.c: 301:                 LATAbits.LATA2 = 1;
  3726  0C1A  0022               	movlb	2	; select bank2
  3727  0C1B  150C               	bsf	12,2	;volatile
  3728  0C1C                     l2971:	
  3729                           
  3730                           ;main.c: 292:         while(and_ating!=max_origem_down)
  3731  0C1C  0020               	movlb	0	; select bank0
  3732  0C1D  086F               	movf	_and_ating,w
  3733  0C1E  00A5               	movwf	??_col_down
  3734  0C1F  01A6               	clrf	??_col_down+1
  3735  0C20  0873               	movf	_max_origem_down+1,w
  3736  0C21  0626               	xorwf	??_col_down+1,w
  3737  0C22  1D03               	skipz
  3738  0C23  2C26               	goto	u2545
  3739  0C24  0872               	movf	_max_origem_down,w
  3740  0C25  0625               	xorwf	??_col_down,w
  3741  0C26                     u2545:	
  3742  0C26  1D03               	skipz
  3743  0C27  2C29               	goto	u2541
  3744  0C28  2C2A               	goto	u2540
  3745  0C29                     u2541:	
  3746  0C29  2BEA               	goto	l2961
  3747  0C2A                     u2540:	
  3748  0C2A                     l654:	
  3749                           
  3750                           ;main.c: 304:         LATAbits.LATA2 = 0;
  3751  0C2A  0022               	movlb	2	; select bank2
  3752  0C2B  110C               	bcf	12,2	;volatile
  3753  0C2C                     l2973:	
  3754                           
  3755                           ;main.c: 306:         {;main.c: 307:             if(and_ating==max_origem_down)
  3756  0C2C  0020               	movlb	0	; select bank0
  3757  0C2D  086F               	movf	_and_ating,w
  3758  0C2E  00A5               	movwf	??_col_down
  3759  0C2F  01A6               	clrf	??_col_down+1
  3760  0C30  0873               	movf	_max_origem_down+1,w
  3761  0C31  0626               	xorwf	??_col_down+1,w
  3762  0C32  1D03               	skipz
  3763  0C33  2C36               	goto	u2555
  3764  0C34  0872               	movf	_max_origem_down,w
  3765  0C35  0625               	xorwf	??_col_down,w
  3766  0C36                     u2555:	
  3767  0C36  1D03               	skipz
  3768  0C37  2C39               	goto	u2551
  3769  0C38  2C3A               	goto	u2550
  3770  0C39                     u2551:	
  3771  0C39  2C52               	goto	l2979
  3772  0C3A                     u2550:	
  3773  0C3A                     l2975:	
  3774                           
  3775                           ;main.c: 308:             {;main.c: 309:                 max_down();
  3776  0C3A  318D  25A8  318B   	fcall	_max_down
  3777  0C3D                     l2977:	
  3778                           
  3779                           ;main.c: 310:                 distancia=abs(and_ating-max_origem_down);
  3780  0C3D  0020               	movlb	0	; select bank0
  3781  0C3E  086F               	movf	_and_ating,w
  3782  0C3F  00A5               	movwf	??_col_down
  3783  0C40  0872               	movf	_max_origem_down,w
  3784  0C41  0225               	subwf	??_col_down,w
  3785  0C42  00A0               	movwf	abs@a
  3786  0C43  0973               	comf	_max_origem_down+1,w
  3787  0C44  1803               	skipnc
  3788  0C45  0A89               	incf	9,f
  3789  0C46  00A1               	movwf	abs@a+1
  3790  0C47  3189  21AE  318B   	fcall	_abs
  3791  0C4A  0020               	movlb	0	; select bank0
  3792  0C4B  0821               	movf	?_abs+1,w
  3793  0C4C  0021               	movlb	1	; select bank1
  3794  0C4D  00CE               	movwf	(_distancia+1)^(0+128)
  3795  0C4E  0020               	movlb	0	; select bank0
  3796  0C4F  0820               	movf	?_abs,w
  3797  0C50  0021               	movlb	1	; select bank1
  3798  0C51  00CD               	movwf	_distancia^(0+128)
  3799  0C52                     l2979:	
  3800                           
  3801                           ;main.c: 312:         }while(and_ating!=min_fila_down);
  3802  0C52  0020               	movlb	0	; select bank0
  3803  0C53  086F               	movf	_and_ating,w
  3804  0C54  00A5               	movwf	??_col_down
  3805  0C55  01A6               	clrf	??_col_down+1
  3806  0C56  0021               	movlb	1	; select bank1
  3807  0C57  084A               	movf	(_min_fila_down+1)^(0+128),w
  3808  0C58  0020               	movlb	0	; select bank0
  3809  0C59  0626               	xorwf	??_col_down+1,w
  3810  0C5A  1D03               	skipz
  3811  0C5B  2C60               	goto	u2565
  3812  0C5C  0021               	movlb	1	; select bank1
  3813  0C5D  0849               	movf	_min_fila_down^(0+128),w
  3814  0C5E  0020               	movlb	0	; select bank0
  3815  0C5F  0625               	xorwf	??_col_down,w
  3816  0C60                     u2565:	
  3817  0C60  1D03               	skipz
  3818  0C61  2C63               	goto	u2561
  3819  0C62  2C64               	goto	u2560
  3820  0C63                     u2561:	
  3821  0C63  2C2C               	goto	l2973
  3822  0C64                     u2560:	
  3823  0C64                     l658:	
  3824  0C64  0008               	return
  3825  0C65                     __end_of_col_down:	
  3826                           
  3827                           	psect	text4
  3828  09AE                     __ptext4:	
  3829 ;; *************** function _abs *****************
  3830 ;; Defined at:
  3831 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  a               2    0[BANK0 ] int 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;		None
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  2    0[BANK0 ] int 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3845 ;;      Params:         0       2       0       0       0       0
  3846 ;;      Locals:         0       0       0       0       0       0
  3847 ;;      Temps:          0       2       0       0       0       0
  3848 ;;      Totals:         0       4       0       0       0       0
  3849 ;;Total ram usage:        4 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    4
  3852 ;; This function calls:
  3853 ;;		Nothing
  3854 ;; This function is called by:
  3855 ;;		_gerenciamento
  3856 ;;		_col_up
  3857 ;;		_col_down
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           
  3862                           ;psect for function _abs
  3863  09AE                     _abs:	
  3864  09AE                     l2559:	
  3865                           ;incstack = 0
  3866                           ; Regs used in _abs: [wreg+status,2+status,0]
  3867                           
  3868  09AE  0020               	movlb	0	; select bank0
  3869  09AF  0821               	movf	abs@a+1,w
  3870  09B0  3A80               	xorlw	128
  3871  09B1  00A2               	movwf	??_abs
  3872  09B2  3080               	movlw	128
  3873  09B3  0222               	subwf	??_abs,w
  3874  09B4  1D03               	skipz
  3875  09B5  29B8               	goto	u1945
  3876  09B6  3001               	movlw	1
  3877  09B7  0220               	subwf	abs@a,w
  3878  09B8                     u1945:	
  3879  09B8  1803               	skipnc
  3880  09B9  29BB               	goto	u1941
  3881  09BA  29BC               	goto	u1940
  3882  09BB                     u1941:	
  3883  09BB  29C9               	goto	l1314
  3884  09BC                     u1940:	
  3885  09BC                     l2561:	
  3886  09BC  0020               	movlb	0	; select bank0
  3887  09BD  0920               	comf	abs@a,w
  3888  09BE  00A2               	movwf	??_abs
  3889  09BF  0921               	comf	abs@a+1,w
  3890  09C0  00A3               	movwf	??_abs+1
  3891  09C1  0AA2               	incf	??_abs,f
  3892  09C2  1903               	skipnz
  3893  09C3  0AA3               	incf	??_abs+1,f
  3894  09C4  0822               	movf	??_abs,w
  3895  09C5  00A0               	movwf	?_abs
  3896  09C6  0823               	movf	??_abs+1,w
  3897  09C7  00A1               	movwf	?_abs+1
  3898  09C8  29C9               	goto	l1317
  3899  09C9                     l1314:	
  3900  09C9                     l1317:	
  3901  09C9  0008               	return
  3902  09CA                     __end_of_abs:	
  3903                           
  3904                           	psect	text5
  3905  0642                     __ptext5:	
  3906 ;; *************** function _controle *****************
  3907 ;; Defined at:
  3908 ;;		line 184 in file "main.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;		None
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;  count           2   60[BANK0 ] int 
  3913 ;;  dutyValue       2   58[BANK0 ] int 
  3914 ;;  max_dutyValu    2   56[BANK0 ] int 
  3915 ;;  min_dutyValu    2   54[BANK0 ] int 
  3916 ;;  a               2   52[BANK0 ] int 
  3917 ;;  route           2   50[BANK0 ] int 
  3918 ;;  destiny         2   48[BANK0 ] int 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3928 ;;      Params:         0       0       0       0       0       0
  3929 ;;      Locals:         0      14       0       0       0       0
  3930 ;;      Temps:          0       4       0       0       0       0
  3931 ;;      Totals:         0      18       0       0       0       0
  3932 ;;Total ram usage:       18 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    6
  3935 ;; This function calls:
  3936 ;;		_ADC_GetConversion
  3937 ;;		_PWM3_LoadDutyValue
  3938 ;;		___flmul
  3939 ;;		___wmul
  3940 ;;		___xxtofl
  3941 ;;		_update
  3942 ;; This function is called by:
  3943 ;;		_main
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           
  3948                           ;psect for function _controle
  3949  0642                     _controle:	
  3950  0642                     l3839:	
  3951                           ;incstack = 0
  3952                           ; Regs used in _controle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3953                           
  3954                           
  3955                           ;main.c: 186:     I_m = 0.1*ADC_GetConversion(0);
  3956  0642  303D               	movlw	61
  3957  0643  0020               	movlb	0	; select bank0
  3958  0644  00B5               	movwf	___flmul@b+3
  3959  0645  30CC               	movlw	204
  3960  0646  00B4               	movwf	___flmul@b+2
  3961  0647  30CC               	movlw	204
  3962  0648  00B3               	movwf	___flmul@b+1
  3963  0649  30CD               	movlw	205
  3964  064A  00B2               	movwf	___flmul@b
  3965  064B  3000               	movlw	0
  3966  064C  318A  220B  3186   	fcall	_ADC_GetConversion
  3967  064F  0020               	movlb	0	; select bank0
  3968  0650  0820               	movf	?_ADC_GetConversion,w
  3969  0651  00CC               	movwf	??_controle
  3970  0652  0821               	movf	?_ADC_GetConversion+1,w
  3971  0653  00CD               	movwf	??_controle+1
  3972  0654  01CE               	clrf	??_controle+2
  3973  0655  01CF               	clrf	??_controle+3
  3974  0656  084F               	movf	??_controle+3,w
  3975  0657  00A7               	movwf	___xxtofl@val+3
  3976  0658  084E               	movf	??_controle+2,w
  3977  0659  00A6               	movwf	___xxtofl@val+2
  3978  065A  084D               	movf	??_controle+1,w
  3979  065B  00A5               	movwf	___xxtofl@val+1
  3980  065C  084C               	movf	??_controle,w
  3981  065D  00A4               	movwf	___xxtofl@val
  3982  065E  3000               	movlw	0
  3983  065F  318C  24FB  3186   	fcall	___xxtofl
  3984  0662  0020               	movlb	0	; select bank0
  3985  0663  0827               	movf	?___xxtofl+3,w
  3986  0664  00B9               	movwf	___flmul@a+3
  3987  0665  0826               	movf	?___xxtofl+2,w
  3988  0666  00B8               	movwf	___flmul@a+2
  3989  0667  0825               	movf	?___xxtofl+1,w
  3990  0668  00B7               	movwf	___flmul@a+1
  3991  0669  0824               	movf	?___xxtofl,w
  3992  066A  00B6               	movwf	___flmul@a
  3993  066B  3180  2053  3186   	fcall	___flmul
  3994  066E  0020               	movlb	0	; select bank0
  3995  066F  0835               	movf	?___flmul+3,w
  3996  0670  0022               	movlb	2	; select bank2
  3997  0671  00CB               	movwf	(_I_m+3)^(0+256)
  3998  0672  0020               	movlb	0	; select bank0
  3999  0673  0834               	movf	?___flmul+2,w
  4000  0674  0022               	movlb	2	; select bank2
  4001  0675  00CA               	movwf	(_I_m+2)^(0+256)
  4002  0676  0020               	movlb	0	; select bank0
  4003  0677  0833               	movf	?___flmul+1,w
  4004  0678  0022               	movlb	2	; select bank2
  4005  0679  00C9               	movwf	(_I_m+1)^(0+256)
  4006  067A  0020               	movlb	0	; select bank0
  4007  067B  0832               	movf	?___flmul,w
  4008  067C  0022               	movlb	2	; select bank2
  4009  067D  00C8               	movwf	_I_m^(0+256)
  4010                           
  4011                           ;main.c: 187:     temp_mt = 0.3*ADC_GetConversion(1);
  4012  067E  303E               	movlw	62
  4013  067F  0020               	movlb	0	; select bank0
  4014  0680  00B5               	movwf	___flmul@b+3
  4015  0681  3099               	movlw	153
  4016  0682  00B4               	movwf	___flmul@b+2
  4017  0683  3099               	movlw	153
  4018  0684  00B3               	movwf	___flmul@b+1
  4019  0685  309A               	movlw	154
  4020  0686  00B2               	movwf	___flmul@b
  4021  0687  3001               	movlw	1
  4022  0688  318A  220B  3186   	fcall	_ADC_GetConversion
  4023  068B  0020               	movlb	0	; select bank0
  4024  068C  0820               	movf	?_ADC_GetConversion,w
  4025  068D  00CC               	movwf	??_controle
  4026  068E  0821               	movf	?_ADC_GetConversion+1,w
  4027  068F  00CD               	movwf	??_controle+1
  4028  0690  01CE               	clrf	??_controle+2
  4029  0691  01CF               	clrf	??_controle+3
  4030  0692  084F               	movf	??_controle+3,w
  4031  0693  00A7               	movwf	___xxtofl@val+3
  4032  0694  084E               	movf	??_controle+2,w
  4033  0695  00A6               	movwf	___xxtofl@val+2
  4034  0696  084D               	movf	??_controle+1,w
  4035  0697  00A5               	movwf	___xxtofl@val+1
  4036  0698  084C               	movf	??_controle,w
  4037  0699  00A4               	movwf	___xxtofl@val
  4038  069A  3000               	movlw	0
  4039  069B  318C  24FB  3186   	fcall	___xxtofl
  4040  069E  0020               	movlb	0	; select bank0
  4041  069F  0827               	movf	?___xxtofl+3,w
  4042  06A0  00B9               	movwf	___flmul@a+3
  4043  06A1  0826               	movf	?___xxtofl+2,w
  4044  06A2  00B8               	movwf	___flmul@a+2
  4045  06A3  0825               	movf	?___xxtofl+1,w
  4046  06A4  00B7               	movwf	___flmul@a+1
  4047  06A5  0824               	movf	?___xxtofl,w
  4048  06A6  00B6               	movwf	___flmul@a
  4049  06A7  3180  2053  3186   	fcall	___flmul
  4050  06AA  0020               	movlb	0	; select bank0
  4051  06AB  0835               	movf	?___flmul+3,w
  4052  06AC  0022               	movlb	2	; select bank2
  4053  06AD  00C7               	movwf	(_temp_mt+3)^(0+256)
  4054  06AE  0020               	movlb	0	; select bank0
  4055  06AF  0834               	movf	?___flmul+2,w
  4056  06B0  0022               	movlb	2	; select bank2
  4057  06B1  00C6               	movwf	(_temp_mt+2)^(0+256)
  4058  06B2  0020               	movlb	0	; select bank0
  4059  06B3  0833               	movf	?___flmul+1,w
  4060  06B4  0022               	movlb	2	; select bank2
  4061  06B5  00C5               	movwf	(_temp_mt+1)^(0+256)
  4062  06B6  0020               	movlb	0	; select bank0
  4063  06B7  0832               	movf	?___flmul,w
  4064  06B8  0022               	movlb	2	; select bank2
  4065  06B9  00C4               	movwf	_temp_mt^(0+256)
  4066  06BA                     l3841:	
  4067  06BA                     l3843:	
  4068                           
  4069                           ;main.c: 189:     int a = 52;
  4070  06BA  3034               	movlw	52
  4071  06BB  0020               	movlb	0	; select bank0
  4072  06BC  00D4               	movwf	controle@a
  4073  06BD  3000               	movlw	0
  4074  06BE  00D5               	movwf	controle@a+1
  4075  06BF                     l3845:	
  4076                           
  4077                           ;main.c: 190:     int max_dutyValue = 1023;
  4078  06BF  30FF               	movlw	255
  4079  06C0  00D8               	movwf	controle@max_dutyValue
  4080  06C1  3003               	movlw	3
  4081  06C2  00D9               	movwf	controle@max_dutyValue+1
  4082  06C3                     l3847:	
  4083                           
  4084                           ;main.c: 191:     int min_dutyValue = 256;
  4085  06C3  3000               	movlw	0
  4086  06C4  00D6               	movwf	controle@min_dutyValue
  4087  06C5  3001               	movlw	1
  4088  06C6  00D7               	movwf	controle@min_dutyValue+1
  4089  06C7                     l3849:	
  4090                           
  4091                           ;main.c: 192:     int destiny = distancia*60;
  4092  06C7  0021               	movlb	1	; select bank1
  4093  06C8  084E               	movf	(_distancia+1)^(0+128),w
  4094  06C9  0020               	movlb	0	; select bank0
  4095  06CA  00A1               	movwf	___wmul@multiplier+1
  4096  06CB  0021               	movlb	1	; select bank1
  4097  06CC  084D               	movf	_distancia^(0+128),w
  4098  06CD  0020               	movlb	0	; select bank0
  4099  06CE  00A0               	movwf	___wmul@multiplier
  4100  06CF  303C               	movlw	60
  4101  06D0  00A2               	movwf	___wmul@multiplicand
  4102  06D1  3000               	movlw	0
  4103  06D2  00A3               	movwf	___wmul@multiplicand+1
  4104  06D3  3189  21CA  3186   	fcall	___wmul
  4105  06D6  0020               	movlb	0	; select bank0
  4106  06D7  0821               	movf	?___wmul+1,w
  4107  06D8  00D1               	movwf	controle@destiny+1
  4108  06D9  0820               	movf	?___wmul,w
  4109  06DA  00D0               	movwf	controle@destiny
  4110  06DB                     l3851:	
  4111                           
  4112                           ;main.c: 193:     int route = destiny - 40;
  4113  06DB  0850               	movf	controle@destiny,w
  4114  06DC  3ED8               	addlw	216
  4115  06DD  00D2               	movwf	controle@route
  4116  06DE  30FF               	movlw	255
  4117  06DF  3D51               	addwfc	controle@destiny+1,w
  4118  06E0  00D3               	movwf	controle@route+1
  4119  06E1                     l3853:	
  4120                           
  4121                           ;main.c: 194:     int dutyValue = 0;
  4122  06E1  01DA               	clrf	controle@dutyValue
  4123  06E2  01DB               	clrf	controle@dutyValue+1
  4124  06E3                     l3855:	
  4125                           
  4126                           ;main.c: 197:     for(count = 0; count < 20; count++){
  4127  06E3  01DC               	clrf	controle@count
  4128  06E4  01DD               	clrf	controle@count+1
  4129  06E5                     l3861:	
  4130                           
  4131                           ;main.c: 199:         dutyValue+=a;
  4132  06E5  0020               	movlb	0	; select bank0
  4133  06E6  0854               	movf	controle@a,w
  4134  06E7  07DA               	addwf	controle@dutyValue,f
  4135  06E8  0855               	movf	controle@a+1,w
  4136  06E9  3DDB               	addwfc	controle@dutyValue+1,f
  4137                           
  4138                           ;main.c: 200:         if(dutyValue > max_dutyValue){
  4139  06EA  0859               	movf	controle@max_dutyValue+1,w
  4140  06EB  3A80               	xorlw	128
  4141  06EC  00CC               	movwf	??_controle
  4142  06ED  085B               	movf	controle@dutyValue+1,w
  4143  06EE  3A80               	xorlw	128
  4144  06EF  024C               	subwf	??_controle,w
  4145  06F0  1D03               	skipz
  4146  06F1  2EF4               	goto	u4025
  4147  06F2  085A               	movf	controle@dutyValue,w
  4148  06F3  0258               	subwf	controle@max_dutyValue,w
  4149  06F4                     u4025:	
  4150  06F4  1803               	skipnc
  4151  06F5  2EF7               	goto	u4021
  4152  06F6  2EF8               	goto	u4020
  4153  06F7                     u4021:	
  4154  06F7  2F01               	goto	l3865
  4155  06F8                     u4020:	
  4156  06F8                     l3863:	
  4157                           
  4158                           ;main.c: 201:             PWM3_LoadDutyValue(max_dutyValue);
  4159  06F8  0020               	movlb	0	; select bank0
  4160  06F9  0859               	movf	controle@max_dutyValue+1,w
  4161  06FA  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4162  06FB  0858               	movf	controle@max_dutyValue,w
  4163  06FC  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4164  06FD  3189  2192  3186   	fcall	_PWM3_LoadDutyValue
  4165                           
  4166                           ;main.c: 202:         }else{
  4167  0700  2F09               	goto	l3867
  4168  0701                     l3865:	
  4169                           
  4170                           ;main.c: 203:             PWM3_LoadDutyValue(dutyValue);
  4171  0701  0020               	movlb	0	; select bank0
  4172  0702  085B               	movf	controle@dutyValue+1,w
  4173  0703  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4174  0704  085A               	movf	controle@dutyValue,w
  4175  0705  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4176  0706  3189  2192  3186   	fcall	_PWM3_LoadDutyValue
  4177  0709                     l3867:	
  4178                           
  4179                           ;main.c: 206:     }
  4180  0709  3001               	movlw	1
  4181  070A  0020               	movlb	0	; select bank0
  4182  070B  07DC               	addwf	controle@count,f
  4183  070C  3000               	movlw	0
  4184  070D  3DDD               	addwfc	controle@count+1,f
  4185  070E                     l3869:	
  4186  070E  085D               	movf	controle@count+1,w
  4187  070F  3A80               	xorlw	128
  4188  0710  00CC               	movwf	??_controle
  4189  0711  3080               	movlw	128
  4190  0712  024C               	subwf	??_controle,w
  4191  0713  1D03               	skipz
  4192  0714  2F17               	goto	u4035
  4193  0715  3014               	movlw	20
  4194  0716  025C               	subwf	controle@count,w
  4195  0717                     u4035:	
  4196  0717  1C03               	skipc
  4197  0718  2F1A               	goto	u4031
  4198  0719  2F1B               	goto	u4030
  4199  071A                     u4031:	
  4200  071A  2EE5               	goto	l3861
  4201  071B                     u4030:	
  4202  071B                     l3871:	
  4203                           
  4204                           ;main.c: 207:     count = 0;
  4205  071B  0020               	movlb	0	; select bank0
  4206  071C  01DC               	clrf	controle@count
  4207  071D  01DD               	clrf	controle@count+1
  4208                           
  4209                           ;main.c: 208:     for(count = 0; count < route ; count++){
  4210  071E  01DC               	clrf	controle@count
  4211  071F  01DD               	clrf	controle@count+1
  4212  0720  2F2E               	goto	l3877
  4213  0721                     l3873:	
  4214                           
  4215                           ;main.c: 210:         PWM3_LoadDutyValue(max_dutyValue);
  4216  0721  0020               	movlb	0	; select bank0
  4217  0722  0859               	movf	controle@max_dutyValue+1,w
  4218  0723  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4219  0724  0858               	movf	controle@max_dutyValue,w
  4220  0725  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4221  0726  3189  2192  3186   	fcall	_PWM3_LoadDutyValue
  4222  0729                     l3875:	
  4223                           
  4224                           ;main.c: 211:     }
  4225  0729  3001               	movlw	1
  4226  072A  0020               	movlb	0	; select bank0
  4227  072B  07DC               	addwf	controle@count,f
  4228  072C  3000               	movlw	0
  4229  072D  3DDD               	addwfc	controle@count+1,f
  4230  072E                     l3877:	
  4231  072E  085D               	movf	controle@count+1,w
  4232  072F  3A80               	xorlw	128
  4233  0730  00CC               	movwf	??_controle
  4234  0731  0853               	movf	controle@route+1,w
  4235  0732  3A80               	xorlw	128
  4236  0733  024C               	subwf	??_controle,w
  4237  0734  1D03               	skipz
  4238  0735  2F38               	goto	u4045
  4239  0736  0852               	movf	controle@route,w
  4240  0737  025C               	subwf	controle@count,w
  4241  0738                     u4045:	
  4242  0738  1C03               	skipc
  4243  0739  2F3B               	goto	u4041
  4244  073A  2F3C               	goto	u4040
  4245  073B                     u4041:	
  4246  073B  2F21               	goto	l3873
  4247  073C                     u4040:	
  4248  073C                     l3879:	
  4249                           
  4250                           ;main.c: 213:     count = 0;
  4251  073C  0020               	movlb	0	; select bank0
  4252  073D  01DC               	clrf	controle@count
  4253  073E  01DD               	clrf	controle@count+1
  4254                           
  4255                           ;main.c: 214:     for(count = 0; count < 20; count++){
  4256  073F  01DC               	clrf	controle@count
  4257  0740  01DD               	clrf	controle@count+1
  4258  0741                     l3885:	
  4259                           
  4260                           ;main.c: 216:         dutyValue-=a;
  4261  0741  0020               	movlb	0	; select bank0
  4262  0742  0854               	movf	controle@a,w
  4263  0743  02DA               	subwf	controle@dutyValue,f
  4264  0744  0855               	movf	controle@a+1,w
  4265  0745  3BDB               	subwfb	controle@dutyValue+1,f
  4266                           
  4267                           ;main.c: 217:         if(dutyValue < min_dutyValue){
  4268  0746  085B               	movf	controle@dutyValue+1,w
  4269  0747  3A80               	xorlw	128
  4270  0748  00CC               	movwf	??_controle
  4271  0749  0857               	movf	controle@min_dutyValue+1,w
  4272  074A  3A80               	xorlw	128
  4273  074B  024C               	subwf	??_controle,w
  4274  074C  1D03               	skipz
  4275  074D  2F50               	goto	u4055
  4276  074E  0856               	movf	controle@min_dutyValue,w
  4277  074F  025A               	subwf	controle@dutyValue,w
  4278  0750                     u4055:	
  4279  0750  1803               	skipnc
  4280  0751  2F53               	goto	u4051
  4281  0752  2F54               	goto	u4050
  4282  0753                     u4051:	
  4283  0753  2F5D               	goto	l3889
  4284  0754                     u4050:	
  4285  0754                     l3887:	
  4286                           
  4287                           ;main.c: 218:             PWM3_LoadDutyValue(min_dutyValue);
  4288  0754  0020               	movlb	0	; select bank0
  4289  0755  0857               	movf	controle@min_dutyValue+1,w
  4290  0756  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4291  0757  0856               	movf	controle@min_dutyValue,w
  4292  0758  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4293  0759  3189  2192  3186   	fcall	_PWM3_LoadDutyValue
  4294                           
  4295                           ;main.c: 219:         }else{
  4296  075C  2F65               	goto	l3891
  4297  075D                     l3889:	
  4298                           
  4299                           ;main.c: 220:         PWM3_LoadDutyValue(dutyValue);
  4300  075D  0020               	movlb	0	; select bank0
  4301  075E  085B               	movf	controle@dutyValue+1,w
  4302  075F  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4303  0760  085A               	movf	controle@dutyValue,w
  4304  0761  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4305  0762  3189  2192  3186   	fcall	_PWM3_LoadDutyValue
  4306  0765                     l3891:	
  4307                           
  4308                           ;main.c: 222:     }
  4309  0765  3001               	movlw	1
  4310  0766  0020               	movlb	0	; select bank0
  4311  0767  07DC               	addwf	controle@count,f
  4312  0768  3000               	movlw	0
  4313  0769  3DDD               	addwfc	controle@count+1,f
  4314  076A                     l3893:	
  4315  076A  085D               	movf	controle@count+1,w
  4316  076B  3A80               	xorlw	128
  4317  076C  00CC               	movwf	??_controle
  4318  076D  3080               	movlw	128
  4319  076E  024C               	subwf	??_controle,w
  4320  076F  1D03               	skipz
  4321  0770  2F73               	goto	u4065
  4322  0771  3014               	movlw	20
  4323  0772  025C               	subwf	controle@count,w
  4324  0773                     u4065:	
  4325  0773  1C03               	skipc
  4326  0774  2F76               	goto	u4061
  4327  0775  2F77               	goto	u4060
  4328  0776                     u4061:	
  4329  0776  2F41               	goto	l3885
  4330  0777                     u4060:	
  4331  0777                     l3895:	
  4332                           
  4333                           ;main.c: 223:     update();
  4334  0777  3182  22AA  3186   	fcall	_update
  4335  077A                     l3897:	
  4336                           
  4337                           ;main.c: 225:     PWM3_LoadDutyValue(0);
  4338  077A  3000               	movlw	0
  4339  077B  0020               	movlb	0	; select bank0
  4340  077C  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4341  077D  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4342  077E  3189  2192  3186   	fcall	_PWM3_LoadDutyValue
  4343  0781                     l624:	
  4344  0781  0008               	return
  4345  0782                     __end_of_controle:	
  4346                           
  4347                           	psect	text6
  4348  02AA                     __ptext6:	
  4349 ;; *************** function _update *****************
  4350 ;; Defined at:
  4351 ;;		line 383 in file "main.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;		None
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  i               2   13[BANK0 ] int 
  4356 ;;  i               2   11[BANK0 ] int 
  4357 ;;  i               2    9[BANK0 ] int 
  4358 ;;  aux             1    8[BANK0 ] unsigned char 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  1    wreg      void 
  4361 ;; Registers used:
  4362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4368 ;;      Params:         0       0       0       0       0       0
  4369 ;;      Locals:         0       7       0       0       0       0
  4370 ;;      Temps:          0       3       0       0       0       0
  4371 ;;      Totals:         0      10       0       0       0       0
  4372 ;;Total ram usage:       10 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; Hardware stack levels required when called:    5
  4375 ;; This function calls:
  4376 ;;		_EUSART_Read
  4377 ;;		_EUSART_is_rx_ready
  4378 ;;		_max_down
  4379 ;;		_min_up
  4380 ;; This function is called by:
  4381 ;;		_controle
  4382 ;;		_gerenciamento
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           
  4387                           ;psect for function _update
  4388  02AA                     _update:	
  4389  02AA                     l3693:	
  4390                           ;incstack = 0
  4391                           ; Regs used in _update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4392                           
  4393                           
  4394                           ;main.c: 385:     uint8_t aux;;main.c: 386:     if(EUSART_is_rx_ready())
  4395  02AA  3188  201E  3182   	fcall	_EUSART_is_rx_ready
  4396  02AD  3A00               	xorlw	0
  4397  02AE  1903               	skipnz
  4398  02AF  2AB1               	goto	u3761
  4399  02B0  2AB2               	goto	u3760
  4400  02B1                     u3761:	
  4401  02B1  2AD3               	goto	l3701
  4402  02B2                     u3760:	
  4403  02B2                     l3695:	
  4404                           
  4405                           ;main.c: 387:         {;main.c: 388:             aux= EUSART_Read();
  4406  02B2  3189  2126  3182   	fcall	_EUSART_Read
  4407  02B5  0020               	movlb	0	; select bank0
  4408  02B6  00A5               	movwf	??_update
  4409  02B7  0825               	movf	??_update,w
  4410  02B8  00A8               	movwf	update@aux
  4411  02B9                     l3697:	
  4412                           
  4413                           ;main.c: 389:             and_origem = (int)((aux & 0x0C)>>2);
  4414  02B9  0828               	movf	update@aux,w
  4415  02BA  00A5               	movwf	??_update
  4416  02BB  3002               	movlw	2
  4417  02BC                     u3775:	
  4418  02BC  36A5               	lsrf	??_update,f
  4419  02BD  0B89               	decfsz	9,f
  4420  02BE  2ABC               	goto	u3775
  4421  02BF  0825               	movf	??_update,w
  4422  02C0  3903               	andlw	3
  4423  02C1  00A6               	movwf	??_update+1
  4424  02C2  01A7               	clrf	??_update+2
  4425  02C3  0826               	movf	??_update+1,w
  4426  02C4  0021               	movlb	1	; select bank1
  4427  02C5  00D7               	movwf	_and_origem^(0+128)
  4428  02C6  0020               	movlb	0	; select bank0
  4429  02C7  0827               	movf	??_update+2,w
  4430  02C8  0021               	movlb	1	; select bank1
  4431  02C9  00D8               	movwf	(_and_origem+1)^(0+128)
  4432  02CA                     l3699:	
  4433                           
  4434                           ;main.c: 391:             and_dst = (int)(aux & 0x02);
  4435  02CA  0020               	movlb	0	; select bank0
  4436  02CB  0828               	movf	update@aux,w
  4437  02CC  3902               	andlw	2
  4438  02CD  00A5               	movwf	??_update
  4439  02CE  01A6               	clrf	??_update+1
  4440  02CF  0825               	movf	??_update,w
  4441  02D0  00F4               	movwf	_and_dst
  4442  02D1  0826               	movf	??_update+1,w
  4443  02D2  00F5               	movwf	_and_dst+1
  4444  02D3                     l3701:	
  4445                           
  4446                           ;main.c: 395:     if(and_dst>and_origem)
  4447  02D3  0021               	movlb	1	; select bank1
  4448  02D4  0858               	movf	(_and_origem+1)^(0+128),w
  4449  02D5  3A80               	xorlw	128
  4450  02D6  0020               	movlb	0	; select bank0
  4451  02D7  00A5               	movwf	??_update
  4452  02D8  0875               	movf	_and_dst+1,w
  4453  02D9  3A80               	xorlw	128
  4454  02DA  0225               	subwf	??_update,w
  4455  02DB  1D03               	skipz
  4456  02DC  2AE0               	goto	u3785
  4457  02DD  0874               	movf	_and_dst,w
  4458  02DE  0021               	movlb	1	; select bank1
  4459  02DF  0257               	subwf	_and_origem^(0+128),w
  4460  02E0                     u3785:	
  4461  02E0  1803               	skipnc
  4462  02E1  2AE3               	goto	u3781
  4463  02E2  2AE4               	goto	u3780
  4464  02E3                     u3781:	
  4465  02E3  2B5D               	goto	l3745
  4466  02E4                     u3780:	
  4467  02E4                     l3703:	
  4468  02E4                     l3705:	
  4469                           
  4470                           ;main.c: 398:       for(i=6;i>=0;i--)
  4471  02E4  3006               	movlw	6
  4472  02E5  0020               	movlb	0	; select bank0
  4473  02E6  00AB               	movwf	update@i
  4474  02E7  3000               	movlw	0
  4475  02E8  00AC               	movwf	update@i+1
  4476  02E9                     l3711:	
  4477                           
  4478                           ;main.c: 399:       {;main.c: 400:           if(i==0){
  4479  02E9  082B               	movf	update@i,w
  4480  02EA  042C               	iorwf	update@i+1,w
  4481  02EB  1D03               	btfss	3,2
  4482  02EC  2AEE               	goto	u3791
  4483  02ED  2AEF               	goto	u3790
  4484  02EE                     u3791:	
  4485  02EE  2AFA               	goto	l3717
  4486  02EF                     u3790:	
  4487  02EF                     l3713:	
  4488                           
  4489                           ;main.c: 401:               fila_up[1] = fila_up[0];
  4490  02EF  0021               	movlb	1	; select bank1
  4491  02F0  0831               	movf	(_fila_up+1)^(0+128),w
  4492  02F1  00B3               	movwf	((_fila_up+1)^(0+128)+2)
  4493  02F2  0830               	movf	_fila_up^(0+128),w
  4494  02F3  00B2               	movwf	(_fila_up^(0+128)+2)
  4495  02F4                     l3715:	
  4496                           
  4497                           ;main.c: 402:               fila_up[0] = and_dst+1;
  4498  02F4  0874               	movf	_and_dst,w
  4499  02F5  3E01               	addlw	1
  4500  02F6  00B0               	movwf	_fila_up^(0+128)
  4501  02F7  3000               	movlw	0
  4502  02F8  3D75               	addwfc	_and_dst+1,w
  4503  02F9  00B1               	movwf	(_fila_up+1)^(0+128)
  4504  02FA                     l3717:	
  4505                           
  4506                           ;main.c: 405:           if(i>0){
  4507  02FA  0020               	movlb	0	; select bank0
  4508  02FB  082C               	movf	update@i+1,w
  4509  02FC  3A80               	xorlw	128
  4510  02FD  00A5               	movwf	??_update
  4511  02FE  3080               	movlw	128
  4512  02FF  0225               	subwf	??_update,w
  4513  0300  1D03               	skipz
  4514  0301  2B04               	goto	u3805
  4515  0302  3001               	movlw	1
  4516  0303  022B               	subwf	update@i,w
  4517  0304                     u3805:	
  4518  0304  1C03               	skipc
  4519  0305  2B07               	goto	u3801
  4520  0306  2B08               	goto	u3800
  4521  0307                     u3801:	
  4522  0307  2B15               	goto	l3721
  4523  0308                     u3800:	
  4524  0308                     l3719:	
  4525                           
  4526                           ;main.c: 406:               fila_up[i+1] = fila_up[i];
  4527  0308  0020               	movlb	0	; select bank0
  4528  0309  352B               	lslf	update@i,w
  4529  030A  3EB0               	addlw	(low (_fila_up| 0))& (0+255)
  4530  030B  0086               	movwf	6
  4531  030C  0187               	clrf	7
  4532  030D  352B               	lslf	update@i,w
  4533  030E  3EB2               	addlw	(low ((_fila_up| 0+2)))& (0+255)
  4534  030F  0084               	movwf	4
  4535  0310  0185               	clrf	5
  4536  0311  3F40               	moviw [0]fsr1
  4537  0312  3F80               	movwi [0]fsr0
  4538  0313  3F41               	moviw [1]fsr1
  4539  0314  3F81               	movwi [1]fsr0
  4540  0315                     l3721:	
  4541                           
  4542                           ;main.c: 408:       }
  4543  0315  30FF               	movlw	255
  4544  0316  0020               	movlb	0	; select bank0
  4545  0317  07AB               	addwf	update@i,f
  4546  0318  30FF               	movlw	255
  4547  0319  3DAC               	addwfc	update@i+1,f
  4548  031A                     l3723:	
  4549  031A  1FAC               	btfss	update@i+1,7
  4550  031B  2B1D               	goto	u3811
  4551  031C  2B1E               	goto	u3810
  4552  031D                     u3811:	
  4553  031D  2AE9               	goto	l3711
  4554  031E                     u3810:	
  4555  031E                     l3725:	
  4556                           
  4557                           ;main.c: 410:       for(i=6;i>=0;i--)
  4558  031E  3006               	movlw	6
  4559  031F  00AB               	movwf	update@i
  4560  0320  3000               	movlw	0
  4561  0321  00AC               	movwf	update@i+1
  4562  0322                     l3731:	
  4563                           
  4564                           ;main.c: 411:       {;main.c: 412:           if(i==0){
  4565  0322  082B               	movf	update@i,w
  4566  0323  042C               	iorwf	update@i+1,w
  4567  0324  1D03               	btfss	3,2
  4568  0325  2B27               	goto	u3821
  4569  0326  2B28               	goto	u3820
  4570  0327                     u3821:	
  4571  0327  2B37               	goto	l3737
  4572  0328                     u3820:	
  4573  0328                     l3733:	
  4574                           
  4575                           ;main.c: 413:               origem_up[1] = origem_up[0];
  4576  0328  0022               	movlb	2	; select bank2
  4577  0329  0821               	movf	(_origem_up+1)^(0+256),w
  4578  032A  00A3               	movwf	((_origem_up+1)^(0+256)+2)
  4579  032B  0820               	movf	_origem_up^(0+256),w
  4580  032C  00A2               	movwf	(_origem_up^(0+256)+2)
  4581  032D                     l3735:	
  4582                           
  4583                           ;main.c: 414:               origem_up[0] = and_origem+1;
  4584  032D  0021               	movlb	1	; select bank1
  4585  032E  0857               	movf	_and_origem^(0+128),w
  4586  032F  3E01               	addlw	1
  4587  0330  0022               	movlb	2	; select bank2
  4588  0331  00A0               	movwf	_origem_up^(0+256)
  4589  0332  3000               	movlw	0
  4590  0333  0021               	movlb	1	; select bank1
  4591  0334  3D58               	addwfc	(_and_origem+1)^(0+128),w
  4592  0335  0022               	movlb	2	; select bank2
  4593  0336  00A1               	movwf	(_origem_up+1)^(0+256)
  4594  0337                     l3737:	
  4595                           
  4596                           ;main.c: 417:           if(i>0){
  4597  0337  0020               	movlb	0	; select bank0
  4598  0338  082C               	movf	update@i+1,w
  4599  0339  3A80               	xorlw	128
  4600  033A  00A5               	movwf	??_update
  4601  033B  3080               	movlw	128
  4602  033C  0225               	subwf	??_update,w
  4603  033D  1D03               	skipz
  4604  033E  2B41               	goto	u3835
  4605  033F  3001               	movlw	1
  4606  0340  022B               	subwf	update@i,w
  4607  0341                     u3835:	
  4608  0341  1C03               	skipc
  4609  0342  2B44               	goto	u3831
  4610  0343  2B45               	goto	u3830
  4611  0344                     u3831:	
  4612  0344  2B54               	goto	l3741
  4613  0345                     u3830:	
  4614  0345                     l3739:	
  4615                           
  4616                           ;main.c: 418:               origem_up[i+1] = origem_up[i];
  4617  0345  0020               	movlb	0	; select bank0
  4618  0346  352B               	lslf	update@i,w
  4619  0347  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  4620  0348  0086               	movwf	6
  4621  0349  3001               	movlw	1	; select bank2/3
  4622  034A  0087               	movwf	7
  4623  034B  352B               	lslf	update@i,w
  4624  034C  3E22               	addlw	(low ((_origem_up| (0+256)+2)))& (0+255)
  4625  034D  0084               	movwf	4
  4626  034E  3001               	movlw	1	; select bank2/3
  4627  034F  0085               	movwf	5
  4628  0350  3F40               	moviw [0]fsr1
  4629  0351  3F80               	movwi [0]fsr0
  4630  0352  3F41               	moviw [1]fsr1
  4631  0353  3F81               	movwi [1]fsr0
  4632  0354                     l3741:	
  4633                           
  4634                           ;main.c: 420:       }
  4635  0354  30FF               	movlw	255
  4636  0355  0020               	movlb	0	; select bank0
  4637  0356  07AB               	addwf	update@i,f
  4638  0357  30FF               	movlw	255
  4639  0358  3DAC               	addwfc	update@i+1,f
  4640  0359                     l3743:	
  4641  0359  1FAC               	btfss	update@i+1,7
  4642  035A  2B5C               	goto	u3841
  4643  035B  2B5D               	goto	u3840
  4644  035C                     u3841:	
  4645  035C  2B22               	goto	l3731
  4646  035D                     u3840:	
  4647  035D                     l3745:	
  4648                           
  4649                           ;main.c: 423:     int i;;main.c: 424:     max_fila_up = fila_up[0];
  4650  035D  0021               	movlb	1	; select bank1
  4651  035E  0831               	movf	(_fila_up+1)^(0+128),w
  4652  035F  00CC               	movwf	(_max_fila_up+1)^(0+128)
  4653  0360  0830               	movf	_fila_up^(0+128),w
  4654  0361  00CB               	movwf	_max_fila_up^(0+128)
  4655                           
  4656                           ;main.c: 425:     for(i=1;i<=7;i++)
  4657  0362  3001               	movlw	1
  4658  0363  0020               	movlb	0	; select bank0
  4659  0364  00A9               	movwf	update@i_1261
  4660  0365  3000               	movlw	0
  4661  0366  00AA               	movwf	update@i_1261+1
  4662  0367                     l3749:	
  4663                           
  4664                           ;main.c: 426:     {;main.c: 427:             if(fila_up[i]>max_fila_up)
  4665  0367  0020               	movlb	0	; select bank0
  4666  0368  3529               	lslf	update@i_1261,w
  4667  0369  3EB0               	addlw	(low (_fila_up| 0))& (0+255)
  4668  036A  0086               	movwf	6
  4669  036B  0187               	clrf	7
  4670  036C  3F40               	moviw [0]fsr1
  4671  036D  00A5               	movwf	??_update
  4672  036E  3F41               	moviw [1]fsr1
  4673  036F  00A6               	movwf	??_update+1
  4674  0370  0021               	movlb	1	; select bank1
  4675  0371  084C               	movf	(_max_fila_up+1)^(0+128),w
  4676  0372  3A80               	xorlw	128
  4677  0373  0020               	movlb	0	; select bank0
  4678  0374  00A7               	movwf	??_update+2
  4679  0375  0826               	movf	??_update+1,w
  4680  0376  3A80               	xorlw	128
  4681  0377  0227               	subwf	??_update+2,w
  4682  0378  1D03               	skipz
  4683  0379  2B7D               	goto	u3855
  4684  037A  0825               	movf	??_update,w
  4685  037B  0021               	movlb	1	; select bank1
  4686  037C  024B               	subwf	_max_fila_up^(0+128),w
  4687  037D                     u3855:	
  4688  037D  1803               	skipnc
  4689  037E  2B80               	goto	u3851
  4690  037F  2B81               	goto	u3850
  4691  0380                     u3851:	
  4692  0380  2B8B               	goto	l3753
  4693  0381                     u3850:	
  4694  0381                     l3751:	
  4695                           
  4696                           ;main.c: 428:             {;main.c: 429:                 max_fila_up = fila_up[i];
  4697  0381  0020               	movlb	0	; select bank0
  4698  0382  3529               	lslf	update@i_1261,w
  4699  0383  3EB0               	addlw	(low (_fila_up| 0))& (0+255)
  4700  0384  0086               	movwf	6
  4701  0385  0187               	clrf	7
  4702  0386  3F40               	moviw [0]fsr1
  4703  0387  0021               	movlb	1	; select bank1
  4704  0388  00CB               	movwf	_max_fila_up^(0+128)
  4705  0389  3F41               	moviw [1]fsr1
  4706  038A  00CC               	movwf	(_max_fila_up+1)^(0+128)
  4707  038B                     l3753:	
  4708                           
  4709                           ;main.c: 431:     }
  4710  038B  3001               	movlw	1
  4711  038C  0020               	movlb	0	; select bank0
  4712  038D  07A9               	addwf	update@i_1261,f
  4713  038E  3000               	movlw	0
  4714  038F  3DAA               	addwfc	update@i_1261+1,f
  4715  0390                     l3755:	
  4716  0390  082A               	movf	update@i_1261+1,w
  4717  0391  3A80               	xorlw	128
  4718  0392  00A5               	movwf	??_update
  4719  0393  3080               	movlw	128
  4720  0394  0225               	subwf	??_update,w
  4721  0395  1D03               	skipz
  4722  0396  2B99               	goto	u3865
  4723  0397  3008               	movlw	8
  4724  0398  0229               	subwf	update@i_1261,w
  4725  0399                     u3865:	
  4726  0399  1C03               	skipc
  4727  039A  2B9C               	goto	u3861
  4728  039B  2B9D               	goto	u3860
  4729  039C                     u3861:	
  4730  039C  2B67               	goto	l3749
  4731  039D                     u3860:	
  4732  039D                     l3757:	
  4733                           
  4734                           ;main.c: 432:     if(max_fila_up==0)
  4735  039D  0021               	movlb	1	; select bank1
  4736  039E  084B               	movf	_max_fila_up^(0+128),w
  4737  039F  044C               	iorwf	(_max_fila_up+1)^(0+128),w
  4738  03A0  1D03               	btfss	3,2
  4739  03A1  2BA3               	goto	u3871
  4740  03A2  2BA4               	goto	u3870
  4741  03A3                     u3871:	
  4742  03A3  2BA8               	goto	l697
  4743  03A4                     u3870:	
  4744  03A4                     l3759:	
  4745                           
  4746                           ;main.c: 433:     {;main.c: 434:         max_fila_up=1;
  4747  03A4  3001               	movlw	1
  4748  03A5  00CB               	movwf	_max_fila_up^(0+128)
  4749  03A6  3000               	movlw	0
  4750  03A7  00CC               	movwf	(_max_fila_up^(0+128)+1)
  4751  03A8                     l697:	
  4752                           ;main.c: 435:     }
  4753                           
  4754                           
  4755                           ;main.c: 437:     if(and_dst<and_origem)
  4756  03A8  0875               	movf	_and_dst+1,w
  4757  03A9  3A80               	xorlw	128
  4758  03AA  0020               	movlb	0	; select bank0
  4759  03AB  00A5               	movwf	??_update
  4760  03AC  0021               	movlb	1	; select bank1
  4761  03AD  0858               	movf	(_and_origem+1)^(0+128),w
  4762  03AE  3A80               	xorlw	128
  4763  03AF  0020               	movlb	0	; select bank0
  4764  03B0  0225               	subwf	??_update,w
  4765  03B1  1D03               	skipz
  4766  03B2  2BB6               	goto	u3885
  4767  03B3  0021               	movlb	1	; select bank1
  4768  03B4  0857               	movf	_and_origem^(0+128),w
  4769  03B5  0274               	subwf	_and_dst,w
  4770  03B6                     u3885:	
  4771  03B6  1803               	skipnc
  4772  03B7  2BB9               	goto	u3881
  4773  03B8  2BBA               	goto	u3880
  4774  03B9                     u3881:	
  4775  03B9  2C2F               	goto	l3803
  4776  03BA                     u3880:	
  4777  03BA                     l3761:	
  4778  03BA                     l3763:	
  4779                           
  4780                           ;main.c: 440:       for(i=6;i>=0;i--)
  4781  03BA  3006               	movlw	6
  4782  03BB  0020               	movlb	0	; select bank0
  4783  03BC  00AD               	movwf	update@i_1262
  4784  03BD  3000               	movlw	0
  4785  03BE  00AE               	movwf	update@i_1262+1
  4786  03BF                     l3769:	
  4787                           
  4788                           ;main.c: 441:       {;main.c: 442:           if(i==0){
  4789  03BF  082D               	movf	update@i_1262,w
  4790  03C0  042E               	iorwf	update@i_1262+1,w
  4791  03C1  1D03               	btfss	3,2
  4792  03C2  2BC4               	goto	u3891
  4793  03C3  2BC5               	goto	u3890
  4794  03C4                     u3891:	
  4795  03C4  2BD0               	goto	l3775
  4796  03C5                     u3890:	
  4797  03C5                     l3771:	
  4798                           
  4799                           ;main.c: 443:               fila_down[1] = fila_down[0];
  4800  03C5  0022               	movlb	2	; select bank2
  4801  03C6  0831               	movf	(_fila_down+1)^(0+256),w
  4802  03C7  00B3               	movwf	((_fila_down+1)^(0+256)+2)
  4803  03C8  0830               	movf	_fila_down^(0+256),w
  4804  03C9  00B2               	movwf	(_fila_down^(0+256)+2)
  4805  03CA                     l3773:	
  4806                           
  4807                           ;main.c: 444:               fila_down[0] = and_dst+1;
  4808  03CA  0874               	movf	_and_dst,w
  4809  03CB  3E01               	addlw	1
  4810  03CC  00B0               	movwf	_fila_down^(0+256)
  4811  03CD  3000               	movlw	0
  4812  03CE  3D75               	addwfc	_and_dst+1,w
  4813  03CF  00B1               	movwf	(_fila_down+1)^(0+256)
  4814  03D0                     l3775:	
  4815                           
  4816                           ;main.c: 447:           if(i>0){
  4817  03D0  0020               	movlb	0	; select bank0
  4818  03D1  082E               	movf	update@i_1262+1,w
  4819  03D2  3A80               	xorlw	128
  4820  03D3  00A5               	movwf	??_update
  4821  03D4  3080               	movlw	128
  4822  03D5  0225               	subwf	??_update,w
  4823  03D6  1D03               	skipz
  4824  03D7  2BDA               	goto	u3905
  4825  03D8  3001               	movlw	1
  4826  03D9  022D               	subwf	update@i_1262,w
  4827  03DA                     u3905:	
  4828  03DA  1C03               	skipc
  4829  03DB  2BDD               	goto	u3901
  4830  03DC  2BDE               	goto	u3900
  4831  03DD                     u3901:	
  4832  03DD  2BED               	goto	l3779
  4833  03DE                     u3900:	
  4834  03DE                     l3777:	
  4835                           
  4836                           ;main.c: 448:               fila_down[i+1] = fila_down[i];
  4837  03DE  0020               	movlb	0	; select bank0
  4838  03DF  352D               	lslf	update@i_1262,w
  4839  03E0  3E30               	addlw	(low (_fila_down| (0+256)))& (0+255)
  4840  03E1  0086               	movwf	6
  4841  03E2  3001               	movlw	1	; select bank2/3
  4842  03E3  0087               	movwf	7
  4843  03E4  352D               	lslf	update@i_1262,w
  4844  03E5  3E32               	addlw	(low ((_fila_down| (0+256)+2)))& (0+255)
  4845  03E6  0084               	movwf	4
  4846  03E7  3001               	movlw	1	; select bank2/3
  4847  03E8  0085               	movwf	5
  4848  03E9  3F40               	moviw [0]fsr1
  4849  03EA  3F80               	movwi [0]fsr0
  4850  03EB  3F41               	moviw [1]fsr1
  4851  03EC  3F81               	movwi [1]fsr0
  4852  03ED                     l3779:	
  4853                           
  4854                           ;main.c: 450:       }
  4855  03ED  30FF               	movlw	255
  4856  03EE  0020               	movlb	0	; select bank0
  4857  03EF  07AD               	addwf	update@i_1262,f
  4858  03F0  30FF               	movlw	255
  4859  03F1  3DAE               	addwfc	update@i_1262+1,f
  4860  03F2                     l3781:	
  4861  03F2  1FAE               	btfss	update@i_1262+1,7
  4862  03F3  2BF5               	goto	u3911
  4863  03F4  2BF6               	goto	u3910
  4864  03F5                     u3911:	
  4865  03F5  2BBF               	goto	l3769
  4866  03F6                     u3910:	
  4867  03F6                     l3783:	
  4868                           
  4869                           ;main.c: 452:       for(i=6;i>=0;i--)
  4870  03F6  3006               	movlw	6
  4871  03F7  00AD               	movwf	update@i_1262
  4872  03F8  3000               	movlw	0
  4873  03F9  00AE               	movwf	update@i_1262+1
  4874  03FA                     l3789:	
  4875                           
  4876                           ;main.c: 453:       {;main.c: 454:           if(i==0){
  4877  03FA  082D               	movf	update@i_1262,w
  4878  03FB  042E               	iorwf	update@i_1262+1,w
  4879  03FC  1D03               	btfss	3,2
  4880  03FD  2BFF               	goto	u3921
  4881  03FE  2C00               	goto	u3920
  4882  03FF                     u3921:	
  4883  03FF  2C0B               	goto	l3795
  4884  0400                     u3920:	
  4885  0400                     l3791:	
  4886                           
  4887                           ;main.c: 455:               origem_down[1] = origem_down[0];
  4888  0400  0021               	movlb	1	; select bank1
  4889  0401  0821               	movf	(_origem_down+1)^(0+128),w
  4890  0402  00A3               	movwf	((_origem_down+1)^(0+128)+2)
  4891  0403  0820               	movf	_origem_down^(0+128),w
  4892  0404  00A2               	movwf	(_origem_down^(0+128)+2)
  4893  0405                     l3793:	
  4894                           
  4895                           ;main.c: 456:               origem_down[0] = and_origem+1;
  4896  0405  0857               	movf	_and_origem^(0+128),w
  4897  0406  3E01               	addlw	1
  4898  0407  00A0               	movwf	_origem_down^(0+128)
  4899  0408  3000               	movlw	0
  4900  0409  3D58               	addwfc	(_and_origem+1)^(0+128),w
  4901  040A  00A1               	movwf	(_origem_down+1)^(0+128)
  4902  040B                     l3795:	
  4903                           
  4904                           ;main.c: 458:           if(i>0){
  4905  040B  0020               	movlb	0	; select bank0
  4906  040C  082E               	movf	update@i_1262+1,w
  4907  040D  3A80               	xorlw	128
  4908  040E  00A5               	movwf	??_update
  4909  040F  3080               	movlw	128
  4910  0410  0225               	subwf	??_update,w
  4911  0411  1D03               	skipz
  4912  0412  2C15               	goto	u3935
  4913  0413  3001               	movlw	1
  4914  0414  022D               	subwf	update@i_1262,w
  4915  0415                     u3935:	
  4916  0415  1C03               	skipc
  4917  0416  2C18               	goto	u3931
  4918  0417  2C19               	goto	u3930
  4919  0418                     u3931:	
  4920  0418  2C26               	goto	l3799
  4921  0419                     u3930:	
  4922  0419                     l3797:	
  4923                           
  4924                           ;main.c: 459:               origem_down[i+1] = origem_down[i];
  4925  0419  0020               	movlb	0	; select bank0
  4926  041A  352D               	lslf	update@i_1262,w
  4927  041B  3EA0               	addlw	(low (_origem_down| 0))& (0+255)
  4928  041C  0086               	movwf	6
  4929  041D  0187               	clrf	7
  4930  041E  352D               	lslf	update@i_1262,w
  4931  041F  3EA2               	addlw	(low ((_origem_down| 0+2)))& (0+255)
  4932  0420  0084               	movwf	4
  4933  0421  0185               	clrf	5
  4934  0422  3F40               	moviw [0]fsr1
  4935  0423  3F80               	movwi [0]fsr0
  4936  0424  3F41               	moviw [1]fsr1
  4937  0425  3F81               	movwi [1]fsr0
  4938  0426                     l3799:	
  4939                           
  4940                           ;main.c: 461:       }
  4941  0426  30FF               	movlw	255
  4942  0427  0020               	movlb	0	; select bank0
  4943  0428  07AD               	addwf	update@i_1262,f
  4944  0429  30FF               	movlw	255
  4945  042A  3DAE               	addwfc	update@i_1262+1,f
  4946  042B                     l3801:	
  4947  042B  1FAE               	btfss	update@i_1262+1,7
  4948  042C  2C2E               	goto	u3941
  4949  042D  2C2F               	goto	u3940
  4950  042E                     u3941:	
  4951  042E  2BFA               	goto	l3789
  4952  042F                     u3940:	
  4953  042F                     l3803:	
  4954                           
  4955                           ;main.c: 465:     min_fila_down = 4;
  4956  042F  3004               	movlw	4
  4957  0430  0021               	movlb	1	; select bank1
  4958  0431  00C9               	movwf	_min_fila_down^(0+128)
  4959  0432  3000               	movlw	0
  4960  0433  00CA               	movwf	(_min_fila_down^(0+128)+1)
  4961  0434                     l3805:	
  4962                           
  4963                           ;main.c: 466:     for(i=0;i<=7;i++)
  4964  0434  0020               	movlb	0	; select bank0
  4965  0435  01A9               	clrf	update@i_1261
  4966  0436  01AA               	clrf	update@i_1261+1
  4967  0437                     l3811:	
  4968                           
  4969                           ;main.c: 467:     {;main.c: 468:         if(fila_down[i]<min_fila_down&&fila_down[i]>0)
  4970  0437  0020               	movlb	0	; select bank0
  4971  0438  3529               	lslf	update@i_1261,w
  4972  0439  3E30               	addlw	(low (_fila_down| (0+256)))& (0+255)
  4973  043A  0086               	movwf	6
  4974  043B  3001               	movlw	1	; select bank2/3
  4975  043C  0087               	movwf	7
  4976  043D  3F40               	moviw [0]fsr1
  4977  043E  00A5               	movwf	??_update
  4978  043F  3F41               	moviw [1]fsr1
  4979  0440  00A6               	movwf	??_update+1
  4980  0441  0826               	movf	??_update+1,w
  4981  0442  3A80               	xorlw	128
  4982  0443  00A7               	movwf	??_update+2
  4983  0444  0021               	movlb	1	; select bank1
  4984  0445  084A               	movf	(_min_fila_down+1)^(0+128),w
  4985  0446  3A80               	xorlw	128
  4986  0447  0020               	movlb	0	; select bank0
  4987  0448  0227               	subwf	??_update+2,w
  4988  0449  1D03               	skipz
  4989  044A  2C4F               	goto	u3955
  4990  044B  0021               	movlb	1	; select bank1
  4991  044C  0849               	movf	_min_fila_down^(0+128),w
  4992  044D  0020               	movlb	0	; select bank0
  4993  044E  0225               	subwf	??_update,w
  4994  044F                     u3955:	
  4995  044F  1803               	skipnc
  4996  0450  2C52               	goto	u3951
  4997  0451  2C53               	goto	u3950
  4998  0452                     u3951:	
  4999  0452  2C75               	goto	l3817
  5000  0453                     u3950:	
  5001  0453                     l3813:	
  5002  0453  0020               	movlb	0	; select bank0
  5003  0454  3529               	lslf	update@i_1261,w
  5004  0455  3E30               	addlw	(low (_fila_down| (0+256)))& (0+255)
  5005  0456  0086               	movwf	6
  5006  0457  3001               	movlw	1	; select bank2/3
  5007  0458  0087               	movwf	7
  5008  0459  3F40               	moviw [0]fsr1
  5009  045A  00A5               	movwf	??_update
  5010  045B  3F41               	moviw [1]fsr1
  5011  045C  00A6               	movwf	??_update+1
  5012  045D  0826               	movf	??_update+1,w
  5013  045E  3A80               	xorlw	128
  5014  045F  00A7               	movwf	??_update+2
  5015  0460  3080               	movlw	128
  5016  0461  0227               	subwf	??_update+2,w
  5017  0462  1D03               	skipz
  5018  0463  2C66               	goto	u3965
  5019  0464  3001               	movlw	1
  5020  0465  0225               	subwf	??_update,w
  5021  0466                     u3965:	
  5022  0466  1C03               	skipc
  5023  0467  2C69               	goto	u3961
  5024  0468  2C6A               	goto	u3960
  5025  0469                     u3961:	
  5026  0469  2C75               	goto	l3817
  5027  046A                     u3960:	
  5028  046A                     l3815:	
  5029                           
  5030                           ;main.c: 469:         {;main.c: 470:             min_fila_down = fila_down[i];
  5031  046A  0020               	movlb	0	; select bank0
  5032  046B  3529               	lslf	update@i_1261,w
  5033  046C  3E30               	addlw	(low (_fila_down| (0+256)))& (0+255)
  5034  046D  0086               	movwf	6
  5035  046E  3001               	movlw	1	; select bank2/3
  5036  046F  0087               	movwf	7
  5037  0470  3F40               	moviw [0]fsr1
  5038  0471  0021               	movlb	1	; select bank1
  5039  0472  00C9               	movwf	_min_fila_down^(0+128)
  5040  0473  3F41               	moviw [1]fsr1
  5041  0474  00CA               	movwf	(_min_fila_down+1)^(0+128)
  5042  0475                     l3817:	
  5043                           
  5044                           ;main.c: 472:     }
  5045  0475  3001               	movlw	1
  5046  0476  0020               	movlb	0	; select bank0
  5047  0477  07A9               	addwf	update@i_1261,f
  5048  0478  3000               	movlw	0
  5049  0479  3DAA               	addwfc	update@i_1261+1,f
  5050  047A                     l3819:	
  5051  047A  082A               	movf	update@i_1261+1,w
  5052  047B  3A80               	xorlw	128
  5053  047C  00A5               	movwf	??_update
  5054  047D  3080               	movlw	128
  5055  047E  0225               	subwf	??_update,w
  5056  047F  1D03               	skipz
  5057  0480  2C83               	goto	u3975
  5058  0481  3008               	movlw	8
  5059  0482  0229               	subwf	update@i_1261,w
  5060  0483                     u3975:	
  5061  0483  1C03               	skipc
  5062  0484  2C86               	goto	u3971
  5063  0485  2C87               	goto	u3970
  5064  0486                     u3971:	
  5065  0486  2C37               	goto	l3811
  5066  0487                     u3970:	
  5067  0487                     l3821:	
  5068                           
  5069                           ;main.c: 474:     min_up();
  5070  0487  318E  2659  3182   	fcall	_min_up
  5071                           
  5072                           ;main.c: 475:     max_down();
  5073  048A  318D  25A8  3182   	fcall	_max_down
  5074  048D                     l710:	
  5075  048D  0008               	return
  5076  048E                     __end_of_update:	
  5077                           
  5078                           	psect	text7
  5079  0E59                     __ptext7:	
  5080 ;; *************** function _min_up *****************
  5081 ;; Defined at:
  5082 ;;		line 315 in file "main.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  i               2    3[BANK0 ] int 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5096 ;;      Params:         0       0       0       0       0       0
  5097 ;;      Locals:         0       2       0       0       0       0
  5098 ;;      Temps:          0       3       0       0       0       0
  5099 ;;      Totals:         0       5       0       0       0       0
  5100 ;;Total ram usage:        5 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    4
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_col_up
  5107 ;;		_update
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           
  5112                           ;psect for function _min_up
  5113  0E59                     _min_up:	
  5114  0E59                     l2563:	
  5115                           ;incstack = 0
  5116                           ; Regs used in _min_up: [wreg+fsr1l+fsr1h+status,2+status,0]
  5117                           
  5118                           
  5119                           ;main.c: 318:     min_origem_up = 4;
  5120  0E59  3004               	movlw	4
  5121  0E5A  00F0               	movwf	_min_origem_up
  5122  0E5B  3000               	movlw	0
  5123  0E5C  00F1               	movwf	_min_origem_up+1
  5124  0E5D                     l2565:	
  5125                           
  5126                           ;main.c: 319:     int i;;main.c: 320:     for(i=0;i<=7;i++)
  5127  0E5D  0020               	movlb	0	; select bank0
  5128  0E5E  01A3               	clrf	min_up@i
  5129  0E5F  01A4               	clrf	min_up@i+1
  5130  0E60                     l2571:	
  5131                           
  5132                           ;main.c: 321:     {;main.c: 322:         if(origem_up[i]<min_origem_up&&origem_up[i]>0)
  5133  0E60  0020               	movlb	0	; select bank0
  5134  0E61  3523               	lslf	min_up@i,w
  5135  0E62  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  5136  0E63  0086               	movwf	6
  5137  0E64  3001               	movlw	1	; select bank2/3
  5138  0E65  0087               	movwf	7
  5139  0E66  3F40               	moviw [0]fsr1
  5140  0E67  00A0               	movwf	??_min_up
  5141  0E68  3F41               	moviw [1]fsr1
  5142  0E69  00A1               	movwf	??_min_up+1
  5143  0E6A  0821               	movf	??_min_up+1,w
  5144  0E6B  3A80               	xorlw	128
  5145  0E6C  00A2               	movwf	??_min_up+2
  5146  0E6D  0871               	movf	_min_origem_up+1,w
  5147  0E6E  3A80               	xorlw	128
  5148  0E6F  0222               	subwf	??_min_up+2,w
  5149  0E70  1D03               	skipz
  5150  0E71  2E74               	goto	u1955
  5151  0E72  0870               	movf	_min_origem_up,w
  5152  0E73  0220               	subwf	??_min_up,w
  5153  0E74                     u1955:	
  5154  0E74  1803               	skipnc
  5155  0E75  2E77               	goto	u1951
  5156  0E76  2E78               	goto	u1950
  5157  0E77                     u1951:	
  5158  0E77  2E99               	goto	l663
  5159  0E78                     u1950:	
  5160  0E78                     l2573:	
  5161  0E78  0020               	movlb	0	; select bank0
  5162  0E79  3523               	lslf	min_up@i,w
  5163  0E7A  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  5164  0E7B  0086               	movwf	6
  5165  0E7C  3001               	movlw	1	; select bank2/3
  5166  0E7D  0087               	movwf	7
  5167  0E7E  3F40               	moviw [0]fsr1
  5168  0E7F  00A0               	movwf	??_min_up
  5169  0E80  3F41               	moviw [1]fsr1
  5170  0E81  00A1               	movwf	??_min_up+1
  5171  0E82  0821               	movf	??_min_up+1,w
  5172  0E83  3A80               	xorlw	128
  5173  0E84  00A2               	movwf	??_min_up+2
  5174  0E85  3080               	movlw	128
  5175  0E86  0222               	subwf	??_min_up+2,w
  5176  0E87  1D03               	skipz
  5177  0E88  2E8B               	goto	u1965
  5178  0E89  3001               	movlw	1
  5179  0E8A  0220               	subwf	??_min_up,w
  5180  0E8B                     u1965:	
  5181  0E8B  1C03               	skipc
  5182  0E8C  2E8E               	goto	u1961
  5183  0E8D  2E8F               	goto	u1960
  5184  0E8E                     u1961:	
  5185  0E8E  2E99               	goto	l663
  5186  0E8F                     u1960:	
  5187  0E8F                     l2575:	
  5188                           
  5189                           ;main.c: 323:         {;main.c: 324:             min_origem_up = origem_up[i];
  5190  0E8F  0020               	movlb	0	; select bank0
  5191  0E90  3523               	lslf	min_up@i,w
  5192  0E91  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  5193  0E92  0086               	movwf	6
  5194  0E93  3001               	movlw	1	; select bank2/3
  5195  0E94  0087               	movwf	7
  5196  0E95  3F40               	moviw [0]fsr1
  5197  0E96  00F0               	movwf	_min_origem_up
  5198  0E97  3F41               	moviw [1]fsr1
  5199  0E98  00F1               	movwf	_min_origem_up+1
  5200  0E99                     l663:	
  5201                           ;main.c: 325:         }
  5202                           
  5203                           
  5204                           ;main.c: 326:         if(fila_up[i]<min_origem_up&&fila_up[i]>0)
  5205  0E99  0020               	movlb	0	; select bank0
  5206  0E9A  3523               	lslf	min_up@i,w
  5207  0E9B  3EB0               	addlw	(low (_fila_up| 0))& (0+255)
  5208  0E9C  0086               	movwf	6
  5209  0E9D  0187               	clrf	7
  5210  0E9E  3F40               	moviw [0]fsr1
  5211  0E9F  00A0               	movwf	??_min_up
  5212  0EA0  3F41               	moviw [1]fsr1
  5213  0EA1  00A1               	movwf	??_min_up+1
  5214  0EA2  0821               	movf	??_min_up+1,w
  5215  0EA3  3A80               	xorlw	128
  5216  0EA4  00A2               	movwf	??_min_up+2
  5217  0EA5  0871               	movf	_min_origem_up+1,w
  5218  0EA6  3A80               	xorlw	128
  5219  0EA7  0222               	subwf	??_min_up+2,w
  5220  0EA8  1D03               	skipz
  5221  0EA9  2EAC               	goto	u1975
  5222  0EAA  0870               	movf	_min_origem_up,w
  5223  0EAB  0220               	subwf	??_min_up,w
  5224  0EAC                     u1975:	
  5225  0EAC  1803               	skipnc
  5226  0EAD  2EAF               	goto	u1971
  5227  0EAE  2EB0               	goto	u1970
  5228  0EAF                     u1971:	
  5229  0EAF  2ECF               	goto	l2581
  5230  0EB0                     u1970:	
  5231  0EB0                     l2577:	
  5232  0EB0  0020               	movlb	0	; select bank0
  5233  0EB1  3523               	lslf	min_up@i,w
  5234  0EB2  3EB0               	addlw	(low (_fila_up| 0))& (0+255)
  5235  0EB3  0086               	movwf	6
  5236  0EB4  0187               	clrf	7
  5237  0EB5  3F40               	moviw [0]fsr1
  5238  0EB6  00A0               	movwf	??_min_up
  5239  0EB7  3F41               	moviw [1]fsr1
  5240  0EB8  00A1               	movwf	??_min_up+1
  5241  0EB9  0821               	movf	??_min_up+1,w
  5242  0EBA  3A80               	xorlw	128
  5243  0EBB  00A2               	movwf	??_min_up+2
  5244  0EBC  3080               	movlw	128
  5245  0EBD  0222               	subwf	??_min_up+2,w
  5246  0EBE  1D03               	skipz
  5247  0EBF  2EC2               	goto	u1985
  5248  0EC0  3001               	movlw	1
  5249  0EC1  0220               	subwf	??_min_up,w
  5250  0EC2                     u1985:	
  5251  0EC2  1C03               	skipc
  5252  0EC3  2EC5               	goto	u1981
  5253  0EC4  2EC6               	goto	u1980
  5254  0EC5                     u1981:	
  5255  0EC5  2ECF               	goto	l2581
  5256  0EC6                     u1980:	
  5257  0EC6                     l2579:	
  5258                           
  5259                           ;main.c: 327:         {;main.c: 328:             min_origem_up = fila_up[i];
  5260  0EC6  0020               	movlb	0	; select bank0
  5261  0EC7  3523               	lslf	min_up@i,w
  5262  0EC8  3EB0               	addlw	(low (_fila_up| 0))& (0+255)
  5263  0EC9  0086               	movwf	6
  5264  0ECA  0187               	clrf	7
  5265  0ECB  3F40               	moviw [0]fsr1
  5266  0ECC  00F0               	movwf	_min_origem_up
  5267  0ECD  3F41               	moviw [1]fsr1
  5268  0ECE  00F1               	movwf	_min_origem_up+1
  5269  0ECF                     l2581:	
  5270                           
  5271                           ;main.c: 330:     }
  5272  0ECF  3001               	movlw	1
  5273  0ED0  0020               	movlb	0	; select bank0
  5274  0ED1  07A3               	addwf	min_up@i,f
  5275  0ED2  3000               	movlw	0
  5276  0ED3  3DA4               	addwfc	min_up@i+1,f
  5277  0ED4                     l2583:	
  5278  0ED4  0824               	movf	min_up@i+1,w
  5279  0ED5  3A80               	xorlw	128
  5280  0ED6  00A0               	movwf	??_min_up
  5281  0ED7  3080               	movlw	128
  5282  0ED8  0220               	subwf	??_min_up,w
  5283  0ED9  1D03               	skipz
  5284  0EDA  2EDD               	goto	u1995
  5285  0EDB  3008               	movlw	8
  5286  0EDC  0223               	subwf	min_up@i,w
  5287  0EDD                     u1995:	
  5288  0EDD  1C03               	skipc
  5289  0EDE  2EE0               	goto	u1991
  5290  0EDF  2EE1               	goto	u1990
  5291  0EE0                     u1991:	
  5292  0EE0  2E60               	goto	l2571
  5293  0EE1                     u1990:	
  5294  0EE1                     l2585:	
  5295                           
  5296                           ;main.c: 332:     for(i=0;i<=7;i++)
  5297  0EE1  0020               	movlb	0	; select bank0
  5298  0EE2  01A3               	clrf	min_up@i
  5299  0EE3  01A4               	clrf	min_up@i+1
  5300  0EE4                     l2591:	
  5301                           
  5302                           ;main.c: 333:     {;main.c: 334:         if(origem_up[i]==min_origem_up)
  5303  0EE4  0020               	movlb	0	; select bank0
  5304  0EE5  3523               	lslf	min_up@i,w
  5305  0EE6  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  5306  0EE7  0086               	movwf	6
  5307  0EE8  3001               	movlw	1	; select bank2/3
  5308  0EE9  0087               	movwf	7
  5309  0EEA  3F40               	moviw [0]fsr1
  5310  0EEB  00A0               	movwf	??_min_up
  5311  0EEC  3F41               	moviw [1]fsr1
  5312  0EED  00A1               	movwf	??_min_up+1
  5313  0EEE  0871               	movf	_min_origem_up+1,w
  5314  0EEF  0621               	xorwf	??_min_up+1,w
  5315  0EF0  1D03               	skipz
  5316  0EF1  2EF4               	goto	u2005
  5317  0EF2  0870               	movf	_min_origem_up,w
  5318  0EF3  0620               	xorwf	??_min_up,w
  5319  0EF4                     u2005:	
  5320  0EF4  1D03               	skipz
  5321  0EF5  2EF7               	goto	u2001
  5322  0EF6  2EF8               	goto	u2000
  5323  0EF7                     u2001:	
  5324  0EF7  2F00               	goto	l667
  5325  0EF8                     u2000:	
  5326  0EF8                     l2593:	
  5327                           
  5328                           ;main.c: 335:         {;main.c: 336:             origem_up[i]=out_value;
  5329  0EF8  3523               	lslf	min_up@i,w
  5330  0EF9  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  5331  0EFA  0086               	movwf	6
  5332  0EFB  3001               	movlw	1	; select bank2/3
  5333  0EFC  0087               	movwf	7
  5334  0EFD  3000               	movlw	0
  5335  0EFE  3FC0               	movwi [0]fsr1
  5336  0EFF  3FC1               	movwi [1]fsr1
  5337  0F00                     l667:	
  5338                           ;main.c: 337:         }
  5339                           
  5340                           
  5341                           ;main.c: 338:         if(fila_up[i]==min_origem_up)
  5342  0F00  3523               	lslf	min_up@i,w
  5343  0F01  3EB0               	addlw	(low (_fila_up| 0))& (0+255)
  5344  0F02  0086               	movwf	6
  5345  0F03  0187               	clrf	7
  5346  0F04  3F40               	moviw [0]fsr1
  5347  0F05  00A0               	movwf	??_min_up
  5348  0F06  3F41               	moviw [1]fsr1
  5349  0F07  00A1               	movwf	??_min_up+1
  5350  0F08  0871               	movf	_min_origem_up+1,w
  5351  0F09  0621               	xorwf	??_min_up+1,w
  5352  0F0A  1D03               	skipz
  5353  0F0B  2F0E               	goto	u2015
  5354  0F0C  0870               	movf	_min_origem_up,w
  5355  0F0D  0620               	xorwf	??_min_up,w
  5356  0F0E                     u2015:	
  5357  0F0E  1D03               	skipz
  5358  0F0F  2F11               	goto	u2011
  5359  0F10  2F12               	goto	u2010
  5360  0F11                     u2011:	
  5361  0F11  2F19               	goto	l2597
  5362  0F12                     u2010:	
  5363  0F12                     l2595:	
  5364                           
  5365                           ;main.c: 339:         {;main.c: 340:             fila_up[i]=out_value;
  5366  0F12  3523               	lslf	min_up@i,w
  5367  0F13  3EB0               	addlw	(low (_fila_up| 0))& (0+255)
  5368  0F14  0086               	movwf	6
  5369  0F15  0187               	clrf	7
  5370  0F16  3000               	movlw	0
  5371  0F17  3FC0               	movwi [0]fsr1
  5372  0F18  3FC1               	movwi [1]fsr1
  5373  0F19                     l2597:	
  5374                           
  5375                           ;main.c: 342:     }
  5376  0F19  3001               	movlw	1
  5377  0F1A  07A3               	addwf	min_up@i,f
  5378  0F1B  3000               	movlw	0
  5379  0F1C  3DA4               	addwfc	min_up@i+1,f
  5380  0F1D                     l2599:	
  5381  0F1D  0824               	movf	min_up@i+1,w
  5382  0F1E  3A80               	xorlw	128
  5383  0F1F  00A0               	movwf	??_min_up
  5384  0F20  3080               	movlw	128
  5385  0F21  0220               	subwf	??_min_up,w
  5386  0F22  1D03               	skipz
  5387  0F23  2F26               	goto	u2025
  5388  0F24  3008               	movlw	8
  5389  0F25  0223               	subwf	min_up@i,w
  5390  0F26                     u2025:	
  5391  0F26  1C03               	skipc
  5392  0F27  2F29               	goto	u2021
  5393  0F28  2F2A               	goto	u2020
  5394  0F29                     u2021:	
  5395  0F29  2EE4               	goto	l2591
  5396  0F2A                     u2020:	
  5397  0F2A                     l669:	
  5398  0F2A  0008               	return
  5399  0F2B                     __end_of_min_up:	
  5400                           
  5401                           	psect	text8
  5402  0DA8                     __ptext8:	
  5403 ;; *************** function _max_down *****************
  5404 ;; Defined at:
  5405 ;;		line 347 in file "main.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;		None
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;  i               2    3[BANK0 ] int 
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      void 
  5412 ;; Registers used:
  5413 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5419 ;;      Params:         0       0       0       0       0       0
  5420 ;;      Locals:         0       2       0       0       0       0
  5421 ;;      Temps:          0       3       0       0       0       0
  5422 ;;      Totals:         0       5       0       0       0       0
  5423 ;;Total ram usage:        5 bytes
  5424 ;; Hardware stack levels used:    1
  5425 ;; Hardware stack levels required when called:    4
  5426 ;; This function calls:
  5427 ;;		Nothing
  5428 ;; This function is called by:
  5429 ;;		_col_down
  5430 ;;		_update
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           
  5435                           ;psect for function _max_down
  5436  0DA8                     _max_down:	
  5437  0DA8                     l2601:	
  5438                           ;incstack = 0
  5439                           ; Regs used in _max_down: [wreg+fsr1l+fsr1h+status,2+status,0]
  5440                           
  5441                           
  5442                           ;main.c: 349:     max_origem_down = origem_down[0];
  5443  0DA8  0021               	movlb	1	; select bank1
  5444  0DA9  0821               	movf	(_origem_down+1)^(0+128),w
  5445  0DAA  00F3               	movwf	_max_origem_down+1
  5446  0DAB  0820               	movf	_origem_down^(0+128),w
  5447  0DAC  00F2               	movwf	_max_origem_down
  5448                           
  5449                           ;main.c: 350:     int i;;main.c: 351:     for(i=1;i<=7;i++)
  5450  0DAD  3001               	movlw	1
  5451  0DAE  0020               	movlb	0	; select bank0
  5452  0DAF  00A3               	movwf	max_down@i
  5453  0DB0  3000               	movlw	0
  5454  0DB1  00A4               	movwf	max_down@i+1
  5455  0DB2                     l2605:	
  5456                           
  5457                           ;main.c: 352:     {;main.c: 353:         if(origem_down[i]>max_origem_down)
  5458  0DB2  0020               	movlb	0	; select bank0
  5459  0DB3  3523               	lslf	max_down@i,w
  5460  0DB4  3EA0               	addlw	(low (_origem_down| 0))& (0+255)
  5461  0DB5  0086               	movwf	6
  5462  0DB6  0187               	clrf	7
  5463  0DB7  3F40               	moviw [0]fsr1
  5464  0DB8  00A0               	movwf	??_max_down
  5465  0DB9  3F41               	moviw [1]fsr1
  5466  0DBA  00A1               	movwf	??_max_down+1
  5467  0DBB  0873               	movf	_max_origem_down+1,w
  5468  0DBC  3A80               	xorlw	128
  5469  0DBD  00A2               	movwf	??_max_down+2
  5470  0DBE  0821               	movf	??_max_down+1,w
  5471  0DBF  3A80               	xorlw	128
  5472  0DC0  0222               	subwf	??_max_down+2,w
  5473  0DC1  1D03               	skipz
  5474  0DC2  2DC5               	goto	u2035
  5475  0DC3  0820               	movf	??_max_down,w
  5476  0DC4  0272               	subwf	_max_origem_down,w
  5477  0DC5                     u2035:	
  5478  0DC5  1803               	skipnc
  5479  0DC6  2DC8               	goto	u2031
  5480  0DC7  2DC9               	goto	u2030
  5481  0DC8                     u2031:	
  5482  0DC8  2DD2               	goto	l674
  5483  0DC9                     u2030:	
  5484  0DC9                     l2607:	
  5485                           
  5486                           ;main.c: 354:         {;main.c: 355:             max_origem_down = origem_down[i];
  5487  0DC9  0020               	movlb	0	; select bank0
  5488  0DCA  3523               	lslf	max_down@i,w
  5489  0DCB  3EA0               	addlw	(low (_origem_down| 0))& (0+255)
  5490  0DCC  0086               	movwf	6
  5491  0DCD  0187               	clrf	7
  5492  0DCE  3F40               	moviw [0]fsr1
  5493  0DCF  00F2               	movwf	_max_origem_down
  5494  0DD0  3F41               	moviw [1]fsr1
  5495  0DD1  00F3               	movwf	_max_origem_down+1
  5496  0DD2                     l674:	
  5497                           ;main.c: 356:         }
  5498                           
  5499                           
  5500                           ;main.c: 357:         if(fila_down[i]>max_origem_down)
  5501  0DD2  0020               	movlb	0	; select bank0
  5502  0DD3  3523               	lslf	max_down@i,w
  5503  0DD4  3E30               	addlw	(low (_fila_down| (0+256)))& (0+255)
  5504  0DD5  0086               	movwf	6
  5505  0DD6  3001               	movlw	1	; select bank2/3
  5506  0DD7  0087               	movwf	7
  5507  0DD8  3F40               	moviw [0]fsr1
  5508  0DD9  00A0               	movwf	??_max_down
  5509  0DDA  3F41               	moviw [1]fsr1
  5510  0DDB  00A1               	movwf	??_max_down+1
  5511  0DDC  0873               	movf	_max_origem_down+1,w
  5512  0DDD  3A80               	xorlw	128
  5513  0DDE  00A2               	movwf	??_max_down+2
  5514  0DDF  0821               	movf	??_max_down+1,w
  5515  0DE0  3A80               	xorlw	128
  5516  0DE1  0222               	subwf	??_max_down+2,w
  5517  0DE2  1D03               	skipz
  5518  0DE3  2DE6               	goto	u2045
  5519  0DE4  0820               	movf	??_max_down,w
  5520  0DE5  0272               	subwf	_max_origem_down,w
  5521  0DE6                     u2045:	
  5522  0DE6  1803               	skipnc
  5523  0DE7  2DE9               	goto	u2041
  5524  0DE8  2DEA               	goto	u2040
  5525  0DE9                     u2041:	
  5526  0DE9  2DF4               	goto	l2611
  5527  0DEA                     u2040:	
  5528  0DEA                     l2609:	
  5529                           
  5530                           ;main.c: 358:         {;main.c: 359:             max_origem_down = fila_down[i];
  5531  0DEA  0020               	movlb	0	; select bank0
  5532  0DEB  3523               	lslf	max_down@i,w
  5533  0DEC  3E30               	addlw	(low (_fila_down| (0+256)))& (0+255)
  5534  0DED  0086               	movwf	6
  5535  0DEE  3001               	movlw	1	; select bank2/3
  5536  0DEF  0087               	movwf	7
  5537  0DF0  3F40               	moviw [0]fsr1
  5538  0DF1  00F2               	movwf	_max_origem_down
  5539  0DF2  3F41               	moviw [1]fsr1
  5540  0DF3  00F3               	movwf	_max_origem_down+1
  5541  0DF4                     l2611:	
  5542                           
  5543                           ;main.c: 361:     }
  5544  0DF4  3001               	movlw	1
  5545  0DF5  0020               	movlb	0	; select bank0
  5546  0DF6  07A3               	addwf	max_down@i,f
  5547  0DF7  3000               	movlw	0
  5548  0DF8  3DA4               	addwfc	max_down@i+1,f
  5549  0DF9                     l2613:	
  5550  0DF9  0824               	movf	max_down@i+1,w
  5551  0DFA  3A80               	xorlw	128
  5552  0DFB  00A0               	movwf	??_max_down
  5553  0DFC  3080               	movlw	128
  5554  0DFD  0220               	subwf	??_max_down,w
  5555  0DFE  1D03               	skipz
  5556  0DFF  2E02               	goto	u2055
  5557  0E00  3008               	movlw	8
  5558  0E01  0223               	subwf	max_down@i,w
  5559  0E02                     u2055:	
  5560  0E02  1C03               	skipc
  5561  0E03  2E05               	goto	u2051
  5562  0E04  2E06               	goto	u2050
  5563  0E05                     u2051:	
  5564  0E05  2DB2               	goto	l2605
  5565  0E06                     u2050:	
  5566  0E06                     l2615:	
  5567                           
  5568                           ;main.c: 363:     for(i=0;i<=7;i++)
  5569  0E06  0020               	movlb	0	; select bank0
  5570  0E07  01A3               	clrf	max_down@i
  5571  0E08  01A4               	clrf	max_down@i+1
  5572  0E09                     l2621:	
  5573                           
  5574                           ;main.c: 364:     {;main.c: 365:         if(origem_down[i]==max_origem_down)
  5575  0E09  0020               	movlb	0	; select bank0
  5576  0E0A  3523               	lslf	max_down@i,w
  5577  0E0B  3EA0               	addlw	(low (_origem_down| 0))& (0+255)
  5578  0E0C  0086               	movwf	6
  5579  0E0D  0187               	clrf	7
  5580  0E0E  3F40               	moviw [0]fsr1
  5581  0E0F  00A0               	movwf	??_max_down
  5582  0E10  3F41               	moviw [1]fsr1
  5583  0E11  00A1               	movwf	??_max_down+1
  5584  0E12  0873               	movf	_max_origem_down+1,w
  5585  0E13  0621               	xorwf	??_max_down+1,w
  5586  0E14  1D03               	skipz
  5587  0E15  2E18               	goto	u2065
  5588  0E16  0872               	movf	_max_origem_down,w
  5589  0E17  0620               	xorwf	??_max_down,w
  5590  0E18                     u2065:	
  5591  0E18  1D03               	skipz
  5592  0E19  2E1B               	goto	u2061
  5593  0E1A  2E1C               	goto	u2060
  5594  0E1B                     u2061:	
  5595  0E1B  2E23               	goto	l678
  5596  0E1C                     u2060:	
  5597  0E1C                     l2623:	
  5598                           
  5599                           ;main.c: 366:         {;main.c: 367:             origem_down[i]=out_value;
  5600  0E1C  3523               	lslf	max_down@i,w
  5601  0E1D  3EA0               	addlw	(low (_origem_down| 0))& (0+255)
  5602  0E1E  0086               	movwf	6
  5603  0E1F  0187               	clrf	7
  5604  0E20  3000               	movlw	0
  5605  0E21  3FC0               	movwi [0]fsr1
  5606  0E22  3FC1               	movwi [1]fsr1
  5607  0E23                     l678:	
  5608                           ;main.c: 368:         }
  5609                           
  5610                           
  5611                           ;main.c: 369:         if(fila_up[i]==max_origem_down)
  5612  0E23  3523               	lslf	max_down@i,w
  5613  0E24  3EB0               	addlw	(low (_fila_up| 0))& (0+255)
  5614  0E25  0086               	movwf	6
  5615  0E26  0187               	clrf	7
  5616  0E27  3F40               	moviw [0]fsr1
  5617  0E28  00A0               	movwf	??_max_down
  5618  0E29  3F41               	moviw [1]fsr1
  5619  0E2A  00A1               	movwf	??_max_down+1
  5620  0E2B  0873               	movf	_max_origem_down+1,w
  5621  0E2C  0621               	xorwf	??_max_down+1,w
  5622  0E2D  1D03               	skipz
  5623  0E2E  2E31               	goto	u2075
  5624  0E2F  0872               	movf	_max_origem_down,w
  5625  0E30  0620               	xorwf	??_max_down,w
  5626  0E31                     u2075:	
  5627  0E31  1D03               	skipz
  5628  0E32  2E34               	goto	u2071
  5629  0E33  2E35               	goto	u2070
  5630  0E34                     u2071:	
  5631  0E34  2E3D               	goto	l2627
  5632  0E35                     u2070:	
  5633  0E35                     l2625:	
  5634                           
  5635                           ;main.c: 370:         {;main.c: 371:             fila_down[i]=out_value;
  5636  0E35  3523               	lslf	max_down@i,w
  5637  0E36  3E30               	addlw	(low (_fila_down| (0+256)))& (0+255)
  5638  0E37  0086               	movwf	6
  5639  0E38  3001               	movlw	1	; select bank2/3
  5640  0E39  0087               	movwf	7
  5641  0E3A  3000               	movlw	0
  5642  0E3B  3FC0               	movwi [0]fsr1
  5643  0E3C  3FC1               	movwi [1]fsr1
  5644  0E3D                     l2627:	
  5645                           
  5646                           ;main.c: 373:     }
  5647  0E3D  3001               	movlw	1
  5648  0E3E  07A3               	addwf	max_down@i,f
  5649  0E3F  3000               	movlw	0
  5650  0E40  3DA4               	addwfc	max_down@i+1,f
  5651  0E41                     l2629:	
  5652  0E41  0824               	movf	max_down@i+1,w
  5653  0E42  3A80               	xorlw	128
  5654  0E43  00A0               	movwf	??_max_down
  5655  0E44  3080               	movlw	128
  5656  0E45  0220               	subwf	??_max_down,w
  5657  0E46  1D03               	skipz
  5658  0E47  2E4A               	goto	u2085
  5659  0E48  3008               	movlw	8
  5660  0E49  0223               	subwf	max_down@i,w
  5661  0E4A                     u2085:	
  5662  0E4A  1C03               	skipc
  5663  0E4B  2E4D               	goto	u2081
  5664  0E4C  2E4E               	goto	u2080
  5665  0E4D                     u2081:	
  5666  0E4D  2E09               	goto	l2621
  5667  0E4E                     u2080:	
  5668  0E4E                     l2631:	
  5669                           
  5670                           ;main.c: 375:     if(max_origem_down==0)
  5671  0E4E  0872               	movf	_max_origem_down,w
  5672  0E4F  0473               	iorwf	_max_origem_down+1,w
  5673  0E50  1D03               	btfss	3,2
  5674  0E51  2E53               	goto	u2091
  5675  0E52  2E54               	goto	u2090
  5676  0E53                     u2091:	
  5677  0E53  2E58               	goto	l681
  5678  0E54                     u2090:	
  5679  0E54                     l2633:	
  5680                           
  5681                           ;main.c: 376:     {;main.c: 377:         max_origem_down=1;
  5682  0E54  3001               	movlw	1
  5683  0E55  00F2               	movwf	_max_origem_down
  5684  0E56  3000               	movlw	0
  5685  0E57  00F3               	movwf	_max_origem_down+1
  5686  0E58                     l681:	
  5687  0E58  0008               	return
  5688  0E59                     __end_of_max_down:	
  5689                           
  5690                           	psect	text9
  5691  081E                     __ptext9:	
  5692 ;; *************** function _EUSART_is_rx_ready *****************
  5693 ;; Defined at:
  5694 ;;		line 99 in file "mcc_generated_files/eusart.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;		None
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;		None
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  1    wreg      _Bool 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5708 ;;      Params:         0       0       0       0       0       0
  5709 ;;      Locals:         0       0       0       0       0       0
  5710 ;;      Temps:          0       0       0       0       0       0
  5711 ;;      Totals:         0       0       0       0       0       0
  5712 ;;Total ram usage:        0 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    4
  5715 ;; This function calls:
  5716 ;;		Nothing
  5717 ;; This function is called by:
  5718 ;;		_update
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           
  5723                           ;psect for function _EUSART_is_rx_ready
  5724  081E                     _EUSART_is_rx_ready:	
  5725  081E                     l3543:	
  5726                           ;incstack = 0
  5727                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  5728                           
  5729                           
  5730                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  5731  081E  0020               	movlb	0	; select bank0
  5732  081F  0E11               	swapf	17,w	;volatile
  5733  0820  0C89               	rrf	9,f
  5734  0821  3901               	andlw	1
  5735  0822                     l51:	
  5736  0822  0008               	return
  5737  0823                     __end_of_EUSART_is_rx_ready:	
  5738                           
  5739                           	psect	text10
  5740  0926                     __ptext10:	
  5741 ;; *************** function _EUSART_Read *****************
  5742 ;; Defined at:
  5743 ;;		line 113 in file "mcc_generated_files/eusart.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;		None
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;		None
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      unsigned char 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5757 ;;      Params:         0       0       0       0       0       0
  5758 ;;      Locals:         0       0       0       0       0       0
  5759 ;;      Temps:          0       0       0       0       0       0
  5760 ;;      Totals:         0       0       0       0       0       0
  5761 ;;Total ram usage:        0 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; Hardware stack levels required when called:    4
  5764 ;; This function calls:
  5765 ;;		Nothing
  5766 ;; This function is called by:
  5767 ;;		_update
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           
  5772                           ;psect for function _EUSART_Read
  5773  0926                     _EUSART_Read:	
  5774  0926                     l3547:	
  5775                           ;incstack = 0
  5776                           ; Regs used in _EUSART_Read: [wreg+status,2]
  5777                           
  5778  0926                     l60:	
  5779                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  5780                           
  5781                           
  5782                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  5783  0926  0020               	movlb	0	; select bank0
  5784  0927  1E91               	btfss	17,5	;volatile
  5785  0928  292A               	goto	u3741
  5786  0929  292B               	goto	u3740
  5787  092A                     u3741:	
  5788  092A  2926               	goto	l60
  5789  092B                     u3740:	
  5790  092B                     l3549:	
  5791                           
  5792                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  5793  092B  01F6               	clrf	_eusartRxLastError	;volatile
  5794  092C                     l3551:	
  5795                           
  5796                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  5797  092C  0023               	movlb	3	; select bank3
  5798  092D  1C9D               	btfss	29,1	;volatile
  5799  092E  2930               	goto	u3751
  5800  092F  2931               	goto	u3750
  5801  0930                     u3751:	
  5802  0930  2933               	goto	l3555
  5803  0931                     u3750:	
  5804  0931                     l3553:	
  5805                           
  5806                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  5807  0931  121D               	bcf	29,4	;volatile
  5808                           
  5809                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  5810  0932  161D               	bsf	29,4	;volatile
  5811  0933                     l3555:	
  5812                           
  5813                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  5814  0933  0819               	movf	25,w	;volatile
  5815  0934                     l64:	
  5816  0934  0008               	return
  5817  0935                     __end_of_EUSART_Read:	
  5818                           
  5819                           	psect	text11
  5820  09CA                     __ptext11:	
  5821 ;; *************** function ___wmul *****************
  5822 ;; Defined at:
  5823 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5826 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  product         2    4[BANK0 ] unsigned int 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  2    0[BANK0 ] unsigned int 
  5831 ;; Registers used:
  5832 ;;		wreg, status,2, status,0
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5838 ;;      Params:         0       4       0       0       0       0
  5839 ;;      Locals:         0       2       0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0
  5841 ;;      Totals:         0       6       0       0       0       0
  5842 ;;Total ram usage:        6 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    4
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_controle
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           
  5853                           ;psect for function ___wmul
  5854  09CA                     ___wmul:	
  5855  09CA                     l3823:	
  5856                           ;incstack = 0
  5857                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5858                           
  5859  09CA  0020               	movlb	0	; select bank0
  5860  09CB  01A4               	clrf	___wmul@product
  5861  09CC  01A5               	clrf	___wmul@product+1
  5862  09CD                     l3825:	
  5863  09CD  1C20               	btfss	___wmul@multiplier,0
  5864  09CE  29D0               	goto	u3981
  5865  09CF  29D1               	goto	u3980
  5866  09D0                     u3981:	
  5867  09D0  29D5               	goto	l860
  5868  09D1                     u3980:	
  5869  09D1                     l3827:	
  5870  09D1  0822               	movf	___wmul@multiplicand,w
  5871  09D2  07A4               	addwf	___wmul@product,f
  5872  09D3  0823               	movf	___wmul@multiplicand+1,w
  5873  09D4  3DA5               	addwfc	___wmul@product+1,f
  5874  09D5                     l860:	
  5875  09D5  3001               	movlw	1
  5876  09D6                     u3995:	
  5877  09D6  35A2               	lslf	___wmul@multiplicand,f
  5878  09D7  0DA3               	rlf	___wmul@multiplicand+1,f
  5879  09D8  0B89               	decfsz	9,f
  5880  09D9  29D6               	goto	u3995
  5881  09DA                     l3829:	
  5882  09DA  3001               	movlw	1
  5883  09DB                     u4005:	
  5884  09DB  36A1               	lsrf	___wmul@multiplier+1,f
  5885  09DC  0CA0               	rrf	___wmul@multiplier,f
  5886  09DD  0B89               	decfsz	9,f
  5887  09DE  29DB               	goto	u4005
  5888  09DF                     l3831:	
  5889  09DF  0820               	movf	___wmul@multiplier,w
  5890  09E0  0421               	iorwf	___wmul@multiplier+1,w
  5891  09E1  1D03               	btfss	3,2
  5892  09E2  29E4               	goto	u4011
  5893  09E3  29E5               	goto	u4010
  5894  09E4                     u4011:	
  5895  09E4  29CD               	goto	l3825
  5896  09E5                     u4010:	
  5897  09E5                     l3833:	
  5898  09E5  0825               	movf	___wmul@product+1,w
  5899  09E6  00A1               	movwf	?___wmul+1
  5900  09E7  0824               	movf	___wmul@product,w
  5901  09E8  00A0               	movwf	?___wmul
  5902  09E9                     l862:	
  5903  09E9  0008               	return
  5904  09EA                     __end_of___wmul:	
  5905                           
  5906                           	psect	text12
  5907  0992                     __ptext12:	
  5908 ;; *************** function _PWM3_LoadDutyValue *****************
  5909 ;; Defined at:
  5910 ;;		line 82 in file "mcc_generated_files/pwm3.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;  dutyValue       2    0[BANK0 ] unsigned short 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;		None
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  1    wreg      void 
  5917 ;; Registers used:
  5918 ;;		wreg, status,2, status,0
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5924 ;;      Params:         0       2       0       0       0       0
  5925 ;;      Locals:         0       0       0       0       0       0
  5926 ;;      Temps:          0       2       0       0       0       0
  5927 ;;      Totals:         0       4       0       0       0       0
  5928 ;;Total ram usage:        4 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:    4
  5931 ;; This function calls:
  5932 ;;		Nothing
  5933 ;; This function is called by:
  5934 ;;		_controle
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           
  5939                           ;psect for function _PWM3_LoadDutyValue
  5940  0992                     _PWM3_LoadDutyValue:	
  5941  0992                     l2775:	
  5942                           ;incstack = 0
  5943                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  5944                           
  5945                           
  5946                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
  5947  0992  0020               	movlb	0	; select bank0
  5948  0993  0821               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  5949  0994  00A3               	movwf	??_PWM3_LoadDutyValue+1
  5950  0995  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
  5951  0996  00A2               	movwf	??_PWM3_LoadDutyValue
  5952  0997  36A3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5953  0998  0CA2               	rrf	??_PWM3_LoadDutyValue,f
  5954  0999  36A3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5955  099A  0CA2               	rrf	??_PWM3_LoadDutyValue,f
  5956  099B  0822               	movf	??_PWM3_LoadDutyValue,w
  5957  099C  0026               	movlb	6	; select bank6
  5958  099D  0091               	movwf	17	;volatile
  5959                           
  5960                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
  5961  099E  0020               	movlb	0	; select bank0
  5962  099F  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
  5963  09A0  3903               	andlw	3
  5964  09A1  00A2               	movwf	??_PWM3_LoadDutyValue
  5965  09A2  3004               	movlw	4
  5966  09A3                     u2185:	
  5967  09A3  35A2               	lslf	??_PWM3_LoadDutyValue,f
  5968  09A4  0B89               	decfsz	9,f
  5969  09A5  29A3               	goto	u2185
  5970  09A6  0026               	movlb	6	; select bank6
  5971  09A7  0813               	movf	19,w	;volatile
  5972  09A8  39CF               	andlw	207
  5973  09A9  0020               	movlb	0	; select bank0
  5974  09AA  0422               	iorwf	??_PWM3_LoadDutyValue,w
  5975  09AB  0026               	movlb	6	; select bank6
  5976  09AC  0093               	movwf	19	;volatile
  5977  09AD                     l475:	
  5978  09AD  0008               	return
  5979  09AE                     __end_of_PWM3_LoadDutyValue:	
  5980                           
  5981                           	psect	text13
  5982  0A0B                     __ptext13:	
  5983 ;; *************** function _ADC_GetConversion *****************
  5984 ;; Defined at:
  5985 ;;		line 112 in file "mcc_generated_files/adc.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;  channel         1    wreg     enum E2474
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  channel         1    3[BANK0 ] enum E2474
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  2    0[BANK0 ] unsigned short 
  5992 ;; Registers used:
  5993 ;;		wreg, status,2, status,0
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5999 ;;      Params:         0       2       0       0       0       0
  6000 ;;      Locals:         0       1       0       0       0       0
  6001 ;;      Temps:          0       1       0       0       0       0
  6002 ;;      Totals:         0       4       0       0       0       0
  6003 ;;Total ram usage:        4 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:    4
  6006 ;; This function calls:
  6007 ;;		Nothing
  6008 ;; This function is called by:
  6009 ;;		_controle
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           
  6014                           ;psect for function _ADC_GetConversion
  6015  0A0B                     _ADC_GetConversion:	
  6016                           
  6017                           ;incstack = 0
  6018                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  6019                           ;ADC_GetConversion@channel stored from wreg
  6020  0A0B  0020               	movlb	0	; select bank0
  6021  0A0C  00A3               	movwf	ADC_GetConversion@channel
  6022  0A0D                     l2739:	
  6023                           
  6024                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  6025  0A0D  0823               	movf	ADC_GetConversion@channel,w
  6026  0A0E  00A2               	movwf	??_ADC_GetConversion
  6027  0A0F  0DA2               	rlf	??_ADC_GetConversion,f
  6028  0A10  0DA2               	rlf	??_ADC_GetConversion,f
  6029  0A11  0021               	movlb	1	; select bank1
  6030  0A12  081D               	movf	29,w	;volatile
  6031  0A13  0020               	movlb	0	; select bank0
  6032  0A14  0622               	xorwf	??_ADC_GetConversion,w
  6033  0A15  3983               	andlw	-125
  6034  0A16  0622               	xorwf	??_ADC_GetConversion,w
  6035  0A17  0021               	movlb	1	; select bank1
  6036  0A18  009D               	movwf	29	;volatile
  6037  0A19                     l2741:	
  6038                           
  6039                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  6040  0A19  141D               	bsf	29,0	;volatile
  6041  0A1A                     l2743:	
  6042                           
  6043                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  6044  0A1A  3003               	movlw	3
  6045  0A1B                     u4247:	
  6046  0A1B  0B89               	decfsz	9,f
  6047  0A1C  2A1B               	goto	u4247
  6048  0A1D  0000               	nop
  6049  0A1E                     l2745:	
  6050                           
  6051                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  6052  0A1E  0021               	movlb	1	; select bank1
  6053  0A1F  149D               	bsf	29,1	;volatile
  6054  0A20                     l282:	
  6055                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  6056                           
  6057                           
  6058                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  6059  0A20  189D               	btfsc	29,1	;volatile
  6060  0A21  2A23               	goto	u2131
  6061  0A22  2A24               	goto	u2130
  6062  0A23                     u2131:	
  6063  0A23  2A20               	goto	l282
  6064  0A24                     u2130:	
  6065  0A24                     l2747:	
  6066                           
  6067                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6068  0A24  081C               	movf	28,w	;volatile
  6069  0A25  0020               	movlb	0	; select bank0
  6070  0A26  00A1               	movwf	?_ADC_GetConversion+1
  6071  0A27  0021               	movlb	1	; select bank1
  6072  0A28  081B               	movf	27,w	;volatile
  6073  0A29  0020               	movlb	0	; select bank0
  6074  0A2A  00A0               	movwf	?_ADC_GetConversion
  6075  0A2B                     l285:	
  6076  0A2B  0008               	return
  6077  0A2C                     __end_of_ADC_GetConversion:	
  6078                           
  6079                           	psect	text14
  6080  0F2B                     __ptext14:	
  6081 ;; *************** function _comunicacao *****************
  6082 ;; Defined at:
  6083 ;;		line 155 in file "main.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;		None
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;  position        4   75[BANK0 ] float 
  6088 ;;  speed           4   71[BANK0 ] float 
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  1    wreg      void 
  6091 ;; Registers used:
  6092 ;;		wreg, status,2, status,0, pclath, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6098 ;;      Params:         0       0       0       0       0       0
  6099 ;;      Locals:         0       8       0       0       0       0
  6100 ;;      Temps:          0       1       0       0       0       0
  6101 ;;      Totals:         0       9       0       0       0       0
  6102 ;;Total ram usage:        9 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:    6
  6105 ;; This function calls:
  6106 ;;		___fldiv
  6107 ;;		___flmul
  6108 ;;		___fltol
  6109 ;;		___xxtofl
  6110 ;; This function is called by:
  6111 ;;		_main
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           
  6116                           ;psect for function _comunicacao
  6117  0F2B                     _comunicacao:	
  6118  0F2B                     l3385:	
  6119                           ;incstack = 0
  6120                           ; Regs used in _comunicacao: [wreg+status,2+status,0+pclath+cstack]
  6121                           
  6122                           
  6123                           ;main.c: 160:     float speed = 3.75/(((float)ccp_value)*0.0000005);
  6124  0F2B  3035               	movlw	53
  6125  0F2C  0020               	movlb	0	; select bank0
  6126  0F2D  00B5               	movwf	___flmul@b+3
  6127  0F2E  3006               	movlw	6
  6128  0F2F  00B4               	movwf	___flmul@b+2
  6129  0F30  3037               	movlw	55
  6130  0F31  00B3               	movwf	___flmul@b+1
  6131  0F32  30BD               	movlw	189
  6132  0F33  00B2               	movwf	___flmul@b
  6133  0F34  0021               	movlb	1	; select bank1
  6134  0F35  085C               	movf	_ccp_value^(0+128),w
  6135  0F36  0020               	movlb	0	; select bank0
  6136  0F37  00A4               	movwf	___xxtofl@val
  6137  0F38  0021               	movlb	1	; select bank1
  6138  0F39  085D               	movf	(_ccp_value+1)^(0+128),w
  6139  0F3A  0020               	movlb	0	; select bank0
  6140  0F3B  00A5               	movwf	___xxtofl@val+1
  6141  0F3C  01A6               	clrf	___xxtofl@val+2
  6142  0F3D  01A7               	clrf	___xxtofl@val+3
  6143  0F3E  3000               	movlw	0
  6144  0F3F  318C  24FB  318F   	fcall	___xxtofl
  6145  0F42  0020               	movlb	0	; select bank0
  6146  0F43  0827               	movf	?___xxtofl+3,w
  6147  0F44  00B9               	movwf	___flmul@a+3
  6148  0F45  0826               	movf	?___xxtofl+2,w
  6149  0F46  00B8               	movwf	___flmul@a+2
  6150  0F47  0825               	movf	?___xxtofl+1,w
  6151  0F48  00B7               	movwf	___flmul@a+1
  6152  0F49  0824               	movf	?___xxtofl,w
  6153  0F4A  00B6               	movwf	___flmul@a
  6154  0F4B  3180  2053  318F   	fcall	___flmul
  6155  0F4E  0020               	movlb	0	; select bank0
  6156  0F4F  0835               	movf	?___flmul+3,w
  6157  0F50  00CF               	movwf	___fldiv@a+3
  6158  0F51  0834               	movf	?___flmul+2,w
  6159  0F52  00CE               	movwf	___fldiv@a+2
  6160  0F53  0833               	movf	?___flmul+1,w
  6161  0F54  00CD               	movwf	___fldiv@a+1
  6162  0F55  0832               	movf	?___flmul,w
  6163  0F56  00CC               	movwf	___fldiv@a
  6164  0F57  3040               	movlw	64
  6165  0F58  00D3               	movwf	___fldiv@b+3
  6166  0F59  3070               	movlw	112
  6167  0F5A  00D2               	movwf	___fldiv@b+2
  6168  0F5B  3000               	movlw	0
  6169  0F5C  00D1               	movwf	___fldiv@b+1
  6170  0F5D  3000               	movlw	0
  6171  0F5E  00D0               	movwf	___fldiv@b
  6172  0F5F  3184  248E  318F   	fcall	___fldiv
  6173  0F62  0020               	movlb	0	; select bank0
  6174  0F63  084F               	movf	?___fldiv+3,w
  6175  0F64  00EA               	movwf	comunicacao@speed+3
  6176  0F65  084E               	movf	?___fldiv+2,w
  6177  0F66  00E9               	movwf	comunicacao@speed+2
  6178  0F67  084D               	movf	?___fldiv+1,w
  6179  0F68  00E8               	movwf	comunicacao@speed+1
  6180  0F69  084C               	movf	?___fldiv,w
  6181  0F6A  00E7               	movwf	comunicacao@speed
  6182                           
  6183                           ;main.c: 161:     float position = 1.5*pulses;
  6184  0F6B  303F               	movlw	63
  6185  0F6C  00B5               	movwf	___flmul@b+3
  6186  0F6D  30C0               	movlw	192
  6187  0F6E  00B4               	movwf	___flmul@b+2
  6188  0F6F  3000               	movlw	0
  6189  0F70  00B3               	movwf	___flmul@b+1
  6190  0F71  3000               	movlw	0
  6191  0F72  00B2               	movwf	___flmul@b
  6192  0F73  0021               	movlb	1	; select bank1
  6193  0F74  085E               	movf	_pulses^(0+128),w
  6194  0F75  0020               	movlb	0	; select bank0
  6195  0F76  00A4               	movwf	___xxtofl@val
  6196  0F77  0021               	movlb	1	; select bank1
  6197  0F78  085F               	movf	(_pulses+1)^(0+128),w
  6198  0F79  0020               	movlb	0	; select bank0
  6199  0F7A  00A5               	movwf	___xxtofl@val+1
  6200  0F7B  0D89               	rlf	9,f
  6201  0F7C  3B89               	subwfb	9,f
  6202  0F7D  0989               	comf	9,f
  6203  0F7E  00A6               	movwf	___xxtofl@val+2
  6204  0F7F  00A7               	movwf	___xxtofl@val+3
  6205  0F80  3001               	movlw	1
  6206  0F81  318C  24FB  318F   	fcall	___xxtofl
  6207  0F84  0020               	movlb	0	; select bank0
  6208  0F85  0827               	movf	?___xxtofl+3,w
  6209  0F86  00B9               	movwf	___flmul@a+3
  6210  0F87  0826               	movf	?___xxtofl+2,w
  6211  0F88  00B8               	movwf	___flmul@a+2
  6212  0F89  0825               	movf	?___xxtofl+1,w
  6213  0F8A  00B7               	movwf	___flmul@a+1
  6214  0F8B  0824               	movf	?___xxtofl,w
  6215  0F8C  00B6               	movwf	___flmul@a
  6216  0F8D  3180  2053  318F   	fcall	___flmul
  6217  0F90  0020               	movlb	0	; select bank0
  6218  0F91  0835               	movf	?___flmul+3,w
  6219  0F92  00EE               	movwf	comunicacao@position+3
  6220  0F93  0834               	movf	?___flmul+2,w
  6221  0F94  00ED               	movwf	comunicacao@position+2
  6222  0F95  0833               	movf	?___flmul+1,w
  6223  0F96  00EC               	movwf	comunicacao@position+1
  6224  0F97  0832               	movf	?___flmul,w
  6225  0F98  00EB               	movwf	comunicacao@position
  6226  0F99                     l3387:	
  6227                           
  6228                           ;main.c: 176:     byte[0] = ((state_motor<<4)& 0x20)|(and_ating2 & 0x02);
  6229  0F99  0021               	movlb	1	; select bank1
  6230  0F9A  0845               	movf	_and_ating2^(0+128),w
  6231  0F9B  3902               	andlw	2
  6232  0F9C  0020               	movlb	0	; select bank0
  6233  0F9D  00E6               	movwf	??_comunicacao
  6234  0F9E  0866               	movf	??_comunicacao,w
  6235  0F9F  0021               	movlb	1	; select bank1
  6236  0FA0  00C0               	movwf	_byte^(0+128)
  6237  0FA1                     l3389:	
  6238                           
  6239                           ;main.c: 177:     byte[1] = 0x80 |((((uint8_t)position)>>1)& 0x7F);
  6240  0FA1  0020               	movlb	0	; select bank0
  6241  0FA2  086E               	movf	comunicacao@position+3,w
  6242  0FA3  00A3               	movwf	___fltol@f1+3
  6243  0FA4  086D               	movf	comunicacao@position+2,w
  6244  0FA5  00A2               	movwf	___fltol@f1+2
  6245  0FA6  086C               	movf	comunicacao@position+1,w
  6246  0FA7  00A1               	movwf	___fltol@f1+1
  6247  0FA8  086B               	movf	comunicacao@position,w
  6248  0FA9  00A0               	movwf	___fltol@f1
  6249  0FAA  318B  2374  318F   	fcall	___fltol
  6250  0FAD  0020               	movlb	0	; select bank0
  6251  0FAE  3620               	lsrf	?___fltol,w
  6252  0FAF  397F               	andlw	127
  6253  0FB0  3880               	iorlw	128
  6254  0FB1  00E6               	movwf	??_comunicacao
  6255  0FB2  0866               	movf	??_comunicacao,w
  6256  0FB3  0021               	movlb	1	; select bank1
  6257  0FB4  00C1               	movwf	(_byte^(0+128)+1)
  6258  0FB5                     l3391:	
  6259                           
  6260                           ;main.c: 178:     byte[2] = 0x80 |((((uint8_t)speed)>>1)& 0x7F);
  6261  0FB5  0020               	movlb	0	; select bank0
  6262  0FB6  086A               	movf	comunicacao@speed+3,w
  6263  0FB7  00A3               	movwf	___fltol@f1+3
  6264  0FB8  0869               	movf	comunicacao@speed+2,w
  6265  0FB9  00A2               	movwf	___fltol@f1+2
  6266  0FBA  0868               	movf	comunicacao@speed+1,w
  6267  0FBB  00A1               	movwf	___fltol@f1+1
  6268  0FBC  0867               	movf	comunicacao@speed,w
  6269  0FBD  00A0               	movwf	___fltol@f1
  6270  0FBE  318B  2374  318F   	fcall	___fltol
  6271  0FC1  0020               	movlb	0	; select bank0
  6272  0FC2  3620               	lsrf	?___fltol,w
  6273  0FC3  397F               	andlw	127
  6274  0FC4  3880               	iorlw	128
  6275  0FC5  00E6               	movwf	??_comunicacao
  6276  0FC6  0866               	movf	??_comunicacao,w
  6277  0FC7  0021               	movlb	1	; select bank1
  6278  0FC8  00C2               	movwf	(_byte^(0+128)+2)
  6279  0FC9                     l3393:	
  6280                           
  6281                           ;main.c: 179:     byte[3] = 0x80 |((((uint8_t)I_m)>>1)& 0x7F);
  6282  0FC9  0022               	movlb	2	; select bank2
  6283  0FCA  084B               	movf	(_I_m+3)^(0+256),w
  6284  0FCB  0020               	movlb	0	; select bank0
  6285  0FCC  00A3               	movwf	___fltol@f1+3
  6286  0FCD  0022               	movlb	2	; select bank2
  6287  0FCE  084A               	movf	(_I_m+2)^(0+256),w
  6288  0FCF  0020               	movlb	0	; select bank0
  6289  0FD0  00A2               	movwf	___fltol@f1+2
  6290  0FD1  0022               	movlb	2	; select bank2
  6291  0FD2  0849               	movf	(_I_m+1)^(0+256),w
  6292  0FD3  0020               	movlb	0	; select bank0
  6293  0FD4  00A1               	movwf	___fltol@f1+1
  6294  0FD5  0022               	movlb	2	; select bank2
  6295  0FD6  0848               	movf	_I_m^(0+256),w
  6296  0FD7  0020               	movlb	0	; select bank0
  6297  0FD8  00A0               	movwf	___fltol@f1
  6298  0FD9  318B  2374  318F   	fcall	___fltol
  6299  0FDC  0020               	movlb	0	; select bank0
  6300  0FDD  3620               	lsrf	?___fltol,w
  6301  0FDE  397F               	andlw	127
  6302  0FDF  3880               	iorlw	128
  6303  0FE0  00E6               	movwf	??_comunicacao
  6304  0FE1  0866               	movf	??_comunicacao,w
  6305  0FE2  0021               	movlb	1	; select bank1
  6306  0FE3  00C3               	movwf	(_byte^(0+128)+3)
  6307  0FE4                     l3395:	
  6308                           
  6309                           ;main.c: 180:     byte[4] = 0x80 |((((uint8_t)temp_mt)>>1)& 0x7F);
  6310  0FE4  0022               	movlb	2	; select bank2
  6311  0FE5  0847               	movf	(_temp_mt+3)^(0+256),w
  6312  0FE6  0020               	movlb	0	; select bank0
  6313  0FE7  00A3               	movwf	___fltol@f1+3
  6314  0FE8  0022               	movlb	2	; select bank2
  6315  0FE9  0846               	movf	(_temp_mt+2)^(0+256),w
  6316  0FEA  0020               	movlb	0	; select bank0
  6317  0FEB  00A2               	movwf	___fltol@f1+2
  6318  0FEC  0022               	movlb	2	; select bank2
  6319  0FED  0845               	movf	(_temp_mt+1)^(0+256),w
  6320  0FEE  0020               	movlb	0	; select bank0
  6321  0FEF  00A1               	movwf	___fltol@f1+1
  6322  0FF0  0022               	movlb	2	; select bank2
  6323  0FF1  0844               	movf	_temp_mt^(0+256),w
  6324  0FF2  0020               	movlb	0	; select bank0
  6325  0FF3  00A0               	movwf	___fltol@f1
  6326  0FF4  318B  2374  318F   	fcall	___fltol
  6327  0FF7  0020               	movlb	0	; select bank0
  6328  0FF8  3620               	lsrf	?___fltol,w
  6329  0FF9  397F               	andlw	127
  6330  0FFA  3880               	iorlw	128
  6331  0FFB  00E6               	movwf	??_comunicacao
  6332  0FFC  0866               	movf	??_comunicacao,w
  6333  0FFD  0021               	movlb	1	; select bank1
  6334  0FFE  00C4               	movwf	(_byte^(0+128)+4)
  6335  0FFF                     l610:	
  6336  0FFF  0008               	return
  6337  1000                     __end_of_comunicacao:	
  6338                           
  6339                           	psect	text15
  6340  0CFB                     __ptext15:	
  6341 ;; *************** function ___xxtofl *****************
  6342 ;; Defined at:
  6343 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  6344 ;; Parameters:    Size  Location     Type
  6345 ;;  sign            1    wreg     unsigned char 
  6346 ;;  val             4    4[BANK0 ] long 
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;  sign            1   12[BANK0 ] unsigned char 
  6349 ;;  arg             4   14[BANK0 ] unsigned long 
  6350 ;;  exp             1   13[BANK0 ] unsigned char 
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  4    4[BANK0 ] unsigned char 
  6353 ;; Registers used:
  6354 ;;		wreg, status,2, status,0
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6360 ;;      Params:         0       4       0       0       0       0
  6361 ;;      Locals:         0       6       0       0       0       0
  6362 ;;      Temps:          0       4       0       0       0       0
  6363 ;;      Totals:         0      14       0       0       0       0
  6364 ;;Total ram usage:       14 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; Hardware stack levels required when called:    4
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		_comunicacao
  6371 ;;		_controle
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           
  6376                           ;psect for function ___xxtofl
  6377  0CFB                     ___xxtofl:	
  6378                           
  6379                           ;incstack = 0
  6380                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6381                           ;___xxtofl@sign stored from wreg
  6382  0CFB  0020               	movlb	0	; select bank0
  6383  0CFC  00AC               	movwf	___xxtofl@sign
  6384  0CFD                     l3311:	
  6385  0CFD  082C               	movf	___xxtofl@sign,w
  6386  0CFE  1903               	btfsc	3,2
  6387  0CFF  2D01               	goto	u3261
  6388  0D00  2D02               	goto	u3260
  6389  0D01                     u3261:	
  6390  0D01  2D16               	goto	l3317
  6391  0D02                     u3260:	
  6392  0D02                     l3313:	
  6393  0D02  1FA7               	btfss	___xxtofl@val+3,7
  6394  0D03  2D05               	goto	u3271
  6395  0D04  2D06               	goto	u3270
  6396  0D05                     u3271:	
  6397  0D05  2D16               	goto	l3317
  6398  0D06                     u3270:	
  6399  0D06                     l3315:	
  6400  0D06  0924               	comf	___xxtofl@val,w
  6401  0D07  00AE               	movwf	___xxtofl@arg
  6402  0D08  0925               	comf	___xxtofl@val+1,w
  6403  0D09  00AF               	movwf	___xxtofl@arg+1
  6404  0D0A  0926               	comf	___xxtofl@val+2,w
  6405  0D0B  00B0               	movwf	___xxtofl@arg+2
  6406  0D0C  0927               	comf	___xxtofl@val+3,w
  6407  0D0D  00B1               	movwf	___xxtofl@arg+3
  6408  0D0E  0AAE               	incf	___xxtofl@arg,f
  6409  0D0F  1903               	skipnz
  6410  0D10  0AAF               	incf	___xxtofl@arg+1,f
  6411  0D11  1903               	skipnz
  6412  0D12  0AB0               	incf	___xxtofl@arg+2,f
  6413  0D13  1903               	skipnz
  6414  0D14  0AB1               	incf	___xxtofl@arg+3,f
  6415  0D15  2D1E               	goto	l1295
  6416  0D16                     l3317:	
  6417  0D16  0827               	movf	___xxtofl@val+3,w
  6418  0D17  00B1               	movwf	___xxtofl@arg+3
  6419  0D18  0826               	movf	___xxtofl@val+2,w
  6420  0D19  00B0               	movwf	___xxtofl@arg+2
  6421  0D1A  0825               	movf	___xxtofl@val+1,w
  6422  0D1B  00AF               	movwf	___xxtofl@arg+1
  6423  0D1C  0824               	movf	___xxtofl@val,w
  6424  0D1D  00AE               	movwf	___xxtofl@arg
  6425  0D1E                     l1295:	
  6426  0D1E  0827               	movf	___xxtofl@val+3,w
  6427  0D1F  0426               	iorwf	___xxtofl@val+2,w
  6428  0D20  0425               	iorwf	___xxtofl@val+1,w
  6429  0D21  0424               	iorwf	___xxtofl@val,w
  6430  0D22  1D03               	skipz
  6431  0D23  2D25               	goto	u3281
  6432  0D24  2D26               	goto	u3280
  6433  0D25                     u3281:	
  6434  0D25  2D2F               	goto	l3323
  6435  0D26                     u3280:	
  6436  0D26                     l3319:	
  6437  0D26  3000               	movlw	0
  6438  0D27  00A7               	movwf	?___xxtofl+3
  6439  0D28  3000               	movlw	0
  6440  0D29  00A6               	movwf	?___xxtofl+2
  6441  0D2A  3000               	movlw	0
  6442  0D2B  00A5               	movwf	?___xxtofl+1
  6443  0D2C  3000               	movlw	0
  6444  0D2D  00A4               	movwf	?___xxtofl
  6445  0D2E  2DA7               	goto	l1297
  6446  0D2F                     l3323:	
  6447  0D2F  3096               	movlw	150
  6448  0D30  00A8               	movwf	??___xxtofl
  6449  0D31  0828               	movf	??___xxtofl,w
  6450  0D32  00AD               	movwf	___xxtofl@exp
  6451  0D33  2D3F               	goto	l3327
  6452  0D34                     l3325:	
  6453  0D34  3001               	movlw	1
  6454  0D35  00A8               	movwf	??___xxtofl
  6455  0D36  0828               	movf	??___xxtofl,w
  6456  0D37  07AD               	addwf	___xxtofl@exp,f
  6457  0D38  3001               	movlw	1
  6458  0D39                     u3295:	
  6459  0D39  36B1               	lsrf	___xxtofl@arg+3,f
  6460  0D3A  0CB0               	rrf	___xxtofl@arg+2,f
  6461  0D3B  0CAF               	rrf	___xxtofl@arg+1,f
  6462  0D3C  0CAE               	rrf	___xxtofl@arg,f
  6463  0D3D  0B89               	decfsz	9,f
  6464  0D3E  2D39               	goto	u3295
  6465  0D3F                     l3327:	
  6466  0D3F  30FE               	movlw	254
  6467  0D40  0531               	andwf	___xxtofl@arg+3,w
  6468  0D41  1D03               	btfss	3,2
  6469  0D42  2D44               	goto	u3301
  6470  0D43  2D45               	goto	u3300
  6471  0D44                     u3301:	
  6472  0D44  2D34               	goto	l3325
  6473  0D45                     u3300:	
  6474  0D45  2D59               	goto	l1301
  6475  0D46                     l3329:	
  6476  0D46  3001               	movlw	1
  6477  0D47  00A8               	movwf	??___xxtofl
  6478  0D48  0828               	movf	??___xxtofl,w
  6479  0D49  07AD               	addwf	___xxtofl@exp,f
  6480  0D4A                     l3331:	
  6481  0D4A  3001               	movlw	1
  6482  0D4B  07AE               	addwf	___xxtofl@arg,f
  6483  0D4C  3000               	movlw	0
  6484  0D4D  3DAF               	addwfc	___xxtofl@arg+1,f
  6485  0D4E  3000               	movlw	0
  6486  0D4F  3DB0               	addwfc	___xxtofl@arg+2,f
  6487  0D50  3000               	movlw	0
  6488  0D51  3DB1               	addwfc	___xxtofl@arg+3,f
  6489  0D52                     l3333:	
  6490  0D52  3001               	movlw	1
  6491  0D53                     u3315:	
  6492  0D53  36B1               	lsrf	___xxtofl@arg+3,f
  6493  0D54  0CB0               	rrf	___xxtofl@arg+2,f
  6494  0D55  0CAF               	rrf	___xxtofl@arg+1,f
  6495  0D56  0CAE               	rrf	___xxtofl@arg,f
  6496  0D57  0B89               	decfsz	9,f
  6497  0D58  2D53               	goto	u3315
  6498  0D59                     l1301:	
  6499  0D59  30FF               	movlw	255
  6500  0D5A  0531               	andwf	___xxtofl@arg+3,w
  6501  0D5B  1D03               	btfss	3,2
  6502  0D5C  2D5E               	goto	u3321
  6503  0D5D  2D5F               	goto	u3320
  6504  0D5E                     u3321:	
  6505  0D5E  2D46               	goto	l3329
  6506  0D5F                     u3320:	
  6507  0D5F  2D69               	goto	l3337
  6508  0D60                     l3335:	
  6509  0D60  3001               	movlw	1
  6510  0D61  02AD               	subwf	___xxtofl@exp,f
  6511  0D62  3001               	movlw	1
  6512  0D63                     u3335:	
  6513  0D63  35AE               	lslf	___xxtofl@arg,f
  6514  0D64  0DAF               	rlf	___xxtofl@arg+1,f
  6515  0D65  0DB0               	rlf	___xxtofl@arg+2,f
  6516  0D66  0DB1               	rlf	___xxtofl@arg+3,f
  6517  0D67  0B89               	decfsz	9,f
  6518  0D68  2D63               	goto	u3335
  6519  0D69                     l3337:	
  6520  0D69  1BB0               	btfsc	___xxtofl@arg+2,7
  6521  0D6A  2D6C               	goto	u3341
  6522  0D6B  2D6D               	goto	u3340
  6523  0D6C                     u3341:	
  6524  0D6C  2D73               	goto	l1308
  6525  0D6D                     u3340:	
  6526  0D6D                     l3339:	
  6527  0D6D  3002               	movlw	2
  6528  0D6E  022D               	subwf	___xxtofl@exp,w
  6529  0D6F  1803               	skipnc
  6530  0D70  2D72               	goto	u3351
  6531  0D71  2D73               	goto	u3350
  6532  0D72                     u3351:	
  6533  0D72  2D60               	goto	l3335
  6534  0D73                     u3350:	
  6535  0D73                     l1308:	
  6536  0D73  182D               	btfsc	___xxtofl@exp,0
  6537  0D74  2D76               	goto	u3361
  6538  0D75  2D77               	goto	u3360
  6539  0D76                     u3361:	
  6540  0D76  2D7F               	goto	l1309
  6541  0D77                     u3360:	
  6542  0D77                     l3341:	
  6543  0D77  30FF               	movlw	255
  6544  0D78  05AE               	andwf	___xxtofl@arg,f
  6545  0D79  30FF               	movlw	255
  6546  0D7A  05AF               	andwf	___xxtofl@arg+1,f
  6547  0D7B  307F               	movlw	127
  6548  0D7C  05B0               	andwf	___xxtofl@arg+2,f
  6549  0D7D  30FF               	movlw	255
  6550  0D7E  05B1               	andwf	___xxtofl@arg+3,f
  6551  0D7F                     l1309:	
  6552  0D7F  1003               	clrc
  6553  0D80  0CAD               	rrf	___xxtofl@exp,f
  6554  0D81                     l3343:	
  6555  0D81  082D               	movf	___xxtofl@exp,w
  6556  0D82  00A8               	movwf	??___xxtofl
  6557  0D83  01A9               	clrf	??___xxtofl+1
  6558  0D84  01AA               	clrf	??___xxtofl+2
  6559  0D85  01AB               	clrf	??___xxtofl+3
  6560  0D86  3018               	movlw	24
  6561  0D87                     u3375:	
  6562  0D87  35A8               	lslf	??___xxtofl,f
  6563  0D88  0DA9               	rlf	??___xxtofl+1,f
  6564  0D89  0DAA               	rlf	??___xxtofl+2,f
  6565  0D8A  0DAB               	rlf	??___xxtofl+3,f
  6566  0D8B                     u3370:	
  6567  0D8B  0B89               	decfsz	9,f
  6568  0D8C  2D87               	goto	u3375
  6569  0D8D  0828               	movf	??___xxtofl,w
  6570  0D8E  04AE               	iorwf	___xxtofl@arg,f
  6571  0D8F  0829               	movf	??___xxtofl+1,w
  6572  0D90  04AF               	iorwf	___xxtofl@arg+1,f
  6573  0D91  082A               	movf	??___xxtofl+2,w
  6574  0D92  04B0               	iorwf	___xxtofl@arg+2,f
  6575  0D93  082B               	movf	??___xxtofl+3,w
  6576  0D94  04B1               	iorwf	___xxtofl@arg+3,f
  6577  0D95                     l3345:	
  6578  0D95  082C               	movf	___xxtofl@sign,w
  6579  0D96  1903               	btfsc	3,2
  6580  0D97  2D99               	goto	u3381
  6581  0D98  2D9A               	goto	u3380
  6582  0D99                     u3381:	
  6583  0D99  2D9F               	goto	l3351
  6584  0D9A                     u3380:	
  6585  0D9A                     l3347:	
  6586  0D9A  1FA7               	btfss	___xxtofl@val+3,7
  6587  0D9B  2D9D               	goto	u3391
  6588  0D9C  2D9E               	goto	u3390
  6589  0D9D                     u3391:	
  6590  0D9D  2D9F               	goto	l3351
  6591  0D9E                     u3390:	
  6592  0D9E                     l3349:	
  6593  0D9E  17B1               	bsf	___xxtofl@arg+3,7
  6594  0D9F                     l3351:	
  6595  0D9F  0831               	movf	___xxtofl@arg+3,w
  6596  0DA0  00A7               	movwf	?___xxtofl+3
  6597  0DA1  0830               	movf	___xxtofl@arg+2,w
  6598  0DA2  00A6               	movwf	?___xxtofl+2
  6599  0DA3  082F               	movf	___xxtofl@arg+1,w
  6600  0DA4  00A5               	movwf	?___xxtofl+1
  6601  0DA5  082E               	movf	___xxtofl@arg,w
  6602  0DA6  00A4               	movwf	?___xxtofl
  6603  0DA7                     l1297:	
  6604  0DA7  0008               	return
  6605  0DA8                     __end_of___xxtofl:	
  6606                           
  6607                           	psect	text16
  6608  0B74                     __ptext16:	
  6609 ;; *************** function ___fltol *****************
  6610 ;; Defined at:
  6611 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;  f1              4    0[BANK0 ] unsigned char 
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;  exp1            1   10[BANK0 ] unsigned char 
  6616 ;;  sign1           1    9[BANK0 ] unsigned char 
  6617 ;; Return value:  Size  Location     Type
  6618 ;;                  4    0[BANK0 ] long 
  6619 ;; Registers used:
  6620 ;;		wreg, status,2, status,0
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6626 ;;      Params:         0       4       0       0       0       0
  6627 ;;      Locals:         0       2       0       0       0       0
  6628 ;;      Temps:          0       5       0       0       0       0
  6629 ;;      Totals:         0      11       0       0       0       0
  6630 ;;Total ram usage:       11 bytes
  6631 ;; Hardware stack levels used:    1
  6632 ;; Hardware stack levels required when called:    4
  6633 ;; This function calls:
  6634 ;;		Nothing
  6635 ;; This function is called by:
  6636 ;;		_comunicacao
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           
  6641                           ;psect for function ___fltol
  6642  0B74                     ___fltol:	
  6643  0B74                     l2995:	
  6644                           ;incstack = 0
  6645                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6646                           
  6647  0B74  1003               	clrc
  6648  0B75  0020               	movlb	0	; select bank0
  6649  0B76  0D22               	rlf	___fltol@f1+2,w
  6650  0B77  0D23               	rlf	___fltol@f1+3,w
  6651  0B78  00A4               	movwf	??___fltol
  6652  0B79  0824               	movf	??___fltol,w
  6653  0B7A  00AA               	movwf	___fltol@exp1
  6654  0B7B  082A               	movf	___fltol@exp1,w
  6655  0B7C  1D03               	btfss	3,2
  6656  0B7D  2B7F               	goto	u2611
  6657  0B7E  2B80               	goto	u2610
  6658  0B7F                     u2611:	
  6659  0B7F  2B89               	goto	l3001
  6660  0B80                     u2610:	
  6661  0B80                     l2997:	
  6662  0B80  3000               	movlw	0
  6663  0B81  00A3               	movwf	?___fltol+3
  6664  0B82  3000               	movlw	0
  6665  0B83  00A2               	movwf	?___fltol+2
  6666  0B84  3000               	movlw	0
  6667  0B85  00A1               	movwf	?___fltol+1
  6668  0B86  3000               	movlw	0
  6669  0B87  00A0               	movwf	?___fltol
  6670  0B88  2BE8               	goto	l1054
  6671  0B89                     l3001:	
  6672  0B89  0820               	movf	___fltol@f1,w
  6673  0B8A  00A4               	movwf	??___fltol
  6674  0B8B  0821               	movf	___fltol@f1+1,w
  6675  0B8C  00A5               	movwf	??___fltol+1
  6676  0B8D  0822               	movf	___fltol@f1+2,w
  6677  0B8E  00A6               	movwf	??___fltol+2
  6678  0B8F  0823               	movf	___fltol@f1+3,w
  6679  0B90  00A7               	movwf	??___fltol+3
  6680  0B91  301F               	movlw	31
  6681  0B92                     u2625:	
  6682  0B92  36A7               	lsrf	??___fltol+3,f
  6683  0B93  0CA6               	rrf	??___fltol+2,f
  6684  0B94  0CA5               	rrf	??___fltol+1,f
  6685  0B95  0CA4               	rrf	??___fltol,f
  6686  0B96                     u2620:	
  6687  0B96  0B89               	decfsz	9,f
  6688  0B97  2B92               	goto	u2625
  6689  0B98  0824               	movf	??___fltol,w
  6690  0B99  00A8               	movwf	??___fltol+4
  6691  0B9A  0828               	movf	??___fltol+4,w
  6692  0B9B  00A9               	movwf	___fltol@sign1
  6693  0B9C                     l3003:	
  6694  0B9C  17A2               	bsf	___fltol@f1+2,7
  6695  0B9D                     l3005:	
  6696  0B9D  30FF               	movlw	255
  6697  0B9E  05A0               	andwf	___fltol@f1,f
  6698  0B9F  30FF               	movlw	255
  6699  0BA0  05A1               	andwf	___fltol@f1+1,f
  6700  0BA1  30FF               	movlw	255
  6701  0BA2  05A2               	andwf	___fltol@f1+2,f
  6702  0BA3  3000               	movlw	0
  6703  0BA4  05A3               	andwf	___fltol@f1+3,f
  6704  0BA5                     l3007:	
  6705  0BA5  3096               	movlw	150
  6706  0BA6  02AA               	subwf	___fltol@exp1,f
  6707  0BA7                     l3009:	
  6708  0BA7  1FAA               	btfss	___fltol@exp1,7
  6709  0BA8  2BAA               	goto	u2631
  6710  0BA9  2BAB               	goto	u2630
  6711  0BAA                     u2631:	
  6712  0BAA  2BC3               	goto	l3019
  6713  0BAB                     u2630:	
  6714  0BAB                     l3011:	
  6715  0BAB  082A               	movf	___fltol@exp1,w
  6716  0BAC  3A80               	xorlw	128
  6717  0BAD  3E97               	addlw	151
  6718  0BAE  1803               	skipnc
  6719  0BAF  2BB1               	goto	u2641
  6720  0BB0  2BB2               	goto	u2640
  6721  0BB1                     u2641:	
  6722  0BB1  2BB3               	goto	l3017
  6723  0BB2                     u2640:	
  6724  0BB2  2B80               	goto	l2997
  6725  0BB3                     l3017:	
  6726  0BB3  3001               	movlw	1
  6727  0BB4                     u2655:	
  6728  0BB4  36A3               	lsrf	___fltol@f1+3,f
  6729  0BB5  0CA2               	rrf	___fltol@f1+2,f
  6730  0BB6  0CA1               	rrf	___fltol@f1+1,f
  6731  0BB7  0CA0               	rrf	___fltol@f1,f
  6732  0BB8  0B89               	decfsz	9,f
  6733  0BB9  2BB4               	goto	u2655
  6734  0BBA  3001               	movlw	1
  6735  0BBB  00A4               	movwf	??___fltol
  6736  0BBC  0824               	movf	??___fltol,w
  6737  0BBD  07AA               	addwf	___fltol@exp1,f
  6738  0BBE  1D03               	btfss	3,2
  6739  0BBF  2BC1               	goto	u2661
  6740  0BC0  2BC2               	goto	u2660
  6741  0BC1                     u2661:	
  6742  0BC1  2BB3               	goto	l3017
  6743  0BC2                     u2660:	
  6744  0BC2  2BD8               	goto	l3027
  6745  0BC3                     l3019:	
  6746  0BC3  3020               	movlw	32
  6747  0BC4  022A               	subwf	___fltol@exp1,w
  6748  0BC5  1C03               	skipc
  6749  0BC6  2BC8               	goto	u2671
  6750  0BC7  2BC9               	goto	u2670
  6751  0BC8                     u2671:	
  6752  0BC8  2BD3               	goto	l1061
  6753  0BC9                     u2670:	
  6754  0BC9  2B80               	goto	l2997
  6755  0BCA                     l3025:	
  6756  0BCA  3001               	movlw	1
  6757  0BCB                     u2685:	
  6758  0BCB  35A0               	lslf	___fltol@f1,f
  6759  0BCC  0DA1               	rlf	___fltol@f1+1,f
  6760  0BCD  0DA2               	rlf	___fltol@f1+2,f
  6761  0BCE  0DA3               	rlf	___fltol@f1+3,f
  6762  0BCF  0B89               	decfsz	9,f
  6763  0BD0  2BCB               	goto	u2685
  6764  0BD1  3001               	movlw	1
  6765  0BD2  02AA               	subwf	___fltol@exp1,f
  6766  0BD3                     l1061:	
  6767  0BD3  082A               	movf	___fltol@exp1,w
  6768  0BD4  1D03               	btfss	3,2
  6769  0BD5  2BD7               	goto	u2691
  6770  0BD6  2BD8               	goto	u2690
  6771  0BD7                     u2691:	
  6772  0BD7  2BCA               	goto	l3025
  6773  0BD8                     u2690:	
  6774  0BD8                     l3027:	
  6775  0BD8  0829               	movf	___fltol@sign1,w
  6776  0BD9  1903               	btfsc	3,2
  6777  0BDA  2BDC               	goto	u2701
  6778  0BDB  2BDD               	goto	u2700
  6779  0BDC                     u2701:	
  6780  0BDC  2BE8               	goto	l1064
  6781  0BDD                     u2700:	
  6782  0BDD                     l3029:	
  6783  0BDD  09A0               	comf	___fltol@f1,f
  6784  0BDE  09A1               	comf	___fltol@f1+1,f
  6785  0BDF  09A2               	comf	___fltol@f1+2,f
  6786  0BE0  09A3               	comf	___fltol@f1+3,f
  6787  0BE1  0AA0               	incf	___fltol@f1,f
  6788  0BE2  1903               	skipnz
  6789  0BE3  0AA1               	incf	___fltol@f1+1,f
  6790  0BE4  1903               	skipnz
  6791  0BE5  0AA2               	incf	___fltol@f1+2,f
  6792  0BE6  1903               	skipnz
  6793  0BE7  0AA3               	incf	___fltol@f1+3,f
  6794  0BE8                     l1064:	
  6795  0BE8                     l1054:	
  6796  0BE8  0008               	return
  6797  0BE9                     __end_of___fltol:	
  6798                           
  6799                           	psect	text17
  6800  0053                     __ptext17:	
  6801 ;; *************** function ___flmul *****************
  6802 ;; Defined at:
  6803 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  b               4   18[BANK0 ] long 
  6806 ;;  a               4   22[BANK0 ] long 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  prod            4   38[BANK0 ] struct .
  6809 ;;  grs             4   32[BANK0 ] unsigned long 
  6810 ;;  temp            2   42[BANK0 ] struct .
  6811 ;;  bexp            1   37[BANK0 ] unsigned char 
  6812 ;;  aexp            1   36[BANK0 ] unsigned char 
  6813 ;;  sign            1   31[BANK0 ] unsigned char 
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  4   18[BANK0 ] unsigned char 
  6816 ;; Registers used:
  6817 ;;		wreg, status,2, status,0, pclath, cstack
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6823 ;;      Params:         0       8       0       0       0       0
  6824 ;;      Locals:         0      13       0       0       0       0
  6825 ;;      Temps:          0       5       0       0       0       0
  6826 ;;      Totals:         0      26       0       0       0       0
  6827 ;;Total ram usage:       26 bytes
  6828 ;; Hardware stack levels used:    1
  6829 ;; Hardware stack levels required when called:    5
  6830 ;; This function calls:
  6831 ;;		__Umul8_16
  6832 ;; This function is called by:
  6833 ;;		_comunicacao
  6834 ;;		_controle
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           
  6839                           ;psect for function ___flmul
  6840  0053                     ___flmul:	
  6841  0053                     l3171:	
  6842                           ;incstack = 0
  6843                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  6844                           
  6845  0053  0020               	movlb	0	; select bank0
  6846  0054  0835               	movf	___flmul@b+3,w
  6847  0055  3980               	andlw	128
  6848  0056  00BA               	movwf	??___flmul
  6849  0057  083A               	movf	??___flmul,w
  6850  0058  00BF               	movwf	___flmul@sign
  6851  0059                     l3173:	
  6852  0059  3535               	lslf	___flmul@b+3,w
  6853  005A  00BA               	movwf	??___flmul
  6854  005B  083A               	movf	??___flmul,w
  6855  005C  00C5               	movwf	___flmul@bexp
  6856  005D                     l3175:	
  6857  005D  1FB4               	btfss	___flmul@b+2,7
  6858  005E  2860               	goto	u3001
  6859  005F  2861               	goto	u3000
  6860  0060                     u3001:	
  6861  0060  2862               	goto	l3179
  6862  0061                     u3000:	
  6863  0061                     l3177:	
  6864  0061  1445               	bsf	___flmul@bexp,0
  6865  0062                     l3179:	
  6866  0062  0845               	movf	___flmul@bexp,w
  6867  0063  1903               	btfsc	3,2
  6868  0064  2866               	goto	u3011
  6869  0065  2867               	goto	u3010
  6870  0066                     u3011:	
  6871  0066  2876               	goto	l3187
  6872  0067                     u3010:	
  6873  0067                     l3181:	
  6874  0067  0A45               	incf	___flmul@bexp,w
  6875  0068  1D03               	btfss	3,2
  6876  0069  286B               	goto	u3021
  6877  006A  286C               	goto	u3020
  6878  006B                     u3021:	
  6879  006B  2874               	goto	l3185
  6880  006C                     u3020:	
  6881  006C                     l3183:	
  6882  006C  3000               	movlw	0
  6883  006D  00B5               	movwf	___flmul@b+3
  6884  006E  3000               	movlw	0
  6885  006F  00B4               	movwf	___flmul@b+2
  6886  0070  3000               	movlw	0
  6887  0071  00B3               	movwf	___flmul@b+1
  6888  0072  3000               	movlw	0
  6889  0073  00B2               	movwf	___flmul@b
  6890  0074                     l3185:	
  6891  0074  17B4               	bsf	___flmul@b+2,7
  6892  0075  287E               	goto	l3189
  6893  0076                     l3187:	
  6894  0076  3000               	movlw	0
  6895  0077  00B5               	movwf	___flmul@b+3
  6896  0078  3000               	movlw	0
  6897  0079  00B4               	movwf	___flmul@b+2
  6898  007A  3000               	movlw	0
  6899  007B  00B3               	movwf	___flmul@b+1
  6900  007C  3000               	movlw	0
  6901  007D  00B2               	movwf	___flmul@b
  6902  007E                     l3189:	
  6903  007E  0839               	movf	___flmul@a+3,w
  6904  007F  3980               	andlw	128
  6905  0080  00BA               	movwf	??___flmul
  6906  0081  083A               	movf	??___flmul,w
  6907  0082  06BF               	xorwf	___flmul@sign,f
  6908  0083                     l3191:	
  6909  0083  3539               	lslf	___flmul@a+3,w
  6910  0084  00BA               	movwf	??___flmul
  6911  0085  083A               	movf	??___flmul,w
  6912  0086  00C4               	movwf	___flmul@aexp
  6913  0087                     l3193:	
  6914  0087  1FB8               	btfss	___flmul@a+2,7
  6915  0088  288A               	goto	u3031
  6916  0089  288B               	goto	u3030
  6917  008A                     u3031:	
  6918  008A  288C               	goto	l3197
  6919  008B                     u3030:	
  6920  008B                     l3195:	
  6921  008B  1444               	bsf	___flmul@aexp,0
  6922  008C                     l3197:	
  6923  008C  0844               	movf	___flmul@aexp,w
  6924  008D  1903               	btfsc	3,2
  6925  008E  2890               	goto	u3041
  6926  008F  2891               	goto	u3040
  6927  0090                     u3041:	
  6928  0090  28A0               	goto	l3205
  6929  0091                     u3040:	
  6930  0091                     l3199:	
  6931  0091  0A44               	incf	___flmul@aexp,w
  6932  0092  1D03               	btfss	3,2
  6933  0093  2895               	goto	u3051
  6934  0094  2896               	goto	u3050
  6935  0095                     u3051:	
  6936  0095  289E               	goto	l3203
  6937  0096                     u3050:	
  6938  0096                     l3201:	
  6939  0096  3000               	movlw	0
  6940  0097  00B9               	movwf	___flmul@a+3
  6941  0098  3000               	movlw	0
  6942  0099  00B8               	movwf	___flmul@a+2
  6943  009A  3000               	movlw	0
  6944  009B  00B7               	movwf	___flmul@a+1
  6945  009C  3000               	movlw	0
  6946  009D  00B6               	movwf	___flmul@a
  6947  009E                     l3203:	
  6948  009E  17B8               	bsf	___flmul@a+2,7
  6949  009F  28A8               	goto	l3207
  6950  00A0                     l3205:	
  6951  00A0  3000               	movlw	0
  6952  00A1  00B9               	movwf	___flmul@a+3
  6953  00A2  3000               	movlw	0
  6954  00A3  00B8               	movwf	___flmul@a+2
  6955  00A4  3000               	movlw	0
  6956  00A5  00B7               	movwf	___flmul@a+1
  6957  00A6  3000               	movlw	0
  6958  00A7  00B6               	movwf	___flmul@a
  6959  00A8                     l3207:	
  6960  00A8  0844               	movf	___flmul@aexp,w
  6961  00A9  1903               	btfsc	3,2
  6962  00AA  28AC               	goto	u3061
  6963  00AB  28AD               	goto	u3060
  6964  00AC                     u3061:	
  6965  00AC  28B2               	goto	l3211
  6966  00AD                     u3060:	
  6967  00AD                     l3209:	
  6968  00AD  0845               	movf	___flmul@bexp,w
  6969  00AE  1D03               	btfss	3,2
  6970  00AF  28B1               	goto	u3071
  6971  00B0  28B2               	goto	u3070
  6972  00B1                     u3071:	
  6973  00B1  28BB               	goto	l3215
  6974  00B2                     u3070:	
  6975  00B2                     l3211:	
  6976  00B2  3000               	movlw	0
  6977  00B3  00B5               	movwf	?___flmul+3
  6978  00B4  3000               	movlw	0
  6979  00B5  00B4               	movwf	?___flmul+2
  6980  00B6  3000               	movlw	0
  6981  00B7  00B3               	movwf	?___flmul+1
  6982  00B8  3000               	movlw	0
  6983  00B9  00B2               	movwf	?___flmul
  6984  00BA  2AA9               	goto	l1257
  6985  00BB                     l3215:	
  6986  00BB  0832               	movf	___flmul@b,w
  6987  00BC  00BA               	movwf	??___flmul
  6988  00BD  083A               	movf	??___flmul,w
  6989  00BE  00A0               	movwf	__Umul8_16@multiplicand
  6990  00BF  0838               	movf	___flmul@a+2,w
  6991  00C0  318A  2272  3180   	fcall	__Umul8_16
  6992  00C3  0020               	movlb	0	; select bank0
  6993  00C4  0821               	movf	?__Umul8_16+1,w
  6994  00C5  00CB               	movwf	___flmul@temp+1
  6995  00C6  0820               	movf	?__Umul8_16,w
  6996  00C7  00CA               	movwf	___flmul@temp
  6997  00C8                     l3217:	
  6998  00C8  084A               	movf	___flmul@temp,w
  6999  00C9  00BA               	movwf	??___flmul
  7000  00CA  01BB               	clrf	??___flmul+1
  7001  00CB  01BC               	clrf	??___flmul+2
  7002  00CC  01BD               	clrf	??___flmul+3
  7003  00CD  083D               	movf	??___flmul+3,w
  7004  00CE  00C3               	movwf	___flmul@grs+3
  7005  00CF  083C               	movf	??___flmul+2,w
  7006  00D0  00C2               	movwf	___flmul@grs+2
  7007  00D1  083B               	movf	??___flmul+1,w
  7008  00D2  00C1               	movwf	___flmul@grs+1
  7009  00D3  083A               	movf	??___flmul,w
  7010  00D4  00C0               	movwf	___flmul@grs
  7011  00D5                     l3219:	
  7012  00D5  084B               	movf	___flmul@temp+1,w
  7013  00D6  00BA               	movwf	??___flmul
  7014  00D7  01BB               	clrf	??___flmul+1
  7015  00D8  01BC               	clrf	??___flmul+2
  7016  00D9  01BD               	clrf	??___flmul+3
  7017  00DA  083D               	movf	??___flmul+3,w
  7018  00DB  00C9               	movwf	___flmul@prod+3
  7019  00DC  083C               	movf	??___flmul+2,w
  7020  00DD  00C8               	movwf	___flmul@prod+2
  7021  00DE  083B               	movf	??___flmul+1,w
  7022  00DF  00C7               	movwf	___flmul@prod+1
  7023  00E0  083A               	movf	??___flmul,w
  7024  00E1  00C6               	movwf	___flmul@prod
  7025  00E2  0833               	movf	___flmul@b+1,w
  7026  00E3  00BA               	movwf	??___flmul
  7027  00E4  083A               	movf	??___flmul,w
  7028  00E5  00A0               	movwf	__Umul8_16@multiplicand
  7029  00E6  0837               	movf	___flmul@a+1,w
  7030  00E7  318A  2272  3180   	fcall	__Umul8_16
  7031  00EA  0020               	movlb	0	; select bank0
  7032  00EB  0821               	movf	?__Umul8_16+1,w
  7033  00EC  00CB               	movwf	___flmul@temp+1
  7034  00ED  0820               	movf	?__Umul8_16,w
  7035  00EE  00CA               	movwf	___flmul@temp
  7036  00EF                     l3221:	
  7037  00EF  084A               	movf	___flmul@temp,w
  7038  00F0  00BA               	movwf	??___flmul
  7039  00F1  01BB               	clrf	??___flmul+1
  7040  00F2  01BC               	clrf	??___flmul+2
  7041  00F3  01BD               	clrf	??___flmul+3
  7042  00F4  083A               	movf	??___flmul,w
  7043  00F5  07C0               	addwf	___flmul@grs,f
  7044  00F6  083B               	movf	??___flmul+1,w
  7045  00F7  3DC1               	addwfc	___flmul@grs+1,f
  7046  00F8  083C               	movf	??___flmul+2,w
  7047  00F9  3DC2               	addwfc	___flmul@grs+2,f
  7048  00FA  083D               	movf	??___flmul+3,w
  7049  00FB  3DC3               	addwfc	___flmul@grs+3,f
  7050  00FC                     l3223:	
  7051  00FC  084B               	movf	___flmul@temp+1,w
  7052  00FD  00BA               	movwf	??___flmul
  7053  00FE  01BB               	clrf	??___flmul+1
  7054  00FF  01BC               	clrf	??___flmul+2
  7055  0100  01BD               	clrf	??___flmul+3
  7056  0101  083A               	movf	??___flmul,w
  7057  0102  07C6               	addwf	___flmul@prod,f
  7058  0103  083B               	movf	??___flmul+1,w
  7059  0104  3DC7               	addwfc	___flmul@prod+1,f
  7060  0105  083C               	movf	??___flmul+2,w
  7061  0106  3DC8               	addwfc	___flmul@prod+2,f
  7062  0107  083D               	movf	??___flmul+3,w
  7063  0108  3DC9               	addwfc	___flmul@prod+3,f
  7064  0109  0834               	movf	___flmul@b+2,w
  7065  010A  00BA               	movwf	??___flmul
  7066  010B  083A               	movf	??___flmul,w
  7067  010C  00A0               	movwf	__Umul8_16@multiplicand
  7068  010D  0836               	movf	___flmul@a,w
  7069  010E  318A  2272  3180   	fcall	__Umul8_16
  7070  0111  0020               	movlb	0	; select bank0
  7071  0112  0821               	movf	?__Umul8_16+1,w
  7072  0113  00CB               	movwf	___flmul@temp+1
  7073  0114  0820               	movf	?__Umul8_16,w
  7074  0115  00CA               	movwf	___flmul@temp
  7075  0116                     l3225:	
  7076  0116  084A               	movf	___flmul@temp,w
  7077  0117  00BA               	movwf	??___flmul
  7078  0118  01BB               	clrf	??___flmul+1
  7079  0119  01BC               	clrf	??___flmul+2
  7080  011A  01BD               	clrf	??___flmul+3
  7081  011B  083A               	movf	??___flmul,w
  7082  011C  07C0               	addwf	___flmul@grs,f
  7083  011D  083B               	movf	??___flmul+1,w
  7084  011E  3DC1               	addwfc	___flmul@grs+1,f
  7085  011F  083C               	movf	??___flmul+2,w
  7086  0120  3DC2               	addwfc	___flmul@grs+2,f
  7087  0121  083D               	movf	??___flmul+3,w
  7088  0122  3DC3               	addwfc	___flmul@grs+3,f
  7089  0123                     l3227:	
  7090  0123  084B               	movf	___flmul@temp+1,w
  7091  0124  00BA               	movwf	??___flmul
  7092  0125  01BB               	clrf	??___flmul+1
  7093  0126  01BC               	clrf	??___flmul+2
  7094  0127  01BD               	clrf	??___flmul+3
  7095  0128  083A               	movf	??___flmul,w
  7096  0129  07C6               	addwf	___flmul@prod,f
  7097  012A  083B               	movf	??___flmul+1,w
  7098  012B  3DC7               	addwfc	___flmul@prod+1,f
  7099  012C  083C               	movf	??___flmul+2,w
  7100  012D  3DC8               	addwfc	___flmul@prod+2,f
  7101  012E  083D               	movf	??___flmul+3,w
  7102  012F  3DC9               	addwfc	___flmul@prod+3,f
  7103  0130                     l3229:	
  7104  0130  3008               	movlw	8
  7105  0131                     u3085:	
  7106  0131  35C0               	lslf	___flmul@grs,f
  7107  0132  0DC1               	rlf	___flmul@grs+1,f
  7108  0133  0DC2               	rlf	___flmul@grs+2,f
  7109  0134  0DC3               	rlf	___flmul@grs+3,f
  7110  0135  0B89               	decfsz	9,f
  7111  0136  2931               	goto	u3085
  7112  0137                     l3231:	
  7113  0137  0833               	movf	___flmul@b+1,w
  7114  0138  00BA               	movwf	??___flmul
  7115  0139  083A               	movf	??___flmul,w
  7116  013A  00A0               	movwf	__Umul8_16@multiplicand
  7117  013B  0836               	movf	___flmul@a,w
  7118  013C  318A  2272  3180   	fcall	__Umul8_16
  7119  013F  0020               	movlb	0	; select bank0
  7120  0140  0821               	movf	?__Umul8_16+1,w
  7121  0141  00CB               	movwf	___flmul@temp+1
  7122  0142  0820               	movf	?__Umul8_16,w
  7123  0143  00CA               	movwf	___flmul@temp
  7124  0144                     l3233:	
  7125  0144  084A               	movf	___flmul@temp,w
  7126  0145  07C0               	addwf	___flmul@grs,f
  7127  0146  084B               	movf	___flmul@temp+1,w
  7128  0147  3DC1               	addwfc	___flmul@grs+1,f
  7129  0148  3000               	movlw	0
  7130  0149  3DC2               	addwfc	___flmul@grs+2,f
  7131  014A  3DC3               	addwfc	___flmul@grs+3,f
  7132  014B                     l3235:	
  7133  014B  0832               	movf	___flmul@b,w
  7134  014C  00BA               	movwf	??___flmul
  7135  014D  083A               	movf	??___flmul,w
  7136  014E  00A0               	movwf	__Umul8_16@multiplicand
  7137  014F  0837               	movf	___flmul@a+1,w
  7138  0150  318A  2272  3180   	fcall	__Umul8_16
  7139  0153  0020               	movlb	0	; select bank0
  7140  0154  0821               	movf	?__Umul8_16+1,w
  7141  0155  00CB               	movwf	___flmul@temp+1
  7142  0156  0820               	movf	?__Umul8_16,w
  7143  0157  00CA               	movwf	___flmul@temp
  7144  0158                     l3237:	
  7145  0158  084A               	movf	___flmul@temp,w
  7146  0159  07C0               	addwf	___flmul@grs,f
  7147  015A  084B               	movf	___flmul@temp+1,w
  7148  015B  3DC1               	addwfc	___flmul@grs+1,f
  7149  015C  3000               	movlw	0
  7150  015D  3DC2               	addwfc	___flmul@grs+2,f
  7151  015E  3DC3               	addwfc	___flmul@grs+3,f
  7152  015F                     l3239:	
  7153  015F  3008               	movlw	8
  7154  0160                     u3095:	
  7155  0160  35C0               	lslf	___flmul@grs,f
  7156  0161  0DC1               	rlf	___flmul@grs+1,f
  7157  0162  0DC2               	rlf	___flmul@grs+2,f
  7158  0163  0DC3               	rlf	___flmul@grs+3,f
  7159  0164  0B89               	decfsz	9,f
  7160  0165  2960               	goto	u3095
  7161  0166  0832               	movf	___flmul@b,w
  7162  0167  00BA               	movwf	??___flmul
  7163  0168  083A               	movf	??___flmul,w
  7164  0169  00A0               	movwf	__Umul8_16@multiplicand
  7165  016A  0836               	movf	___flmul@a,w
  7166  016B  318A  2272  3180   	fcall	__Umul8_16
  7167  016E  0020               	movlb	0	; select bank0
  7168  016F  0821               	movf	?__Umul8_16+1,w
  7169  0170  00CB               	movwf	___flmul@temp+1
  7170  0171  0820               	movf	?__Umul8_16,w
  7171  0172  00CA               	movwf	___flmul@temp
  7172  0173                     l3241:	
  7173  0173  084A               	movf	___flmul@temp,w
  7174  0174  07C0               	addwf	___flmul@grs,f
  7175  0175  084B               	movf	___flmul@temp+1,w
  7176  0176  3DC1               	addwfc	___flmul@grs+1,f
  7177  0177  3000               	movlw	0
  7178  0178  3DC2               	addwfc	___flmul@grs+2,f
  7179  0179  3DC3               	addwfc	___flmul@grs+3,f
  7180  017A                     l3243:	
  7181  017A  0833               	movf	___flmul@b+1,w
  7182  017B  00BA               	movwf	??___flmul
  7183  017C  083A               	movf	??___flmul,w
  7184  017D  00A0               	movwf	__Umul8_16@multiplicand
  7185  017E  0838               	movf	___flmul@a+2,w
  7186  017F  318A  2272  3180   	fcall	__Umul8_16
  7187  0182  0020               	movlb	0	; select bank0
  7188  0183  0821               	movf	?__Umul8_16+1,w
  7189  0184  00CB               	movwf	___flmul@temp+1
  7190  0185  0820               	movf	?__Umul8_16,w
  7191  0186  00CA               	movwf	___flmul@temp
  7192  0187  084A               	movf	___flmul@temp,w
  7193  0188  07C6               	addwf	___flmul@prod,f
  7194  0189  084B               	movf	___flmul@temp+1,w
  7195  018A  3DC7               	addwfc	___flmul@prod+1,f
  7196  018B  3000               	movlw	0
  7197  018C  3DC8               	addwfc	___flmul@prod+2,f
  7198  018D  3DC9               	addwfc	___flmul@prod+3,f
  7199  018E                     l3245:	
  7200  018E  0834               	movf	___flmul@b+2,w
  7201  018F  00BA               	movwf	??___flmul
  7202  0190  083A               	movf	??___flmul,w
  7203  0191  00A0               	movwf	__Umul8_16@multiplicand
  7204  0192  0837               	movf	___flmul@a+1,w
  7205  0193  318A  2272  3180   	fcall	__Umul8_16
  7206  0196  0020               	movlb	0	; select bank0
  7207  0197  0821               	movf	?__Umul8_16+1,w
  7208  0198  00CB               	movwf	___flmul@temp+1
  7209  0199  0820               	movf	?__Umul8_16,w
  7210  019A  00CA               	movwf	___flmul@temp
  7211  019B                     l3247:	
  7212  019B  084A               	movf	___flmul@temp,w
  7213  019C  07C6               	addwf	___flmul@prod,f
  7214  019D  084B               	movf	___flmul@temp+1,w
  7215  019E  3DC7               	addwfc	___flmul@prod+1,f
  7216  019F  3000               	movlw	0
  7217  01A0  3DC8               	addwfc	___flmul@prod+2,f
  7218  01A1  3DC9               	addwfc	___flmul@prod+3,f
  7219  01A2  0834               	movf	___flmul@b+2,w
  7220  01A3  00BA               	movwf	??___flmul
  7221  01A4  083A               	movf	??___flmul,w
  7222  01A5  00A0               	movwf	__Umul8_16@multiplicand
  7223  01A6  0838               	movf	___flmul@a+2,w
  7224  01A7  318A  2272  3180   	fcall	__Umul8_16
  7225  01AA  0020               	movlb	0	; select bank0
  7226  01AB  0821               	movf	?__Umul8_16+1,w
  7227  01AC  00CB               	movwf	___flmul@temp+1
  7228  01AD  0820               	movf	?__Umul8_16,w
  7229  01AE  00CA               	movwf	___flmul@temp
  7230  01AF                     l3249:	
  7231  01AF  084A               	movf	___flmul@temp,w
  7232  01B0  00BA               	movwf	??___flmul
  7233  01B1  084B               	movf	___flmul@temp+1,w
  7234  01B2  00BB               	movwf	??___flmul+1
  7235  01B3  01BC               	clrf	??___flmul+2
  7236  01B4  01BD               	clrf	??___flmul+3
  7237  01B5  3008               	movlw	8
  7238  01B6                     u3105:	
  7239  01B6  35BA               	lslf	??___flmul,f
  7240  01B7  0DBB               	rlf	??___flmul+1,f
  7241  01B8  0DBC               	rlf	??___flmul+2,f
  7242  01B9  0DBD               	rlf	??___flmul+3,f
  7243  01BA                     u3100:	
  7244  01BA  0B89               	decfsz	9,f
  7245  01BB  29B6               	goto	u3105
  7246  01BC  083A               	movf	??___flmul,w
  7247  01BD  07C6               	addwf	___flmul@prod,f
  7248  01BE  083B               	movf	??___flmul+1,w
  7249  01BF  3DC7               	addwfc	___flmul@prod+1,f
  7250  01C0  083C               	movf	??___flmul+2,w
  7251  01C1  3DC8               	addwfc	___flmul@prod+2,f
  7252  01C2  083D               	movf	??___flmul+3,w
  7253  01C3  3DC9               	addwfc	___flmul@prod+3,f
  7254  01C4                     l3251:	
  7255  01C4  0840               	movf	___flmul@grs,w
  7256  01C5  00BA               	movwf	??___flmul
  7257  01C6  0841               	movf	___flmul@grs+1,w
  7258  01C7  00BB               	movwf	??___flmul+1
  7259  01C8  0842               	movf	___flmul@grs+2,w
  7260  01C9  00BC               	movwf	??___flmul+2
  7261  01CA  0843               	movf	___flmul@grs+3,w
  7262  01CB  00BD               	movwf	??___flmul+3
  7263  01CC  3018               	movlw	24
  7264  01CD                     u3115:	
  7265  01CD  36BD               	lsrf	??___flmul+3,f
  7266  01CE  0CBC               	rrf	??___flmul+2,f
  7267  01CF  0CBB               	rrf	??___flmul+1,f
  7268  01D0  0CBA               	rrf	??___flmul,f
  7269  01D1                     u3110:	
  7270  01D1  0B89               	decfsz	9,f
  7271  01D2  29CD               	goto	u3115
  7272  01D3  083A               	movf	??___flmul,w
  7273  01D4  07C6               	addwf	___flmul@prod,f
  7274  01D5  083B               	movf	??___flmul+1,w
  7275  01D6  3DC7               	addwfc	___flmul@prod+1,f
  7276  01D7  083C               	movf	??___flmul+2,w
  7277  01D8  3DC8               	addwfc	___flmul@prod+2,f
  7278  01D9  083D               	movf	??___flmul+3,w
  7279  01DA  3DC9               	addwfc	___flmul@prod+3,f
  7280  01DB                     l3253:	
  7281  01DB  3008               	movlw	8
  7282  01DC                     u3125:	
  7283  01DC  35C0               	lslf	___flmul@grs,f
  7284  01DD  0DC1               	rlf	___flmul@grs+1,f
  7285  01DE  0DC2               	rlf	___flmul@grs+2,f
  7286  01DF  0DC3               	rlf	___flmul@grs+3,f
  7287  01E0  0B89               	decfsz	9,f
  7288  01E1  29DC               	goto	u3125
  7289  01E2                     l3255:	
  7290  01E2  0845               	movf	___flmul@bexp,w
  7291  01E3  0744               	addwf	___flmul@aexp,w
  7292  01E4  00BA               	movwf	??___flmul
  7293  01E5  01BB               	clrf	??___flmul+1
  7294  01E6  0DBB               	rlf	??___flmul+1,f
  7295  01E7  083A               	movf	??___flmul,w
  7296  01E8  3E82               	addlw	130
  7297  01E9  00CA               	movwf	___flmul@temp
  7298  01EA  30FF               	movlw	255
  7299  01EB  3D3B               	addwfc	??___flmul+1,w
  7300  01EC  00CB               	movwf	___flmul@temp+1
  7301  01ED  2A05               	goto	l3267
  7302  01EE                     l3257:	
  7303  01EE  3001               	movlw	1
  7304  01EF                     u3135:	
  7305  01EF  35C6               	lslf	___flmul@prod,f
  7306  01F0  0DC7               	rlf	___flmul@prod+1,f
  7307  01F1  0DC8               	rlf	___flmul@prod+2,f
  7308  01F2  0DC9               	rlf	___flmul@prod+3,f
  7309  01F3  0B89               	decfsz	9,f
  7310  01F4  29EF               	goto	u3135
  7311  01F5                     l3259:	
  7312  01F5  1FC3               	btfss	___flmul@grs+3,7
  7313  01F6  29F8               	goto	u3141
  7314  01F7  29F9               	goto	u3140
  7315  01F8                     u3141:	
  7316  01F8  29FA               	goto	l3263
  7317  01F9                     u3140:	
  7318  01F9                     l3261:	
  7319  01F9  1446               	bsf	___flmul@prod,0
  7320  01FA                     l3263:	
  7321  01FA  3001               	movlw	1
  7322  01FB                     u3155:	
  7323  01FB  35C0               	lslf	___flmul@grs,f
  7324  01FC  0DC1               	rlf	___flmul@grs+1,f
  7325  01FD  0DC2               	rlf	___flmul@grs+2,f
  7326  01FE  0DC3               	rlf	___flmul@grs+3,f
  7327  01FF  0B89               	decfsz	9,f
  7328  0200  29FB               	goto	u3155
  7329  0201                     l3265:	
  7330  0201  30FF               	movlw	255
  7331  0202  07CA               	addwf	___flmul@temp,f
  7332  0203  30FF               	movlw	255
  7333  0204  3DCB               	addwfc	___flmul@temp+1,f
  7334  0205                     l3267:	
  7335  0205  1FC8               	btfss	___flmul@prod+2,7
  7336  0206  2A08               	goto	u3161
  7337  0207  2A09               	goto	u3160
  7338  0208                     u3161:	
  7339  0208  29EE               	goto	l3257
  7340  0209                     u3160:	
  7341  0209                     l3269:	
  7342  0209  01C4               	clrf	___flmul@aexp
  7343  020A                     l3271:	
  7344  020A  1FC3               	btfss	___flmul@grs+3,7
  7345  020B  2A0D               	goto	u3171
  7346  020C  2A0E               	goto	u3170
  7347  020D                     u3171:	
  7348  020D  2A2A               	goto	l3279
  7349  020E                     u3170:	
  7350  020E                     l3273:	
  7351  020E  30FF               	movlw	255
  7352  020F  0540               	andwf	___flmul@grs,w
  7353  0210  00BA               	movwf	??___flmul
  7354  0211  30FF               	movlw	255
  7355  0212  0541               	andwf	___flmul@grs+1,w
  7356  0213  00BB               	movwf	??___flmul+1
  7357  0214  30FF               	movlw	255
  7358  0215  0542               	andwf	___flmul@grs+2,w
  7359  0216  00BC               	movwf	??___flmul+2
  7360  0217  307F               	movlw	127
  7361  0218  0543               	andwf	___flmul@grs+3,w
  7362  0219  00BD               	movwf	??___flmul+3
  7363  021A  083D               	movf	??___flmul+3,w
  7364  021B  043C               	iorwf	??___flmul+2,w
  7365  021C  043B               	iorwf	??___flmul+1,w
  7366  021D  043A               	iorwf	??___flmul,w
  7367  021E  1903               	skipnz
  7368  021F  2A21               	goto	u3181
  7369  0220  2A22               	goto	u3180
  7370  0221                     u3181:	
  7371  0221  2A25               	goto	l1263
  7372  0222                     u3180:	
  7373  0222                     l3275:	
  7374  0222  01C4               	clrf	___flmul@aexp
  7375  0223  0AC4               	incf	___flmul@aexp,f
  7376  0224  2A2A               	goto	l3279
  7377  0225                     l1263:	
  7378  0225  1C46               	btfss	___flmul@prod,0
  7379  0226  2A28               	goto	u3191
  7380  0227  2A29               	goto	u3190
  7381  0228                     u3191:	
  7382  0228  2A2A               	goto	l3279
  7383  0229                     u3190:	
  7384  0229  2A22               	goto	l3275
  7385  022A                     l3279:	
  7386  022A  0844               	movf	___flmul@aexp,w
  7387  022B  1903               	btfsc	3,2
  7388  022C  2A2E               	goto	u3201
  7389  022D  2A2F               	goto	u3200
  7390  022E                     u3201:	
  7391  022E  2A57               	goto	l3289
  7392  022F                     u3200:	
  7393  022F                     l3281:	
  7394  022F  3001               	movlw	1
  7395  0230  07C6               	addwf	___flmul@prod,f
  7396  0231  3000               	movlw	0
  7397  0232  3DC7               	addwfc	___flmul@prod+1,f
  7398  0233  3000               	movlw	0
  7399  0234  3DC8               	addwfc	___flmul@prod+2,f
  7400  0235  3000               	movlw	0
  7401  0236  3DC9               	addwfc	___flmul@prod+3,f
  7402  0237                     l3283:	
  7403  0237  1C49               	btfss	___flmul@prod+3,0
  7404  0238  2A3A               	goto	u3211
  7405  0239  2A3B               	goto	u3210
  7406  023A                     u3211:	
  7407  023A  2A57               	goto	l3289
  7408  023B                     u3210:	
  7409  023B                     l3285:	
  7410  023B  0846               	movf	___flmul@prod,w
  7411  023C  00BA               	movwf	??___flmul
  7412  023D  0847               	movf	___flmul@prod+1,w
  7413  023E  00BB               	movwf	??___flmul+1
  7414  023F  0848               	movf	___flmul@prod+2,w
  7415  0240  00BC               	movwf	??___flmul+2
  7416  0241  0849               	movf	___flmul@prod+3,w
  7417  0242  00BD               	movwf	??___flmul+3
  7418  0243  3001               	movlw	1
  7419  0244  00BE               	movwf	??___flmul+4
  7420  0245                     u3225:	
  7421  0245  37BD               	asrf	??___flmul+3,f
  7422  0246  0CBC               	rrf	??___flmul+2,f
  7423  0247  0CBB               	rrf	??___flmul+1,f
  7424  0248  0CBA               	rrf	??___flmul,f
  7425  0249                     u3220:	
  7426  0249  0BBE               	decfsz	??___flmul+4,f
  7427  024A  2A45               	goto	u3225
  7428  024B  083D               	movf	??___flmul+3,w
  7429  024C  00C9               	movwf	___flmul@prod+3
  7430  024D  083C               	movf	??___flmul+2,w
  7431  024E  00C8               	movwf	___flmul@prod+2
  7432  024F  083B               	movf	??___flmul+1,w
  7433  0250  00C7               	movwf	___flmul@prod+1
  7434  0251  083A               	movf	??___flmul,w
  7435  0252  00C6               	movwf	___flmul@prod
  7436  0253                     l3287:	
  7437  0253  3001               	movlw	1
  7438  0254  07CA               	addwf	___flmul@temp,f
  7439  0255  3000               	movlw	0
  7440  0256  3DCB               	addwfc	___flmul@temp+1,f
  7441  0257                     l3289:	
  7442  0257  084B               	movf	___flmul@temp+1,w
  7443  0258  3A80               	xorlw	128
  7444  0259  00BA               	movwf	??___flmul
  7445  025A  3080               	movlw	128
  7446  025B  023A               	subwf	??___flmul,w
  7447  025C  1D03               	skipz
  7448  025D  2A60               	goto	u3235
  7449  025E  30FF               	movlw	255
  7450  025F  024A               	subwf	___flmul@temp,w
  7451  0260                     u3235:	
  7452  0260  1C03               	skipc
  7453  0261  2A63               	goto	u3231
  7454  0262  2A64               	goto	u3230
  7455  0263                     u3231:	
  7456  0263  2A6E               	goto	l3293
  7457  0264                     u3230:	
  7458  0264                     l3291:	
  7459  0264  307F               	movlw	127
  7460  0265  0020               	movlb	0	; select bank0
  7461  0266  00C9               	movwf	___flmul@prod+3
  7462  0267  3080               	movlw	128
  7463  0268  00C8               	movwf	___flmul@prod+2
  7464  0269  3000               	movlw	0
  7465  026A  00C7               	movwf	___flmul@prod+1
  7466  026B  3000               	movlw	0
  7467  026C  00C6               	movwf	___flmul@prod
  7468  026D  2A9D               	goto	l1269
  7469  026E                     l3293:	
  7470  026E  0020               	movlb	0	; select bank0
  7471  026F  084B               	movf	___flmul@temp+1,w
  7472  0270  3A80               	xorlw	128
  7473  0271  00BA               	movwf	??___flmul
  7474  0272  3080               	movlw	128
  7475  0273  023A               	subwf	??___flmul,w
  7476  0274  1D03               	skipz
  7477  0275  2A78               	goto	u3245
  7478  0276  3001               	movlw	1
  7479  0277  024A               	subwf	___flmul@temp,w
  7480  0278                     u3245:	
  7481  0278  1803               	skipnc
  7482  0279  2A7B               	goto	u3241
  7483  027A  2A7C               	goto	u3240
  7484  027B                     u3241:	
  7485  027B  2A87               	goto	l3299
  7486  027C                     u3240:	
  7487  027C                     l3295:	
  7488  027C  3000               	movlw	0
  7489  027D  0020               	movlb	0	; select bank0
  7490  027E  00C9               	movwf	___flmul@prod+3
  7491  027F  3000               	movlw	0
  7492  0280  00C8               	movwf	___flmul@prod+2
  7493  0281  3000               	movlw	0
  7494  0282  00C7               	movwf	___flmul@prod+1
  7495  0283  3000               	movlw	0
  7496  0284  00C6               	movwf	___flmul@prod
  7497  0285                     l3297:	
  7498  0285  01BF               	clrf	___flmul@sign
  7499  0286  2A9D               	goto	l1269
  7500  0287                     l3299:	
  7501  0287  0020               	movlb	0	; select bank0
  7502  0288  084A               	movf	___flmul@temp,w
  7503  0289  00BA               	movwf	??___flmul
  7504  028A  083A               	movf	??___flmul,w
  7505  028B  00C5               	movwf	___flmul@bexp
  7506  028C  30FF               	movlw	255
  7507  028D  05C6               	andwf	___flmul@prod,f
  7508  028E  30FF               	movlw	255
  7509  028F  05C7               	andwf	___flmul@prod+1,f
  7510  0290  307F               	movlw	127
  7511  0291  05C8               	andwf	___flmul@prod+2,f
  7512  0292  3000               	movlw	0
  7513  0293  05C9               	andwf	___flmul@prod+3,f
  7514  0294                     l3301:	
  7515  0294  1C45               	btfss	___flmul@bexp,0
  7516  0295  2A97               	goto	u3251
  7517  0296  2A98               	goto	u3250
  7518  0297                     u3251:	
  7519  0297  2A99               	goto	l3305
  7520  0298                     u3250:	
  7521  0298                     l3303:	
  7522  0298  17C8               	bsf	___flmul@prod+2,7
  7523  0299                     l3305:	
  7524  0299  3645               	lsrf	___flmul@bexp,w
  7525  029A  00BA               	movwf	??___flmul
  7526  029B  083A               	movf	??___flmul,w
  7527  029C  00C9               	movwf	___flmul@prod+3
  7528  029D                     l1269:	
  7529  029D  083F               	movf	___flmul@sign,w
  7530  029E  00BA               	movwf	??___flmul
  7531  029F  083A               	movf	??___flmul,w
  7532  02A0  04C9               	iorwf	___flmul@prod+3,f
  7533  02A1                     l3307:	
  7534  02A1  0849               	movf	___flmul@prod+3,w
  7535  02A2  00B5               	movwf	?___flmul+3
  7536  02A3  0848               	movf	___flmul@prod+2,w
  7537  02A4  00B4               	movwf	?___flmul+2
  7538  02A5  0847               	movf	___flmul@prod+1,w
  7539  02A6  00B3               	movwf	?___flmul+1
  7540  02A7  0846               	movf	___flmul@prod,w
  7541  02A8  00B2               	movwf	?___flmul
  7542  02A9                     l1257:	
  7543  02A9  0008               	return
  7544  02AA                     __end_of___flmul:	
  7545                           
  7546                           	psect	text18
  7547  0A72                     __ptext18:	
  7548 ;; *************** function __Umul8_16 *****************
  7549 ;; Defined at:
  7550 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8_16.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  multiplier      1    wreg     unsigned char 
  7553 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;  multiplier      1    8[BANK0 ] unsigned char 
  7556 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  7557 ;;  product         2    4[BANK0 ] unsigned int 
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  2    0[BANK0 ] unsigned int 
  7560 ;; Registers used:
  7561 ;;		wreg, status,2, status,0
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7567 ;;      Params:         0       2       0       0       0       0
  7568 ;;      Locals:         0       5       0       0       0       0
  7569 ;;      Temps:          0       2       0       0       0       0
  7570 ;;      Totals:         0       9       0       0       0       0
  7571 ;;Total ram usage:        9 bytes
  7572 ;; Hardware stack levels used:    1
  7573 ;; Hardware stack levels required when called:    4
  7574 ;; This function calls:
  7575 ;;		Nothing
  7576 ;; This function is called by:
  7577 ;;		___flmul
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           
  7582                           ;psect for function __Umul8_16
  7583  0A72                     __Umul8_16:	
  7584                           
  7585                           ;incstack = 0
  7586                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7587                           ;__Umul8_16@multiplier stored from wreg
  7588  0A72  0020               	movlb	0	; select bank0
  7589  0A73  00A8               	movwf	__Umul8_16@multiplier
  7590  0A74                     l2635:	
  7591  0A74  01A4               	clrf	__Umul8_16@product
  7592  0A75  01A5               	clrf	__Umul8_16@product+1
  7593  0A76                     l2637:	
  7594  0A76  0820               	movf	__Umul8_16@multiplicand,w
  7595  0A77  00A2               	movwf	??__Umul8_16
  7596  0A78  01A3               	clrf	??__Umul8_16+1
  7597  0A79  0822               	movf	??__Umul8_16,w
  7598  0A7A  00A6               	movwf	__Umul8_16@word_mpld
  7599  0A7B  0823               	movf	??__Umul8_16+1,w
  7600  0A7C  00A7               	movwf	__Umul8_16@word_mpld+1
  7601  0A7D                     l2639:	
  7602  0A7D  1C28               	btfss	__Umul8_16@multiplier,0
  7603  0A7E  2A80               	goto	u2101
  7604  0A7F  2A81               	goto	u2100
  7605  0A80                     u2101:	
  7606  0A80  2A85               	goto	l1321
  7607  0A81                     u2100:	
  7608  0A81                     l2641:	
  7609  0A81  0826               	movf	__Umul8_16@word_mpld,w
  7610  0A82  07A4               	addwf	__Umul8_16@product,f
  7611  0A83  0827               	movf	__Umul8_16@word_mpld+1,w
  7612  0A84  3DA5               	addwfc	__Umul8_16@product+1,f
  7613  0A85                     l1321:	
  7614  0A85  3001               	movlw	1
  7615  0A86                     u2115:	
  7616  0A86  35A6               	lslf	__Umul8_16@word_mpld,f
  7617  0A87  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  7618  0A88  0B89               	decfsz	9,f
  7619  0A89  2A86               	goto	u2115
  7620  0A8A  1003               	clrc
  7621  0A8B  0CA8               	rrf	__Umul8_16@multiplier,f
  7622  0A8C                     l2643:	
  7623  0A8C  0828               	movf	__Umul8_16@multiplier,w
  7624  0A8D  1D03               	btfss	3,2
  7625  0A8E  2A90               	goto	u2121
  7626  0A8F  2A91               	goto	u2120
  7627  0A90                     u2121:	
  7628  0A90  2A7D               	goto	l2639
  7629  0A91                     u2120:	
  7630  0A91                     l2645:	
  7631  0A91  0825               	movf	__Umul8_16@product+1,w
  7632  0A92  00A1               	movwf	?__Umul8_16+1
  7633  0A93  0824               	movf	__Umul8_16@product,w
  7634  0A94  00A0               	movwf	?__Umul8_16
  7635  0A95                     l1323:	
  7636  0A95  0008               	return
  7637  0A96                     __end_of__Umul8_16:	
  7638                           
  7639                           	psect	text19
  7640  048E                     __ptext19:	
  7641 ;; *************** function ___fldiv *****************
  7642 ;; Defined at:
  7643 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;  a               4   44[BANK0 ] unsigned int 
  7646 ;;  b               4   48[BANK0 ] unsigned int 
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;  grs             4   64[BANK0 ] unsigned long 
  7649 ;;  rem             4   57[BANK0 ] unsigned long 
  7650 ;;  new_exp         2   62[BANK0 ] int 
  7651 ;;  aexp            1   69[BANK0 ] unsigned char 
  7652 ;;  bexp            1   68[BANK0 ] unsigned char 
  7653 ;;  sign            1   61[BANK0 ] unsigned char 
  7654 ;; Return value:  Size  Location     Type
  7655 ;;                  4   44[BANK0 ] unsigned char 
  7656 ;; Registers used:
  7657 ;;		wreg, status,2, status,0
  7658 ;; Tracked objects:
  7659 ;;		On entry : 0/0
  7660 ;;		On exit  : 0/0
  7661 ;;		Unchanged: 0/0
  7662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7663 ;;      Params:         0       8       0       0       0       0
  7664 ;;      Locals:         0      13       0       0       0       0
  7665 ;;      Temps:          0       5       0       0       0       0
  7666 ;;      Totals:         0      26       0       0       0       0
  7667 ;;Total ram usage:       26 bytes
  7668 ;; Hardware stack levels used:    1
  7669 ;; Hardware stack levels required when called:    4
  7670 ;; This function calls:
  7671 ;;		Nothing
  7672 ;; This function is called by:
  7673 ;;		_comunicacao
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           
  7678                           ;psect for function ___fldiv
  7679  048E                     ___fldiv:	
  7680  048E                     l3031:	
  7681                           ;incstack = 0
  7682                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  7683                           
  7684  048E  0020               	movlb	0	; select bank0
  7685  048F  0853               	movf	___fldiv@b+3,w
  7686  0490  3980               	andlw	128
  7687  0491  00D4               	movwf	??___fldiv
  7688  0492  0854               	movf	??___fldiv,w
  7689  0493  00DD               	movwf	___fldiv@sign
  7690  0494                     l3033:	
  7691  0494  3553               	lslf	___fldiv@b+3,w
  7692  0495  00D4               	movwf	??___fldiv
  7693  0496  0854               	movf	??___fldiv,w
  7694  0497  00E4               	movwf	___fldiv@bexp
  7695  0498                     l3035:	
  7696  0498  1FD2               	btfss	___fldiv@b+2,7
  7697  0499  2C9B               	goto	u2711
  7698  049A  2C9C               	goto	u2710
  7699  049B                     u2711:	
  7700  049B  2C9D               	goto	l3039
  7701  049C                     u2710:	
  7702  049C                     l3037:	
  7703  049C  1464               	bsf	___fldiv@bexp,0
  7704  049D                     l3039:	
  7705  049D  0864               	movf	___fldiv@bexp,w
  7706  049E  1903               	btfsc	3,2
  7707  049F  2CA1               	goto	u2721
  7708  04A0  2CA2               	goto	u2720
  7709  04A1                     u2721:	
  7710  04A1  2CB2               	goto	l3049
  7711  04A2                     u2720:	
  7712  04A2                     l3041:	
  7713  04A2  0A64               	incf	___fldiv@bexp,w
  7714  04A3  1D03               	btfss	3,2
  7715  04A4  2CA6               	goto	u2731
  7716  04A5  2CA7               	goto	u2730
  7717  04A6                     u2731:	
  7718  04A6  2CAF               	goto	l3045
  7719  04A7                     u2730:	
  7720  04A7                     l3043:	
  7721  04A7  3000               	movlw	0
  7722  04A8  00D3               	movwf	___fldiv@b+3
  7723  04A9  3000               	movlw	0
  7724  04AA  00D2               	movwf	___fldiv@b+2
  7725  04AB  3000               	movlw	0
  7726  04AC  00D1               	movwf	___fldiv@b+1
  7727  04AD  3000               	movlw	0
  7728  04AE  00D0               	movwf	___fldiv@b
  7729  04AF                     l3045:	
  7730  04AF  17D2               	bsf	___fldiv@b+2,7
  7731  04B0                     l3047:	
  7732  04B0  01D3               	clrf	___fldiv@b+3
  7733  04B1  2CBA               	goto	l3051
  7734  04B2                     l3049:	
  7735  04B2  3000               	movlw	0
  7736  04B3  00D3               	movwf	___fldiv@b+3
  7737  04B4  3000               	movlw	0
  7738  04B5  00D2               	movwf	___fldiv@b+2
  7739  04B6  3000               	movlw	0
  7740  04B7  00D1               	movwf	___fldiv@b+1
  7741  04B8  3000               	movlw	0
  7742  04B9  00D0               	movwf	___fldiv@b
  7743  04BA                     l3051:	
  7744  04BA  084F               	movf	___fldiv@a+3,w
  7745  04BB  3980               	andlw	128
  7746  04BC  00D4               	movwf	??___fldiv
  7747  04BD  0854               	movf	??___fldiv,w
  7748  04BE  06DD               	xorwf	___fldiv@sign,f
  7749  04BF                     l3053:	
  7750  04BF  354F               	lslf	___fldiv@a+3,w
  7751  04C0  00D4               	movwf	??___fldiv
  7752  04C1  0854               	movf	??___fldiv,w
  7753  04C2  00E5               	movwf	___fldiv@aexp
  7754  04C3                     l3055:	
  7755  04C3  1FCE               	btfss	___fldiv@a+2,7
  7756  04C4  2CC6               	goto	u2741
  7757  04C5  2CC7               	goto	u2740
  7758  04C6                     u2741:	
  7759  04C6  2CC8               	goto	l3059
  7760  04C7                     u2740:	
  7761  04C7                     l3057:	
  7762  04C7  1465               	bsf	___fldiv@aexp,0
  7763  04C8                     l3059:	
  7764  04C8  0865               	movf	___fldiv@aexp,w
  7765  04C9  1903               	btfsc	3,2
  7766  04CA  2CCC               	goto	u2751
  7767  04CB  2CCD               	goto	u2750
  7768  04CC                     u2751:	
  7769  04CC  2CDD               	goto	l3069
  7770  04CD                     u2750:	
  7771  04CD                     l3061:	
  7772  04CD  0A65               	incf	___fldiv@aexp,w
  7773  04CE  1D03               	btfss	3,2
  7774  04CF  2CD1               	goto	u2761
  7775  04D0  2CD2               	goto	u2760
  7776  04D1                     u2761:	
  7777  04D1  2CDA               	goto	l3065
  7778  04D2                     u2760:	
  7779  04D2                     l3063:	
  7780  04D2  3000               	movlw	0
  7781  04D3  00CF               	movwf	___fldiv@a+3
  7782  04D4  3000               	movlw	0
  7783  04D5  00CE               	movwf	___fldiv@a+2
  7784  04D6  3000               	movlw	0
  7785  04D7  00CD               	movwf	___fldiv@a+1
  7786  04D8  3000               	movlw	0
  7787  04D9  00CC               	movwf	___fldiv@a
  7788  04DA                     l3065:	
  7789  04DA  17CE               	bsf	___fldiv@a+2,7
  7790  04DB                     l3067:	
  7791  04DB  01CF               	clrf	___fldiv@a+3
  7792  04DC  2CE5               	goto	l1217
  7793  04DD                     l3069:	
  7794  04DD  3000               	movlw	0
  7795  04DE  00CF               	movwf	___fldiv@a+3
  7796  04DF  3000               	movlw	0
  7797  04E0  00CE               	movwf	___fldiv@a+2
  7798  04E1  3000               	movlw	0
  7799  04E2  00CD               	movwf	___fldiv@a+1
  7800  04E3  3000               	movlw	0
  7801  04E4  00CC               	movwf	___fldiv@a
  7802  04E5                     l1217:	
  7803  04E5  084F               	movf	___fldiv@a+3,w
  7804  04E6  044E               	iorwf	___fldiv@a+2,w
  7805  04E7  044D               	iorwf	___fldiv@a+1,w
  7806  04E8  044C               	iorwf	___fldiv@a,w
  7807  04E9  1D03               	skipz
  7808  04EA  2CEC               	goto	u2771
  7809  04EB  2CED               	goto	u2770
  7810  04EC                     u2771:	
  7811  04EC  2D06               	goto	l3079
  7812  04ED                     u2770:	
  7813  04ED                     l3071:	
  7814  04ED  3000               	movlw	0
  7815  04EE  00D3               	movwf	___fldiv@b+3
  7816  04EF  3000               	movlw	0
  7817  04F0  00D2               	movwf	___fldiv@b+2
  7818  04F1  3000               	movlw	0
  7819  04F2  00D1               	movwf	___fldiv@b+1
  7820  04F3  3000               	movlw	0
  7821  04F4  00D0               	movwf	___fldiv@b
  7822  04F5  3080               	movlw	128
  7823  04F6  04D2               	iorwf	___fldiv@b+2,f
  7824  04F7  307F               	movlw	127
  7825  04F8  04D3               	iorwf	___fldiv@b+3,f
  7826  04F9                     l3073:	
  7827  04F9  085D               	movf	___fldiv@sign,w
  7828  04FA  00D4               	movwf	??___fldiv
  7829  04FB  0854               	movf	??___fldiv,w
  7830  04FC  04D3               	iorwf	___fldiv@b+3,f
  7831  04FD                     l3075:	
  7832  04FD  0853               	movf	___fldiv@b+3,w
  7833  04FE  00CF               	movwf	?___fldiv+3
  7834  04FF  0852               	movf	___fldiv@b+2,w
  7835  0500  00CE               	movwf	?___fldiv+2
  7836  0501  0851               	movf	___fldiv@b+1,w
  7837  0502  00CD               	movwf	?___fldiv+1
  7838  0503  0850               	movf	___fldiv@b,w
  7839  0504  00CC               	movwf	?___fldiv
  7840  0505  2E41               	goto	l1219
  7841  0506                     l3079:	
  7842  0506  0864               	movf	___fldiv@bexp,w
  7843  0507  1D03               	btfss	3,2
  7844  0508  2D0A               	goto	u2781
  7845  0509  2D0B               	goto	u2780
  7846  050A                     u2781:	
  7847  050A  2D14               	goto	l3085
  7848  050B                     u2780:	
  7849  050B                     l3081:	
  7850  050B  3000               	movlw	0
  7851  050C  00CF               	movwf	?___fldiv+3
  7852  050D  3000               	movlw	0
  7853  050E  00CE               	movwf	?___fldiv+2
  7854  050F  3000               	movlw	0
  7855  0510  00CD               	movwf	?___fldiv+1
  7856  0511  3000               	movlw	0
  7857  0512  00CC               	movwf	?___fldiv
  7858  0513  2E41               	goto	l1219
  7859  0514                     l3085:	
  7860  0514  0864               	movf	___fldiv@bexp,w
  7861  0515  00D4               	movwf	??___fldiv
  7862  0516  01D5               	clrf	??___fldiv+1
  7863  0517  0855               	movf	??___fldiv+1,w
  7864  0518  00D7               	movwf	??___fldiv+3
  7865  0519  0865               	movf	___fldiv@aexp,w
  7866  051A  0254               	subwf	??___fldiv,w
  7867  051B  00D6               	movwf	??___fldiv+2
  7868  051C  1C03               	skipc
  7869  051D  03D7               	decf	??___fldiv+3,f
  7870  051E  0856               	movf	??___fldiv+2,w
  7871  051F  3E7F               	addlw	127
  7872  0520  00DE               	movwf	___fldiv@new_exp
  7873  0521  3000               	movlw	0
  7874  0522  3D57               	addwfc	??___fldiv+3,w
  7875  0523  00DF               	movwf	___fldiv@new_exp+1
  7876  0524                     l3087:	
  7877  0524  0853               	movf	___fldiv@b+3,w
  7878  0525  00DC               	movwf	___fldiv@rem+3
  7879  0526  0852               	movf	___fldiv@b+2,w
  7880  0527  00DB               	movwf	___fldiv@rem+2
  7881  0528  0851               	movf	___fldiv@b+1,w
  7882  0529  00DA               	movwf	___fldiv@rem+1
  7883  052A  0850               	movf	___fldiv@b,w
  7884  052B  00D9               	movwf	___fldiv@rem
  7885  052C                     l3089:	
  7886  052C  3000               	movlw	0
  7887  052D  00D3               	movwf	___fldiv@b+3
  7888  052E  3000               	movlw	0
  7889  052F  00D2               	movwf	___fldiv@b+2
  7890  0530  3000               	movlw	0
  7891  0531  00D1               	movwf	___fldiv@b+1
  7892  0532  3000               	movlw	0
  7893  0533  00D0               	movwf	___fldiv@b
  7894  0534                     l3091:	
  7895  0534  3000               	movlw	0
  7896  0535  00E3               	movwf	___fldiv@grs+3
  7897  0536  3000               	movlw	0
  7898  0537  00E2               	movwf	___fldiv@grs+2
  7899  0538  3000               	movlw	0
  7900  0539  00E1               	movwf	___fldiv@grs+1
  7901  053A  3000               	movlw	0
  7902  053B  00E0               	movwf	___fldiv@grs
  7903  053C                     l3093:	
  7904  053C  01E5               	clrf	___fldiv@aexp
  7905  053D  2D7C               	goto	l3113
  7906  053E                     l3095:	
  7907  053E  0865               	movf	___fldiv@aexp,w
  7908  053F  1903               	btfsc	3,2
  7909  0540  2D42               	goto	u2791
  7910  0541  2D43               	goto	u2790
  7911  0542                     u2791:	
  7912  0542  2D5D               	goto	l3105
  7913  0543                     u2790:	
  7914  0543                     l3097:	
  7915  0543  3001               	movlw	1
  7916  0544                     u2805:	
  7917  0544  35D9               	lslf	___fldiv@rem,f
  7918  0545  0DDA               	rlf	___fldiv@rem+1,f
  7919  0546  0DDB               	rlf	___fldiv@rem+2,f
  7920  0547  0DDC               	rlf	___fldiv@rem+3,f
  7921  0548  0B89               	decfsz	9,f
  7922  0549  2D44               	goto	u2805
  7923  054A  3001               	movlw	1
  7924  054B                     u2815:	
  7925  054B  35D0               	lslf	___fldiv@b,f
  7926  054C  0DD1               	rlf	___fldiv@b+1,f
  7927  054D  0DD2               	rlf	___fldiv@b+2,f
  7928  054E  0DD3               	rlf	___fldiv@b+3,f
  7929  054F  0B89               	decfsz	9,f
  7930  0550  2D4B               	goto	u2815
  7931  0551                     l3099:	
  7932  0551  1FE3               	btfss	___fldiv@grs+3,7
  7933  0552  2D54               	goto	u2821
  7934  0553  2D55               	goto	u2820
  7935  0554                     u2821:	
  7936  0554  2D56               	goto	l3103
  7937  0555                     u2820:	
  7938  0555                     l3101:	
  7939  0555  1450               	bsf	___fldiv@b,0
  7940  0556                     l3103:	
  7941  0556  3001               	movlw	1
  7942  0557                     u2835:	
  7943  0557  35E0               	lslf	___fldiv@grs,f
  7944  0558  0DE1               	rlf	___fldiv@grs+1,f
  7945  0559  0DE2               	rlf	___fldiv@grs+2,f
  7946  055A  0DE3               	rlf	___fldiv@grs+3,f
  7947  055B  0B89               	decfsz	9,f
  7948  055C  2D57               	goto	u2835
  7949  055D                     l3105:	
  7950  055D  084F               	movf	___fldiv@a+3,w
  7951  055E  025C               	subwf	___fldiv@rem+3,w
  7952  055F  1D03               	skipz
  7953  0560  2D6B               	goto	u2845
  7954  0561  084E               	movf	___fldiv@a+2,w
  7955  0562  025B               	subwf	___fldiv@rem+2,w
  7956  0563  1D03               	skipz
  7957  0564  2D6B               	goto	u2845
  7958  0565  084D               	movf	___fldiv@a+1,w
  7959  0566  025A               	subwf	___fldiv@rem+1,w
  7960  0567  1D03               	skipz
  7961  0568  2D6B               	goto	u2845
  7962  0569  084C               	movf	___fldiv@a,w
  7963  056A  0259               	subwf	___fldiv@rem,w
  7964  056B                     u2845:	
  7965  056B  1C03               	skipc
  7966  056C  2D6E               	goto	u2841
  7967  056D  2D6F               	goto	u2840
  7968  056E                     u2841:	
  7969  056E  2D78               	goto	l3111
  7970  056F                     u2840:	
  7971  056F                     l3107:	
  7972  056F  1763               	bsf	___fldiv@grs+3,6
  7973  0570                     l3109:	
  7974  0570  084C               	movf	___fldiv@a,w
  7975  0571  02D9               	subwf	___fldiv@rem,f
  7976  0572  084D               	movf	___fldiv@a+1,w
  7977  0573  3BDA               	subwfb	___fldiv@rem+1,f
  7978  0574  084E               	movf	___fldiv@a+2,w
  7979  0575  3BDB               	subwfb	___fldiv@rem+2,f
  7980  0576  084F               	movf	___fldiv@a+3,w
  7981  0577  3BDC               	subwfb	___fldiv@rem+3,f
  7982  0578                     l3111:	
  7983  0578  3001               	movlw	1
  7984  0579  00D4               	movwf	??___fldiv
  7985  057A  0854               	movf	??___fldiv,w
  7986  057B  07E5               	addwf	___fldiv@aexp,f
  7987  057C                     l3113:	
  7988  057C  301A               	movlw	26
  7989  057D  0265               	subwf	___fldiv@aexp,w
  7990  057E  1C03               	skipc
  7991  057F  2D81               	goto	u2851
  7992  0580  2D82               	goto	u2850
  7993  0581                     u2851:	
  7994  0581  2D3E               	goto	l3095
  7995  0582                     u2850:	
  7996  0582                     l3115:	
  7997  0582  085C               	movf	___fldiv@rem+3,w
  7998  0583  045B               	iorwf	___fldiv@rem+2,w
  7999  0584  045A               	iorwf	___fldiv@rem+1,w
  8000  0585  0459               	iorwf	___fldiv@rem,w
  8001  0586  1903               	skipnz
  8002  0587  2D89               	goto	u2861
  8003  0588  2D8A               	goto	u2860
  8004  0589                     u2861:	
  8005  0589  2DA3               	goto	l3129
  8006  058A                     u2860:	
  8007  058A                     l3117:	
  8008  058A  1460               	bsf	___fldiv@grs,0
  8009  058B  2DA3               	goto	l3129
  8010  058C                     l3119:	
  8011  058C  3001               	movlw	1
  8012  058D                     u2875:	
  8013  058D  35D0               	lslf	___fldiv@b,f
  8014  058E  0DD1               	rlf	___fldiv@b+1,f
  8015  058F  0DD2               	rlf	___fldiv@b+2,f
  8016  0590  0DD3               	rlf	___fldiv@b+3,f
  8017  0591  0B89               	decfsz	9,f
  8018  0592  2D8D               	goto	u2875
  8019  0593                     l3121:	
  8020  0593  1FE3               	btfss	___fldiv@grs+3,7
  8021  0594  2D96               	goto	u2881
  8022  0595  2D97               	goto	u2880
  8023  0596                     u2881:	
  8024  0596  2D98               	goto	l3125
  8025  0597                     u2880:	
  8026  0597                     l3123:	
  8027  0597  1450               	bsf	___fldiv@b,0
  8028  0598                     l3125:	
  8029  0598  3001               	movlw	1
  8030  0599                     u2895:	
  8031  0599  35E0               	lslf	___fldiv@grs,f
  8032  059A  0DE1               	rlf	___fldiv@grs+1,f
  8033  059B  0DE2               	rlf	___fldiv@grs+2,f
  8034  059C  0DE3               	rlf	___fldiv@grs+3,f
  8035  059D  0B89               	decfsz	9,f
  8036  059E  2D99               	goto	u2895
  8037  059F                     l3127:	
  8038  059F  30FF               	movlw	255
  8039  05A0  07DE               	addwf	___fldiv@new_exp,f
  8040  05A1  30FF               	movlw	255
  8041  05A2  3DDF               	addwfc	___fldiv@new_exp+1,f
  8042  05A3                     l3129:	
  8043  05A3  1FD2               	btfss	___fldiv@b+2,7
  8044  05A4  2DA6               	goto	u2901
  8045  05A5  2DA7               	goto	u2900
  8046  05A6                     u2901:	
  8047  05A6  2D8C               	goto	l3119
  8048  05A7                     u2900:	
  8049  05A7                     l3131:	
  8050  05A7  01E5               	clrf	___fldiv@aexp
  8051  05A8                     l3133:	
  8052  05A8  1FE3               	btfss	___fldiv@grs+3,7
  8053  05A9  2DAB               	goto	u2911
  8054  05AA  2DAC               	goto	u2910
  8055  05AB                     u2911:	
  8056  05AB  2DC8               	goto	l3141
  8057  05AC                     u2910:	
  8058  05AC                     l3135:	
  8059  05AC  30FF               	movlw	255
  8060  05AD  0560               	andwf	___fldiv@grs,w
  8061  05AE  00D4               	movwf	??___fldiv
  8062  05AF  30FF               	movlw	255
  8063  05B0  0561               	andwf	___fldiv@grs+1,w
  8064  05B1  00D5               	movwf	??___fldiv+1
  8065  05B2  30FF               	movlw	255
  8066  05B3  0562               	andwf	___fldiv@grs+2,w
  8067  05B4  00D6               	movwf	??___fldiv+2
  8068  05B5  307F               	movlw	127
  8069  05B6  0563               	andwf	___fldiv@grs+3,w
  8070  05B7  00D7               	movwf	??___fldiv+3
  8071  05B8  0857               	movf	??___fldiv+3,w
  8072  05B9  0456               	iorwf	??___fldiv+2,w
  8073  05BA  0455               	iorwf	??___fldiv+1,w
  8074  05BB  0454               	iorwf	??___fldiv,w
  8075  05BC  1903               	skipnz
  8076  05BD  2DBF               	goto	u2921
  8077  05BE  2DC0               	goto	u2920
  8078  05BF                     u2921:	
  8079  05BF  2DC3               	goto	l1233
  8080  05C0                     u2920:	
  8081  05C0                     l3137:	
  8082  05C0  01E5               	clrf	___fldiv@aexp
  8083  05C1  0AE5               	incf	___fldiv@aexp,f
  8084  05C2  2DC8               	goto	l3141
  8085  05C3                     l1233:	
  8086  05C3  1C50               	btfss	___fldiv@b,0
  8087  05C4  2DC6               	goto	u2931
  8088  05C5  2DC7               	goto	u2930
  8089  05C6                     u2931:	
  8090  05C6  2DC8               	goto	l3141
  8091  05C7                     u2930:	
  8092  05C7  2DC0               	goto	l3137
  8093  05C8                     l3141:	
  8094  05C8  0865               	movf	___fldiv@aexp,w
  8095  05C9  1903               	btfsc	3,2
  8096  05CA  2DCC               	goto	u2941
  8097  05CB  2DCD               	goto	u2940
  8098  05CC                     u2941:	
  8099  05CC  2DF5               	goto	l3151
  8100  05CD                     u2940:	
  8101  05CD                     l3143:	
  8102  05CD  3001               	movlw	1
  8103  05CE  07D0               	addwf	___fldiv@b,f
  8104  05CF  3000               	movlw	0
  8105  05D0  3DD1               	addwfc	___fldiv@b+1,f
  8106  05D1  3000               	movlw	0
  8107  05D2  3DD2               	addwfc	___fldiv@b+2,f
  8108  05D3  3000               	movlw	0
  8109  05D4  3DD3               	addwfc	___fldiv@b+3,f
  8110  05D5                     l3145:	
  8111  05D5  1C53               	btfss	___fldiv@b+3,0
  8112  05D6  2DD8               	goto	u2951
  8113  05D7  2DD9               	goto	u2950
  8114  05D8                     u2951:	
  8115  05D8  2DF5               	goto	l3151
  8116  05D9                     u2950:	
  8117  05D9                     l3147:	
  8118  05D9  0850               	movf	___fldiv@b,w
  8119  05DA  00D4               	movwf	??___fldiv
  8120  05DB  0851               	movf	___fldiv@b+1,w
  8121  05DC  00D5               	movwf	??___fldiv+1
  8122  05DD  0852               	movf	___fldiv@b+2,w
  8123  05DE  00D6               	movwf	??___fldiv+2
  8124  05DF  0853               	movf	___fldiv@b+3,w
  8125  05E0  00D7               	movwf	??___fldiv+3
  8126  05E1  3001               	movlw	1
  8127  05E2  00D8               	movwf	??___fldiv+4
  8128  05E3                     u2965:	
  8129  05E3  37D7               	asrf	??___fldiv+3,f
  8130  05E4  0CD6               	rrf	??___fldiv+2,f
  8131  05E5  0CD5               	rrf	??___fldiv+1,f
  8132  05E6  0CD4               	rrf	??___fldiv,f
  8133  05E7                     u2960:	
  8134  05E7  0BD8               	decfsz	??___fldiv+4,f
  8135  05E8  2DE3               	goto	u2965
  8136  05E9  0857               	movf	??___fldiv+3,w
  8137  05EA  00D3               	movwf	___fldiv@b+3
  8138  05EB  0856               	movf	??___fldiv+2,w
  8139  05EC  00D2               	movwf	___fldiv@b+2
  8140  05ED  0855               	movf	??___fldiv+1,w
  8141  05EE  00D1               	movwf	___fldiv@b+1
  8142  05EF  0854               	movf	??___fldiv,w
  8143  05F0  00D0               	movwf	___fldiv@b
  8144  05F1                     l3149:	
  8145  05F1  3001               	movlw	1
  8146  05F2  07DE               	addwf	___fldiv@new_exp,f
  8147  05F3  3000               	movlw	0
  8148  05F4  3DDF               	addwfc	___fldiv@new_exp+1,f
  8149  05F5                     l3151:	
  8150  05F5  085F               	movf	___fldiv@new_exp+1,w
  8151  05F6  3A80               	xorlw	128
  8152  05F7  00D4               	movwf	??___fldiv
  8153  05F8  3080               	movlw	128
  8154  05F9  0254               	subwf	??___fldiv,w
  8155  05FA  1D03               	skipz
  8156  05FB  2DFE               	goto	u2975
  8157  05FC  30FF               	movlw	255
  8158  05FD  025E               	subwf	___fldiv@new_exp,w
  8159  05FE                     u2975:	
  8160  05FE  1C03               	skipc
  8161  05FF  2E01               	goto	u2971
  8162  0600  2E02               	goto	u2970
  8163  0601                     u2971:	
  8164  0601  2E0F               	goto	l1238
  8165  0602                     u2970:	
  8166  0602                     l3153:	
  8167  0602  30FF               	movlw	255
  8168  0603  0020               	movlb	0	; select bank0
  8169  0604  00DE               	movwf	___fldiv@new_exp
  8170  0605  3000               	movlw	0
  8171  0606  00DF               	movwf	___fldiv@new_exp+1
  8172  0607  3000               	movlw	0
  8173  0608  00D3               	movwf	___fldiv@b+3
  8174  0609  3000               	movlw	0
  8175  060A  00D2               	movwf	___fldiv@b+2
  8176  060B  3000               	movlw	0
  8177  060C  00D1               	movwf	___fldiv@b+1
  8178  060D  3000               	movlw	0
  8179  060E  00D0               	movwf	___fldiv@b
  8180  060F                     l1238:	
  8181  060F  0020               	movlb	0	; select bank0
  8182  0610  085F               	movf	___fldiv@new_exp+1,w
  8183  0611  3A80               	xorlw	128
  8184  0612  00D4               	movwf	??___fldiv
  8185  0613  3080               	movlw	128
  8186  0614  0254               	subwf	??___fldiv,w
  8187  0615  1D03               	skipz
  8188  0616  2E19               	goto	u2985
  8189  0617  3001               	movlw	1
  8190  0618  025E               	subwf	___fldiv@new_exp,w
  8191  0619                     u2985:	
  8192  0619  1803               	skipnc
  8193  061A  2E1C               	goto	u2981
  8194  061B  2E1D               	goto	u2980
  8195  061C                     u2981:	
  8196  061C  2E29               	goto	l1239
  8197  061D                     u2980:	
  8198  061D                     l3155:	
  8199  061D  0020               	movlb	0	; select bank0
  8200  061E  01DE               	clrf	___fldiv@new_exp
  8201  061F  01DF               	clrf	___fldiv@new_exp+1
  8202  0620                     l3157:	
  8203  0620  3000               	movlw	0
  8204  0621  00D3               	movwf	___fldiv@b+3
  8205  0622  3000               	movlw	0
  8206  0623  00D2               	movwf	___fldiv@b+2
  8207  0624  3000               	movlw	0
  8208  0625  00D1               	movwf	___fldiv@b+1
  8209  0626  3000               	movlw	0
  8210  0627  00D0               	movwf	___fldiv@b
  8211  0628                     l3159:	
  8212  0628  01DD               	clrf	___fldiv@sign
  8213  0629                     l1239:	
  8214  0629  0020               	movlb	0	; select bank0
  8215  062A  085E               	movf	___fldiv@new_exp,w
  8216  062B  00D4               	movwf	??___fldiv
  8217  062C  0854               	movf	??___fldiv,w
  8218  062D  00E4               	movwf	___fldiv@bexp
  8219  062E                     l3161:	
  8220  062E  1C64               	btfss	___fldiv@bexp,0
  8221  062F  2E31               	goto	u2991
  8222  0630  2E32               	goto	u2990
  8223  0631                     u2991:	
  8224  0631  2E34               	goto	l3165
  8225  0632                     u2990:	
  8226  0632                     l3163:	
  8227  0632  17D2               	bsf	___fldiv@b+2,7
  8228  0633  2E38               	goto	l1241
  8229  0634                     l3165:	
  8230  0634  307F               	movlw	127
  8231  0635  00D4               	movwf	??___fldiv
  8232  0636  0854               	movf	??___fldiv,w
  8233  0637  05D2               	andwf	___fldiv@b+2,f
  8234  0638                     l1241:	
  8235  0638  3664               	lsrf	___fldiv@bexp,w
  8236  0639  00D4               	movwf	??___fldiv
  8237  063A  0854               	movf	??___fldiv,w
  8238  063B  00D3               	movwf	___fldiv@b+3
  8239  063C  085D               	movf	___fldiv@sign,w
  8240  063D  00D4               	movwf	??___fldiv
  8241  063E  0854               	movf	??___fldiv,w
  8242  063F  04D3               	iorwf	___fldiv@b+3,f
  8243  0640  2CFD               	goto	l3075
  8244  0641                     l1219:	
  8245  0641  0008               	return
  8246  0642                     __end_of___fldiv:	
  8247                           
  8248                           	psect	text20
  8249  0A2C                     __ptext20:	
  8250 ;; *************** function _SYSTEM_Initialize *****************
  8251 ;; Defined at:
  8252 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;		None
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;		None
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  1    wreg      void 
  8259 ;; Registers used:
  8260 ;;		wreg, status,2, status,0, pclath, cstack
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8266 ;;      Params:         0       0       0       0       0       0
  8267 ;;      Locals:         0       0       0       0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0
  8269 ;;      Totals:         0       0       0       0       0       0
  8270 ;;Total ram usage:        0 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; Hardware stack levels required when called:    6
  8273 ;; This function calls:
  8274 ;;		_ADC_Initialize
  8275 ;;		_CCP4_Initialize
  8276 ;;		_EUSART_Initialize
  8277 ;;		_FVR_Initialize
  8278 ;;		_OSCILLATOR_Initialize
  8279 ;;		_PIN_MANAGER_Initialize
  8280 ;;		_PWM3_Initialize
  8281 ;;		_TMR1_Initialize
  8282 ;;		_TMR2_Initialize
  8283 ;;		_TMR4_Initialize
  8284 ;;		_WDT_Initialize
  8285 ;; This function is called by:
  8286 ;;		_main
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           
  8291                           ;psect for function _SYSTEM_Initialize
  8292  0A2C                     _SYSTEM_Initialize:	
  8293  0A2C                     l3837:	
  8294                           ;incstack = 0
  8295                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8296                           
  8297                           
  8298                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8299  0A2C  318B  2330  318A   	fcall	_PIN_MANAGER_Initialize
  8300                           
  8301                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8302  0A2F  3188  2030  318A   	fcall	_OSCILLATOR_Initialize
  8303                           
  8304                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  8305  0A32  3188  201A  318A   	fcall	_WDT_Initialize
  8306                           
  8307                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  8308  0A35  3188  2016  318A   	fcall	_FVR_Initialize
  8309                           
  8310                           ;mcc_generated_files/mcc.c: 57:     CCP4_Initialize();
  8311  0A38  3189  2156  318A   	fcall	_CCP4_Initialize
  8312                           
  8313                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  8314  0A3B  3188  2037  318A   	fcall	_ADC_Initialize
  8315                           
  8316                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
  8317  0A3E  3189  2168  318A   	fcall	_TMR4_Initialize
  8318                           
  8319                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
  8320  0A41  3188  208F  318A   	fcall	_PWM3_Initialize
  8321                           
  8322                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  8323  0A44  3188  203F  318A   	fcall	_TMR2_Initialize
  8324                           
  8325                           ;mcc_generated_files/mcc.c: 62:     TMR1_Initialize();
  8326  0A47  3189  2135  318A   	fcall	_TMR1_Initialize
  8327                           
  8328                           ;mcc_generated_files/mcc.c: 63:     EUSART_Initialize();
  8329  0A4A  318A  224E  318A   	fcall	_EUSART_Initialize
  8330  0A4D                     l121:	
  8331  0A4D  0008               	return
  8332  0A4E                     __end_of_SYSTEM_Initialize:	
  8333                           
  8334                           	psect	text21
  8335  081A                     __ptext21:	
  8336 ;; *************** function _WDT_Initialize *****************
  8337 ;; Defined at:
  8338 ;;		line 76 in file "mcc_generated_files/mcc.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;		None
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;		None
  8343 ;; Return value:  Size  Location     Type
  8344 ;;                  1    wreg      void 
  8345 ;; Registers used:
  8346 ;;		wreg
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/0
  8349 ;;		On exit  : 0/0
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8352 ;;      Params:         0       0       0       0       0       0
  8353 ;;      Locals:         0       0       0       0       0       0
  8354 ;;      Temps:          0       0       0       0       0       0
  8355 ;;      Totals:         0       0       0       0       0       0
  8356 ;;Total ram usage:        0 bytes
  8357 ;; Hardware stack levels used:    1
  8358 ;; Hardware stack levels required when called:    4
  8359 ;; This function calls:
  8360 ;;		Nothing
  8361 ;; This function is called by:
  8362 ;;		_SYSTEM_Initialize
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366                           
  8367                           ;psect for function _WDT_Initialize
  8368  081A                     _WDT_Initialize:	
  8369  081A                     l3635:	
  8370                           ;incstack = 0
  8371                           ; Regs used in _WDT_Initialize: [wreg]
  8372                           
  8373                           
  8374                           ;mcc_generated_files/mcc.c: 79:     WDTCON = 0x16;
  8375  081A  3016               	movlw	22
  8376  081B  0021               	movlb	1	; select bank1
  8377  081C  0097               	movwf	23	;volatile
  8378  081D                     l127:	
  8379  081D  0008               	return
  8380  081E                     __end_of_WDT_Initialize:	
  8381                           
  8382                           	psect	text22
  8383  0968                     __ptext22:	
  8384 ;; *************** function _TMR4_Initialize *****************
  8385 ;; Defined at:
  8386 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;		None
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;		None
  8391 ;; Return value:  Size  Location     Type
  8392 ;;                  1    wreg      void 
  8393 ;; Registers used:
  8394 ;;		wreg, status,2, status,0, pclath, cstack
  8395 ;; Tracked objects:
  8396 ;;		On entry : 0/0
  8397 ;;		On exit  : 0/0
  8398 ;;		Unchanged: 0/0
  8399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8400 ;;      Params:         0       0       0       0       0       0
  8401 ;;      Locals:         0       0       0       0       0       0
  8402 ;;      Temps:          0       0       0       0       0       0
  8403 ;;      Totals:         0       0       0       0       0       0
  8404 ;;Total ram usage:        0 bytes
  8405 ;; Hardware stack levels used:    1
  8406 ;; Hardware stack levels required when called:    5
  8407 ;; This function calls:
  8408 ;;		_TMR4_SetInterruptHandler
  8409 ;; This function is called by:
  8410 ;;		_SYSTEM_Initialize
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           
  8414                           
  8415                           ;psect for function _TMR4_Initialize
  8416  0968                     _TMR4_Initialize:	
  8417  0968                     l3657:	
  8418                           ;incstack = 0
  8419                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8420                           
  8421                           
  8422                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xDE;
  8423  0968  30DE               	movlw	222
  8424  0969  0028               	movlb	8	; select bank8
  8425  096A  0096               	movwf	22	;volatile
  8426  096B                     l3659:	
  8427                           
  8428                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  8429  096B  0195               	clrf	21	;volatile
  8430  096C                     l3661:	
  8431                           
  8432                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  8433  096C  0020               	movlb	0	; select bank0
  8434  096D  1093               	bcf	19,1	;volatile
  8435  096E                     l3663:	
  8436                           
  8437                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  8438  096E  0021               	movlb	1	; select bank1
  8439  096F  1493               	bsf	19,1	;volatile
  8440  0970                     l3665:	
  8441                           
  8442                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  8443  0970  30FE               	movlw	low _TMR4_DefaultInterruptHandler
  8444  0971  0020               	movlb	0	; select bank0
  8445  0972  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  8446  0973  3007               	movlw	high _TMR4_DefaultInterruptHandler
  8447  0974  00A1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  8448  0975  3188  2098  3189   	fcall	_TMR4_SetInterruptHandler
  8449  0978                     l3667:	
  8450                           
  8451                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x07;
  8452  0978  3007               	movlw	7
  8453  0979  0028               	movlb	8	; select bank8
  8454  097A  0097               	movwf	23	;volatile
  8455  097B                     l225:	
  8456  097B  0008               	return
  8457  097C                     __end_of_TMR4_Initialize:	
  8458                           
  8459                           	psect	text23
  8460  0898                     __ptext23:	
  8461 ;; *************** function _TMR4_SetInterruptHandler *****************
  8462 ;; Defined at:
  8463 ;;		line 132 in file "mcc_generated_files/tmr4.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8466 ;;		 -> send_data(1), TMR4_DefaultInterruptHandler(1), 
  8467 ;; Auto vars:     Size  Location     Type
  8468 ;;		None
  8469 ;; Return value:  Size  Location     Type
  8470 ;;                  1    wreg      void 
  8471 ;; Registers used:
  8472 ;;		wreg
  8473 ;; Tracked objects:
  8474 ;;		On entry : 0/0
  8475 ;;		On exit  : 0/0
  8476 ;;		Unchanged: 0/0
  8477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8478 ;;      Params:         0       2       0       0       0       0
  8479 ;;      Locals:         0       0       0       0       0       0
  8480 ;;      Temps:          0       0       0       0       0       0
  8481 ;;      Totals:         0       2       0       0       0       0
  8482 ;;Total ram usage:        2 bytes
  8483 ;; Hardware stack levels used:    1
  8484 ;; Hardware stack levels required when called:    4
  8485 ;; This function calls:
  8486 ;;		Nothing
  8487 ;; This function is called by:
  8488 ;;		_TMR4_Initialize
  8489 ;;		_main
  8490 ;; This function uses a non-reentrant model
  8491 ;;
  8492                           
  8493                           
  8494                           ;psect for function _TMR4_SetInterruptHandler
  8495  0898                     _TMR4_SetInterruptHandler:	
  8496  0898                     l3559:	
  8497                           ;incstack = 0
  8498                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  8499                           
  8500                           
  8501                           ;mcc_generated_files/tmr4.c: 133:     TMR4_InterruptHandler = InterruptHandler;
  8502  0898  0020               	movlb	0	; select bank0
  8503  0899  0821               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
  8504  089A  0021               	movlb	1	; select bank1
  8505  089B  00EB               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
  8506  089C  0020               	movlb	0	; select bank0
  8507  089D  0820               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
  8508  089E  0021               	movlb	1	; select bank1
  8509  089F  00EA               	movwf	_TMR4_InterruptHandler^(0+128)
  8510  08A0                     l247:	
  8511  08A0  0008               	return
  8512  08A1                     __end_of_TMR4_SetInterruptHandler:	
  8513                           
  8514                           	psect	text24
  8515  083F                     __ptext24:	
  8516 ;; *************** function _TMR2_Initialize *****************
  8517 ;; Defined at:
  8518 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;		None
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;		None
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  1    wreg      void 
  8525 ;; Registers used:
  8526 ;;		wreg, status,2
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8532 ;;      Params:         0       0       0       0       0       0
  8533 ;;      Locals:         0       0       0       0       0       0
  8534 ;;      Temps:          0       0       0       0       0       0
  8535 ;;      Totals:         0       0       0       0       0       0
  8536 ;;Total ram usage:        0 bytes
  8537 ;; Hardware stack levels used:    1
  8538 ;; Hardware stack levels required when called:    4
  8539 ;; This function calls:
  8540 ;;		Nothing
  8541 ;; This function is called by:
  8542 ;;		_SYSTEM_Initialize
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546                           
  8547                           ;psect for function _TMR2_Initialize
  8548  083F                     _TMR2_Initialize:	
  8549  083F                     l3677:	
  8550                           ;incstack = 0
  8551                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8552                           
  8553                           
  8554                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  8555  083F  30FF               	movlw	255
  8556  0840  0020               	movlb	0	; select bank0
  8557  0841  009B               	movwf	27	;volatile
  8558  0842                     l3679:	
  8559                           
  8560                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  8561  0842  019A               	clrf	26	;volatile
  8562  0843                     l3681:	
  8563                           
  8564                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  8565  0843  1091               	bcf	17,1	;volatile
  8566  0844                     l3683:	
  8567                           
  8568                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  8569  0844  3004               	movlw	4
  8570  0845  009C               	movwf	28	;volatile
  8571  0846                     l185:	
  8572  0846  0008               	return
  8573  0847                     __end_of_TMR2_Initialize:	
  8574                           
  8575                           	psect	text25
  8576  0935                     __ptext25:	
  8577 ;; *************** function _TMR1_Initialize *****************
  8578 ;; Defined at:
  8579 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;		None
  8582 ;; Auto vars:     Size  Location     Type
  8583 ;;		None
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  1    wreg      void 
  8586 ;; Registers used:
  8587 ;;		wreg, status,2
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8593 ;;      Params:         0       0       0       0       0       0
  8594 ;;      Locals:         0       0       0       0       0       0
  8595 ;;      Temps:          0       0       0       0       0       0
  8596 ;;      Totals:         0       0       0       0       0       0
  8597 ;;Total ram usage:        0 bytes
  8598 ;; Hardware stack levels used:    1
  8599 ;; Hardware stack levels required when called:    4
  8600 ;; This function calls:
  8601 ;;		Nothing
  8602 ;; This function is called by:
  8603 ;;		_SYSTEM_Initialize
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           
  8608                           ;psect for function _TMR1_Initialize
  8609  0935                     _TMR1_Initialize:	
  8610  0935                     l3685:	
  8611                           ;incstack = 0
  8612                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  8613                           
  8614                           
  8615                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  8616  0935  0020               	movlb	0	; select bank0
  8617  0936  0199               	clrf	25	;volatile
  8618                           
  8619                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
  8620  0937  0197               	clrf	23	;volatile
  8621                           
  8622                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  8623  0938  0196               	clrf	22	;volatile
  8624  0939                     l3687:	
  8625                           
  8626                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  8627  0939  1011               	bcf	17,0	;volatile
  8628  093A                     l3689:	
  8629                           
  8630                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8631  093A  0817               	movf	23,w	;volatile
  8632  093B  0021               	movlb	1	; select bank1
  8633  093C  00ED               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  8634  093D  0020               	movlb	0	; select bank0
  8635  093E  0816               	movf	22,w	;volatile
  8636  093F  0021               	movlb	1	; select bank1
  8637  0940  00EC               	movwf	_timer1ReloadVal^(0+128)	;volatile
  8638  0941                     l3691:	
  8639                           
  8640                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  8641  0941  3031               	movlw	49
  8642  0942  0020               	movlb	0	; select bank0
  8643  0943  0098               	movwf	24	;volatile
  8644  0944                     l146:	
  8645  0944  0008               	return
  8646  0945                     __end_of_TMR1_Initialize:	
  8647                           
  8648                           	psect	text26
  8649  088F                     __ptext26:	
  8650 ;; *************** function _PWM3_Initialize *****************
  8651 ;; Defined at:
  8652 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  8653 ;; Parameters:    Size  Location     Type
  8654 ;;		None
  8655 ;; Auto vars:     Size  Location     Type
  8656 ;;		None
  8657 ;; Return value:  Size  Location     Type
  8658 ;;                  1    wreg      void 
  8659 ;; Registers used:
  8660 ;;		wreg, status,2, status,0
  8661 ;; Tracked objects:
  8662 ;;		On entry : 0/0
  8663 ;;		On exit  : 0/0
  8664 ;;		Unchanged: 0/0
  8665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8666 ;;      Params:         0       0       0       0       0       0
  8667 ;;      Locals:         0       0       0       0       0       0
  8668 ;;      Temps:          0       0       0       0       0       0
  8669 ;;      Totals:         0       0       0       0       0       0
  8670 ;;Total ram usage:        0 bytes
  8671 ;; Hardware stack levels used:    1
  8672 ;; Hardware stack levels required when called:    4
  8673 ;; This function calls:
  8674 ;;		Nothing
  8675 ;; This function is called by:
  8676 ;;		_SYSTEM_Initialize
  8677 ;; This function uses a non-reentrant model
  8678 ;;
  8679                           
  8680                           
  8681                           ;psect for function _PWM3_Initialize
  8682  088F                     _PWM3_Initialize:	
  8683  088F                     l3669:	
  8684                           ;incstack = 0
  8685                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  8686                           
  8687                           
  8688                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x0C;
  8689  088F  300C               	movlw	12
  8690  0890  0026               	movlb	6	; select bank6
  8691  0891  0093               	movwf	19	;volatile
  8692  0892                     l3671:	
  8693                           
  8694                           ;mcc_generated_files/pwm3.c: 72:  CCPR3L = 0x00;
  8695  0892  0191               	clrf	17	;volatile
  8696  0893                     l3673:	
  8697                           
  8698                           ;mcc_generated_files/pwm3.c: 75:  CCPR3H = 0x00;
  8699  0893  0192               	clrf	18	;volatile
  8700  0894                     l3675:	
  8701                           
  8702                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x0;
  8703  0894  30CF               	movlw	-49
  8704  0895  0025               	movlb	5	; select bank5
  8705  0896  059E               	andwf	30,f	;volatile
  8706  0897                     l472:	
  8707  0897  0008               	return
  8708  0898                     __end_of_PWM3_Initialize:	
  8709                           
  8710                           	psect	text27
  8711  0B30                     __ptext27:	
  8712 ;; *************** function _PIN_MANAGER_Initialize *****************
  8713 ;; Defined at:
  8714 ;;		line 60 in file "mcc_generated_files/pin_manager.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;		None
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;		None
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  1    wreg      void 
  8721 ;; Registers used:
  8722 ;;		wreg, status,2, status,0, pclath, cstack
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8728 ;;      Params:         0       0       0       0       0       0
  8729 ;;      Locals:         0       0       0       0       0       0
  8730 ;;      Temps:          0       0       0       0       0       0
  8731 ;;      Totals:         0       0       0       0       0       0
  8732 ;;Total ram usage:        0 bytes
  8733 ;; Hardware stack levels used:    1
  8734 ;; Hardware stack levels required when called:    5
  8735 ;; This function calls:
  8736 ;;		_IOCBF0_SetInterruptHandler
  8737 ;;		_IOCBF3_SetInterruptHandler
  8738 ;;		_IOCBF4_SetInterruptHandler
  8739 ;;		_IOCBF5_SetInterruptHandler
  8740 ;; This function is called by:
  8741 ;;		_SYSTEM_Initialize
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745                           
  8746                           ;psect for function _PIN_MANAGER_Initialize
  8747  0B30                     _PIN_MANAGER_Initialize:	
  8748  0B30                     l3583:	
  8749                           ;incstack = 0
  8750                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8751                           
  8752                           
  8753                           ;mcc_generated_files/pin_manager.c: 65:     LATA = 0x00;
  8754  0B30  0022               	movlb	2	; select bank2
  8755  0B31  018C               	clrf	12	;volatile
  8756                           
  8757                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
  8758  0B32  018D               	clrf	13	;volatile
  8759  0B33                     l3585:	
  8760                           
  8761                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0x33;
  8762  0B33  3033               	movlw	51
  8763  0B34  0021               	movlb	1	; select bank1
  8764  0B35  008C               	movwf	12	;volatile
  8765  0B36                     l3587:	
  8766                           
  8767                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
  8768  0B36  30FF               	movlw	255
  8769  0B37  008D               	movwf	13	;volatile
  8770  0B38                     l3589:	
  8771                           
  8772                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xC0;
  8773  0B38  30C0               	movlw	192
  8774  0B39  0023               	movlb	3	; select bank3
  8775  0B3A  008D               	movwf	13	;volatile
  8776  0B3B                     l3591:	
  8777                           
  8778                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x03;
  8779  0B3B  3003               	movlw	3
  8780  0B3C  008C               	movwf	12	;volatile
  8781                           
  8782                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  8783  0B3D  0024               	movlb	4	; select bank4
  8784  0B3E  018D               	clrf	13	;volatile
  8785                           
  8786                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  8787  0B3F  018C               	clrf	12	;volatile
  8788  0B40                     l3593:	
  8789                           
  8790                           ;mcc_generated_files/pin_manager.c: 85:     OPTION_REGbits.nWPUEN = 1;
  8791  0B40  0021               	movlb	1	; select bank1
  8792  0B41  1795               	bsf	21,7	;volatile
  8793                           
  8794                           ;mcc_generated_files/pin_manager.c: 91:     APFCON0 = 0x00;
  8795  0B42  0022               	movlb	2	; select bank2
  8796  0B43  019D               	clrf	29	;volatile
  8797                           
  8798                           ;mcc_generated_files/pin_manager.c: 92:     APFCON1 = 0x00;
  8799  0B44  019E               	clrf	30	;volatile
  8800  0B45                     l3595:	
  8801                           
  8802                           ;mcc_generated_files/pin_manager.c: 98:     IOCBFbits.IOCBF0 = 0;
  8803  0B45  0027               	movlb	7	; select bank7
  8804  0B46  1016               	bcf	22,0	;volatile
  8805  0B47                     l3597:	
  8806                           
  8807                           ;mcc_generated_files/pin_manager.c: 100:     IOCBFbits.IOCBF3 = 0;
  8808  0B47  1196               	bcf	22,3	;volatile
  8809  0B48                     l3599:	
  8810                           
  8811                           ;mcc_generated_files/pin_manager.c: 102:     IOCBFbits.IOCBF4 = 0;
  8812  0B48  1216               	bcf	22,4	;volatile
  8813  0B49                     l3601:	
  8814                           
  8815                           ;mcc_generated_files/pin_manager.c: 104:     IOCBFbits.IOCBF5 = 0;
  8816  0B49  1296               	bcf	22,5	;volatile
  8817  0B4A                     l3603:	
  8818                           
  8819                           ;mcc_generated_files/pin_manager.c: 106:     IOCBNbits.IOCBN0 = 1;
  8820  0B4A  1415               	bsf	21,0	;volatile
  8821  0B4B                     l3605:	
  8822                           
  8823                           ;mcc_generated_files/pin_manager.c: 108:     IOCBNbits.IOCBN3 = 1;
  8824  0B4B  1595               	bsf	21,3	;volatile
  8825  0B4C                     l3607:	
  8826                           
  8827                           ;mcc_generated_files/pin_manager.c: 110:     IOCBNbits.IOCBN4 = 1;
  8828  0B4C  1615               	bsf	21,4	;volatile
  8829  0B4D                     l3609:	
  8830                           
  8831                           ;mcc_generated_files/pin_manager.c: 112:     IOCBNbits.IOCBN5 = 1;
  8832  0B4D  1695               	bsf	21,5	;volatile
  8833  0B4E                     l3611:	
  8834                           
  8835                           ;mcc_generated_files/pin_manager.c: 114:     IOCBPbits.IOCBP0 = 0;
  8836  0B4E  1014               	bcf	20,0	;volatile
  8837  0B4F                     l3613:	
  8838                           
  8839                           ;mcc_generated_files/pin_manager.c: 116:     IOCBPbits.IOCBP3 = 0;
  8840  0B4F  1194               	bcf	20,3	;volatile
  8841  0B50                     l3615:	
  8842                           
  8843                           ;mcc_generated_files/pin_manager.c: 118:     IOCBPbits.IOCBP4 = 0;
  8844  0B50  1214               	bcf	20,4	;volatile
  8845  0B51                     l3617:	
  8846                           
  8847                           ;mcc_generated_files/pin_manager.c: 120:     IOCBPbits.IOCBP5 = 0;
  8848  0B51  1294               	bcf	20,5	;volatile
  8849  0B52                     l3619:	
  8850                           
  8851                           ;mcc_generated_files/pin_manager.c: 125:     IOCBF0_SetInterruptHandler(IOCBF0_DefaultIn
      +                          terruptHandler);
  8852  0B52  3015               	movlw	low _IOCBF0_DefaultInterruptHandler
  8853  0B53  0020               	movlb	0	; select bank0
  8854  0B54  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler
  8855  0B55  3008               	movlw	high _IOCBF0_DefaultInterruptHandler
  8856  0B56  00A1               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler+1
  8857  0B57  3188  206B  318B   	fcall	_IOCBF0_SetInterruptHandler
  8858  0B5A                     l3621:	
  8859                           
  8860                           ;mcc_generated_files/pin_manager.c: 126:     IOCBF3_SetInterruptHandler(IOCBF3_DefaultIn
      +                          terruptHandler);
  8861  0B5A  3002               	movlw	low _IOCBF3_DefaultInterruptHandler
  8862  0B5B  0020               	movlb	0	; select bank0
  8863  0B5C  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler
  8864  0B5D  3000               	movlw	high _IOCBF3_DefaultInterruptHandler
  8865  0B5E  00A1               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler+1
  8866  0B5F  3188  2074  318B   	fcall	_IOCBF3_SetInterruptHandler
  8867  0B62                     l3623:	
  8868                           
  8869                           ;mcc_generated_files/pin_manager.c: 127:     IOCBF4_SetInterruptHandler(IOCBF4_DefaultIn
      +                          terruptHandler);
  8870  0B62  3003               	movlw	low _IOCBF4_DefaultInterruptHandler
  8871  0B63  0020               	movlb	0	; select bank0
  8872  0B64  00A0               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
  8873  0B65  3000               	movlw	high _IOCBF4_DefaultInterruptHandler
  8874  0B66  00A1               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
  8875  0B67  3188  207D  318B   	fcall	_IOCBF4_SetInterruptHandler
  8876  0B6A                     l3625:	
  8877                           
  8878                           ;mcc_generated_files/pin_manager.c: 128:     IOCBF5_SetInterruptHandler(IOCBF5_DefaultIn
      +                          terruptHandler);
  8879  0B6A  30FF               	movlw	low _IOCBF5_DefaultInterruptHandler
  8880  0B6B  0020               	movlb	0	; select bank0
  8881  0B6C  00A0               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler
  8882  0B6D  3007               	movlw	high _IOCBF5_DefaultInterruptHandler
  8883  0B6E  00A1               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler+1
  8884  0B6F  3188  2086  318B   	fcall	_IOCBF5_SetInterruptHandler
  8885  0B72                     l3627:	
  8886                           
  8887                           ;mcc_generated_files/pin_manager.c: 131:     INTCONbits.IOCIE = 1;
  8888  0B72  158B               	bsf	11,3	;volatile
  8889  0B73                     l414:	
  8890  0B73  0008               	return
  8891  0B74                     __end_of_PIN_MANAGER_Initialize:	
  8892                           
  8893                           	psect	text28
  8894  0886                     __ptext28:	
  8895 ;; *************** function _IOCBF5_SetInterruptHandler *****************
  8896 ;; Defined at:
  8897 ;;		line 267 in file "mcc_generated_files/pin_manager.c"
  8898 ;; Parameters:    Size  Location     Type
  8899 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8900 ;;		 -> sensor4(1), IOCBF5_DefaultInterruptHandler(1), 
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;		None
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  1    wreg      void 
  8905 ;; Registers used:
  8906 ;;		wreg
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8912 ;;      Params:         0       2       0       0       0       0
  8913 ;;      Locals:         0       0       0       0       0       0
  8914 ;;      Temps:          0       0       0       0       0       0
  8915 ;;      Totals:         0       2       0       0       0       0
  8916 ;;Total ram usage:        2 bytes
  8917 ;; Hardware stack levels used:    1
  8918 ;; Hardware stack levels required when called:    4
  8919 ;; This function calls:
  8920 ;;		Nothing
  8921 ;; This function is called by:
  8922 ;;		_PIN_MANAGER_Initialize
  8923 ;;		_main
  8924 ;; This function uses a non-reentrant model
  8925 ;;
  8926                           
  8927                           
  8928                           ;psect for function _IOCBF5_SetInterruptHandler
  8929  0886                     _IOCBF5_SetInterruptHandler:	
  8930  0886                     l3569:	
  8931                           ;incstack = 0
  8932                           ; Regs used in _IOCBF5_SetInterruptHandler: [wreg]
  8933                           
  8934                           
  8935                           ;mcc_generated_files/pin_manager.c: 268:     IOCBF5_InterruptHandler = InterruptHandler;
  8936  0886  0020               	movlb	0	; select bank0
  8937  0887  0821               	movf	IOCBF5_SetInterruptHandler@InterruptHandler+1,w
  8938  0888  0021               	movlb	1	; select bank1
  8939  0889  00E1               	movwf	(_IOCBF5_InterruptHandler+1)^(0+128)
  8940  088A  0020               	movlb	0	; select bank0
  8941  088B  0820               	movf	IOCBF5_SetInterruptHandler@InterruptHandler,w
  8942  088C  0021               	movlb	1	; select bank1
  8943  088D  00E0               	movwf	_IOCBF5_InterruptHandler^(0+128)
  8944  088E                     l458:	
  8945  088E  0008               	return
  8946  088F                     __end_of_IOCBF5_SetInterruptHandler:	
  8947                           
  8948                           	psect	text29
  8949  087D                     __ptext29:	
  8950 ;; *************** function _IOCBF4_SetInterruptHandler *****************
  8951 ;; Defined at:
  8952 ;;		line 237 in file "mcc_generated_files/pin_manager.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8955 ;;		 -> sensor3(1), IOCBF4_DefaultInterruptHandler(1), 
  8956 ;; Auto vars:     Size  Location     Type
  8957 ;;		None
  8958 ;; Return value:  Size  Location     Type
  8959 ;;                  1    wreg      void 
  8960 ;; Registers used:
  8961 ;;		wreg
  8962 ;; Tracked objects:
  8963 ;;		On entry : 0/0
  8964 ;;		On exit  : 0/0
  8965 ;;		Unchanged: 0/0
  8966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8967 ;;      Params:         0       2       0       0       0       0
  8968 ;;      Locals:         0       0       0       0       0       0
  8969 ;;      Temps:          0       0       0       0       0       0
  8970 ;;      Totals:         0       2       0       0       0       0
  8971 ;;Total ram usage:        2 bytes
  8972 ;; Hardware stack levels used:    1
  8973 ;; Hardware stack levels required when called:    4
  8974 ;; This function calls:
  8975 ;;		Nothing
  8976 ;; This function is called by:
  8977 ;;		_PIN_MANAGER_Initialize
  8978 ;;		_main
  8979 ;; This function uses a non-reentrant model
  8980 ;;
  8981                           
  8982                           
  8983                           ;psect for function _IOCBF4_SetInterruptHandler
  8984  087D                     _IOCBF4_SetInterruptHandler:	
  8985  087D                     l3567:	
  8986                           ;incstack = 0
  8987                           ; Regs used in _IOCBF4_SetInterruptHandler: [wreg]
  8988                           
  8989                           
  8990                           ;mcc_generated_files/pin_manager.c: 238:     IOCBF4_InterruptHandler = InterruptHandler;
  8991  087D  0020               	movlb	0	; select bank0
  8992  087E  0821               	movf	IOCBF4_SetInterruptHandler@InterruptHandler+1,w
  8993  087F  0021               	movlb	1	; select bank1
  8994  0880  00E3               	movwf	(_IOCBF4_InterruptHandler+1)^(0+128)
  8995  0881  0020               	movlb	0	; select bank0
  8996  0882  0820               	movf	IOCBF4_SetInterruptHandler@InterruptHandler,w
  8997  0883  0021               	movlb	1	; select bank1
  8998  0884  00E2               	movwf	_IOCBF4_InterruptHandler^(0+128)
  8999  0885                     l448:	
  9000  0885  0008               	return
  9001  0886                     __end_of_IOCBF4_SetInterruptHandler:	
  9002                           
  9003                           	psect	text30
  9004  0874                     __ptext30:	
  9005 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  9006 ;; Defined at:
  9007 ;;		line 207 in file "mcc_generated_files/pin_manager.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9010 ;;		 -> sensor2(1), IOCBF3_DefaultInterruptHandler(1), 
  9011 ;; Auto vars:     Size  Location     Type
  9012 ;;		None
  9013 ;; Return value:  Size  Location     Type
  9014 ;;                  1    wreg      void 
  9015 ;; Registers used:
  9016 ;;		wreg
  9017 ;; Tracked objects:
  9018 ;;		On entry : 0/0
  9019 ;;		On exit  : 0/0
  9020 ;;		Unchanged: 0/0
  9021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9022 ;;      Params:         0       2       0       0       0       0
  9023 ;;      Locals:         0       0       0       0       0       0
  9024 ;;      Temps:          0       0       0       0       0       0
  9025 ;;      Totals:         0       2       0       0       0       0
  9026 ;;Total ram usage:        2 bytes
  9027 ;; Hardware stack levels used:    1
  9028 ;; Hardware stack levels required when called:    4
  9029 ;; This function calls:
  9030 ;;		Nothing
  9031 ;; This function is called by:
  9032 ;;		_PIN_MANAGER_Initialize
  9033 ;;		_main
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037                           
  9038                           ;psect for function _IOCBF3_SetInterruptHandler
  9039  0874                     _IOCBF3_SetInterruptHandler:	
  9040  0874                     l3565:	
  9041                           ;incstack = 0
  9042                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  9043                           
  9044                           
  9045                           ;mcc_generated_files/pin_manager.c: 208:     IOCBF3_InterruptHandler = InterruptHandler;
  9046  0874  0020               	movlb	0	; select bank0
  9047  0875  0821               	movf	IOCBF3_SetInterruptHandler@InterruptHandler+1,w
  9048  0876  0021               	movlb	1	; select bank1
  9049  0877  00E5               	movwf	(_IOCBF3_InterruptHandler+1)^(0+128)
  9050  0878  0020               	movlb	0	; select bank0
  9051  0879  0820               	movf	IOCBF3_SetInterruptHandler@InterruptHandler,w
  9052  087A  0021               	movlb	1	; select bank1
  9053  087B  00E4               	movwf	_IOCBF3_InterruptHandler^(0+128)
  9054  087C                     l438:	
  9055  087C  0008               	return
  9056  087D                     __end_of_IOCBF3_SetInterruptHandler:	
  9057                           
  9058                           	psect	text31
  9059  086B                     __ptext31:	
  9060 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  9061 ;; Defined at:
  9062 ;;		line 177 in file "mcc_generated_files/pin_manager.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9065 ;;		 -> sensor1(1), IOCBF0_DefaultInterruptHandler(1), 
  9066 ;; Auto vars:     Size  Location     Type
  9067 ;;		None
  9068 ;; Return value:  Size  Location     Type
  9069 ;;                  1    wreg      void 
  9070 ;; Registers used:
  9071 ;;		wreg
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9077 ;;      Params:         0       2       0       0       0       0
  9078 ;;      Locals:         0       0       0       0       0       0
  9079 ;;      Temps:          0       0       0       0       0       0
  9080 ;;      Totals:         0       2       0       0       0       0
  9081 ;;Total ram usage:        2 bytes
  9082 ;; Hardware stack levels used:    1
  9083 ;; Hardware stack levels required when called:    4
  9084 ;; This function calls:
  9085 ;;		Nothing
  9086 ;; This function is called by:
  9087 ;;		_PIN_MANAGER_Initialize
  9088 ;;		_main
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092                           
  9093                           ;psect for function _IOCBF0_SetInterruptHandler
  9094  086B                     _IOCBF0_SetInterruptHandler:	
  9095  086B                     l3563:	
  9096                           ;incstack = 0
  9097                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  9098                           
  9099                           
  9100                           ;mcc_generated_files/pin_manager.c: 178:     IOCBF0_InterruptHandler = InterruptHandler;
  9101  086B  0020               	movlb	0	; select bank0
  9102  086C  0821               	movf	IOCBF0_SetInterruptHandler@InterruptHandler+1,w
  9103  086D  0021               	movlb	1	; select bank1
  9104  086E  00E7               	movwf	(_IOCBF0_InterruptHandler+1)^(0+128)
  9105  086F  0020               	movlb	0	; select bank0
  9106  0870  0820               	movf	IOCBF0_SetInterruptHandler@InterruptHandler,w
  9107  0871  0021               	movlb	1	; select bank1
  9108  0872  00E6               	movwf	_IOCBF0_InterruptHandler^(0+128)
  9109  0873                     l428:	
  9110  0873  0008               	return
  9111  0874                     __end_of_IOCBF0_SetInterruptHandler:	
  9112                           
  9113                           	psect	text32
  9114  0830                     __ptext32:	
  9115 ;; *************** function _OSCILLATOR_Initialize *****************
  9116 ;; Defined at:
  9117 ;;		line 66 in file "mcc_generated_files/mcc.c"
  9118 ;; Parameters:    Size  Location     Type
  9119 ;;		None
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;		None
  9122 ;; Return value:  Size  Location     Type
  9123 ;;                  1    wreg      void 
  9124 ;; Registers used:
  9125 ;;		wreg, status,2
  9126 ;; Tracked objects:
  9127 ;;		On entry : 0/0
  9128 ;;		On exit  : 0/0
  9129 ;;		Unchanged: 0/0
  9130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9131 ;;      Params:         0       0       0       0       0       0
  9132 ;;      Locals:         0       0       0       0       0       0
  9133 ;;      Temps:          0       0       0       0       0       0
  9134 ;;      Totals:         0       0       0       0       0       0
  9135 ;;Total ram usage:        0 bytes
  9136 ;; Hardware stack levels used:    1
  9137 ;; Hardware stack levels required when called:    4
  9138 ;; This function calls:
  9139 ;;		Nothing
  9140 ;; This function is called by:
  9141 ;;		_SYSTEM_Initialize
  9142 ;; This function uses a non-reentrant model
  9143 ;;
  9144                           
  9145                           
  9146                           ;psect for function _OSCILLATOR_Initialize
  9147  0830                     _OSCILLATOR_Initialize:	
  9148  0830                     l3629:	
  9149                           ;incstack = 0
  9150                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9151                           
  9152                           
  9153                           ;mcc_generated_files/mcc.c: 69:     OSCCON = 0x70;
  9154  0830  3070               	movlw	112
  9155  0831  0021               	movlb	1	; select bank1
  9156  0832  0099               	movwf	25	;volatile
  9157  0833                     l3631:	
  9158                           
  9159                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  9160  0833  0198               	clrf	24	;volatile
  9161  0834                     l3633:	
  9162                           
  9163                           ;mcc_generated_files/mcc.c: 73:     BORCON = 0x00;
  9164  0834  0022               	movlb	2	; select bank2
  9165  0835  0196               	clrf	22	;volatile
  9166  0836                     l124:	
  9167  0836  0008               	return
  9168  0837                     __end_of_OSCILLATOR_Initialize:	
  9169                           
  9170                           	psect	text33
  9171  0816                     __ptext33:	
  9172 ;; *************** function _FVR_Initialize *****************
  9173 ;; Defined at:
  9174 ;;		line 58 in file "mcc_generated_files/fvr.c"
  9175 ;; Parameters:    Size  Location     Type
  9176 ;;		None
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;		None
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      void 
  9181 ;; Registers used:
  9182 ;;		wreg
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9188 ;;      Params:         0       0       0       0       0       0
  9189 ;;      Locals:         0       0       0       0       0       0
  9190 ;;      Temps:          0       0       0       0       0       0
  9191 ;;      Totals:         0       0       0       0       0       0
  9192 ;;Total ram usage:        0 bytes
  9193 ;; Hardware stack levels used:    1
  9194 ;; Hardware stack levels required when called:    4
  9195 ;; This function calls:
  9196 ;;		Nothing
  9197 ;; This function is called by:
  9198 ;;		_SYSTEM_Initialize
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202                           
  9203                           ;psect for function _FVR_Initialize
  9204  0816                     _FVR_Initialize:	
  9205  0816                     l3637:	
  9206                           ;incstack = 0
  9207                           ; Regs used in _FVR_Initialize: [wreg]
  9208                           
  9209                           
  9210                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x81;
  9211  0816  3081               	movlw	129
  9212  0817  0022               	movlb	2	; select bank2
  9213  0818  0097               	movwf	23	;volatile
  9214  0819                     l320:	
  9215  0819  0008               	return
  9216  081A                     __end_of_FVR_Initialize:	
  9217                           
  9218                           	psect	text34
  9219  0A4E                     __ptext34:	
  9220 ;; *************** function _EUSART_Initialize *****************
  9221 ;; Defined at:
  9222 ;;		line 66 in file "mcc_generated_files/eusart.c"
  9223 ;; Parameters:    Size  Location     Type
  9224 ;;		None
  9225 ;; Auto vars:     Size  Location     Type
  9226 ;;		None
  9227 ;; Return value:  Size  Location     Type
  9228 ;;                  1    wreg      void 
  9229 ;; Registers used:
  9230 ;;		wreg, status,2, status,0, pclath, cstack
  9231 ;; Tracked objects:
  9232 ;;		On entry : 0/0
  9233 ;;		On exit  : 0/0
  9234 ;;		Unchanged: 0/0
  9235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9236 ;;      Params:         0       0       0       0       0       0
  9237 ;;      Locals:         0       0       0       0       0       0
  9238 ;;      Temps:          0       0       0       0       0       0
  9239 ;;      Totals:         0       0       0       0       0       0
  9240 ;;Total ram usage:        0 bytes
  9241 ;; Hardware stack levels used:    1
  9242 ;; Hardware stack levels required when called:    5
  9243 ;; This function calls:
  9244 ;;		_EUSART_SetErrorHandler
  9245 ;;		_EUSART_SetFramingErrorHandler
  9246 ;;		_EUSART_SetOverrunErrorHandler
  9247 ;; This function is called by:
  9248 ;;		_SYSTEM_Initialize
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           
  9253                           ;psect for function _EUSART_Initialize
  9254  0A4E                     _EUSART_Initialize:	
  9255  0A4E                     l3571:	
  9256                           ;incstack = 0
  9257                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9258                           
  9259                           
  9260                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  9261  0A4E  3008               	movlw	8
  9262  0A4F  0023               	movlb	3	; select bank3
  9263  0A50  009F               	movwf	31	;volatile
  9264                           
  9265                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  9266  0A51  3090               	movlw	144
  9267  0A52  009D               	movwf	29	;volatile
  9268                           
  9269                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  9270  0A53  3024               	movlw	36
  9271  0A54  009E               	movwf	30	;volatile
  9272                           
  9273                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  9274  0A55  3067               	movlw	103
  9275  0A56  009B               	movwf	27	;volatile
  9276  0A57                     l3573:	
  9277                           
  9278                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  9279  0A57  019C               	clrf	28	;volatile
  9280  0A58                     l3575:	
  9281                           
  9282                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  9283  0A58  3000               	movlw	0
  9284  0A59  0020               	movlb	0	; select bank0
  9285  0A5A  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  9286  0A5B  3000               	movlw	0
  9287  0A5C  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  9288  0A5D  3188  2059  318A   	fcall	_EUSART_SetFramingErrorHandler
  9289  0A60                     l3577:	
  9290                           
  9291                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  9292  0A60  3000               	movlw	0
  9293  0A61  0020               	movlb	0	; select bank0
  9294  0A62  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  9295  0A63  3000               	movlw	0
  9296  0A64  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  9297  0A65  3188  2062  318A   	fcall	_EUSART_SetOverrunErrorHandler
  9298  0A68                     l3579:	
  9299                           
  9300                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  9301  0A68  3000               	movlw	0
  9302  0A69  0020               	movlb	0	; select bank0
  9303  0A6A  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  9304  0A6B  3000               	movlw	0
  9305  0A6C  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  9306  0A6D  3188  2050  318A   	fcall	_EUSART_SetErrorHandler
  9307  0A70                     l3581:	
  9308                           
  9309                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  9310  0A70  01F6               	clrf	_eusartRxLastError	;volatile
  9311  0A71                     l43:	
  9312  0A71  0008               	return
  9313  0A72                     __end_of_EUSART_Initialize:	
  9314                           
  9315                           	psect	text35
  9316  0862                     __ptext35:	
  9317 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  9318 ;; Defined at:
  9319 ;;		line 161 in file "mcc_generated_files/eusart.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9322 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;		None
  9325 ;; Return value:  Size  Location     Type
  9326 ;;                  1    wreg      void 
  9327 ;; Registers used:
  9328 ;;		wreg
  9329 ;; Tracked objects:
  9330 ;;		On entry : 0/0
  9331 ;;		On exit  : 0/0
  9332 ;;		Unchanged: 0/0
  9333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9334 ;;      Params:         0       2       0       0       0       0
  9335 ;;      Locals:         0       0       0       0       0       0
  9336 ;;      Temps:          0       0       0       0       0       0
  9337 ;;      Totals:         0       2       0       0       0       0
  9338 ;;Total ram usage:        2 bytes
  9339 ;; Hardware stack levels used:    1
  9340 ;; Hardware stack levels required when called:    4
  9341 ;; This function calls:
  9342 ;;		Nothing
  9343 ;; This function is called by:
  9344 ;;		_EUSART_Initialize
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348                           
  9349                           ;psect for function _EUSART_SetOverrunErrorHandler
  9350  0862                     _EUSART_SetOverrunErrorHandler:	
  9351  0862                     l3539:	
  9352                           ;incstack = 0
  9353                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  9354                           
  9355                           
  9356                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  9357  0862  0020               	movlb	0	; select bank0
  9358  0863  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  9359  0864  0022               	movlb	2	; select bank2
  9360  0865  00C3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  9361  0866  0020               	movlb	0	; select bank0
  9362  0867  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  9363  0868  0022               	movlb	2	; select bank2
  9364  0869  00C2               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  9365  086A                     l85:	
  9366  086A  0008               	return
  9367  086B                     __end_of_EUSART_SetOverrunErrorHandler:	
  9368                           
  9369                           	psect	text36
  9370  0859                     __ptext36:	
  9371 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  9372 ;; Defined at:
  9373 ;;		line 157 in file "mcc_generated_files/eusart.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9376 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  9377 ;; Auto vars:     Size  Location     Type
  9378 ;;		None
  9379 ;; Return value:  Size  Location     Type
  9380 ;;                  1    wreg      void 
  9381 ;; Registers used:
  9382 ;;		wreg
  9383 ;; Tracked objects:
  9384 ;;		On entry : 0/0
  9385 ;;		On exit  : 0/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9388 ;;      Params:         0       2       0       0       0       0
  9389 ;;      Locals:         0       0       0       0       0       0
  9390 ;;      Temps:          0       0       0       0       0       0
  9391 ;;      Totals:         0       2       0       0       0       0
  9392 ;;Total ram usage:        2 bytes
  9393 ;; Hardware stack levels used:    1
  9394 ;; Hardware stack levels required when called:    4
  9395 ;; This function calls:
  9396 ;;		Nothing
  9397 ;; This function is called by:
  9398 ;;		_EUSART_Initialize
  9399 ;; This function uses a non-reentrant model
  9400 ;;
  9401                           
  9402                           
  9403                           ;psect for function _EUSART_SetFramingErrorHandler
  9404  0859                     _EUSART_SetFramingErrorHandler:	
  9405  0859                     l3537:	
  9406                           ;incstack = 0
  9407                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9408                           
  9409                           
  9410                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  9411  0859  0020               	movlb	0	; select bank0
  9412  085A  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  9413  085B  0021               	movlb	1	; select bank1
  9414  085C  00EF               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  9415  085D  0020               	movlb	0	; select bank0
  9416  085E  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  9417  085F  0021               	movlb	1	; select bank1
  9418  0860  00EE               	movwf	_EUSART_FramingErrorHandler^(0+128)
  9419  0861                     l82:	
  9420  0861  0008               	return
  9421  0862                     __end_of_EUSART_SetFramingErrorHandler:	
  9422                           
  9423                           	psect	text37
  9424  0850                     __ptext37:	
  9425 ;; *************** function _EUSART_SetErrorHandler *****************
  9426 ;; Defined at:
  9427 ;;		line 165 in file "mcc_generated_files/eusart.c"
  9428 ;; Parameters:    Size  Location     Type
  9429 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9430 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;		None
  9433 ;; Return value:  Size  Location     Type
  9434 ;;                  1    wreg      void 
  9435 ;; Registers used:
  9436 ;;		wreg
  9437 ;; Tracked objects:
  9438 ;;		On entry : 0/0
  9439 ;;		On exit  : 0/0
  9440 ;;		Unchanged: 0/0
  9441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9442 ;;      Params:         0       2       0       0       0       0
  9443 ;;      Locals:         0       0       0       0       0       0
  9444 ;;      Temps:          0       0       0       0       0       0
  9445 ;;      Totals:         0       2       0       0       0       0
  9446 ;;Total ram usage:        2 bytes
  9447 ;; Hardware stack levels used:    1
  9448 ;; Hardware stack levels required when called:    4
  9449 ;; This function calls:
  9450 ;;		Nothing
  9451 ;; This function is called by:
  9452 ;;		_EUSART_Initialize
  9453 ;; This function uses a non-reentrant model
  9454 ;;
  9455                           
  9456                           
  9457                           ;psect for function _EUSART_SetErrorHandler
  9458  0850                     _EUSART_SetErrorHandler:	
  9459  0850                     l3541:	
  9460                           ;incstack = 0
  9461                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9462                           
  9463                           
  9464                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  9465  0850  0020               	movlb	0	; select bank0
  9466  0851  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9467  0852  0022               	movlb	2	; select bank2
  9468  0853  00C1               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  9469  0854  0020               	movlb	0	; select bank0
  9470  0855  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9471  0856  0022               	movlb	2	; select bank2
  9472  0857  00C0               	movwf	_EUSART_ErrorHandler^(0+256)
  9473  0858                     l88:	
  9474  0858  0008               	return
  9475  0859                     __end_of_EUSART_SetErrorHandler:	
  9476                           
  9477                           	psect	text38
  9478  0956                     __ptext38:	
  9479 ;; *************** function _CCP4_Initialize *****************
  9480 ;; Defined at:
  9481 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;		None
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;		None
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  1    wreg      void 
  9488 ;; Registers used:
  9489 ;;		wreg, status,2, status,0, pclath, cstack
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/0
  9492 ;;		On exit  : 0/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9495 ;;      Params:         0       0       0       0       0       0
  9496 ;;      Locals:         0       0       0       0       0       0
  9497 ;;      Temps:          0       0       0       0       0       0
  9498 ;;      Totals:         0       0       0       0       0       0
  9499 ;;Total ram usage:        0 bytes
  9500 ;; Hardware stack levels used:    1
  9501 ;; Hardware stack levels required when called:    5
  9502 ;; This function calls:
  9503 ;;		_CCP4_SetCallBack
  9504 ;; This function is called by:
  9505 ;;		_SYSTEM_Initialize
  9506 ;; This function uses a non-reentrant model
  9507 ;;
  9508                           
  9509                           
  9510                           ;psect for function _CCP4_Initialize
  9511  0956                     _CCP4_Initialize:	
  9512  0956                     l3639:	
  9513                           ;incstack = 0
  9514                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9515                           
  9516                           
  9517                           ;mcc_generated_files/ccp4.c: 70:  CCP4CON = 0x05;
  9518  0956  3005               	movlw	5
  9519  0957  0026               	movlb	6	; select bank6
  9520  0958  009A               	movwf	26	;volatile
  9521  0959                     l3641:	
  9522                           
  9523                           ;mcc_generated_files/ccp4.c: 73:  CCPR4L = 0x00;
  9524  0959  0198               	clrf	24	;volatile
  9525  095A                     l3643:	
  9526                           
  9527                           ;mcc_generated_files/ccp4.c: 76:  CCPR4H = 0x00;
  9528  095A  0199               	clrf	25	;volatile
  9529  095B                     l3645:	
  9530                           
  9531                           ;mcc_generated_files/ccp4.c: 79:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  9532  095B  3014               	movlw	low _CCP4_DefaultCallBack
  9533  095C  0020               	movlb	0	; select bank0
  9534  095D  00A0               	movwf	CCP4_SetCallBack@customCallBack
  9535  095E  3008               	movlw	high _CCP4_DefaultCallBack
  9536  095F  00A1               	movwf	CCP4_SetCallBack@customCallBack+1
  9537  0960  3188  2047  3189   	fcall	_CCP4_SetCallBack
  9538  0963                     l3647:	
  9539                           
  9540                           ;mcc_generated_files/ccp4.c: 83:     PIR3bits.CCP4IF = 0;
  9541  0963  0020               	movlb	0	; select bank0
  9542  0964  1293               	bcf	19,5	;volatile
  9543  0965                     l3649:	
  9544                           
  9545                           ;mcc_generated_files/ccp4.c: 86:     PIE3bits.CCP4IE = 1;
  9546  0965  0021               	movlb	1	; select bank1
  9547  0966  1693               	bsf	19,5	;volatile
  9548  0967                     l343:	
  9549  0967  0008               	return
  9550  0968                     __end_of_CCP4_Initialize:	
  9551                           
  9552                           	psect	text39
  9553  0847                     __ptext39:	
  9554 ;; *************** function _CCP4_SetCallBack *****************
  9555 ;; Defined at:
  9556 ;;		line 104 in file "mcc_generated_files/ccp4.c"
  9557 ;; Parameters:    Size  Location     Type
  9558 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  9559 ;;		 -> get_pulse(1), CCP4_DefaultCallBack(1), 
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;		None
  9562 ;; Return value:  Size  Location     Type
  9563 ;;                  1    wreg      void 
  9564 ;; Registers used:
  9565 ;;		wreg
  9566 ;; Tracked objects:
  9567 ;;		On entry : 0/0
  9568 ;;		On exit  : 0/0
  9569 ;;		Unchanged: 0/0
  9570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9571 ;;      Params:         0       2       0       0       0       0
  9572 ;;      Locals:         0       0       0       0       0       0
  9573 ;;      Temps:          0       0       0       0       0       0
  9574 ;;      Totals:         0       2       0       0       0       0
  9575 ;;Total ram usage:        2 bytes
  9576 ;; Hardware stack levels used:    1
  9577 ;; Hardware stack levels required when called:    4
  9578 ;; This function calls:
  9579 ;;		Nothing
  9580 ;; This function is called by:
  9581 ;;		_CCP4_Initialize
  9582 ;;		_main
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585                           
  9586                           
  9587                           ;psect for function _CCP4_SetCallBack
  9588  0847                     _CCP4_SetCallBack:	
  9589  0847                     l3561:	
  9590                           ;incstack = 0
  9591                           ; Regs used in _CCP4_SetCallBack: [wreg]
  9592                           
  9593                           
  9594                           ;mcc_generated_files/ccp4.c: 105:     CCP4_CallBack = customCallBack;
  9595  0847  0020               	movlb	0	; select bank0
  9596  0848  0821               	movf	CCP4_SetCallBack@customCallBack+1,w
  9597  0849  0021               	movlb	1	; select bank1
  9598  084A  00E9               	movwf	(_CCP4_CallBack+1)^(0+128)
  9599  084B  0020               	movlb	0	; select bank0
  9600  084C  0820               	movf	CCP4_SetCallBack@customCallBack,w
  9601  084D  0021               	movlb	1	; select bank1
  9602  084E  00E8               	movwf	_CCP4_CallBack^(0+128)
  9603  084F                     l349:	
  9604  084F  0008               	return
  9605  0850                     __end_of_CCP4_SetCallBack:	
  9606                           
  9607                           	psect	text40
  9608  0837                     __ptext40:	
  9609 ;; *************** function _ADC_Initialize *****************
  9610 ;; Defined at:
  9611 ;;		line 67 in file "mcc_generated_files/adc.c"
  9612 ;; Parameters:    Size  Location     Type
  9613 ;;		None
  9614 ;; Auto vars:     Size  Location     Type
  9615 ;;		None
  9616 ;; Return value:  Size  Location     Type
  9617 ;;                  1    wreg      void 
  9618 ;; Registers used:
  9619 ;;		wreg, status,2
  9620 ;; Tracked objects:
  9621 ;;		On entry : 0/0
  9622 ;;		On exit  : 0/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9625 ;;      Params:         0       0       0       0       0       0
  9626 ;;      Locals:         0       0       0       0       0       0
  9627 ;;      Temps:          0       0       0       0       0       0
  9628 ;;      Totals:         0       0       0       0       0       0
  9629 ;;Total ram usage:        0 bytes
  9630 ;; Hardware stack levels used:    1
  9631 ;; Hardware stack levels required when called:    4
  9632 ;; This function calls:
  9633 ;;		Nothing
  9634 ;; This function is called by:
  9635 ;;		_SYSTEM_Initialize
  9636 ;; This function uses a non-reentrant model
  9637 ;;
  9638                           
  9639                           
  9640                           ;psect for function _ADC_Initialize
  9641  0837                     _ADC_Initialize:	
  9642  0837                     l3651:	
  9643                           ;incstack = 0
  9644                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9645                           
  9646                           
  9647                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  9648  0837  30D3               	movlw	211
  9649  0838  0021               	movlb	1	; select bank1
  9650  0839  009E               	movwf	30	;volatile
  9651  083A                     l3653:	
  9652                           
  9653                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  9654  083A  019B               	clrf	27	;volatile
  9655  083B                     l3655:	
  9656                           
  9657                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  9658  083B  019C               	clrf	28	;volatile
  9659                           
  9660                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  9661  083C  3001               	movlw	1
  9662  083D  009D               	movwf	29	;volatile
  9663  083E                     l267:	
  9664  083E  0008               	return
  9665  083F                     __end_of_ADC_Initialize:	
  9666                           
  9667                           	psect	intentry
  9668  0004                     __pintentry:	
  9669 ;; *************** function _INTERRUPT_InterruptManager *****************
  9670 ;; Defined at:
  9671 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9672 ;; Parameters:    Size  Location     Type
  9673 ;;		None
  9674 ;; Auto vars:     Size  Location     Type
  9675 ;;		None
  9676 ;; Return value:  Size  Location     Type
  9677 ;;                  1    wreg      void 
  9678 ;; Registers used:
  9679 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9680 ;; Tracked objects:
  9681 ;;		On entry : 0/0
  9682 ;;		On exit  : 0/0
  9683 ;;		Unchanged: 0/0
  9684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9685 ;;      Params:         0       0       0       0       0       0
  9686 ;;      Locals:         0       0       0       0       0       0
  9687 ;;      Temps:          0       0       0       0       0       0
  9688 ;;      Totals:         0       0       0       0       0       0
  9689 ;;Total ram usage:        0 bytes
  9690 ;; Hardware stack levels used:    1
  9691 ;; Hardware stack levels required when called:    3
  9692 ;; This function calls:
  9693 ;;		_CCP4_CaptureISR
  9694 ;;		_PIN_MANAGER_IOC
  9695 ;;		_TMR4_ISR
  9696 ;; This function is called by:
  9697 ;;		Interrupt level 1
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701  0004                     _INTERRUPT_InterruptManager:	
  9702                           
  9703                           ;incstack = 0
  9704  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  9705                           
  9706                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  9707  0005  3180               	pagesel	$
  9708  0006                     i1l3511:	
  9709                           
  9710                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  9711  0006  1D8B               	btfss	11,3	;volatile
  9712  0007  2809               	goto	u367_21
  9713  0008  280A               	goto	u367_20
  9714  0009                     u367_21:	
  9715  0009  2812               	goto	i1l305
  9716  000A                     u367_20:	
  9717  000A                     i1l3513:	
  9718  000A  1C0B               	btfss	11,0	;volatile
  9719  000B  280D               	goto	u368_21
  9720  000C  280E               	goto	u368_20
  9721  000D                     u368_21:	
  9722  000D  2812               	goto	i1l305
  9723  000E                     u368_20:	
  9724  000E                     i1l3515:	
  9725                           
  9726                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  9727  000E  3189  21EA  3180   	fcall	_PIN_MANAGER_IOC
  9728                           
  9729                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  9730  0011  2832               	goto	i1l313
  9731  0012                     i1l305:	
  9732                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  9733                           
  9734  0012  1F0B               	btfss	11,6	;volatile
  9735  0013  2815               	goto	u369_21
  9736  0014  2816               	goto	u369_20
  9737  0015                     u369_21:	
  9738  0015  2832               	goto	i1l313
  9739  0016                     u369_20:	
  9740  0016                     i1l3517:	
  9741                           
  9742                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.CCP4IE == 1 && PIR3bits.CCP4IF == 1)
  9743  0016  0021               	movlb	1	; select bank1
  9744  0017  1E93               	btfss	19,5	;volatile
  9745  0018  281A               	goto	u370_21
  9746  0019  281B               	goto	u370_20
  9747  001A                     u370_21:	
  9748  001A  2824               	goto	i1l308
  9749  001B                     u370_20:	
  9750  001B                     i1l3519:	
  9751  001B  0020               	movlb	0	; select bank0
  9752  001C  1E93               	btfss	19,5	;volatile
  9753  001D  281F               	goto	u371_21
  9754  001E  2820               	goto	u371_20
  9755  001F                     u371_21:	
  9756  001F  2824               	goto	i1l308
  9757  0020                     u371_20:	
  9758  0020                     i1l3521:	
  9759                           
  9760                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             CCP4_CaptureISR();
  9761  0020  3189  217C  3180   	fcall	_CCP4_CaptureISR
  9762                           
  9763                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  9764  0023  2832               	goto	i1l313
  9765  0024                     i1l308:	
  9766                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.TMR4IE == 1 && PI
      +                          R3bits.TMR4IF == 1)
  9767                           
  9768  0024  0021               	movlb	1	; select bank1
  9769  0025  1C93               	btfss	19,1	;volatile
  9770  0026  2828               	goto	u372_21
  9771  0027  2829               	goto	u372_20
  9772  0028                     u372_21:	
  9773  0028  2832               	goto	i1l312
  9774  0029                     u372_20:	
  9775  0029                     i1l3523:	
  9776  0029  0020               	movlb	0	; select bank0
  9777  002A  1C93               	btfss	19,1	;volatile
  9778  002B  282D               	goto	u373_21
  9779  002C  282E               	goto	u373_20
  9780  002D                     u373_21:	
  9781  002D  2832               	goto	i1l312
  9782  002E                     u373_20:	
  9783  002E                     i1l3525:	
  9784                           
  9785                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR4_ISR();
  9786  002E  3189  2117  3180   	fcall	_TMR4_ISR
  9787                           
  9788                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  9789  0031  2832               	goto	i1l313
  9790  0032                     i1l312:	
  9791                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  9792                           
  9793  0032                     i1l313:	
  9794  0032  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9795  0033  0009               	retfie
  9796  0034                     __end_of_INTERRUPT_InterruptManager:	
  9797                           
  9798                           	psect	text42
  9799  0917                     __ptext42:	
  9800 ;; *************** function _TMR4_ISR *****************
  9801 ;; Defined at:
  9802 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;		None
  9805 ;; Auto vars:     Size  Location     Type
  9806 ;;		None
  9807 ;; Return value:  Size  Location     Type
  9808 ;;                  1    wreg      void 
  9809 ;; Registers used:
  9810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9811 ;; Tracked objects:
  9812 ;;		On entry : 0/0
  9813 ;;		On exit  : 0/0
  9814 ;;		Unchanged: 0/0
  9815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9816 ;;      Params:         0       0       0       0       0       0
  9817 ;;      Locals:         0       0       0       0       0       0
  9818 ;;      Temps:          0       0       0       0       0       0
  9819 ;;      Totals:         0       0       0       0       0       0
  9820 ;;Total ram usage:        0 bytes
  9821 ;; Hardware stack levels used:    1
  9822 ;; Hardware stack levels required when called:    2
  9823 ;; This function calls:
  9824 ;;		Absolute function
  9825 ;;		_TMR4_DefaultInterruptHandler
  9826 ;;		_send_data
  9827 ;; This function is called by:
  9828 ;;		_INTERRUPT_InterruptManager
  9829 ;; This function uses a non-reentrant model
  9830 ;;
  9831                           
  9832                           
  9833                           ;psect for function _TMR4_ISR
  9834  0917                     _TMR4_ISR:	
  9835  0917                     i1l3357:	
  9836                           ;incstack = 0
  9837                           ; Regs used in _TMR4_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9838                           
  9839                           
  9840                           ;mcc_generated_files/tmr4.c: 123:     PIR3bits.TMR4IF = 0;
  9841  0917  0020               	movlb	0	; select bank0
  9842  0918  1093               	bcf	19,1	;volatile
  9843  0919                     i1l3359:	
  9844                           
  9845                           ;mcc_generated_files/tmr4.c: 125:     if(TMR4_InterruptHandler)
  9846  0919  0021               	movlb	1	; select bank1
  9847  091A  086A               	movf	_TMR4_InterruptHandler^(0+128),w
  9848  091B  046B               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
  9849  091C  1903               	btfsc	3,2
  9850  091D  291F               	goto	u340_21
  9851  091E  2920               	goto	u340_20
  9852  091F                     u340_21:	
  9853  091F  2925               	goto	i1l244
  9854  0920                     u340_20:	
  9855  0920                     i1l3361:	
  9856                           
  9857                           ;mcc_generated_files/tmr4.c: 126:     {;mcc_generated_files/tmr4.c: 127:         TMR4_In
      +                          terruptHandler();
  9858  0920  086B               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
  9859  0921  008A               	movwf	10
  9860  0922  086A               	movf	_TMR4_InterruptHandler^(0+128),w
  9861  0923  000A               	callw
  9862  0924  3189               	pagesel	$
  9863  0925                     i1l244:	
  9864  0925  0008               	return
  9865  0926                     __end_of_TMR4_ISR:	
  9866                           
  9867                           	psect	text43
  9868  07FE                     __ptext43:	
  9869 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  9870 ;; Defined at:
  9871 ;;		line 136 in file "mcc_generated_files/tmr4.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;		None
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;		None
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  1    wreg      void 
  9878 ;; Registers used:
  9879 ;;		None
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9885 ;;      Params:         0       0       0       0       0       0
  9886 ;;      Locals:         0       0       0       0       0       0
  9887 ;;      Temps:          0       0       0       0       0       0
  9888 ;;      Totals:         0       0       0       0       0       0
  9889 ;;Total ram usage:        0 bytes
  9890 ;; Hardware stack levels used:    1
  9891 ;; This function calls:
  9892 ;;		Nothing
  9893 ;; This function is called by:
  9894 ;;		_TMR4_Initialize
  9895 ;;		_TMR4_ISR
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899                           
  9900                           ;psect for function _TMR4_DefaultInterruptHandler
  9901  07FE                     _TMR4_DefaultInterruptHandler:	
  9902  07FE                     i1l250:	
  9903                           ;incstack = 0
  9904                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  9905                           
  9906  07FE  0008               	return
  9907  07FF                     __end_of_TMR4_DefaultInterruptHandler:	
  9908                           
  9909                           	psect	text44
  9910  0ABB                     __ptext44:	
  9911 ;; *************** function _send_data *****************
  9912 ;; Defined at:
  9913 ;;		line 70 in file "main.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;		None
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;  i               2    2[COMMON] int 
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  1    wreg      void 
  9920 ;; Registers used:
  9921 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9927 ;;      Params:         0       0       0       0       0       0
  9928 ;;      Locals:         2       0       0       0       0       0
  9929 ;;      Temps:          1       0       0       0       0       0
  9930 ;;      Totals:         3       0       0       0       0       0
  9931 ;;Total ram usage:        3 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; Hardware stack levels required when called:    1
  9934 ;; This function calls:
  9935 ;;		_EUSART_Write
  9936 ;;		_EUSART_is_tx_ready
  9937 ;; This function is called by:
  9938 ;;		_main
  9939 ;;		_TMR4_ISR
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           
  9944                           ;psect for function _send_data
  9945  0ABB                     _send_data:	
  9946  0ABB                     i1l2777:	
  9947                           ;incstack = 0
  9948                           ; Regs used in _send_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9949                           
  9950                           
  9951                           ;main.c: 72:         aux_tempo++;
  9952  0ABB  3001               	movlw	1
  9953  0ABC  0021               	movlb	1	; select bank1
  9954  0ABD  07D3               	addwf	_aux_tempo^(0+128),f
  9955  0ABE  3000               	movlw	0
  9956  0ABF  3DD4               	addwfc	(_aux_tempo+1)^(0+128),f
  9957  0AC0                     i1l2779:	
  9958                           
  9959                           ;main.c: 73:         if(aux_tempo == 14)
  9960  0AC0  300E               	movlw	14
  9961  0AC1  0653               	xorwf	_aux_tempo^(0+128),w
  9962  0AC2  0454               	iorwf	(_aux_tempo+1)^(0+128),w
  9963  0AC3  1D03               	btfss	3,2
  9964  0AC4  2AC6               	goto	u219_21
  9965  0AC5  2AC7               	goto	u219_20
  9966  0AC6                     u219_21:	
  9967  0AC6  2AEE               	goto	i1l581
  9968  0AC7                     u219_20:	
  9969  0AC7                     i1l2781:	
  9970                           
  9971                           ;main.c: 74:         {;main.c: 75:             int i=0;
  9972  0AC7  01F9               	clrf	send_data@i
  9973  0AC8  01FA               	clrf	send_data@i+1
  9974                           
  9975                           ;main.c: 76:             while(i<5)
  9976  0AC9  2ADE               	goto	i1l2789
  9977  0ACA                     i1l2783:	
  9978                           
  9979                           ;main.c: 77:             {;main.c: 78:                 if(EUSART_is_tx_ready())
  9980  0ACA  3189  2108  318A   	fcall	_EUSART_is_tx_ready
  9981  0ACD  3A00               	xorlw	0
  9982  0ACE  1903               	skipnz
  9983  0ACF  2AD1               	goto	u220_21
  9984  0AD0  2AD2               	goto	u220_20
  9985  0AD1                     u220_21:	
  9986  0AD1  2ADE               	goto	i1l2789
  9987  0AD2                     u220_20:	
  9988  0AD2                     i1l2785:	
  9989                           
  9990                           ;main.c: 79:                     {;main.c: 80:                         EUSART_Write(byte
      +                          [i]);
  9991  0AD2  0879               	movf	send_data@i,w
  9992  0AD3  3EC0               	addlw	(low (_byte| 0))& (0+255)
  9993  0AD4  0086               	movwf	6
  9994  0AD5  0187               	clrf	7
  9995  0AD6  0801               	movf	1,w
  9996  0AD7  3188  20A1  318A   	fcall	_EUSART_Write
  9997  0ADA                     i1l2787:	
  9998                           
  9999                           ;main.c: 81:                         i++;
 10000  0ADA  3001               	movlw	1
 10001  0ADB  07F9               	addwf	send_data@i,f
 10002  0ADC  3000               	movlw	0
 10003  0ADD  3DFA               	addwfc	send_data@i+1,f
 10004  0ADE                     i1l2789:	
 10005                           
 10006                           ;main.c: 76:             while(i<5)
 10007  0ADE  087A               	movf	send_data@i+1,w
 10008  0ADF  3A80               	xorlw	128
 10009  0AE0  00F8               	movwf	??_send_data
 10010  0AE1  3080               	movlw	128
 10011  0AE2  0278               	subwf	??_send_data,w
 10012  0AE3  1D03               	skipz
 10013  0AE4  2AE7               	goto	u221_25
 10014  0AE5  3005               	movlw	5
 10015  0AE6  0279               	subwf	send_data@i,w
 10016  0AE7                     u221_25:	
 10017  0AE7  1C03               	skipc
 10018  0AE8  2AEA               	goto	u221_21
 10019  0AE9  2AEB               	goto	u221_20
 10020  0AEA                     u221_21:	
 10021  0AEA  2ACA               	goto	i1l2783
 10022  0AEB                     u221_20:	
 10023  0AEB                     i1l2791:	
 10024                           
 10025                           ;main.c: 85:             aux_tempo =0;
 10026  0AEB  0021               	movlb	1	; select bank1
 10027  0AEC  01D3               	clrf	_aux_tempo^(0+128)
 10028  0AED  01D4               	clrf	(_aux_tempo+1)^(0+128)
 10029  0AEE                     i1l581:	
 10030  0AEE  0008               	return
 10031  0AEF                     __end_of_send_data:	
 10032                           
 10033                           	psect	text45
 10034  0908                     __ptext45:	
 10035 ;; *************** function _EUSART_is_tx_ready *****************
 10036 ;; Defined at:
 10037 ;;		line 94 in file "mcc_generated_files/eusart.c"
 10038 ;; Parameters:    Size  Location     Type
 10039 ;;		None
 10040 ;; Auto vars:     Size  Location     Type
 10041 ;;		None
 10042 ;; Return value:  Size  Location     Type
 10043 ;;                  1    wreg      _Bool 
 10044 ;; Registers used:
 10045 ;;		wreg, status,2
 10046 ;; Tracked objects:
 10047 ;;		On entry : 0/0
 10048 ;;		On exit  : 0/0
 10049 ;;		Unchanged: 0/0
 10050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10051 ;;      Params:         0       0       0       0       0       0
 10052 ;;      Locals:         1       0       0       0       0       0
 10053 ;;      Temps:          0       0       0       0       0       0
 10054 ;;      Totals:         1       0       0       0       0       0
 10055 ;;Total ram usage:        1 bytes
 10056 ;; Hardware stack levels used:    1
 10057 ;; This function calls:
 10058 ;;		Nothing
 10059 ;; This function is called by:
 10060 ;;		_send_data
 10061 ;; This function uses a non-reentrant model
 10062 ;;
 10063                           
 10064                           
 10065                           ;psect for function _EUSART_is_tx_ready
 10066  0908                     _EUSART_is_tx_ready:	
 10067  0908                     i1l2491:	
 10068                           ;incstack = 0
 10069                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
 10070                           
 10071                           
 10072                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
 10073  0908  01F7               	clrf	_EUSART_is_tx_ready$167
 10074  0909                     i1l2493:	
 10075  0909  0020               	movlb	0	; select bank0
 10076  090A  1E11               	btfss	17,4	;volatile
 10077  090B  290D               	goto	u188_21
 10078  090C  290E               	goto	u188_20
 10079  090D                     u188_21:	
 10080  090D  2915               	goto	i1l2499
 10081  090E                     u188_20:	
 10082  090E                     i1l2495:	
 10083  090E  0023               	movlb	3	; select bank3
 10084  090F  1E9E               	btfss	30,5	;volatile
 10085  0910  2912               	goto	u189_21
 10086  0911  2913               	goto	u189_20
 10087  0912                     u189_21:	
 10088  0912  2915               	goto	i1l2499
 10089  0913                     u189_20:	
 10090  0913                     i1l2497:	
 10091  0913  01F7               	clrf	_EUSART_is_tx_ready$167
 10092  0914  0AF7               	incf	_EUSART_is_tx_ready$167,f
 10093  0915                     i1l2499:	
 10094  0915  0877               	movf	_EUSART_is_tx_ready$167,w
 10095  0916                     i1l48:	
 10096  0916  0008               	return
 10097  0917                     __end_of_EUSART_is_tx_ready:	
 10098                           
 10099                           	psect	text46
 10100  08A1                     __ptext46:	
 10101 ;; *************** function _EUSART_Write *****************
 10102 ;; Defined at:
 10103 ;;		line 132 in file "mcc_generated_files/eusart.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;  txData          1    wreg     unsigned char 
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;  txData          1    0[COMMON] unsigned char 
 10108 ;; Return value:  Size  Location     Type
 10109 ;;                  1    wreg      void 
 10110 ;; Registers used:
 10111 ;;		wreg
 10112 ;; Tracked objects:
 10113 ;;		On entry : 0/0
 10114 ;;		On exit  : 0/0
 10115 ;;		Unchanged: 0/0
 10116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10117 ;;      Params:         0       0       0       0       0       0
 10118 ;;      Locals:         1       0       0       0       0       0
 10119 ;;      Temps:          0       0       0       0       0       0
 10120 ;;      Totals:         1       0       0       0       0       0
 10121 ;;Total ram usage:        1 bytes
 10122 ;; Hardware stack levels used:    1
 10123 ;; This function calls:
 10124 ;;		Nothing
 10125 ;; This function is called by:
 10126 ;;		_send_data
 10127 ;; This function uses a non-reentrant model
 10128 ;;
 10129                           
 10130                           
 10131                           ;psect for function _EUSART_Write
 10132  08A1                     _EUSART_Write:	
 10133                           
 10134                           ;incstack = 0
 10135                           ; Regs used in _EUSART_Write: [wreg]
 10136                           ;EUSART_Write@txData stored from wreg
 10137  08A1  00F7               	movwf	EUSART_Write@txData
 10138  08A2                     i1l2519:	
 10139  08A2                     i1l67:	
 10140                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
 10141                           
 10142                           
 10143                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
 10144  08A2  0020               	movlb	0	; select bank0
 10145  08A3  1E11               	btfss	17,4	;volatile
 10146  08A4  28A6               	goto	u192_21
 10147  08A5  28A7               	goto	u192_20
 10148  08A6                     u192_21:	
 10149  08A6  28A2               	goto	i1l67
 10150  08A7                     u192_20:	
 10151  08A7                     i1l2521:	
 10152                           
 10153                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
 10154  08A7  0877               	movf	EUSART_Write@txData,w
 10155  08A8  0023               	movlb	3	; select bank3
 10156  08A9  009A               	movwf	26	;volatile
 10157  08AA                     i1l70:	
 10158  08AA  0008               	return
 10159  08AB                     __end_of_EUSART_Write:	
 10160                           
 10161                           	psect	text47
 10162  09EA                     __ptext47:	
 10163 ;; *************** function _PIN_MANAGER_IOC *****************
 10164 ;; Defined at:
 10165 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 10166 ;; Parameters:    Size  Location     Type
 10167 ;;		None
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;		None
 10170 ;; Return value:  Size  Location     Type
 10171 ;;                  1    wreg      void 
 10172 ;; Registers used:
 10173 ;;		wreg, status,2, status,0, pclath, cstack
 10174 ;; Tracked objects:
 10175 ;;		On entry : 0/0
 10176 ;;		On exit  : 0/0
 10177 ;;		Unchanged: 0/0
 10178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10179 ;;      Params:         0       0       0       0       0       0
 10180 ;;      Locals:         0       0       0       0       0       0
 10181 ;;      Temps:          0       0       0       0       0       0
 10182 ;;      Totals:         0       0       0       0       0       0
 10183 ;;Total ram usage:        0 bytes
 10184 ;; Hardware stack levels used:    1
 10185 ;; Hardware stack levels required when called:    2
 10186 ;; This function calls:
 10187 ;;		_IOCBF0_ISR
 10188 ;;		_IOCBF3_ISR
 10189 ;;		_IOCBF4_ISR
 10190 ;;		_IOCBF5_ISR
 10191 ;; This function is called by:
 10192 ;;		_INTERRUPT_InterruptManager
 10193 ;; This function uses a non-reentrant model
 10194 ;;
 10195                           
 10196                           
 10197                           ;psect for function _PIN_MANAGER_IOC
 10198  09EA                     _PIN_MANAGER_IOC:	
 10199  09EA                     i1l3363:	
 10200                           ;incstack = 0
 10201                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 10202                           
 10203                           
 10204                           ;mcc_generated_files/pin_manager.c: 138:     if(IOCBFbits.IOCBF0 == 1)
 10205  09EA  0027               	movlb	7	; select bank7
 10206  09EB  1C16               	btfss	22,0	;volatile
 10207  09EC  29EE               	goto	u341_21
 10208  09ED  29EF               	goto	u341_20
 10209  09EE                     u341_21:	
 10210  09EE  29F2               	goto	i1l3367
 10211  09EF                     u341_20:	
 10212  09EF                     i1l3365:	
 10213                           
 10214                           ;mcc_generated_files/pin_manager.c: 139:     {;mcc_generated_files/pin_manager.c: 140:  
      +                                 IOCBF0_ISR();
 10215  09EF  3188  20CC  3189   	fcall	_IOCBF0_ISR
 10216  09F2                     i1l3367:	
 10217                           
 10218                           ;mcc_generated_files/pin_manager.c: 143:     if(IOCBFbits.IOCBF3 == 1)
 10219  09F2  0027               	movlb	7	; select bank7
 10220  09F3  1D96               	btfss	22,3	;volatile
 10221  09F4  29F6               	goto	u342_21
 10222  09F5  29F7               	goto	u342_20
 10223  09F6                     u342_21:	
 10224  09F6  29FA               	goto	i1l3371
 10225  09F7                     u342_20:	
 10226  09F7                     i1l3369:	
 10227                           
 10228                           ;mcc_generated_files/pin_manager.c: 144:     {;mcc_generated_files/pin_manager.c: 145:  
      +                                 IOCBF3_ISR();
 10229  09F7  3188  20DB  3189   	fcall	_IOCBF3_ISR
 10230  09FA                     i1l3371:	
 10231                           
 10232                           ;mcc_generated_files/pin_manager.c: 148:     if(IOCBFbits.IOCBF4 == 1)
 10233  09FA  0027               	movlb	7	; select bank7
 10234  09FB  1E16               	btfss	22,4	;volatile
 10235  09FC  29FE               	goto	u343_21
 10236  09FD  29FF               	goto	u343_20
 10237  09FE                     u343_21:	
 10238  09FE  2A02               	goto	i1l3375
 10239  09FF                     u343_20:	
 10240  09FF                     i1l3373:	
 10241                           
 10242                           ;mcc_generated_files/pin_manager.c: 149:     {;mcc_generated_files/pin_manager.c: 150:  
      +                                 IOCBF4_ISR();
 10243  09FF  3188  20EA  3189   	fcall	_IOCBF4_ISR
 10244  0A02                     i1l3375:	
 10245                           
 10246                           ;mcc_generated_files/pin_manager.c: 153:     if(IOCBFbits.IOCBF5 == 1)
 10247  0A02  0027               	movlb	7	; select bank7
 10248  0A03  1E96               	btfss	22,5	;volatile
 10249  0A04  2A06               	goto	u344_21
 10250  0A05  2A07               	goto	u344_20
 10251  0A06                     u344_21:	
 10252  0A06  2A0A               	goto	i1l421
 10253  0A07                     u344_20:	
 10254  0A07                     i1l3377:	
 10255                           
 10256                           ;mcc_generated_files/pin_manager.c: 154:     {;mcc_generated_files/pin_manager.c: 155:  
      +                                 IOCBF5_ISR();
 10257  0A07  3188  20F9  3189   	fcall	_IOCBF5_ISR
 10258  0A0A                     i1l421:	
 10259  0A0A  0008               	return
 10260  0A0B                     __end_of_PIN_MANAGER_IOC:	
 10261                           
 10262                           	psect	text48
 10263  08F9                     __ptext48:	
 10264 ;; *************** function _IOCBF5_ISR *****************
 10265 ;; Defined at:
 10266 ;;		line 252 in file "mcc_generated_files/pin_manager.c"
 10267 ;; Parameters:    Size  Location     Type
 10268 ;;		None
 10269 ;; Auto vars:     Size  Location     Type
 10270 ;;		None
 10271 ;; Return value:  Size  Location     Type
 10272 ;;                  1    wreg      void 
 10273 ;; Registers used:
 10274 ;;		wreg, status,2, status,0, pclath, cstack
 10275 ;; Tracked objects:
 10276 ;;		On entry : 0/0
 10277 ;;		On exit  : 0/0
 10278 ;;		Unchanged: 0/0
 10279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10280 ;;      Params:         0       0       0       0       0       0
 10281 ;;      Locals:         0       0       0       0       0       0
 10282 ;;      Temps:          0       0       0       0       0       0
 10283 ;;      Totals:         0       0       0       0       0       0
 10284 ;;Total ram usage:        0 bytes
 10285 ;; Hardware stack levels used:    1
 10286 ;; Hardware stack levels required when called:    1
 10287 ;; This function calls:
 10288 ;;		Absolute function
 10289 ;;		_IOCBF5_DefaultInterruptHandler
 10290 ;;		_sensor4
 10291 ;; This function is called by:
 10292 ;;		_PIN_MANAGER_IOC
 10293 ;; This function uses a non-reentrant model
 10294 ;;
 10295                           
 10296                           
 10297                           ;psect for function _IOCBF5_ISR
 10298  08F9                     _IOCBF5_ISR:	
 10299  08F9                     i1l2769:	
 10300                           ;incstack = 0
 10301                           ; Regs used in _IOCBF5_ISR: [wreg+status,2+status,0+pclath+cstack]
 10302                           
 10303                           
 10304                           ;mcc_generated_files/pin_manager.c: 257:     if(IOCBF5_InterruptHandler)
 10305  08F9  0021               	movlb	1	; select bank1
 10306  08FA  0860               	movf	_IOCBF5_InterruptHandler^(0+128),w
 10307  08FB  0461               	iorwf	(_IOCBF5_InterruptHandler+1)^(0+128),w
 10308  08FC  1903               	btfsc	3,2
 10309  08FD  28FF               	goto	u217_21
 10310  08FE  2900               	goto	u217_20
 10311  08FF                     u217_21:	
 10312  08FF  2905               	goto	i1l2773
 10313  0900                     u217_20:	
 10314  0900                     i1l2771:	
 10315                           
 10316                           ;mcc_generated_files/pin_manager.c: 258:     {;mcc_generated_files/pin_manager.c: 259:  
      +                                 IOCBF5_InterruptHandler();
 10317  0900  0861               	movf	(_IOCBF5_InterruptHandler+1)^(0+128),w
 10318  0901  008A               	movwf	10
 10319  0902  0860               	movf	_IOCBF5_InterruptHandler^(0+128),w
 10320  0903  000A               	callw
 10321  0904  3188               	pagesel	$
 10322  0905                     i1l2773:	
 10323                           
 10324                           ;mcc_generated_files/pin_manager.c: 261:     IOCBFbits.IOCBF5 = 0;
 10325  0905  0027               	movlb	7	; select bank7
 10326  0906  1296               	bcf	22,5	;volatile
 10327  0907                     i1l455:	
 10328  0907  0008               	return
 10329  0908                     __end_of_IOCBF5_ISR:	
 10330                           
 10331                           	psect	text49
 10332  07FF                     __ptext49:	
 10333 ;; *************** function _IOCBF5_DefaultInterruptHandler *****************
 10334 ;; Defined at:
 10335 ;;		line 274 in file "mcc_generated_files/pin_manager.c"
 10336 ;; Parameters:    Size  Location     Type
 10337 ;;		None
 10338 ;; Auto vars:     Size  Location     Type
 10339 ;;		None
 10340 ;; Return value:  Size  Location     Type
 10341 ;;                  1    wreg      void 
 10342 ;; Registers used:
 10343 ;;		None
 10344 ;; Tracked objects:
 10345 ;;		On entry : 0/0
 10346 ;;		On exit  : 0/0
 10347 ;;		Unchanged: 0/0
 10348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10349 ;;      Params:         0       0       0       0       0       0
 10350 ;;      Locals:         0       0       0       0       0       0
 10351 ;;      Temps:          0       0       0       0       0       0
 10352 ;;      Totals:         0       0       0       0       0       0
 10353 ;;Total ram usage:        0 bytes
 10354 ;; Hardware stack levels used:    1
 10355 ;; This function calls:
 10356 ;;		Nothing
 10357 ;; This function is called by:
 10358 ;;		_PIN_MANAGER_Initialize
 10359 ;;		_IOCBF5_ISR
 10360 ;; This function uses a non-reentrant model
 10361 ;;
 10362                           
 10363                           
 10364                           ;psect for function _IOCBF5_DefaultInterruptHandler
 10365  07FF                     _IOCBF5_DefaultInterruptHandler:	
 10366  07FF                     i1l461:	
 10367                           ;incstack = 0
 10368                           ; Regs used in _IOCBF5_DefaultInterruptHandler: []
 10369                           
 10370  07FF  0008               	return
 10371  0800                     __end_of_IOCBF5_DefaultInterruptHandler:	
 10372                           
 10373                           	psect	text50
 10374  08C1                     __ptext50:	
 10375 ;; *************** function _sensor4 *****************
 10376 ;; Defined at:
 10377 ;;		line 107 in file "main.c"
 10378 ;; Parameters:    Size  Location     Type
 10379 ;;		None
 10380 ;; Auto vars:     Size  Location     Type
 10381 ;;		None
 10382 ;; Return value:  Size  Location     Type
 10383 ;;                  1    wreg      void 
 10384 ;; Registers used:
 10385 ;;		wreg
 10386 ;; Tracked objects:
 10387 ;;		On entry : 0/0
 10388 ;;		On exit  : 0/0
 10389 ;;		Unchanged: 0/0
 10390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10391 ;;      Params:         0       0       0       0       0       0
 10392 ;;      Locals:         0       0       0       0       0       0
 10393 ;;      Temps:          1       0       0       0       0       0
 10394 ;;      Totals:         1       0       0       0       0       0
 10395 ;;Total ram usage:        1 bytes
 10396 ;; Hardware stack levels used:    1
 10397 ;; This function calls:
 10398 ;;		Nothing
 10399 ;; This function is called by:
 10400 ;;		_main
 10401 ;;		_IOCBF5_ISR
 10402 ;; This function uses a non-reentrant model
 10403 ;;
 10404                           
 10405                           
 10406                           ;psect for function _sensor4
 10407  08C1                     _sensor4:	
 10408  08C1                     i1l2557:	
 10409                           ;incstack = 0
 10410                           ; Regs used in _sensor4: [wreg]
 10411                           
 10412                           
 10413                           ;main.c: 109:         and_ating=4;
 10414  08C1  3004               	movlw	4
 10415  08C2  00F7               	movwf	??_sensor4
 10416  08C3  0877               	movf	??_sensor4,w
 10417  08C4  0020               	movlb	0	; select bank0
 10418  08C5  00EF               	movwf	_and_ating
 10419                           
 10420                           ;main.c: 110:         and_ating2=3;
 10421  08C6  3003               	movlw	3
 10422  08C7  0021               	movlb	1	; select bank1
 10423  08C8  00C5               	movwf	_and_ating2^(0+128)
 10424  08C9  3000               	movlw	0
 10425  08CA  00C6               	movwf	(_and_ating2^(0+128)+1)
 10426  08CB                     i1l593:	
 10427  08CB  0008               	return
 10428  08CC                     __end_of_sensor4:	
 10429                           
 10430                           	psect	text51
 10431  08EA                     __ptext51:	
 10432 ;; *************** function _IOCBF4_ISR *****************
 10433 ;; Defined at:
 10434 ;;		line 222 in file "mcc_generated_files/pin_manager.c"
 10435 ;; Parameters:    Size  Location     Type
 10436 ;;		None
 10437 ;; Auto vars:     Size  Location     Type
 10438 ;;		None
 10439 ;; Return value:  Size  Location     Type
 10440 ;;                  1    wreg      void 
 10441 ;; Registers used:
 10442 ;;		wreg, status,2, status,0, pclath, cstack
 10443 ;; Tracked objects:
 10444 ;;		On entry : 0/0
 10445 ;;		On exit  : 0/0
 10446 ;;		Unchanged: 0/0
 10447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10448 ;;      Params:         0       0       0       0       0       0
 10449 ;;      Locals:         0       0       0       0       0       0
 10450 ;;      Temps:          0       0       0       0       0       0
 10451 ;;      Totals:         0       0       0       0       0       0
 10452 ;;Total ram usage:        0 bytes
 10453 ;; Hardware stack levels used:    1
 10454 ;; Hardware stack levels required when called:    1
 10455 ;; This function calls:
 10456 ;;		Absolute function
 10457 ;;		_IOCBF4_DefaultInterruptHandler
 10458 ;;		_sensor3
 10459 ;; This function is called by:
 10460 ;;		_PIN_MANAGER_IOC
 10461 ;; This function uses a non-reentrant model
 10462 ;;
 10463                           
 10464                           
 10465                           ;psect for function _IOCBF4_ISR
 10466  08EA                     _IOCBF4_ISR:	
 10467  08EA                     i1l2763:	
 10468                           ;incstack = 0
 10469                           ; Regs used in _IOCBF4_ISR: [wreg+status,2+status,0+pclath+cstack]
 10470                           
 10471                           
 10472                           ;mcc_generated_files/pin_manager.c: 227:     if(IOCBF4_InterruptHandler)
 10473  08EA  0021               	movlb	1	; select bank1
 10474  08EB  0862               	movf	_IOCBF4_InterruptHandler^(0+128),w
 10475  08EC  0463               	iorwf	(_IOCBF4_InterruptHandler+1)^(0+128),w
 10476  08ED  1903               	btfsc	3,2
 10477  08EE  28F0               	goto	u216_21
 10478  08EF  28F1               	goto	u216_20
 10479  08F0                     u216_21:	
 10480  08F0  28F6               	goto	i1l2767
 10481  08F1                     u216_20:	
 10482  08F1                     i1l2765:	
 10483                           
 10484                           ;mcc_generated_files/pin_manager.c: 228:     {;mcc_generated_files/pin_manager.c: 229:  
      +                                 IOCBF4_InterruptHandler();
 10485  08F1  0863               	movf	(_IOCBF4_InterruptHandler+1)^(0+128),w
 10486  08F2  008A               	movwf	10
 10487  08F3  0862               	movf	_IOCBF4_InterruptHandler^(0+128),w
 10488  08F4  000A               	callw
 10489  08F5  3188               	pagesel	$
 10490  08F6                     i1l2767:	
 10491                           
 10492                           ;mcc_generated_files/pin_manager.c: 231:     IOCBFbits.IOCBF4 = 0;
 10493  08F6  0027               	movlb	7	; select bank7
 10494  08F7  1216               	bcf	22,4	;volatile
 10495  08F8                     i1l445:	
 10496  08F8  0008               	return
 10497  08F9                     __end_of_IOCBF4_ISR:	
 10498                           
 10499                           	psect	text52
 10500  0003                     __ptext52:	
 10501 ;; *************** function _IOCBF4_DefaultInterruptHandler *****************
 10502 ;; Defined at:
 10503 ;;		line 244 in file "mcc_generated_files/pin_manager.c"
 10504 ;; Parameters:    Size  Location     Type
 10505 ;;		None
 10506 ;; Auto vars:     Size  Location     Type
 10507 ;;		None
 10508 ;; Return value:  Size  Location     Type
 10509 ;;                  1    wreg      void 
 10510 ;; Registers used:
 10511 ;;		None
 10512 ;; Tracked objects:
 10513 ;;		On entry : 0/0
 10514 ;;		On exit  : 0/0
 10515 ;;		Unchanged: 0/0
 10516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10517 ;;      Params:         0       0       0       0       0       0
 10518 ;;      Locals:         0       0       0       0       0       0
 10519 ;;      Temps:          0       0       0       0       0       0
 10520 ;;      Totals:         0       0       0       0       0       0
 10521 ;;Total ram usage:        0 bytes
 10522 ;; Hardware stack levels used:    1
 10523 ;; This function calls:
 10524 ;;		Nothing
 10525 ;; This function is called by:
 10526 ;;		_PIN_MANAGER_Initialize
 10527 ;;		_IOCBF4_ISR
 10528 ;; This function uses a non-reentrant model
 10529 ;;
 10530                           
 10531                           
 10532                           ;psect for function _IOCBF4_DefaultInterruptHandler
 10533  0003                     _IOCBF4_DefaultInterruptHandler:	
 10534  0003                     i1l451:	
 10535                           ;incstack = 0
 10536                           ; Regs used in _IOCBF4_DefaultInterruptHandler: []
 10537                           
 10538  0003  0008               	return
 10539  0004                     __end_of_IOCBF4_DefaultInterruptHandler:	
 10540                           
 10541                           	psect	text53
 10542  08B6                     __ptext53:	
 10543 ;; *************** function _sensor3 *****************
 10544 ;; Defined at:
 10545 ;;		line 101 in file "main.c"
 10546 ;; Parameters:    Size  Location     Type
 10547 ;;		None
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;		None
 10550 ;; Return value:  Size  Location     Type
 10551 ;;                  1    wreg      void 
 10552 ;; Registers used:
 10553 ;;		wreg
 10554 ;; Tracked objects:
 10555 ;;		On entry : 0/0
 10556 ;;		On exit  : 0/0
 10557 ;;		Unchanged: 0/0
 10558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10559 ;;      Params:         0       0       0       0       0       0
 10560 ;;      Locals:         0       0       0       0       0       0
 10561 ;;      Temps:          1       0       0       0       0       0
 10562 ;;      Totals:         1       0       0       0       0       0
 10563 ;;Total ram usage:        1 bytes
 10564 ;; Hardware stack levels used:    1
 10565 ;; This function calls:
 10566 ;;		Nothing
 10567 ;; This function is called by:
 10568 ;;		_main
 10569 ;;		_IOCBF4_ISR
 10570 ;; This function uses a non-reentrant model
 10571 ;;
 10572                           
 10573                           
 10574                           ;psect for function _sensor3
 10575  08B6                     _sensor3:	
 10576  08B6                     i1l2555:	
 10577                           ;incstack = 0
 10578                           ; Regs used in _sensor3: [wreg]
 10579                           
 10580                           
 10581                           ;main.c: 103:         and_ating=3;
 10582  08B6  3003               	movlw	3
 10583  08B7  00F7               	movwf	??_sensor3
 10584  08B8  0877               	movf	??_sensor3,w
 10585  08B9  0020               	movlb	0	; select bank0
 10586  08BA  00EF               	movwf	_and_ating
 10587                           
 10588                           ;main.c: 104:         and_ating2=2;
 10589  08BB  3002               	movlw	2
 10590  08BC  0021               	movlb	1	; select bank1
 10591  08BD  00C5               	movwf	_and_ating2^(0+128)
 10592  08BE  3000               	movlw	0
 10593  08BF  00C6               	movwf	(_and_ating2^(0+128)+1)
 10594  08C0                     i1l590:	
 10595  08C0  0008               	return
 10596  08C1                     __end_of_sensor3:	
 10597                           
 10598                           	psect	text54
 10599  08DB                     __ptext54:	
 10600 ;; *************** function _IOCBF3_ISR *****************
 10601 ;; Defined at:
 10602 ;;		line 192 in file "mcc_generated_files/pin_manager.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;		None
 10605 ;; Auto vars:     Size  Location     Type
 10606 ;;		None
 10607 ;; Return value:  Size  Location     Type
 10608 ;;                  1    wreg      void 
 10609 ;; Registers used:
 10610 ;;		wreg, status,2, status,0, pclath, cstack
 10611 ;; Tracked objects:
 10612 ;;		On entry : 0/0
 10613 ;;		On exit  : 0/0
 10614 ;;		Unchanged: 0/0
 10615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10616 ;;      Params:         0       0       0       0       0       0
 10617 ;;      Locals:         0       0       0       0       0       0
 10618 ;;      Temps:          0       0       0       0       0       0
 10619 ;;      Totals:         0       0       0       0       0       0
 10620 ;;Total ram usage:        0 bytes
 10621 ;; Hardware stack levels used:    1
 10622 ;; Hardware stack levels required when called:    1
 10623 ;; This function calls:
 10624 ;;		Absolute function
 10625 ;;		_IOCBF3_DefaultInterruptHandler
 10626 ;;		_sensor2
 10627 ;; This function is called by:
 10628 ;;		_PIN_MANAGER_IOC
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632                           
 10633                           ;psect for function _IOCBF3_ISR
 10634  08DB                     _IOCBF3_ISR:	
 10635  08DB                     i1l2757:	
 10636                           ;incstack = 0
 10637                           ; Regs used in _IOCBF3_ISR: [wreg+status,2+status,0+pclath+cstack]
 10638                           
 10639                           
 10640                           ;mcc_generated_files/pin_manager.c: 197:     if(IOCBF3_InterruptHandler)
 10641  08DB  0021               	movlb	1	; select bank1
 10642  08DC  0864               	movf	_IOCBF3_InterruptHandler^(0+128),w
 10643  08DD  0465               	iorwf	(_IOCBF3_InterruptHandler+1)^(0+128),w
 10644  08DE  1903               	btfsc	3,2
 10645  08DF  28E1               	goto	u215_21
 10646  08E0  28E2               	goto	u215_20
 10647  08E1                     u215_21:	
 10648  08E1  28E7               	goto	i1l2761
 10649  08E2                     u215_20:	
 10650  08E2                     i1l2759:	
 10651                           
 10652                           ;mcc_generated_files/pin_manager.c: 198:     {;mcc_generated_files/pin_manager.c: 199:  
      +                                 IOCBF3_InterruptHandler();
 10653  08E2  0865               	movf	(_IOCBF3_InterruptHandler+1)^(0+128),w
 10654  08E3  008A               	movwf	10
 10655  08E4  0864               	movf	_IOCBF3_InterruptHandler^(0+128),w
 10656  08E5  000A               	callw
 10657  08E6  3188               	pagesel	$
 10658  08E7                     i1l2761:	
 10659                           
 10660                           ;mcc_generated_files/pin_manager.c: 201:     IOCBFbits.IOCBF3 = 0;
 10661  08E7  0027               	movlb	7	; select bank7
 10662  08E8  1196               	bcf	22,3	;volatile
 10663  08E9                     i1l435:	
 10664  08E9  0008               	return
 10665  08EA                     __end_of_IOCBF3_ISR:	
 10666                           
 10667                           	psect	text55
 10668  0002                     __ptext55:	
 10669 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
 10670 ;; Defined at:
 10671 ;;		line 214 in file "mcc_generated_files/pin_manager.c"
 10672 ;; Parameters:    Size  Location     Type
 10673 ;;		None
 10674 ;; Auto vars:     Size  Location     Type
 10675 ;;		None
 10676 ;; Return value:  Size  Location     Type
 10677 ;;                  1    wreg      void 
 10678 ;; Registers used:
 10679 ;;		None
 10680 ;; Tracked objects:
 10681 ;;		On entry : 0/0
 10682 ;;		On exit  : 0/0
 10683 ;;		Unchanged: 0/0
 10684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10685 ;;      Params:         0       0       0       0       0       0
 10686 ;;      Locals:         0       0       0       0       0       0
 10687 ;;      Temps:          0       0       0       0       0       0
 10688 ;;      Totals:         0       0       0       0       0       0
 10689 ;;Total ram usage:        0 bytes
 10690 ;; Hardware stack levels used:    1
 10691 ;; This function calls:
 10692 ;;		Nothing
 10693 ;; This function is called by:
 10694 ;;		_PIN_MANAGER_Initialize
 10695 ;;		_IOCBF3_ISR
 10696 ;; This function uses a non-reentrant model
 10697 ;;
 10698                           
 10699                           
 10700                           ;psect for function _IOCBF3_DefaultInterruptHandler
 10701  0002                     _IOCBF3_DefaultInterruptHandler:	
 10702  0002                     i1l441:	
 10703                           ;incstack = 0
 10704                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
 10705                           
 10706  0002  0008               	return
 10707  0003                     __end_of_IOCBF3_DefaultInterruptHandler:	
 10708                           
 10709                           	psect	text56
 10710  08AB                     __ptext56:	
 10711 ;; *************** function _sensor2 *****************
 10712 ;; Defined at:
 10713 ;;		line 95 in file "main.c"
 10714 ;; Parameters:    Size  Location     Type
 10715 ;;		None
 10716 ;; Auto vars:     Size  Location     Type
 10717 ;;		None
 10718 ;; Return value:  Size  Location     Type
 10719 ;;                  1    wreg      void 
 10720 ;; Registers used:
 10721 ;;		wreg
 10722 ;; Tracked objects:
 10723 ;;		On entry : 0/0
 10724 ;;		On exit  : 0/0
 10725 ;;		Unchanged: 0/0
 10726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10727 ;;      Params:         0       0       0       0       0       0
 10728 ;;      Locals:         0       0       0       0       0       0
 10729 ;;      Temps:          1       0       0       0       0       0
 10730 ;;      Totals:         1       0       0       0       0       0
 10731 ;;Total ram usage:        1 bytes
 10732 ;; Hardware stack levels used:    1
 10733 ;; This function calls:
 10734 ;;		Nothing
 10735 ;; This function is called by:
 10736 ;;		_main
 10737 ;;		_IOCBF3_ISR
 10738 ;; This function uses a non-reentrant model
 10739 ;;
 10740                           
 10741                           
 10742                           ;psect for function _sensor2
 10743  08AB                     _sensor2:	
 10744  08AB                     i1l2553:	
 10745                           ;incstack = 0
 10746                           ; Regs used in _sensor2: [wreg]
 10747                           
 10748                           
 10749                           ;main.c: 97:         and_ating=2;
 10750  08AB  3002               	movlw	2
 10751  08AC  00F7               	movwf	??_sensor2
 10752  08AD  0877               	movf	??_sensor2,w
 10753  08AE  0020               	movlb	0	; select bank0
 10754  08AF  00EF               	movwf	_and_ating
 10755                           
 10756                           ;main.c: 98:         and_ating2=1;
 10757  08B0  3001               	movlw	1
 10758  08B1  0021               	movlb	1	; select bank1
 10759  08B2  00C5               	movwf	_and_ating2^(0+128)
 10760  08B3  3000               	movlw	0
 10761  08B4  00C6               	movwf	(_and_ating2^(0+128)+1)
 10762  08B5                     i1l587:	
 10763  08B5  0008               	return
 10764  08B6                     __end_of_sensor2:	
 10765                           
 10766                           	psect	text57
 10767  08CC                     __ptext57:	
 10768 ;; *************** function _IOCBF0_ISR *****************
 10769 ;; Defined at:
 10770 ;;		line 162 in file "mcc_generated_files/pin_manager.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;		None
 10773 ;; Auto vars:     Size  Location     Type
 10774 ;;		None
 10775 ;; Return value:  Size  Location     Type
 10776 ;;                  1    wreg      void 
 10777 ;; Registers used:
 10778 ;;		wreg, status,2, status,0, pclath, cstack
 10779 ;; Tracked objects:
 10780 ;;		On entry : 0/0
 10781 ;;		On exit  : 0/0
 10782 ;;		Unchanged: 0/0
 10783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10784 ;;      Params:         0       0       0       0       0       0
 10785 ;;      Locals:         0       0       0       0       0       0
 10786 ;;      Temps:          0       0       0       0       0       0
 10787 ;;      Totals:         0       0       0       0       0       0
 10788 ;;Total ram usage:        0 bytes
 10789 ;; Hardware stack levels used:    1
 10790 ;; Hardware stack levels required when called:    1
 10791 ;; This function calls:
 10792 ;;		Absolute function
 10793 ;;		_IOCBF0_DefaultInterruptHandler
 10794 ;;		_sensor1
 10795 ;; This function is called by:
 10796 ;;		_PIN_MANAGER_IOC
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800                           
 10801                           ;psect for function _IOCBF0_ISR
 10802  08CC                     _IOCBF0_ISR:	
 10803  08CC                     i1l2751:	
 10804                           ;incstack = 0
 10805                           ; Regs used in _IOCBF0_ISR: [wreg+status,2+status,0+pclath+cstack]
 10806                           
 10807                           
 10808                           ;mcc_generated_files/pin_manager.c: 167:     if(IOCBF0_InterruptHandler)
 10809  08CC  0021               	movlb	1	; select bank1
 10810  08CD  0866               	movf	_IOCBF0_InterruptHandler^(0+128),w
 10811  08CE  0467               	iorwf	(_IOCBF0_InterruptHandler+1)^(0+128),w
 10812  08CF  1903               	btfsc	3,2
 10813  08D0  28D2               	goto	u214_21
 10814  08D1  28D3               	goto	u214_20
 10815  08D2                     u214_21:	
 10816  08D2  28D8               	goto	i1l2755
 10817  08D3                     u214_20:	
 10818  08D3                     i1l2753:	
 10819                           
 10820                           ;mcc_generated_files/pin_manager.c: 168:     {;mcc_generated_files/pin_manager.c: 169:  
      +                                 IOCBF0_InterruptHandler();
 10821  08D3  0867               	movf	(_IOCBF0_InterruptHandler+1)^(0+128),w
 10822  08D4  008A               	movwf	10
 10823  08D5  0866               	movf	_IOCBF0_InterruptHandler^(0+128),w
 10824  08D6  000A               	callw
 10825  08D7  3188               	pagesel	$
 10826  08D8                     i1l2755:	
 10827                           
 10828                           ;mcc_generated_files/pin_manager.c: 171:     IOCBFbits.IOCBF0 = 0;
 10829  08D8  0027               	movlb	7	; select bank7
 10830  08D9  1016               	bcf	22,0	;volatile
 10831  08DA                     i1l425:	
 10832  08DA  0008               	return
 10833  08DB                     __end_of_IOCBF0_ISR:	
 10834                           
 10835                           	psect	text58
 10836  0815                     __ptext58:	
 10837 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
 10838 ;; Defined at:
 10839 ;;		line 184 in file "mcc_generated_files/pin_manager.c"
 10840 ;; Parameters:    Size  Location     Type
 10841 ;;		None
 10842 ;; Auto vars:     Size  Location     Type
 10843 ;;		None
 10844 ;; Return value:  Size  Location     Type
 10845 ;;                  1    wreg      void 
 10846 ;; Registers used:
 10847 ;;		None
 10848 ;; Tracked objects:
 10849 ;;		On entry : 0/0
 10850 ;;		On exit  : 0/0
 10851 ;;		Unchanged: 0/0
 10852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10853 ;;      Params:         0       0       0       0       0       0
 10854 ;;      Locals:         0       0       0       0       0       0
 10855 ;;      Temps:          0       0       0       0       0       0
 10856 ;;      Totals:         0       0       0       0       0       0
 10857 ;;Total ram usage:        0 bytes
 10858 ;; Hardware stack levels used:    1
 10859 ;; This function calls:
 10860 ;;		Nothing
 10861 ;; This function is called by:
 10862 ;;		_PIN_MANAGER_Initialize
 10863 ;;		_IOCBF0_ISR
 10864 ;; This function uses a non-reentrant model
 10865 ;;
 10866                           
 10867                           
 10868                           ;psect for function _IOCBF0_DefaultInterruptHandler
 10869  0815                     _IOCBF0_DefaultInterruptHandler:	
 10870  0815                     i1l431:	
 10871                           ;incstack = 0
 10872                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
 10873                           
 10874  0815  0008               	return
 10875  0816                     __end_of_IOCBF0_DefaultInterruptHandler:	
 10876                           
 10877                           	psect	text59
 10878  0829                     __ptext59:	
 10879 ;; *************** function _sensor1 *****************
 10880 ;; Defined at:
 10881 ;;		line 89 in file "main.c"
 10882 ;; Parameters:    Size  Location     Type
 10883 ;;		None
 10884 ;; Auto vars:     Size  Location     Type
 10885 ;;		None
 10886 ;; Return value:  Size  Location     Type
 10887 ;;                  1    wreg      void 
 10888 ;; Registers used:
 10889 ;;		status,2
 10890 ;; Tracked objects:
 10891 ;;		On entry : 0/0
 10892 ;;		On exit  : 0/0
 10893 ;;		Unchanged: 0/0
 10894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10895 ;;      Params:         0       0       0       0       0       0
 10896 ;;      Locals:         0       0       0       0       0       0
 10897 ;;      Temps:          0       0       0       0       0       0
 10898 ;;      Totals:         0       0       0       0       0       0
 10899 ;;Total ram usage:        0 bytes
 10900 ;; Hardware stack levels used:    1
 10901 ;; This function calls:
 10902 ;;		Nothing
 10903 ;; This function is called by:
 10904 ;;		_main
 10905 ;;		_IOCBF0_ISR
 10906 ;; This function uses a non-reentrant model
 10907 ;;
 10908                           
 10909                           
 10910                           ;psect for function _sensor1
 10911  0829                     _sensor1:	
 10912  0829                     i1l2549:	
 10913                           ;incstack = 0
 10914                           ; Regs used in _sensor1: [status,2]
 10915                           
 10916                           
 10917                           ;main.c: 91:         and_ating=1;
 10918  0829  0020               	movlb	0	; select bank0
 10919  082A  01EF               	clrf	_and_ating
 10920  082B  0AEF               	incf	_and_ating,f
 10921  082C                     i1l2551:	
 10922                           
 10923                           ;main.c: 92:         and_ating2=0;
 10924  082C  0021               	movlb	1	; select bank1
 10925  082D  01C5               	clrf	_and_ating2^(0+128)
 10926  082E  01C6               	clrf	(_and_ating2+1)^(0+128)
 10927  082F                     i1l584:	
 10928  082F  0008               	return
 10929  0830                     __end_of_sensor1:	
 10930                           
 10931                           	psect	text60
 10932  097C                     __ptext60:	
 10933 ;; *************** function _CCP4_CaptureISR *****************
 10934 ;; Defined at:
 10935 ;;		line 89 in file "mcc_generated_files/ccp4.c"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;		None
 10938 ;; Auto vars:     Size  Location     Type
 10939 ;;  module          2    5[COMMON] struct CCPR4Reg_tag
 10940 ;; Return value:  Size  Location     Type
 10941 ;;                  1    wreg      void 
 10942 ;; Registers used:
 10943 ;;		wreg, status,2, status,0, pclath, cstack
 10944 ;; Tracked objects:
 10945 ;;		On entry : 0/0
 10946 ;;		On exit  : 0/0
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10949 ;;      Params:         0       0       0       0       0       0
 10950 ;;      Locals:         2       0       0       0       0       0
 10951 ;;      Temps:          1       0       0       0       0       0
 10952 ;;      Totals:         3       0       0       0       0       0
 10953 ;;Total ram usage:        3 bytes
 10954 ;; Hardware stack levels used:    1
 10955 ;; Hardware stack levels required when called:    2
 10956 ;; This function calls:
 10957 ;;		Absolute function
 10958 ;;		_CCP4_DefaultCallBack
 10959 ;;		_get_pulse
 10960 ;; This function is called by:
 10961 ;;		_INTERRUPT_InterruptManager
 10962 ;; This function uses a non-reentrant model
 10963 ;;
 10964                           
 10965                           
 10966                           ;psect for function _CCP4_CaptureISR
 10967  097C                     _CCP4_CaptureISR:	
 10968  097C                     i1l3379:	
 10969                           ;incstack = 0
 10970                           ; Regs used in _CCP4_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
 10971                           
 10972                           
 10973                           ;mcc_generated_files/ccp4.c: 91:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 94:     PIR3bits.CCP4IF = 0;
 10974  097C  0020               	movlb	0	; select bank0
 10975  097D  1293               	bcf	19,5	;volatile
 10976  097E                     i1l3381:	
 10977                           
 10978                           ;mcc_generated_files/ccp4.c: 97:     module.ccpr4l = CCPR4L;
 10979  097E  0026               	movlb	6	; select bank6
 10980  097F  0818               	movf	24,w	;volatile
 10981  0980  00FB               	movwf	??_CCP4_CaptureISR
 10982  0981  087B               	movf	??_CCP4_CaptureISR,w
 10983  0982  00FC               	movwf	CCP4_CaptureISR@module
 10984                           
 10985                           ;mcc_generated_files/ccp4.c: 98:     module.ccpr4h = CCPR4H;
 10986  0983  0819               	movf	25,w	;volatile
 10987  0984  00FB               	movwf	??_CCP4_CaptureISR
 10988  0985  087B               	movf	??_CCP4_CaptureISR,w
 10989  0986  00FD               	movwf	CCP4_CaptureISR@module+1
 10990  0987                     i1l3383:	
 10991                           
 10992                           ;mcc_generated_files/ccp4.c: 101:     CCP4_CallBack(module.ccpr4_16Bit);
 10993  0987  087D               	movf	CCP4_CaptureISR@module+1,w
 10994  0988  00FA               	movwf	get_pulse@capturedValue+1
 10995  0989  087C               	movf	CCP4_CaptureISR@module,w
 10996  098A  00F9               	movwf	get_pulse@capturedValue
 10997  098B  0021               	movlb	1	; select bank1
 10998  098C  0869               	movf	(_CCP4_CallBack+1)^(0+128),w
 10999  098D  008A               	movwf	10
 11000  098E  0868               	movf	_CCP4_CallBack^(0+128),w
 11001  098F  000A               	callw
 11002  0990  3189               	pagesel	$
 11003  0991                     i1l346:	
 11004  0991  0008               	return
 11005  0992                     __end_of_CCP4_CaptureISR:	
 11006                           
 11007                           	psect	text61
 11008  0814                     __ptext61:	
 11009 ;; *************** function _CCP4_DefaultCallBack *****************
 11010 ;; Defined at:
 11011 ;;		line 60 in file "mcc_generated_files/ccp4.c"
 11012 ;; Parameters:    Size  Location     Type
 11013 ;;  capturedValu    2    2[COMMON] unsigned short 
 11014 ;; Auto vars:     Size  Location     Type
 11015 ;;		None
 11016 ;; Return value:  Size  Location     Type
 11017 ;;                  1    wreg      void 
 11018 ;; Registers used:
 11019 ;;		None
 11020 ;; Tracked objects:
 11021 ;;		On entry : 0/0
 11022 ;;		On exit  : 0/0
 11023 ;;		Unchanged: 0/0
 11024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11025 ;;      Params:         2       0       0       0       0       0
 11026 ;;      Locals:         0       0       0       0       0       0
 11027 ;;      Temps:          0       0       0       0       0       0
 11028 ;;      Totals:         2       0       0       0       0       0
 11029 ;;Total ram usage:        2 bytes
 11030 ;; Hardware stack levels used:    1
 11031 ;; This function calls:
 11032 ;;		Nothing
 11033 ;; This function is called by:
 11034 ;;		_CCP4_Initialize
 11035 ;;		_CCP4_CaptureISR
 11036 ;; This function uses a non-reentrant model
 11037 ;;
 11038                           
 11039                           
 11040                           ;psect for function _CCP4_DefaultCallBack
 11041  0814                     _CCP4_DefaultCallBack:	
 11042  0814                     i1l340:	
 11043                           ;incstack = 0
 11044                           ; Regs used in _CCP4_DefaultCallBack: []
 11045                           
 11046  0814  0008               	return
 11047  0815                     __end_of_CCP4_DefaultCallBack:	
 11048                           
 11049                           	psect	text62
 11050  0A96                     __ptext62:	
 11051 ;; *************** function _get_pulse *****************
 11052 ;; Defined at:
 11053 ;;		line 113 in file "main.c"
 11054 ;; Parameters:    Size  Location     Type
 11055 ;;  capturedValu    2    2[COMMON] unsigned short 
 11056 ;; Auto vars:     Size  Location     Type
 11057 ;;		None
 11058 ;; Return value:  Size  Location     Type
 11059 ;;                  1    wreg      void 
 11060 ;; Registers used:
 11061 ;;		wreg, status,2, status,0, pclath, cstack
 11062 ;; Tracked objects:
 11063 ;;		On entry : 0/0
 11064 ;;		On exit  : 0/0
 11065 ;;		Unchanged: 0/0
 11066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11067 ;;      Params:         2       0       0       0       0       0
 11068 ;;      Locals:         0       0       0       0       0       0
 11069 ;;      Temps:          0       0       0       0       0       0
 11070 ;;      Totals:         2       0       0       0       0       0
 11071 ;;Total ram usage:        2 bytes
 11072 ;; Hardware stack levels used:    1
 11073 ;; Hardware stack levels required when called:    1
 11074 ;; This function calls:
 11075 ;;		_TMR1_WriteTimer
 11076 ;; This function is called by:
 11077 ;;		_main
 11078 ;;		_CCP4_CaptureISR
 11079 ;; This function uses a non-reentrant model
 11080 ;;
 11081                           
 11082                           
 11083                           ;psect for function _get_pulse
 11084  0A96                     _get_pulse:	
 11085  0A96                     i1l2793:	
 11086                           ;incstack = 0
 11087                           ; Regs used in _get_pulse: [wreg+status,2+status,0+pclath+cstack]
 11088                           
 11089                           
 11090                           ;main.c: 113: void get_pulse(uint16_t capturedValue);main.c: 114:     {;main.c: 115:    
      +                               TMR1_WriteTimer(0);
 11091  0A96  3000               	movlw	0
 11092  0A97  00F7               	movwf	TMR1_WriteTimer@timerVal
 11093  0A98  00F8               	movwf	TMR1_WriteTimer@timerVal+1
 11094  0A99  3189  2145  318A   	fcall	_TMR1_WriteTimer
 11095  0A9C                     i1l2795:	
 11096                           
 11097                           ;main.c: 116:         ccp_value = capturedValue;
 11098  0A9C  087A               	movf	get_pulse@capturedValue+1,w
 11099  0A9D  0021               	movlb	1	; select bank1
 11100  0A9E  00DD               	movwf	(_ccp_value+1)^(0+128)
 11101  0A9F  0879               	movf	get_pulse@capturedValue,w
 11102  0AA0  00DC               	movwf	_ccp_value^(0+128)
 11103  0AA1                     i1l2797:	
 11104                           
 11105                           ;main.c: 117:         if(sentido == 1){
 11106  0AA1  0355               	decf	_sentido^(0+128),w
 11107  0AA2  0456               	iorwf	(_sentido+1)^(0+128),w
 11108  0AA3  1D03               	btfss	3,2
 11109  0AA4  2AA6               	goto	u222_21
 11110  0AA5  2AA7               	goto	u222_20
 11111  0AA6                     u222_21:	
 11112  0AA6  2AAC               	goto	i1l2801
 11113  0AA7                     u222_20:	
 11114  0AA7                     i1l2799:	
 11115                           
 11116                           ;main.c: 118:             pulses++;
 11117  0AA7  3001               	movlw	1
 11118  0AA8  07DE               	addwf	_pulses^(0+128),f
 11119  0AA9  3000               	movlw	0
 11120  0AAA  3DDF               	addwfc	(_pulses+1)^(0+128),f
 11121                           
 11122                           ;main.c: 119:         }else if(sentido == 0 && pulses >= 0){
 11123  0AAB  2ABA               	goto	i1l599
 11124  0AAC                     i1l2801:	
 11125  0AAC  0855               	movf	_sentido^(0+128),w
 11126  0AAD  0456               	iorwf	(_sentido+1)^(0+128),w
 11127  0AAE  1D03               	btfss	3,2
 11128  0AAF  2AB1               	goto	u223_21
 11129  0AB0  2AB2               	goto	u223_20
 11130  0AB1                     u223_21:	
 11131  0AB1  2ABA               	goto	i1l599
 11132  0AB2                     u223_20:	
 11133  0AB2                     i1l2803:	
 11134  0AB2  1BDF               	btfsc	(_pulses+1)^(0+128),7
 11135  0AB3  2AB5               	goto	u224_21
 11136  0AB4  2AB6               	goto	u224_20
 11137  0AB5                     u224_21:	
 11138  0AB5  2ABA               	goto	i1l599
 11139  0AB6                     u224_20:	
 11140  0AB6                     i1l2805:	
 11141                           
 11142                           ;main.c: 120:             pulses--;
 11143  0AB6  30FF               	movlw	255
 11144  0AB7  07DE               	addwf	_pulses^(0+128),f
 11145  0AB8  30FF               	movlw	255
 11146  0AB9  3DDF               	addwfc	(_pulses+1)^(0+128),f
 11147  0ABA                     i1l599:	
 11148  0ABA  0008               	return
 11149  0ABB                     __end_of_get_pulse:	
 11150                           
 11151                           	psect	text63
 11152  0945                     __ptext63:	
 11153 ;; *************** function _TMR1_WriteTimer *****************
 11154 ;; Defined at:
 11155 ;;		line 113 in file "mcc_generated_files/tmr1.c"
 11156 ;; Parameters:    Size  Location     Type
 11157 ;;  timerVal        2    0[COMMON] unsigned short 
 11158 ;; Auto vars:     Size  Location     Type
 11159 ;;		None
 11160 ;; Return value:  Size  Location     Type
 11161 ;;                  1    wreg      void 
 11162 ;; Registers used:
 11163 ;;		wreg, status,2
 11164 ;; Tracked objects:
 11165 ;;		On entry : 0/0
 11166 ;;		On exit  : 0/0
 11167 ;;		Unchanged: 0/0
 11168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11169 ;;      Params:         2       0       0       0       0       0
 11170 ;;      Locals:         0       0       0       0       0       0
 11171 ;;      Temps:          0       0       0       0       0       0
 11172 ;;      Totals:         2       0       0       0       0       0
 11173 ;;Total ram usage:        2 bytes
 11174 ;; Hardware stack levels used:    1
 11175 ;; This function calls:
 11176 ;;		Nothing
 11177 ;; This function is called by:
 11178 ;;		_get_pulse
 11179 ;;		_TMR1_Reload
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182                           
 11183                           
 11184                           ;psect for function _TMR1_WriteTimer
 11185  0945                     _TMR1_WriteTimer:	
 11186  0945                     i1l2523:	
 11187                           ;incstack = 0
 11188                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 11189                           
 11190                           
 11191                           ;mcc_generated_files/tmr1.c: 113: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 114: {;mcc_generated_files/tmr1.c: 115:     if (T1CONbits.nT1SYNC == 1)
 11192  0945  0020               	movlb	0	; select bank0
 11193  0946  1D18               	btfss	24,2	;volatile
 11194  0947  2949               	goto	u193_21
 11195  0948  294A               	goto	u193_20
 11196  0949                     u193_21:	
 11197  0949  2951               	goto	i1l2533
 11198  094A                     u193_20:	
 11199  094A                     i1l2525:	
 11200                           
 11201                           ;mcc_generated_files/tmr1.c: 116:     {;mcc_generated_files/tmr1.c: 118:         T1CONbi
      +                          ts.TMR1ON = 0;
 11202  094A  1018               	bcf	24,0	;volatile
 11203  094B                     i1l2527:	
 11204                           
 11205                           ;mcc_generated_files/tmr1.c: 121:         TMR1H = (timerVal >> 8);
 11206  094B  0878               	movf	TMR1_WriteTimer@timerVal+1,w
 11207  094C  0097               	movwf	23	;volatile
 11208  094D                     i1l2529:	
 11209                           
 11210                           ;mcc_generated_files/tmr1.c: 122:         TMR1L = timerVal;
 11211  094D  0877               	movf	TMR1_WriteTimer@timerVal,w
 11212  094E  0096               	movwf	22	;volatile
 11213  094F                     i1l2531:	
 11214                           
 11215                           ;mcc_generated_files/tmr1.c: 125:         T1CONbits.TMR1ON =1;
 11216  094F  1418               	bsf	24,0	;volatile
 11217                           
 11218                           ;mcc_generated_files/tmr1.c: 126:     }
 11219  0950  2955               	goto	i1l160
 11220  0951                     i1l2533:	
 11221                           
 11222                           ;mcc_generated_files/tmr1.c: 128:     {;mcc_generated_files/tmr1.c: 130:         TMR1H =
      +                           (timerVal >> 8);
 11223  0951  0878               	movf	TMR1_WriteTimer@timerVal+1,w
 11224  0952  0097               	movwf	23	;volatile
 11225  0953                     i1l2535:	
 11226                           
 11227                           ;mcc_generated_files/tmr1.c: 131:         TMR1L = timerVal;
 11228  0953  0877               	movf	TMR1_WriteTimer@timerVal,w
 11229  0954  0096               	movwf	22	;volatile
 11230  0955                     i1l160:	
 11231  0955  0008               	return
 11232  0956                     __end_of_TMR1_WriteTimer:	
 11233  007E                     btemp	set	126	;btemp
 11234  007E                     int$flags	set	126
 11235  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         104
    Persistent  60
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     79      80
    BANK1            80      0      80
    BANK2            80      0      44
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    IOCBF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor4(), IOCBF5_DefaultInterruptHandler(), 

    IOCBF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor4(), IOCBF5_DefaultInterruptHandler(), Absolute function(), 

    IOCBF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor3(), IOCBF4_DefaultInterruptHandler(), 

    IOCBF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor3(), IOCBF4_DefaultInterruptHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor2(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor2(), IOCBF3_DefaultInterruptHandler(), Absolute function(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor1(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor1(), IOCBF0_DefaultInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> get_pulse(), CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> get_pulse(), CCP4_DefaultCallBack(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> send_data(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> send_data(), Absolute function(), TMR4_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP4_CaptureISR
    _TMR4_ISR->_send_data
    _send_data->_EUSART_Write
    _send_data->_EUSART_is_tx_ready
    _IOCBF5_ISR->_sensor4
    _IOCBF4_ISR->_sensor3
    _IOCBF3_ISR->_sensor2
    _CCP4_CaptureISR->_CCP4_DefaultCallBack
    _CCP4_CaptureISR->_get_pulse
    _get_pulse->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_comunicacao
    _gerenciamento->_update
    _col_up->_min_up
    _col_down->_max_down
    _controle->___flmul
    _update->_max_down
    _update->_min_up
    _comunicacao->___fldiv
    ___xxtofl->_ADC_GetConversion
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF5_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   18530
                   _CCP4_SetCallBack
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                        _comunicacao
                           _controle
                      _gerenciamento
 ---------------------------------------------------------------------------------
 (1) _gerenciamento                                        0     0      0    3628
                                _abs
                           _col_down
                             _col_up
                             _update
 ---------------------------------------------------------------------------------
 (2) _col_up                                               2     2      0     758
                                              5 BANK0      2     2      0
                                _abs
                             _min_up
 ---------------------------------------------------------------------------------
 (2) _col_down                                             2     2      0     714
                                              5 BANK0      2     2      0
                                _abs
                           _max_down
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     446
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _controle                                            18    18      0    6656
                                             44 BANK0     18    18      0
                  _ADC_GetConversion
                 _PWM3_LoadDutyValue
                            ___flmul
                             ___wmul
                           ___xxtofl
                             _update
 ---------------------------------------------------------------------------------
 (2) _update                                              10    10      0    1710
                                              5 BANK0     10    10      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                           _max_down
                             _min_up
 ---------------------------------------------------------------------------------
 (3) _min_up                                               5     5      0     312
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _max_down                                             5     5      0     268
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2     500
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _comunicacao                                          9     9      0    5351
                                             70 BANK0      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              4 BANK0     14    10      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2873
                                             18 BANK0     26    18      8
                  _ADC_GetConversion (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             44 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1629
                     _ADC_Initialize
                    _CCP4_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     844
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF5_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF4_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     211
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     454
                    _CCP4_CaptureISR
                    _PIN_MANAGER_IOC
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0      92
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                          _send_data *
 ---------------------------------------------------------------------------------
 (6) _send_data                                            3     3      0      92
                                              1 COMMON     3     3      0
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (7) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCBF0_ISR
                         _IOCBF3_ISR
                         _IOCBF4_ISR
                         _IOCBF5_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCBF5_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF5_DefaultInterruptHandler *
                            _sensor4 *
 ---------------------------------------------------------------------------------
 (7) _sensor4                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _IOCBF5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCBF4_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF4_DefaultInterruptHandler *
                            _sensor3 *
 ---------------------------------------------------------------------------------
 (7) _sensor3                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _IOCBF4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCBF3_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                            _sensor2 *
 ---------------------------------------------------------------------------------
 (7) _sensor2                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCBF0_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF0_DefaultInterruptHandler *
                            _sensor1 *
 ---------------------------------------------------------------------------------
 (7) _sensor1                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CCP4_CaptureISR                                      3     3      0     362
                                              4 COMMON     3     3      0
                   Absolute function *
               _CCP4_DefaultCallBack *
                          _get_pulse *
 ---------------------------------------------------------------------------------
 (6) _get_pulse                                            2     0      2     315
                                              2 COMMON     2     0      2
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _CCP4_DefaultCallBack                                 2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP4_SetCallBack
   _IOCBF0_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _IOCBF4_SetInterruptHandler
   _IOCBF5_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
       _IOCBF4_SetInterruptHandler
       _IOCBF5_SetInterruptHandler
     _PWM3_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _WDT_Initialize
   _TMR4_SetInterruptHandler
   _comunicacao
     ___fldiv
       ___flmul (ARG)
         _ADC_GetConversion (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_GetConversion (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
     ___flmul
       _ADC_GetConversion (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
     ___fltol
     ___xxtofl
       _ADC_GetConversion (ARG)
   _controle
     _ADC_GetConversion
     _PWM3_LoadDutyValue
     ___flmul
       _ADC_GetConversion (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
     ___wmul
     ___xxtofl
       _ADC_GetConversion (ARG)
     _update
       _EUSART_Read
       _EUSART_is_rx_ready
       _max_down
       _min_up
   _gerenciamento
     _abs
     _col_down
       _abs
       _max_down
     _col_up
       _abs
       _min_up
     _update
       _EUSART_Read
       _EUSART_is_rx_ready
       _max_down
       _min_up

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     Absolute function(Fake) *
     _CCP4_DefaultCallBack *
     _get_pulse *
       _TMR1_WriteTimer
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       Absolute function(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       _sensor1 *
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _sensor2 *
     _IOCBF4_ISR
       Absolute function(Fake) *
       _IOCBF4_DefaultInterruptHandler *
       _sensor3 *
     _IOCBF5_ISR
       Absolute function(Fake) *
       _IOCBF5_DefaultInterruptHandler *
       _sensor4 *
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *
     _send_data *
       _EUSART_Write
       _EUSART_is_tx_ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      DA       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      2C      10       55.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      DA      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec 13 13:07:52 2020

                              _CCP4_Initialize 0956                                   ___fldiv@aexp 0065  
                                 ___fldiv@bexp 0064               ??_IOCBF3_DefaultInterruptHandler 0077  
              ?_IOCBF3_DefaultInterruptHandler 0077                                   ___fldiv@sign 005D  
                                  __CFG_CP$OFF 0000                                             l43 0A71  
                                           l51 0822                                             l60 0926  
                                           l64 0934                                             l82 0861  
                                           l85 086A                                             l88 0858  
                       __end_of_FVR_Initialize 081A                            ___wmul@multiplicand 0022  
                                  _state_motor 00DB                            __Umul8_16@word_mpld 0026  
                                  __CFG_LVP$ON 0000                                            l121 0A4D  
                                          l124 0836                                            l127 081D  
                                          l320 0819                                            l225 097B  
                                          l146 0944                                            l414 0B73  
                                          l343 0967                                            l247 08A0  
                                          l185 0846                                            l610 0FFF  
                                          l282 0A20                                            l267 083E  
                                          l428 0873                                            l604 0B24  
                                          l349 084F                                            l285 0A2B  
                                          l438 087C                                            l710 048D  
                                          l448 0885                                            l472 0897  
                                          l624 0781                                            l458 088E  
                                          l475 09AD                                            l643 07C3  
                                          l636 0CFA                                            l654 0C2A  
                                          l663 0E99                                            l647 07FD  
                                          l681 0E58                                            l674 0DD2  
                                          l658 0C64                                            l667 0F00  
                                          l860 09D5                                            l669 0F2A  
                                          l862 09E9                                            l678 0E23  
                                          l697 03A8                                            _PR2 001B  
                                          _PR4 0416                                   __CFG_CPD$OFF 0000  
                                          _I_m 0148                                _timer1ReloadVal 00EC  
                                          _abs 09AE                 ?_EUSART_SetFramingErrorHandler 0020  
                              _TMR2_Initialize 083F                 CCP4_SetCallBack@customCallBack 0020  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 ?_comunicacao 0077                                   __CFG_IESO$ON 0000  
                             _CCP4_SetCallBack 0847                                   ___flmul@aexp 0044  
                                 ___flmul@bexp 0045             __end_of_IOCBF4_SetInterruptHandler 0886  
                   _IOCBF4_SetInterruptHandler 087D                                   ___flmul@sign 003F  
                                 ___flmul@temp 004A                                   ___flmul@prod 0046  
                      __end_of_CCP4_CaptureISR 0992                                   ?_EUSART_Read 0077  
                                 ___fltol@exp1 002A                                           ?_abs 0020  
                                         l1061 0BD3                                           l1301 0D59  
                                         l1054 0BE8                                           l1064 0BE8  
                                         l1241 0638                                           l1233 05C3  
                                         l1217 04E5                                           l1321 0A85  
                                         l3001 0B89                                           l1314 09C9  
                                         l1219 0641                                           l1323 0A95  
                                         l3011 0BAB                                           l3003 0B9C  
                                         l1308 0D73                                           l3101 0555  
                                         l3005 0B9D                                           l1309 0D7F  
                                         l1317 09C9                                           l1238 060F  
                                         l1239 0629                                           l3111 0578  
                                         l3103 0556                                           l3031 048E  
                                         l1263 0225                                           l3007 0BA5  
                                         l3121 0593                                           l3105 055D  
                                         l3113 057C                                           l3041 04A2  
                                         l3033 0494                                           l1257 02A9  
                                         l3201 0096                                           l3025 0BCA  
                                         l3017 0BB3                                           l3009 0BA7  
                                         l3131 05A7                                           l3123 0597  
                                         l3115 0582                                           l3107 056F  
                                         l3051 04BA                                           l3043 04A7  
                                         l3035 0498                                           l3211 00B2  
                                         l3203 009E                                           l3027 0BD8  
                                         l3019 0BC3                                           l3141 05C8  
                                         l3133 05A8                                           l3125 0598  
                                         l3117 058A                                           l3109 0570  
                                         l3061 04CD                                           l3053 04BF  
                                         l3045 04AF                                           l3037 049C  
                                         l3301 0294                                           l1269 029D  
                                         l3221 00EF                                           l3205 00A0  
                                         l3029 0BDD                                           l3143 05CD  
                                         l3151 05F5                                           l3135 05AC  
                                         l3127 059F                                           l3119 058C  
                                         l3071 04ED                                           l3063 04D2  
                                         l3055 04C3                                           l3047 04B0  
                                         l3039 049D                                           l3303 0298  
                                         l3231 0137                                           l3223 00FC  
                                         l3215 00BB                                           l3207 00A8  
                                         l1295 0D1E                                           l3311 0CFD  
                                         l3161 062E                                           l3153 0602  
                                         l3145 05D5                                           l3137 05C0  
                                         l3129 05A3                                           l3081 050B  
                                         l3073 04F9                                           l3065 04DA  
                                         l3057 04C7                                           l3049 04B2  
                                         l3305 0299                                           l3241 0173  
                                         l3233 0144                                           l3225 0116  
                                         l3217 00C8                                           l3209 00AD  
                                         l1297 0DA7                                           l3313 0D02  
                                         l2601 0DA8                                           l3163 0632  
                                         l3155 061D                                           l3147 05D9  
                                         l3091 0534                                           l3075 04FD  
                                         l3067 04DB                                           l3059 04C8  
                                         l3307 02A1                                           l3251 01C4  
                                         l3243 017A                                           l3235 014B  
                                         l3227 0123                                           l3219 00D5  
                                         l3171 0053                                           l3331 0D4A  
                                         l3323 0D2F                                           l3315 0D06  
                                         l2611 0DF4                                           l3165 0634  
                                         l3157 0620                                           l3149 05F1  
                                         l3093 053C                                           l3085 0514  
                                         l3069 04DD                                           l3261 01F9  
                                         l3253 01DB                                           l3245 018E  
                                         l3237 0158                                           l3229 0130  
                                         l3181 0067                                           l3173 0059  
                                         l3341 0D77                                           l3333 0D52  
                                         l3325 0D34                                           l3317 0D16  
                                         l2621 0E09                                           l2613 0DF9  
                                         l2605 0DB2                                           l3159 0628  
                                         l3095 053E                                           l3087 0524  
                                         l3079 0506                                           l3271 020A  
                                         l3263 01FA                                           l3255 01E2  
                                         l3247 019B                                           l3239 015F  
                                         l3191 0083                                           l3183 006C  
                                         l3175 005D                                           l3351 0D9F  
                                         l3343 0D81                                           l3335 0D60  
                                         l3327 0D3F                                           l3319 0D26  
                                         l2631 0E4E                                           l2623 0E1C  
                                         l2615 0E06                                           l2607 0DC9  
                                         l3601 0B49                                           l3097 0543  
                                         l3089 052C                                           l2641 0A81  
                                         l3281 022F                                           l3273 020E  
                                         l3265 0201                                           l3257 01EE  
                                         l3249 01AF                                           l3193 0087  
                                         l3185 0074                                           l3177 0061  
                                         l3345 0D95                                           l3337 0D69  
                                         l3329 0D46                                           l2633 0E54  
                                         l2625 0E35                                           l2609 0DEA  
                                         l2561 09BC                                           l3611 0B4E  
                                         l3603 0B4A                                           l3099 0551  
                                         l2643 0A8C                                           l2635 0A74  
                                         l3291 0264                                           l3283 0237  
                                         l3275 0222                                           l3259 01F5  
                                         l3267 0205                                           l3195 008B  
                                         l3187 0076                                           l3179 0062  
                                         l3347 0D9A                                           l3339 0D6D  
                                         l2627 0E3D                                           l2571 0E60  
                                         l2563 0E59                                           l3541 0850  
                                         l3621 0B5A                                           l3613 0B4F  
                                         l3605 0B4B                                           l2645 0A91  
                                         l2637 0A76                                           l3293 026E  
                                         l3285 023B                                           l3269 0209  
                                         l3197 008C                                           l3189 007E  
                                         l3349 0D9E                                           l2741 0A19  
                                         l2629 0E41                                           l2581 0ECF  
                                         l2573 0E78                                           l2565 0E5D  
                                         l3701 02D3                                           l3631 0833  
                                         l3623 0B62                                           l3615 0B50  
                                         l3607 0B4C                                           l2639 0A7D  
                                         l3295 027C                                           l3287 0253  
                                         l3279 022A                                           l3199 0091  
                                         l3391 0FB5                                           l2743 0A1A  
                                         l3551 092C                                           l3543 081E  
                                         l2591 0EE4                                           l2583 0ED4  
                                         l2575 0E8F                                           l3711 02E9  
                                         l3703 02E4                                           l2559 09AE  
                                         l3561 0847                                           l3641 0959  
                                         l3537 0859                                           l3633 0834  
                                         l3625 0B6A                                           l3617 0B51  
                                         l3609 0B4D                                           l3297 0285  
                                         l3289 0257                                           l3393 0FC9  
                                         l3385 0F2B                                           l2745 0A1E  
                                         l3553 0931                                           l2593 0EF8  
                                         l2585 0EE1                                           l2577 0EB0  
                                         l3801 042B                                           l3721 0315  
                                         l3713 02EF                                           l3705 02E4  
                                         l3651 0837                                           l3643 095A  
                                         l3539 0862                                           l3571 0A4E  
                                         l3563 086B                                           l3627 0B72  
                                         l3619 0B52                                           l3635 081A  
                                         l3299 0287                                           l3395 0FE4  
                                         l3387 0F99                                           l2747 0A24  
                                         l2739 0A0D                                           l3555 0933  
                                         l3547 0926                                           l2595 0F12  
                                         l2579 0EC6                                           l3811 0437  
                                         l3803 042F                                           l3731 0322  
                                         l3723 031A                                           l3715 02F4  
                                         l3653 083A                                           l3645 095B  
                                         l3581 0A70                                           l3573 0A57  
                                         l3637 0816                                           l3629 0830  
                                         l3565 0874                                           l3661 096C  
                                         l3389 0FA1                                           l3549 092B  
                                         l2597 0F19                                           l3821 0487  
                                         l3813 0453                                           l3805 0434  
                                         l3741 0354                                           l3733 0328  
                                         l3725 031E                                           l3717 02FA  
                                         l2941 0797                                           l3901 0C68  
                                         l3655 083B                                           l3647 0963  
                                         l3639 0956                                           l3575 0A58  
                                         l3567 087D                                           l3591 0B3B  
                                         l3583 0B30                                           l3671 0892  
                                         l3559 0898                                           l3663 096E  
                                         l2775 0992                                           l3831 09DF  
                                         l3823 09CA                                           l2599 0F1D  
                                         l3815 046A                                           l3751 0381  
                                         l3743 0359                                           l3735 032D  
                                         l3719 0308                                           l2951 07C5  
                                         l2943 07A5                                           l3911 0C87  
                                         l3903 0C6F                                           l3649 0965  
                                         l3577 0A60                                           l3569 0886  
                                         l3593 0B40                                           l3585 0B33  
                                         l3673 0893                                           l3681 0843  
                                         l3665 0970                                           l3657 0968  
                                         l3833 09E5                                           l3825 09CD  
                                         l3817 0475                                           l3761 03BA  
                                         l3753 038B                                           l3737 0337  
                                         l3745 035D                                           l3841 06BA  
                                         l2961 0BEA                                           l2953 07D3  
                                         l2945 07A7                                           l2937 0782  
                                         l3921 0CA1                                           l3913 0C8D  
                                         l3905 0C75                                           l3579 0A68  
                                         l3595 0B45                                           l3587 0B36  
                                         l3675 0894                                           l3691 0941  
                                         l3683 0844                                           l3667 0978  
                                         l3659 096B                                           l3827 09D1  
                                         l3819 047A                                           l3771 03C5  
                                         l3763 03BA                                           l3755 0390  
                                         l3739 0345                                           l3851 06DB  
                                         l3843 06BA                                           l2963 0BFE  
                                         l2971 0C1C                                           l2955 07D6  
                                         l2947 07B3                                           l2939 0783  
                                         l3931 0CBF                                           l3923 0CA7  
                                         l3915 0C93                                           l3907 0C7B  
                                         l3597 0B47                                           l3589 0B38  
                                         l3669 088F                                           l3685 0935  
                                         l3677 083F                                           l3837 0A2C  
                                         l3829 09DA                                           l3781 03F2  
                                         l3773 03CA                                           l3757 039D  
                                         l3749 0367                                           l3693 02AA  
                                         l3861 06E5                                           l3853 06E1  
                                         l3845 06BF                                           l2973 0C2C  
                                         l2965 0C0C                                           l2957 07EB  
                                         l2949 07B5                                           l3941 0CD7  
                                         l3933 0CC5                                           l3925 0CAD  
                                         l3909 0C81                                           l3917 0C99  
                                         l3599 0B48                                           l3687 0939  
                                         l3679 0842                                           l3791 0400  
                                         l3783 03F6                                           l3775 03D0  
                                         l3759 03A4                                           l3695 02B2  
                                         l3871 071B                                           l3863 06F8  
                                         l3855 06E3                                           l3847 06C3  
                                         l3839 0642                                           l2975 0C3A  
                                         l2967 0C0E                                           l2959 0BE9  
                                         l3943 0CDB                                           l3935 0CCB  
                                         l3927 0CB3                                           l3919 0C9D  
                                         l3951 0AEF                                           l3689 093A  
                                         l3793 0405                                           l3777 03DE  
                                         l3769 03BF                                           l3697 02B9  
                                         l3873 0721                                           l3865 0701  
                                         l3849 06C7                                           l2977 0C3D  
                                         l2969 0C1A                                           l3945 0CEE  
                                         l3929 0CB9                                           l3937 0CD1  
                                         l3953 0AF2                                           l2995 0B74  
                                         l3795 040B                                           l3779 03ED  
                                         l3699 02CA                                           l3891 0765  
                                         l3875 0729                                           l3867 0709  
                                         l2979 0C52                                           l3947 0CF5  
                                         l3939 0CD3                                           l3955 0AF3  
                                         l2997 0B80                                           l3797 0419  
                                         l3789 03FA                                           l3893 076A  
                                         l3885 0741                                           l3877 072E  
                                         l3869 070E                                           l3949 0CF8  
                                         l3957 0B27                                           l3799 0426  
                                         l3895 0777                                           l3887 0754  
                                         l3879 073C                                           l3959 0B2A  
                                         l3897 077A                                           l3889 075D  
                                         l3899 0C65                                           u2000 0EF8  
                                         u2001 0EF7                                           u2010 0F12  
                                         u2011 0F11                                           u2100 0A81  
                                         u2020 0F2A                                           u2101 0A80  
                                         u2021 0F29                                           u2005 0EF4  
                                         u2030 0DC9                                           u2031 0DC8  
                                         u2015 0F0E                                           u2120 0A91  
                                         u3000 0061                                           u2040 0DEA  
                                         u2121 0A90                                           u3001 0060  
                                         u2041 0DE9                                           u2025 0F26  
                                         u3010 0067                                           u2130 0A24  
                                         u2050 0E06                                           u2115 0A86  
                                         u3011 0066                                           u2131 0A23  
                                         u2051 0E05                                           u2035 0DC5  
                                         u3100 01BA                                           u3020 006C  
                                         u2060 0E1C                                           u3021 006B  
                                         u2061 0E1B                                           u2045 0DE6  
                                         _LATA 010C                                           u3110 01D1  
                                         u3030 008B                                           u2070 0E35  
                                         _LATB 010D                                           u3031 008A  
                                         u2071 0E34                                           u2055 0E02  
                                         u3200 022F                                           u3040 0091  
                                         u2080 0E4E                                           u3201 022E  
                                         u3105 01B6                                           u3041 0090  
                                         u2081 0E4D                                           u2065 0E18  
                                         u3210 023B                                           u3050 0096  
                                         u4010 09E5                                           u2090 0E54  
                                         u3211 023A                                           u3115 01CD  
                                         u3051 0095                                           u4011 09E4  
                                         u2091 0E53                                           u2075 0E31  
                                         u3220 0249                                           u3140 01F9  
                                         u3060 00AD                                           u3300 0D45  
                                         u4020 06F8                                           u2500 07D3  
                                         u4100 0C81                                           u3141 01F8  
                                         u3125 01DC                                           u3061 00AC  
                                         u3301 0D44                                           u4005 09DB  
                                         u2085 0E4A                                           u4021 06F7  
                                         u2501 07D2                                           u4101 0C80  
                                         u3230 0264                                           u3070 00B2  
                                         u4030 071B                                           u2510 07FD  
                                         u4110 0C87                                           u3231 0263  
                                         u3135 01EF                                           u3071 00B1  
                                         u4031 071A                                           u2511 07FC  
                                         u4111 0C86                                           u3240 027C  
                                         u3160 0209                                           u3320 0D5F  
                                         u4040 073C                                           u2520 0C0C  
                                         u4200 0CC5                                           u4120 0C8D  
                                         u3241 027B                                           u3225 0245  
                                         u3161 0208                                           u3321 0D5E  
                                         u2185 09A3                                           u4041 073B  
                                         u4025 06F4                                           u2521 0C0B  
                                         u2505 07CF                                           u4201 0CC4  
                                         u4121 0C8C                                           u3250 0298  
                                         u3170 020E                                           u2610 0B80  
                                         u4050 0754                                           u2530 0C1A  
                                         u4210 0CCB                                           u4130 0C93  
                                         u3251 0297                                           u3235 0260  
                                         u3171 020D                                           u3155 01FB  
                                         u2611 0B7F                                           u3315 0D53  
                                         u4051 0753                                           u4035 0717  
                                         u2531 0C19                                           u2515 07F9  
                                         u4211 0CCA                                           u4131 0C92  
                                         u3180 0222                                           u2700 0BDD  
                                         u2620 0B96                                           u3340 0D6D  
                                         u3260 0D02                                           u4060 0777  
                                         u2540 0C2A                                           u4220 0CD1  
                                         u4140 0C99                                           u3245 0278  
                                         u3181 0221                                           u3085 0131  
                                         u2701 0BDC                                           u3341 0D6C  
                                         u3261 0D01                                           u4061 0776  
                                         u4045 0738                                           u2541 0C29  
                                         u2525 0C08                                           u4221 0CD0  
                                         u4141 0C98                                           u2710 049C  
                                         u3190 0229                                           u2630 0BAB  
                                         u3350 0D73                                           u3270 0D06  
                                         u2550 0C3A                                           u2470 07A5  
                                         u4230 0CF5                                           u4150 0CA7  
                                         u4070 0C6F                                           u2711 049B  
                                         u3191 0228                                           u3095 0160  
                                         u2631 0BAA                                           u3351 0D72  
                                         u3335 0D63                                           u3271 0D05  
                                         u4055 0750                                           u2551 0C39  
                                         u2535 0C16                                           u2471 07A4  
                                         u4231 0CF4                                           u4151 0CA6  
                                         u4071 0C6E                                           u2720 04A2  
                                         u2640 0BB2                                           u3360 0D77  
                                         u3280 0D26                                           u2560 0C64  
                                         u2480 07B3                                           u4160 0CAD  
                                         u4080 0C75                                           u2721 04A1  
                                         u2641 0BB1                                           u2625 0B92  
                                         u3361 0D76                                           u3281 0D25  
                                         u4065 0773                                           u2561 0C63  
                                         u2545 0C26                                           u2481 07B2  
                                         u4161 0CAC                                           u4081 0C74  
                                         u2730 04A7                                           u3370 0D8B  
                                         u2490 07C3                                           u4170 0CB3  
                                         u4090 0C7B                                           u2731 04A6  
                                         u2555 0C36                                           u2491 07C2  
                                         u2475 07A1                                           u4171 0CB2  
                                         u4091 0C7A                                           u2900 05A7  
                                         u2820 0555                                           u2740 04C7  
                                         u2660 0BC2                                           u3380 0D9A  
                                         u1940 09BC                                           u4180 0CB9  
                                         u2901 05A6                                           u2821 0554  
                                         u2805 0544                                           u2741 04C6  
                                         u2661 0BC1                                           u3381 0D99  
                                         u1941 09BB                                           u2565 0C60  
                                         u2485 07AF                                           u4181 0CB8  
                                         u2910 05AC                                           u2750 04CD  
                                         u2670 0BC9                                           u3390 0D9E  
                                         u1950 0E78                                           u4190 0CBF  
                                         u2911 05AB                                           u2815 054B  
                                         u2751 04CC                                           u2671 0BC8  
                                         u2655 0BB4                                           u3391 0D9D  
                                         u3375 0D87                                           u3295 0D39  
                                         u4247 0A1B                                           u1951 0E77  
                                         u2495 07BF                                           u4191 0CBE  
                                         u2920 05C0                                           u2840 056F  
                                         u2760 04D2                                           u1960 0E8F  
                                         u3800 0308                                           u2921 05BF  
                                         u2841 056E                                           u2761 04D1  
                                         u1961 0E8E                                           u3801 0307  
                                         u1945 09B8                                           u2930 05C7  
                                         u2850 0582                                           u2770 04ED  
                                         u2690 0BD8                                           u1970 0EB0  
                                         u3810 031E                                           u2931 05C6  
                                         u2851 0581                                           u2835 0557  
                                         u2771 04EC                                           u2691 0BD7  
                                         u1971 0EAF                                           u1955 0E74  
                                         u3811 031D                                           u2940 05CD  
                                         u2860 058A                                           u2780 050B  
                                         u3740 092B                                           u1980 0EC6  
                                         u3900 03DE                                           u3820 0328  
                                         u2941 05CC                                           u2861 0589  
                                         u2845 056B                                           u2781 050A  
                                         u2685 0BCB                                           u3741 092A  
                                         u1981 0EC5                                           u1965 0E8B  
                                         u3901 03DD                                           u3821 0327  
                                         u3805 0304                                           u2950 05D9  
                                         u2790 0543                                           u3750 0931  
                                         u1990 0EE1                                           u3910 03F6  
                                         u3830 0345                         get_pulse@capturedValue 0079  
                                         u2951 05D8                                           u2791 0542  
                                         u3751 0930                                           u1991 0EE0  
                                         u1975 0EAC                                           u3911 03F5  
                                         u3831 0344                                           u2960 05E7  
                                         u2880 0597                                           u3920 0400  
                                         u3840 035D                                           u3760 02B2  
                                         u2881 0596                                           u1985 0EC2  
                                         u3921 03FF                                           u3905 03DA  
                                         u3841 035C                                           u3761 02B1  
                                         u2970 0602                                           u3930 0419  
                                         u3850 0381                                           u2971 0601  
                                         u2875 058D                                           u1995 0EDD  
                                         u3931 0418                                           u3851 0380  
                                         u3835 0341                                           u2980 061D  
                                         u3940 042F                                           u3860 039D  
                                         u3780 02E4                                           u2981 061C  
                                         u2965 05E3                                           u3941 042E  
                                         u3861 039C                                           u3781 02E3  
                                         i1l70 08AA                                           u2990 0632  
                                         u3950 0453                                           u3870 03A4  
                                         u3790 02EF                                           u2991 0631  
                                         u2975 05FE                                           u2895 0599  
                                         u3951 0452                                           u3935 0415  
                                         u3871 03A3                                           u3855 037D  
                                         u3791 02EE                                           u3775 02BC  
                                         i1l48 0916                                           u3960 046A  
                                         u3880 03BA                                           u2985 0619  
                                         u3961 0469                                           u3881 03B9  
                                         u3865 0399                                           u3785 02E0  
                                         u3970 0487                                           u3890 03C5  
                                         i1l67 08A2                                           u3971 0486  
                                         u3955 044F                                           u3891 03C4  
                                         u3980 09D1                                           u3981 09D0  
                                         u3965 0466                                           u3885 03B6  
                                         u3975 0483                                           u3995 09D6  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _WPUA 020C                                           _WPUB 020D  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         abs@a 0020                                           _main 0AEF  
                                         _byte 00C0                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                           start 0034  
                              ___fldiv@new_exp 005E                                  __CFG_MCLRE$ON 0000  
                   ??_TMR4_SetInterruptHandler 0022                                          ??_abs 0022  
                             comunicacao@speed 0067                                ?_FVR_Initialize 0077  
                                ?_EUSART_Write 0077                 __size_of_OSCILLATOR_Initialize 0007  
                          __size_of_IOCBF0_ISR 000F                            __size_of_IOCBF3_ISR 000F  
                __end_of_OSCILLATOR_Initialize 0837                            __size_of_IOCBF4_ISR 000F  
                          __size_of_IOCBF5_ISR 000F                                  ___fltol@sign1 0029  
                                        ?_main 0077                                __end_of___fldiv 0642  
                                __CFG_WDTE$OFF 0000                         ??_CCP4_DefaultCallBack 007B  
                              __end_of___flmul 02AA                                __end_of___fltol 0BE9  
                                        _T1CON 0018                                          _T2CON 001C  
                                        _T4CON 0417                                          i1l160 0955  
                                        i1l312 0032                                          i1l313 0032  
                                        i1l305 0012                                          i1l250 07FE  
                                        i1l340 0814                                          i1l244 0925  
                                        i1l308 0024                                          i1l421 0A0A  
                                        i1l431 0815                                          i1l425 08DA  
                                        i1l441 0002                                          i1l346 0991  
                                        i1l435 08E9                                          i1l451 0003  
                                        i1l445 08F8                                          i1l461 07FF  
                                        i1l455 0907                                          i1l581 0AEE  
                                        i1l590 08C0                                          i1l584 082F  
                                        i1l593 08CB                                          i1l587 08B5  
                                        i1l599 0ABA                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                 update@i_1261 0029                                   update@i_1262 002D  
                                        _TXSTA 019E                                _TMR4_Initialize 0968  
                             __end_of_TMR4_ISR 0926                                          _andar 00CF  
                      __end_of_PIN_MANAGER_IOC 0A0B                                 _WDT_Initialize 081A  
                      __end_of_PWM3_Initialize 0898                        __end_of_TMR1_Initialize 0945  
                                        pclath 000A                                __end_of_sensor1 0830  
                              __end_of_sensor2 08B6                                __end_of_sensor3 08C1  
                              __end_of_sensor4 08CC                                          status 0003  
                      __end_of_CCP4_Initialize 0968                                          wtemp0 007E  
                              _TMR1_WriteTimer 0945                                ??_gerenciamento 002F  
                              __initialization 0036                                   __end_of_main 0B30  
                               ??_EUSART_Write 0077                        __end_of_TMR2_Initialize 0847  
                  ?_INTERRUPT_InterruptManager 0077                                         ??_main 006F  
                               __CFG_PLLEN$OFF 0000                        _IOCBF0_InterruptHandler 00E6  
                       __end_of_WDT_Initialize 081E                               ?_CCP4_CaptureISR 0077  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0142  
                 ??_IOCBF5_SetInterruptHandler 0022                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR3H 0312  
                                       _CCPR4H 0319                                         _CCPR3L 0311  
                                       _CCPR4L 0318                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 0823  
                                       _BORCON 0116                                         _T1GCON 0019  
                      TMR1_WriteTimer@timerVal 0077                                         i1l2521 08A7  
                                       i1l2531 094F                                         i1l2523 0945  
                                       i1l2525 094A                                         i1l2533 0951  
                                       i1l2535 0953                                         i1l2527 094B  
                                       i1l2551 082C                                         i1l2519 08A2  
                                       i1l3511 0006                                         i1l2529 094D  
                                       i1l2801 0AAC                                         i1l2553 08AB  
                                       i1l3361 0920                                         i1l3521 0020  
                                       i1l3513 000A                                         i1l2803 0AB2  
                                       i1l2555 08B6                                         i1l3371 09FA  
                                       i1l3363 09EA                                         i1l2491 0908  
                                       i1l3523 0029                                         i1l3515 000E  
                                       i1l2805 0AB6                                         i1l3381 097E  
                                       i1l2549 0829                                         i1l2557 08C1  
                                       i1l3373 09FF                                         i1l3365 09EF  
                                       i1l2493 0909                                         i1l3357 0917  
                                       i1l3525 002E                                         i1l3517 0016  
                                       i1l3383 0987                                         i1l2751 08CC  
                                       i1l3375 0A02                                         i1l3367 09F2  
                                       i1l2495 090E                                         i1l3359 0919  
                                       i1l3519 001B                                         i1l2753 08D3  
                                       i1l2761 08E7                                         i1l3377 0A07  
                                       i1l3369 09F7                                         i1l2497 0913  
                                       i1l3379 097C                                         i1l2755 08D8  
                                       i1l2763 08EA                                         i1l2771 0900  
                                       i1l2499 0915                                         i1l2757 08DB  
                                       i1l2765 08F1                                         i1l2773 0905  
                                       i1l2781 0AC7                                         i1l2759 08E2  
                                       i1l2767 08F6                                         i1l2791 0AEB  
                                       i1l2783 0ACA                                         u220_20 0AD2  
                                       i1l2793 0A96                                         i1l2769 08F9  
                                       i1l2785 0AD2                                         u220_21 0AD1  
                                       i1l2777 0ABB                                         i1l2795 0A9C  
                                       i1l2787 0ADA                                         i1l2779 0AC0  
                                       i1l2797 0AA1                                         i1l2789 0ADE  
                                       i1l2799 0AA7                                         u221_20 0AEB  
                                       u221_21 0AEA                                         u221_25 0AE7  
                                       u222_20 0AA7                                         u214_20 08D3  
                                       u222_21 0AA6                                         u214_21 08D2  
                                       u223_20 0AB2                                         u215_20 08E2  
                                       u223_21 0AB1                                         u215_21 08E1  
                                       u224_20 0AB6                                         u216_20 08F1  
                                       u224_21 0AB5                                         u216_21 08F0  
                                       u217_20 0900                                         u217_21 08FF  
                                       u219_20 0AC7                                         _FVRCON 0117  
                                       u219_21 0AC6                                         u340_20 0920  
                                       u340_21 091F                     __end_of_EUSART_is_tx_ready 0917  
                                       u341_20 09EF                                         u341_21 09EE  
                                       u342_20 09F7                                         u342_21 09F6  
                                       u343_20 09FF                                         u343_21 09FE  
                                       u344_20 0A07                                         u192_20 08A7  
                                       u344_21 0A06                                         u192_21 08A6  
                                       u193_20 094A                                         u193_21 0949  
                                       u370_20 001B                                         u370_21 001A  
                                       u371_20 0020                                         u371_21 001F  
                                       u188_20 090E                                         u372_20 0029  
                                       u188_21 090D                                         u372_21 0028  
                                       u189_20 0913                                         u373_20 002E  
                                       u189_21 0912                                         u373_21 002D  
                              _max_origem_down 0072                                         u367_20 000A  
                                       u367_21 0009                                         u368_20 000E  
                                       u368_21 000D                                         u369_20 0016  
                                       u369_21 0015                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                               __end_of___xxtofl 0DA8  
                               __CFG_PWRTE$OFF 0000                               __end_of_col_down 0C65  
                                 _CCPTMRS0bits 029E                    __size_of_PWM3_LoadDutyValue 001C  
                                       ___wmul 09CA                                      ??___fldiv 0054  
                               __CFG_STVREN$ON 0000                                      ??___flmul 003A  
                             __end_of_controle 0782                                      ??___fltol 0024  
                                       _col_up 0782                               __end_of_max_down 0E59  
                      __end_of_TMR4_Initialize 097C                                         _min_up 0E59  
                                _CCP4_CallBack 00E8                                         _update 02AA  
                                       _pulses 00DE            __size_of_IOCBF5_SetInterruptHandler 0009  
         __end_of_TMR4_DefaultInterruptHandler 07FF          __size_of_TMR4_DefaultInterruptHandler 0001  
                 _TMR4_DefaultInterruptHandler 07FE                             __size_of__Umul8_16 0024  
                              ?_WDT_Initialize 0077                                      ??_sensor1 0077  
                                    ??_sensor2 0077                                      ??_sensor3 0077  
                                    ??_sensor4 0077                       ADC_GetConversion@channel 0023  
   IOCBF5_SetInterruptHandler@InterruptHandler 0020     IOCBF4_SetInterruptHandler@InterruptHandler 0020  
   IOCBF3_SetInterruptHandler@InterruptHandler 0020     IOCBF0_SetInterruptHandler@InterruptHandler 0020  
     TMR4_SetInterruptHandler@InterruptHandler 0020                               ?_PIN_MANAGER_IOC 0077  
                         __size_of_comunicacao 00D5                        __end_of_TMR1_WriteTimer 0956  
                                 ??_IOCBF0_ISR 0077                                   ??_IOCBF3_ISR 0078  
                                 ??_IOCBF4_ISR 0078                                   ??_IOCBF5_ISR 0078  
                             ?_TMR1_Initialize 0077                               ?_PWM3_Initialize 0077  
                                 ___xxtofl@arg 002E                           __size_of_EUSART_Read 000F  
                                 ___xxtofl@exp 002D                              _SYSTEM_Initialize 0A2C  
                                 ___xxtofl@val 0024                        __end_of__initialization 004F  
                             ?_CCP4_Initialize 0077                             ?_SYSTEM_Initialize 0077  
                                   ___fltol@f1 0020                       __end_of_CCP4_SetCallBack 0850  
                               __pcstackCOMMON 0077                            ??_SYSTEM_Initialize 0022  
                                    ?_TMR4_ISR 0077         __end_of_IOCBF0_DefaultInterruptHandler 0816  
      __size_of_IOCBF0_DefaultInterruptHandler 0001                 _IOCBF0_DefaultInterruptHandler 0815  
                             ?_TMR2_Initialize 0077                             __end_of_IOCBF0_ISR 08DB  
                           __end_of_IOCBF3_ISR 08EA                             __end_of_IOCBF4_ISR 08F9  
                           __end_of_IOCBF5_ISR 0908                                 _OPTION_REGbits 0095  
                ?_TMR4_DefaultInterruptHandler 0077                ??_EUSART_SetOverrunErrorHandler 0022  
       __end_of_IOCBF3_DefaultInterruptHandler 0003        __size_of_IOCBF3_DefaultInterruptHandler 0001  
               _IOCBF3_DefaultInterruptHandler 0002                    ?_IOCBF4_SetInterruptHandler 0020  
                           __size_of_get_pulse 0025                      __end_of_SYSTEM_Initialize 0A4E  
                                   __pbssBANK0 006F                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 08AB  
                                   _and_ating2 00C5                                     _and_origem 00D7  
                        _TMR4_InterruptHandler 00EA                              __end_of__Umul8_16 0A96  
                             ??_FVR_Initialize 0020                                     __pmaintext 0AEF  
                                _min_fila_down 00C9                                        ?___wmul 0020  
                                   ??_TMR4_ISR 007B                                     __pintentry 0004  
                                      ?_col_up 0077                             __size_of_send_data 0034  
                                      _CCP3CON 0313                                        _CCP4CON 031A  
                                      _BAUDCON 019F                                        ?_min_up 0077  
                             ?_TMR4_Initialize 0077               ??_IOCBF4_DefaultInterruptHandler 0077  
              ?_IOCBF4_DefaultInterruptHandler 0077                                        _APFCON0 011D  
                                      _APFCON1 011E                                        ?_update 0077  
                      __size_of_ADC_Initialize 0008                                      ?___xxtofl 0024  
           __end_of_IOCBF5_SetInterruptHandler 088F                     _IOCBF5_SetInterruptHandler 0886  
                                      _OSCTUNE 0098                                      ?_col_down 0077  
                     ??_EUSART_SetErrorHandler 0022                               ?_TMR1_WriteTimer 0077  
                                    ?_controle 0077                                      ?_max_down 0077  
                        controle@max_dutyValue 0058                           _ADC_InterruptHandler 00D9  
                                _min_origem_up 0070                              __end_of_get_pulse 0ABB  
                                      ___fldiv 048E                                        ___flmul 0053  
                                      ___fltol 0B74                                __size_of___wmul 0020  
                              __size_of_col_up 007C                                        _and_dst 0074  
                              __size_of_min_up 00D2                                        __ptext1 0C65  
                                      __ptext2 0782                                        __ptext3 0BE9  
                                      __ptext4 09AE                                        __ptext5 0642  
                                      __ptext6 02AA                                        __ptext7 0E59  
                                      __ptext8 0DA8                                        __ptext9 081E  
                                      _fila_up 00B0                                __size_of_update 01E4  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 0830  
                                    _T2CONbits 001C                                   __size_of_abs 001C  
                                   ??___xxtofl 0028                  __size_of_CCP4_DefaultCallBack 0001  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 0022  
            __size_of_TMR4_SetInterruptHandler 0009                                      _IOCBFbits 0396  
                    ?_TMR4_SetInterruptHandler 0020                                      _IOCBNbits 0395  
                                      _sensor1 0829                                        _sensor2 08AB  
                                      _sensor3 08B6                                        _sensor4 08C1  
                                      _temp_mt 0144                                        _sentido 00D5  
                                    _IOCBPbits 0394                                     ??_col_down 0025  
                   __size_of_SYSTEM_Initialize 0022                                        clrloop0 0824  
                         end_of_initialization 004F                              __end_of_send_data 0AEF  
               ??_TMR4_DefaultInterruptHandler 0077                                     ??_controle 004C  
        __end_of_EUSART_SetOverrunErrorHandler 086B         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 0862                                     ??_max_down 0020  
                                      min_up@i 0023                              _EUSART_Initialize 0A4E  
                        __end_of_gerenciamento 0CFB                             ?_EUSART_Initialize 0077  
                                    _RCSTAbits 019D                                  controle@count 005C  
                           _EUSART_is_rx_ready 081E                                        update@i 002B  
                                controle@route 0052                             _EUSART_is_tx_ready 0908  
                          ??_EUSART_Initialize 0022                               ??_WDT_Initialize 0020  
                          ?_EUSART_is_rx_ready 0077                            ?_EUSART_is_tx_ready 0077  
                        controle@min_dutyValue 0056                               __CFG_FOSC$INTOSC 0000  
                                ___xxtofl@sign 002C                          __size_of_EUSART_Write 000A  
                                  ___fldiv@grs 0060                                    ___fldiv@rem 0059  
                 ??_IOCBF0_SetInterruptHandler 0022                   ??_IOCBF3_SetInterruptHandler 0022  
              __size_of_EUSART_SetErrorHandler 0009                                    ___flmul@grs 0040  
                    __end_of_EUSART_Initialize 0A72                           ??_EUSART_is_rx_ready 0020  
                         ??_EUSART_is_tx_ready 0077                                      _TXSTAbits 019E  
                     __size_of_CCP4_CaptureISR 0016              CCP4_DefaultCallBack@capturedValue 0079  
                   __end_of_PWM3_LoadDutyValue 09AE                              controle@dutyValue 005A  
                            ?_CCP4_SetCallBack 0020                             ??_CCP4_SetCallBack 0022  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 09EA  
                                 _EUSART_Write 08A1                                 __end_of_col_up 07FE  
                            __size_of_TMR4_ISR 000F                                 _ADC_Initialize 0837  
          __size_of_IOCBF0_SetInterruptHandler 0009            __size_of_IOCBF3_SetInterruptHandler 0009  
                       ?_OSCILLATOR_Initialize 0077                                 __end_of_min_up 0F2B  
                               __end_of_update 048E                                  ??_comunicacao 0066  
                          start_initialization 0036                __size_of_PIN_MANAGER_Initialize 0044  
                                  __end_of_abs 09CA                                  ??_EUSART_Read 0020  
                       _EUSART_is_tx_ready$167 0077                       __size_of_PIN_MANAGER_IOC 0021  
               ?_EUSART_SetOverrunErrorHandler 0020                       __size_of_PWM3_Initialize 0009  
                     __size_of_TMR1_Initialize 0010                     _EUSART_FramingErrorHandler 00EE  
                                     ??___wmul 0024                         _EUSART_SetErrorHandler 0850  
                     __size_of_CCP4_Initialize 0012                         __end_of_ADC_Initialize 083F  
                                    __Umul8_16 0A72                                       ??_col_up 0025  
                                     ??_min_up 0020                                       ??_update 0025  
                        CCP4_CaptureISR@module 007C                                      ___fldiv@a 004C  
                                    ___fldiv@b 0050                                      ___flmul@a 0036  
                                    ___flmul@b 0032                                    __pbssCOMMON 0070  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                     __size_of_TMR2_Initialize 0008                    ?_IOCBF5_SetInterruptHandler 0020  
                            __size_of___xxtofl 00AD                            comunicacao@position 006B  
       __end_of_IOCBF4_DefaultInterruptHandler 0004        __size_of_IOCBF4_DefaultInterruptHandler 0001  
               _IOCBF4_DefaultInterruptHandler 0003                            __end_of_comunicacao 1000  
                            __size_of_col_down 007C                     __size_of_EUSART_Initialize 0024  
                          __end_of_EUSART_Read 0935                              __size_of_controle 0140  
                                    __pnvBANK1 00E0                                      __pnvBANK2 0140  
                                    _and_ating 006F                                      _ccp_value 00DC  
                            __size_of_max_down 00B1                        _IOCBF3_InterruptHandler 00E4  
                       _PIN_MANAGER_Initialize 0B30               __end_of_TMR4_SetInterruptHandler 08A1  
                                     ?___fldiv 004C                              ??_CCP4_CaptureISR 007B  
                                     ?___flmul 0032                                       ?___fltol 0020  
                                   ?__Umul8_16 0020                                      _fila_down 0130  
                              ?_ADC_Initialize 0077                   ??_INTERRUPT_InterruptManager 007E  
                                   send_data@i 0079                                      _distancia 00CD  
                                    _get_pulse 0A96               ??_IOCBF5_DefaultInterruptHandler 0077  
              ?_IOCBF5_DefaultInterruptHandler 0077                                      _aux_tempo 00D3  
           __end_of_IOCBF0_SetInterruptHandler 0874                     _IOCBF0_SetInterruptHandler 086B  
           __end_of_IOCBF3_SetInterruptHandler 087D                     _IOCBF3_SetInterruptHandler 0874  
                                     ?_sensor1 0077                                       ?_sensor2 0077  
                                     ?_sensor3 0077                                       ?_sensor4 0077  
                     __size_of_TMR4_Initialize 0014                                 ___wmul@product 0024  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0020  
                                    clear_ram0 0823                   __end_of_CCP4_DefaultCallBack 0815  
                                    _send_data 0ABB                                       _PIE3bits 0093  
                            _eusartRxLastError 0076                       __size_of_TMR1_WriteTimer 0011  
          __size_of_INTERRUPT_InterruptManager 0030                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0022                                       _PIR3bits 0013  
                                    _origem_up 0120              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR4_ISR 0917                              ??_PIN_MANAGER_IOC 0078  
                            ??_TMR1_Initialize 0020                              ??_PWM3_Initialize 0020  
                                   ?_get_pulse 0079                                     _ADCON0bits 009D  
                                    _out_value 00C7                              ___wmul@multiplier 0020  
                      __size_of_FVR_Initialize 0004                              ??_CCP4_Initialize 0022  
                                  _comunicacao 0F2B                                    _EUSART_Read 0926  
                                    controle@a 0054                              ??_TMR2_Initialize 0020  
                                   ?_send_data 0077                                      max_down@i 0023  
                            _ADC_GetConversion 0A0B                        ??_OSCILLATOR_Initialize 0020  
                                  ??__Umul8_16 0022                            _EUSART_ErrorHandler 0140  
                           ?_ADC_GetConversion 0020                                    _max_fila_up 00CB  
                             __size_of___fldiv 01B4                               __size_of___flmul 0257  
                             __size_of___fltol 0075                       _TMR4_SetInterruptHandler 0898  
                           _PWM3_LoadDutyValue 0992                            ??_ADC_GetConversion 0022  
                      _IOCBF4_InterruptHandler 00E2                                       ___xxtofl 0CFB  
                    __size_of_CCP4_SetCallBack 0009                                       __ptext10 0926  
                                     __ptext11 09CA                                       __ptext20 0A2C  
                                     __ptext12 0992                                       __ptext21 081A  
                                     __ptext13 0A0B                                     _T1GCONbits 0019  
                                     __ptext30 0874                                       __ptext22 0968  
                                     __ptext14 0F2B                                       __ptext31 086B  
                                     __ptext23 0898                                       __ptext15 0CFB  
                                     __ptext40 0837                                       __ptext32 0830  
                                     __ptext24 083F                                       __ptext16 0B74  
                                     __ptext33 0816                                       __ptext25 0935  
                                     __ptext17 0053                                       __ptext50 08C1  
                                     __ptext42 0917                                       __ptext34 0A4E  
                                     __ptext26 088F                                       __ptext18 0A72  
                                     __ptext51 08EA                                       __ptext43 07FE  
                                     __ptext35 0862                                       __ptext27 0B30  
                                     __ptext19 048E                                       __ptext60 097C  
                                     __ptext52 0003                                       __ptext44 0ABB  
                                     __ptext36 0859                                       __ptext28 0886  
                                     __ptext61 0814                                       __ptext53 08B6  
                                     __ptext45 0908                                       __ptext37 0850  
                                     __ptext29 087D                                       __ptext62 0A96  
                                     __ptext54 08DB                                       __ptext46 08A1  
                                     __ptext38 0956                                       __ptext63 0945  
                                     __ptext55 0002                                       __ptext47 09EA  
                                     __ptext39 0847                                       __ptext56 08AB  
                                     __ptext48 08F9                                       __ptext57 08CC  
                                     __ptext49 07FF                                       __ptext58 0815  
                          ?_PWM3_LoadDutyValue 0020                                       __ptext59 0829  
                       __size_of_gerenciamento 0096                               __size_of_sensor1 0007  
                             __size_of_sensor2 000B                               __size_of_sensor3 000B  
                             __size_of_sensor4 000B                                       _col_down 0BE9  
                 ??_IOCBF4_SetInterruptHandler 0022                                     _IOCBF0_ISR 08CC  
                                   _IOCBF3_ISR 08DB                                     _IOCBF4_ISR 08EA  
                                   _IOCBF5_ISR 08F9                                       _controle 0642  
                                     _max_down 0DA8                              ??_TMR4_Initialize 0022  
                  __size_of_EUSART_is_rx_ready 0005                                  __size_of_main 0041  
                  __size_of_EUSART_is_tx_ready 000F                      __end_of_ADC_GetConversion 0A2C  
                      ?_EUSART_SetErrorHandler 0020                                       _sentido2 00D1  
EUSART_SetOverrunErrorHandler@interruptHandler 0020                           ??_PWM3_LoadDutyValue 0022  
                                     int$flags 007E                                controle@destiny 0050  
           __end_of_INTERRUPT_InterruptManager 0034                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0862         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 0859                              ??_TMR1_WriteTimer 0079  
                                  ??_get_pulse 007B            __size_of_IOCBF4_SetInterruptHandler 0009  
                                    update@aux 0028                                     _INTCONbits 000B  
                         _CCP4_DefaultCallBack 0814                                     _FVRCONbits 0117  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                              _CCP4_CaptureISR 097C                        ?_PIN_MANAGER_Initialize 0077  
               __end_of_EUSART_SetErrorHandler 0859                              __CFG_CLKOUTEN$OFF 0000  
                                  ??_send_data 0078                               ??_ADC_Initialize 0020  
                                _gerenciamento 0C65                                    _origem_down 00A0  
EUSART_SetFramingErrorHandler@interruptHandler 0020                    PWM3_LoadDutyValue@dutyValue 0020  
                               _FVR_Initialize 0816                         __Umul8_16@multiplicand 0020  
                        ?_CCP4_DefaultCallBack 0079                    ?_IOCBF0_SetInterruptHandler 0020  
                  ?_IOCBF3_SetInterruptHandler 0020                                    ?_IOCBF0_ISR 0077  
                           EUSART_Write@txData 0077                                    ?_IOCBF3_ISR 0077  
                                  ?_IOCBF4_ISR 0077                                    ?_IOCBF5_ISR 0077  
               __end_of_PIN_MANAGER_Initialize 0B74               ??_IOCBF0_DefaultInterruptHandler 0077  
              ?_IOCBF0_DefaultInterruptHandler 0077         __end_of_IOCBF5_DefaultInterruptHandler 0800  
      __size_of_IOCBF5_DefaultInterruptHandler 0001                 _IOCBF5_DefaultInterruptHandler 07FF  
                              _PIN_MANAGER_IOC 09EA                           __Umul8_16@multiplier 0028  
                   __size_of_ADC_GetConversion 0021                        _IOCBF5_InterruptHandler 00E0  
                              _TMR1_Initialize 0935                                _PWM3_Initialize 088F  
                            __Umul8_16@product 0024                                 ?_gerenciamento 0077  
