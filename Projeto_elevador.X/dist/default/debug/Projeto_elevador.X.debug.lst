

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec 13 14:01:31 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     5                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	dabs	1,0x7E,2
    79  0000                     
    80                           ; Version 2.10
    81                           ; Generated 31/07/2019 GMT
    82                           ; 
    83                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC16F1827 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  008C                     	;# 
   144  008D                     	;# 
   145  0091                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0095                     	;# 
   150  0096                     	;# 
   151  0097                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009A                     	;# 
   155  009B                     	;# 
   156  009B                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  0111                     	;# 
   163  0112                     	;# 
   164  0113                     	;# 
   165  0114                     	;# 
   166  0115                     	;# 
   167  0116                     	;# 
   168  0117                     	;# 
   169  0118                     	;# 
   170  0119                     	;# 
   171  011A                     	;# 
   172  011B                     	;# 
   173  011D                     	;# 
   174  011E                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  0191                     	;# 
   178  0191                     	;# 
   179  0192                     	;# 
   180  0193                     	;# 
   181  0193                     	;# 
   182  0193                     	;# 
   183  0194                     	;# 
   184  0195                     	;# 
   185  0196                     	;# 
   186  0199                     	;# 
   187  019A                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019B                     	;# 
   192  019C                     	;# 
   193  019C                     	;# 
   194  019D                     	;# 
   195  019E                     	;# 
   196  019F                     	;# 
   197  020C                     	;# 
   198  020D                     	;# 
   199  0211                     	;# 
   200  0211                     	;# 
   201  0212                     	;# 
   202  0212                     	;# 
   203  0213                     	;# 
   204  0213                     	;# 
   205  0214                     	;# 
   206  0214                     	;# 
   207  0215                     	;# 
   208  0215                     	;# 
   209  0215                     	;# 
   210  0216                     	;# 
   211  0216                     	;# 
   212  0217                     	;# 
   213  0217                     	;# 
   214  0219                     	;# 
   215  021A                     	;# 
   216  021B                     	;# 
   217  021C                     	;# 
   218  021D                     	;# 
   219  021E                     	;# 
   220  021F                     	;# 
   221  0291                     	;# 
   222  0291                     	;# 
   223  0292                     	;# 
   224  0293                     	;# 
   225  0294                     	;# 
   226  0295                     	;# 
   227  0295                     	;# 
   228  0296                     	;# 
   229  0298                     	;# 
   230  0298                     	;# 
   231  0299                     	;# 
   232  029A                     	;# 
   233  029B                     	;# 
   234  029C                     	;# 
   235  029C                     	;# 
   236  029D                     	;# 
   237  029E                     	;# 
   238  029E                     	;# 
   239  0311                     	;# 
   240  0311                     	;# 
   241  0312                     	;# 
   242  0313                     	;# 
   243  0318                     	;# 
   244  0318                     	;# 
   245  0319                     	;# 
   246  031A                     	;# 
   247  0394                     	;# 
   248  0395                     	;# 
   249  0396                     	;# 
   250  039A                     	;# 
   251  039C                     	;# 
   252  039D                     	;# 
   253  039E                     	;# 
   254  039F                     	;# 
   255  0415                     	;# 
   256  0416                     	;# 
   257  0417                     	;# 
   258  041C                     	;# 
   259  041D                     	;# 
   260  041E                     	;# 
   261  0FE4                     	;# 
   262  0FE5                     	;# 
   263  0FE6                     	;# 
   264  0FE7                     	;# 
   265  0FE8                     	;# 
   266  0FE9                     	;# 
   267  0FEA                     	;# 
   268  0FEB                     	;# 
   269  0FED                     	;# 
   270  0FEE                     	;# 
   271  0FEF                     	;# 
   272  0000                     	;# 
   273  0001                     	;# 
   274  0002                     	;# 
   275  0003                     	;# 
   276  0004                     	;# 
   277  0005                     	;# 
   278  0006                     	;# 
   279  0007                     	;# 
   280  0008                     	;# 
   281  0009                     	;# 
   282  000A                     	;# 
   283  000B                     	;# 
   284  000C                     	;# 
   285  000D                     	;# 
   286  0011                     	;# 
   287  0012                     	;# 
   288  0013                     	;# 
   289  0014                     	;# 
   290  0015                     	;# 
   291  0016                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  001A                     	;# 
   297  001B                     	;# 
   298  001C                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  0091                     	;# 
   304  0092                     	;# 
   305  0093                     	;# 
   306  0094                     	;# 
   307  0095                     	;# 
   308  0096                     	;# 
   309  0097                     	;# 
   310  0098                     	;# 
   311  0099                     	;# 
   312  009A                     	;# 
   313  009B                     	;# 
   314  009B                     	;# 
   315  009C                     	;# 
   316  009D                     	;# 
   317  009E                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  0111                     	;# 
   321  0112                     	;# 
   322  0113                     	;# 
   323  0114                     	;# 
   324  0115                     	;# 
   325  0116                     	;# 
   326  0117                     	;# 
   327  0118                     	;# 
   328  0119                     	;# 
   329  011A                     	;# 
   330  011B                     	;# 
   331  011D                     	;# 
   332  011E                     	;# 
   333  018C                     	;# 
   334  018D                     	;# 
   335  0191                     	;# 
   336  0191                     	;# 
   337  0192                     	;# 
   338  0193                     	;# 
   339  0193                     	;# 
   340  0193                     	;# 
   341  0194                     	;# 
   342  0195                     	;# 
   343  0196                     	;# 
   344  0199                     	;# 
   345  019A                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019B                     	;# 
   350  019C                     	;# 
   351  019C                     	;# 
   352  019D                     	;# 
   353  019E                     	;# 
   354  019F                     	;# 
   355  020C                     	;# 
   356  020D                     	;# 
   357  0211                     	;# 
   358  0211                     	;# 
   359  0212                     	;# 
   360  0212                     	;# 
   361  0213                     	;# 
   362  0213                     	;# 
   363  0214                     	;# 
   364  0214                     	;# 
   365  0215                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0216                     	;# 
   369  0216                     	;# 
   370  0217                     	;# 
   371  0217                     	;# 
   372  0219                     	;# 
   373  021A                     	;# 
   374  021B                     	;# 
   375  021C                     	;# 
   376  021D                     	;# 
   377  021E                     	;# 
   378  021F                     	;# 
   379  0291                     	;# 
   380  0291                     	;# 
   381  0292                     	;# 
   382  0293                     	;# 
   383  0294                     	;# 
   384  0295                     	;# 
   385  0295                     	;# 
   386  0296                     	;# 
   387  0298                     	;# 
   388  0298                     	;# 
   389  0299                     	;# 
   390  029A                     	;# 
   391  029B                     	;# 
   392  029C                     	;# 
   393  029C                     	;# 
   394  029D                     	;# 
   395  029E                     	;# 
   396  029E                     	;# 
   397  0311                     	;# 
   398  0311                     	;# 
   399  0312                     	;# 
   400  0313                     	;# 
   401  0318                     	;# 
   402  0318                     	;# 
   403  0319                     	;# 
   404  031A                     	;# 
   405  0394                     	;# 
   406  0395                     	;# 
   407  0396                     	;# 
   408  039A                     	;# 
   409  039C                     	;# 
   410  039D                     	;# 
   411  039E                     	;# 
   412  039F                     	;# 
   413  0415                     	;# 
   414  0416                     	;# 
   415  0417                     	;# 
   416  041C                     	;# 
   417  041D                     	;# 
   418  041E                     	;# 
   419  0FE4                     	;# 
   420  0FE5                     	;# 
   421  0FE6                     	;# 
   422  0FE7                     	;# 
   423  0FE8                     	;# 
   424  0FE9                     	;# 
   425  0FEA                     	;# 
   426  0FEB                     	;# 
   427  0FED                     	;# 
   428  0FEE                     	;# 
   429  0FEF                     	;# 
   430  0000                     	;# 
   431  0001                     	;# 
   432  0002                     	;# 
   433  0003                     	;# 
   434  0004                     	;# 
   435  0005                     	;# 
   436  0006                     	;# 
   437  0007                     	;# 
   438  0008                     	;# 
   439  0009                     	;# 
   440  000A                     	;# 
   441  000B                     	;# 
   442  000C                     	;# 
   443  000D                     	;# 
   444  0011                     	;# 
   445  0012                     	;# 
   446  0013                     	;# 
   447  0014                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0016                     	;# 
   451  0017                     	;# 
   452  0018                     	;# 
   453  0019                     	;# 
   454  001A                     	;# 
   455  001B                     	;# 
   456  001C                     	;# 
   457  001E                     	;# 
   458  001F                     	;# 
   459  008C                     	;# 
   460  008D                     	;# 
   461  0091                     	;# 
   462  0092                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0095                     	;# 
   466  0096                     	;# 
   467  0097                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009A                     	;# 
   471  009B                     	;# 
   472  009B                     	;# 
   473  009C                     	;# 
   474  009D                     	;# 
   475  009E                     	;# 
   476  010C                     	;# 
   477  010D                     	;# 
   478  0111                     	;# 
   479  0112                     	;# 
   480  0113                     	;# 
   481  0114                     	;# 
   482  0115                     	;# 
   483  0116                     	;# 
   484  0117                     	;# 
   485  0118                     	;# 
   486  0119                     	;# 
   487  011A                     	;# 
   488  011B                     	;# 
   489  011D                     	;# 
   490  011E                     	;# 
   491  018C                     	;# 
   492  018D                     	;# 
   493  0191                     	;# 
   494  0191                     	;# 
   495  0192                     	;# 
   496  0193                     	;# 
   497  0193                     	;# 
   498  0193                     	;# 
   499  0194                     	;# 
   500  0195                     	;# 
   501  0196                     	;# 
   502  0199                     	;# 
   503  019A                     	;# 
   504  019B                     	;# 
   505  019B                     	;# 
   506  019B                     	;# 
   507  019B                     	;# 
   508  019C                     	;# 
   509  019C                     	;# 
   510  019D                     	;# 
   511  019E                     	;# 
   512  019F                     	;# 
   513  020C                     	;# 
   514  020D                     	;# 
   515  0211                     	;# 
   516  0211                     	;# 
   517  0212                     	;# 
   518  0212                     	;# 
   519  0213                     	;# 
   520  0213                     	;# 
   521  0214                     	;# 
   522  0214                     	;# 
   523  0215                     	;# 
   524  0215                     	;# 
   525  0215                     	;# 
   526  0216                     	;# 
   527  0216                     	;# 
   528  0217                     	;# 
   529  0217                     	;# 
   530  0219                     	;# 
   531  021A                     	;# 
   532  021B                     	;# 
   533  021C                     	;# 
   534  021D                     	;# 
   535  021E                     	;# 
   536  021F                     	;# 
   537  0291                     	;# 
   538  0291                     	;# 
   539  0292                     	;# 
   540  0293                     	;# 
   541  0294                     	;# 
   542  0295                     	;# 
   543  0295                     	;# 
   544  0296                     	;# 
   545  0298                     	;# 
   546  0298                     	;# 
   547  0299                     	;# 
   548  029A                     	;# 
   549  029B                     	;# 
   550  029C                     	;# 
   551  029C                     	;# 
   552  029D                     	;# 
   553  029E                     	;# 
   554  029E                     	;# 
   555  0311                     	;# 
   556  0311                     	;# 
   557  0312                     	;# 
   558  0313                     	;# 
   559  0318                     	;# 
   560  0318                     	;# 
   561  0319                     	;# 
   562  031A                     	;# 
   563  0394                     	;# 
   564  0395                     	;# 
   565  0396                     	;# 
   566  039A                     	;# 
   567  039C                     	;# 
   568  039D                     	;# 
   569  039E                     	;# 
   570  039F                     	;# 
   571  0415                     	;# 
   572  0416                     	;# 
   573  0417                     	;# 
   574  041C                     	;# 
   575  041D                     	;# 
   576  041E                     	;# 
   577  0FE4                     	;# 
   578  0FE5                     	;# 
   579  0FE6                     	;# 
   580  0FE7                     	;# 
   581  0FE8                     	;# 
   582  0FE9                     	;# 
   583  0FEA                     	;# 
   584  0FEB                     	;# 
   585  0FED                     	;# 
   586  0FEE                     	;# 
   587  0FEF                     	;# 
   588  0000                     	;# 
   589  0001                     	;# 
   590  0002                     	;# 
   591  0003                     	;# 
   592  0004                     	;# 
   593  0005                     	;# 
   594  0006                     	;# 
   595  0007                     	;# 
   596  0008                     	;# 
   597  0009                     	;# 
   598  000A                     	;# 
   599  000B                     	;# 
   600  000C                     	;# 
   601  000D                     	;# 
   602  0011                     	;# 
   603  0012                     	;# 
   604  0013                     	;# 
   605  0014                     	;# 
   606  0015                     	;# 
   607  0016                     	;# 
   608  0016                     	;# 
   609  0017                     	;# 
   610  0018                     	;# 
   611  0019                     	;# 
   612  001A                     	;# 
   613  001B                     	;# 
   614  001C                     	;# 
   615  001E                     	;# 
   616  001F                     	;# 
   617  008C                     	;# 
   618  008D                     	;# 
   619  0091                     	;# 
   620  0092                     	;# 
   621  0093                     	;# 
   622  0094                     	;# 
   623  0095                     	;# 
   624  0096                     	;# 
   625  0097                     	;# 
   626  0098                     	;# 
   627  0099                     	;# 
   628  009A                     	;# 
   629  009B                     	;# 
   630  009B                     	;# 
   631  009C                     	;# 
   632  009D                     	;# 
   633  009E                     	;# 
   634  010C                     	;# 
   635  010D                     	;# 
   636  0111                     	;# 
   637  0112                     	;# 
   638  0113                     	;# 
   639  0114                     	;# 
   640  0115                     	;# 
   641  0116                     	;# 
   642  0117                     	;# 
   643  0118                     	;# 
   644  0119                     	;# 
   645  011A                     	;# 
   646  011B                     	;# 
   647  011D                     	;# 
   648  011E                     	;# 
   649  018C                     	;# 
   650  018D                     	;# 
   651  0191                     	;# 
   652  0191                     	;# 
   653  0192                     	;# 
   654  0193                     	;# 
   655  0193                     	;# 
   656  0193                     	;# 
   657  0194                     	;# 
   658  0195                     	;# 
   659  0196                     	;# 
   660  0199                     	;# 
   661  019A                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019B                     	;# 
   665  019B                     	;# 
   666  019C                     	;# 
   667  019C                     	;# 
   668  019D                     	;# 
   669  019E                     	;# 
   670  019F                     	;# 
   671  020C                     	;# 
   672  020D                     	;# 
   673  0211                     	;# 
   674  0211                     	;# 
   675  0212                     	;# 
   676  0212                     	;# 
   677  0213                     	;# 
   678  0213                     	;# 
   679  0214                     	;# 
   680  0214                     	;# 
   681  0215                     	;# 
   682  0215                     	;# 
   683  0215                     	;# 
   684  0216                     	;# 
   685  0216                     	;# 
   686  0217                     	;# 
   687  0217                     	;# 
   688  0219                     	;# 
   689  021A                     	;# 
   690  021B                     	;# 
   691  021C                     	;# 
   692  021D                     	;# 
   693  021E                     	;# 
   694  021F                     	;# 
   695  0291                     	;# 
   696  0291                     	;# 
   697  0292                     	;# 
   698  0293                     	;# 
   699  0294                     	;# 
   700  0295                     	;# 
   701  0295                     	;# 
   702  0296                     	;# 
   703  0298                     	;# 
   704  0298                     	;# 
   705  0299                     	;# 
   706  029A                     	;# 
   707  029B                     	;# 
   708  029C                     	;# 
   709  029C                     	;# 
   710  029D                     	;# 
   711  029E                     	;# 
   712  029E                     	;# 
   713  0311                     	;# 
   714  0311                     	;# 
   715  0312                     	;# 
   716  0313                     	;# 
   717  0318                     	;# 
   718  0318                     	;# 
   719  0319                     	;# 
   720  031A                     	;# 
   721  0394                     	;# 
   722  0395                     	;# 
   723  0396                     	;# 
   724  039A                     	;# 
   725  039C                     	;# 
   726  039D                     	;# 
   727  039E                     	;# 
   728  039F                     	;# 
   729  0415                     	;# 
   730  0416                     	;# 
   731  0417                     	;# 
   732  041C                     	;# 
   733  041D                     	;# 
   734  041E                     	;# 
   735  0FE4                     	;# 
   736  0FE5                     	;# 
   737  0FE6                     	;# 
   738  0FE7                     	;# 
   739  0FE8                     	;# 
   740  0FE9                     	;# 
   741  0FEA                     	;# 
   742  0FEB                     	;# 
   743  0FED                     	;# 
   744  0FEE                     	;# 
   745  0FEF                     	;# 
   746  0000                     	;# 
   747  0001                     	;# 
   748  0002                     	;# 
   749  0003                     	;# 
   750  0004                     	;# 
   751  0005                     	;# 
   752  0006                     	;# 
   753  0007                     	;# 
   754  0008                     	;# 
   755  0009                     	;# 
   756  000A                     	;# 
   757  000B                     	;# 
   758  000C                     	;# 
   759  000D                     	;# 
   760  0011                     	;# 
   761  0012                     	;# 
   762  0013                     	;# 
   763  0014                     	;# 
   764  0015                     	;# 
   765  0016                     	;# 
   766  0016                     	;# 
   767  0017                     	;# 
   768  0018                     	;# 
   769  0019                     	;# 
   770  001A                     	;# 
   771  001B                     	;# 
   772  001C                     	;# 
   773  001E                     	;# 
   774  001F                     	;# 
   775  008C                     	;# 
   776  008D                     	;# 
   777  0091                     	;# 
   778  0092                     	;# 
   779  0093                     	;# 
   780  0094                     	;# 
   781  0095                     	;# 
   782  0096                     	;# 
   783  0097                     	;# 
   784  0098                     	;# 
   785  0099                     	;# 
   786  009A                     	;# 
   787  009B                     	;# 
   788  009B                     	;# 
   789  009C                     	;# 
   790  009D                     	;# 
   791  009E                     	;# 
   792  010C                     	;# 
   793  010D                     	;# 
   794  0111                     	;# 
   795  0112                     	;# 
   796  0113                     	;# 
   797  0114                     	;# 
   798  0115                     	;# 
   799  0116                     	;# 
   800  0117                     	;# 
   801  0118                     	;# 
   802  0119                     	;# 
   803  011A                     	;# 
   804  011B                     	;# 
   805  011D                     	;# 
   806  011E                     	;# 
   807  018C                     	;# 
   808  018D                     	;# 
   809  0191                     	;# 
   810  0191                     	;# 
   811  0192                     	;# 
   812  0193                     	;# 
   813  0193                     	;# 
   814  0193                     	;# 
   815  0194                     	;# 
   816  0195                     	;# 
   817  0196                     	;# 
   818  0199                     	;# 
   819  019A                     	;# 
   820  019B                     	;# 
   821  019B                     	;# 
   822  019B                     	;# 
   823  019B                     	;# 
   824  019C                     	;# 
   825  019C                     	;# 
   826  019D                     	;# 
   827  019E                     	;# 
   828  019F                     	;# 
   829  020C                     	;# 
   830  020D                     	;# 
   831  0211                     	;# 
   832  0211                     	;# 
   833  0212                     	;# 
   834  0212                     	;# 
   835  0213                     	;# 
   836  0213                     	;# 
   837  0214                     	;# 
   838  0214                     	;# 
   839  0215                     	;# 
   840  0215                     	;# 
   841  0215                     	;# 
   842  0216                     	;# 
   843  0216                     	;# 
   844  0217                     	;# 
   845  0217                     	;# 
   846  0219                     	;# 
   847  021A                     	;# 
   848  021B                     	;# 
   849  021C                     	;# 
   850  021D                     	;# 
   851  021E                     	;# 
   852  021F                     	;# 
   853  0291                     	;# 
   854  0291                     	;# 
   855  0292                     	;# 
   856  0293                     	;# 
   857  0294                     	;# 
   858  0295                     	;# 
   859  0295                     	;# 
   860  0296                     	;# 
   861  0298                     	;# 
   862  0298                     	;# 
   863  0299                     	;# 
   864  029A                     	;# 
   865  029B                     	;# 
   866  029C                     	;# 
   867  029C                     	;# 
   868  029D                     	;# 
   869  029E                     	;# 
   870  029E                     	;# 
   871  0311                     	;# 
   872  0311                     	;# 
   873  0312                     	;# 
   874  0313                     	;# 
   875  0318                     	;# 
   876  0318                     	;# 
   877  0319                     	;# 
   878  031A                     	;# 
   879  0394                     	;# 
   880  0395                     	;# 
   881  0396                     	;# 
   882  039A                     	;# 
   883  039C                     	;# 
   884  039D                     	;# 
   885  039E                     	;# 
   886  039F                     	;# 
   887  0415                     	;# 
   888  0416                     	;# 
   889  0417                     	;# 
   890  041C                     	;# 
   891  041D                     	;# 
   892  041E                     	;# 
   893  0FE4                     	;# 
   894  0FE5                     	;# 
   895  0FE6                     	;# 
   896  0FE7                     	;# 
   897  0FE8                     	;# 
   898  0FE9                     	;# 
   899  0FEA                     	;# 
   900  0FEB                     	;# 
   901  0FED                     	;# 
   902  0FEE                     	;# 
   903  0FEF                     	;# 
   904  0000                     	;# 
   905  0001                     	;# 
   906  0002                     	;# 
   907  0003                     	;# 
   908  0004                     	;# 
   909  0005                     	;# 
   910  0006                     	;# 
   911  0007                     	;# 
   912  0008                     	;# 
   913  0009                     	;# 
   914  000A                     	;# 
   915  000B                     	;# 
   916  000C                     	;# 
   917  000D                     	;# 
   918  0011                     	;# 
   919  0012                     	;# 
   920  0013                     	;# 
   921  0014                     	;# 
   922  0015                     	;# 
   923  0016                     	;# 
   924  0016                     	;# 
   925  0017                     	;# 
   926  0018                     	;# 
   927  0019                     	;# 
   928  001A                     	;# 
   929  001B                     	;# 
   930  001C                     	;# 
   931  001E                     	;# 
   932  001F                     	;# 
   933  008C                     	;# 
   934  008D                     	;# 
   935  0091                     	;# 
   936  0092                     	;# 
   937  0093                     	;# 
   938  0094                     	;# 
   939  0095                     	;# 
   940  0096                     	;# 
   941  0097                     	;# 
   942  0098                     	;# 
   943  0099                     	;# 
   944  009A                     	;# 
   945  009B                     	;# 
   946  009B                     	;# 
   947  009C                     	;# 
   948  009D                     	;# 
   949  009E                     	;# 
   950  010C                     	;# 
   951  010D                     	;# 
   952  0111                     	;# 
   953  0112                     	;# 
   954  0113                     	;# 
   955  0114                     	;# 
   956  0115                     	;# 
   957  0116                     	;# 
   958  0117                     	;# 
   959  0118                     	;# 
   960  0119                     	;# 
   961  011A                     	;# 
   962  011B                     	;# 
   963  011D                     	;# 
   964  011E                     	;# 
   965  018C                     	;# 
   966  018D                     	;# 
   967  0191                     	;# 
   968  0191                     	;# 
   969  0192                     	;# 
   970  0193                     	;# 
   971  0193                     	;# 
   972  0193                     	;# 
   973  0194                     	;# 
   974  0195                     	;# 
   975  0196                     	;# 
   976  0199                     	;# 
   977  019A                     	;# 
   978  019B                     	;# 
   979  019B                     	;# 
   980  019B                     	;# 
   981  019B                     	;# 
   982  019C                     	;# 
   983  019C                     	;# 
   984  019D                     	;# 
   985  019E                     	;# 
   986  019F                     	;# 
   987  020C                     	;# 
   988  020D                     	;# 
   989  0211                     	;# 
   990  0211                     	;# 
   991  0212                     	;# 
   992  0212                     	;# 
   993  0213                     	;# 
   994  0213                     	;# 
   995  0214                     	;# 
   996  0214                     	;# 
   997  0215                     	;# 
   998  0215                     	;# 
   999  0215                     	;# 
  1000  0216                     	;# 
  1001  0216                     	;# 
  1002  0217                     	;# 
  1003  0217                     	;# 
  1004  0219                     	;# 
  1005  021A                     	;# 
  1006  021B                     	;# 
  1007  021C                     	;# 
  1008  021D                     	;# 
  1009  021E                     	;# 
  1010  021F                     	;# 
  1011  0291                     	;# 
  1012  0291                     	;# 
  1013  0292                     	;# 
  1014  0293                     	;# 
  1015  0294                     	;# 
  1016  0295                     	;# 
  1017  0295                     	;# 
  1018  0296                     	;# 
  1019  0298                     	;# 
  1020  0298                     	;# 
  1021  0299                     	;# 
  1022  029A                     	;# 
  1023  029B                     	;# 
  1024  029C                     	;# 
  1025  029C                     	;# 
  1026  029D                     	;# 
  1027  029E                     	;# 
  1028  029E                     	;# 
  1029  0311                     	;# 
  1030  0311                     	;# 
  1031  0312                     	;# 
  1032  0313                     	;# 
  1033  0318                     	;# 
  1034  0318                     	;# 
  1035  0319                     	;# 
  1036  031A                     	;# 
  1037  0394                     	;# 
  1038  0395                     	;# 
  1039  0396                     	;# 
  1040  039A                     	;# 
  1041  039C                     	;# 
  1042  039D                     	;# 
  1043  039E                     	;# 
  1044  039F                     	;# 
  1045  0415                     	;# 
  1046  0416                     	;# 
  1047  0417                     	;# 
  1048  041C                     	;# 
  1049  041D                     	;# 
  1050  041E                     	;# 
  1051  0FE4                     	;# 
  1052  0FE5                     	;# 
  1053  0FE6                     	;# 
  1054  0FE7                     	;# 
  1055  0FE8                     	;# 
  1056  0FE9                     	;# 
  1057  0FEA                     	;# 
  1058  0FEB                     	;# 
  1059  0FED                     	;# 
  1060  0FEE                     	;# 
  1061  0FEF                     	;# 
  1062  0000                     	;# 
  1063  0001                     	;# 
  1064  0002                     	;# 
  1065  0003                     	;# 
  1066  0004                     	;# 
  1067  0005                     	;# 
  1068  0006                     	;# 
  1069  0007                     	;# 
  1070  0008                     	;# 
  1071  0009                     	;# 
  1072  000A                     	;# 
  1073  000B                     	;# 
  1074  000C                     	;# 
  1075  000D                     	;# 
  1076  0011                     	;# 
  1077  0012                     	;# 
  1078  0013                     	;# 
  1079  0014                     	;# 
  1080  0015                     	;# 
  1081  0016                     	;# 
  1082  0016                     	;# 
  1083  0017                     	;# 
  1084  0018                     	;# 
  1085  0019                     	;# 
  1086  001A                     	;# 
  1087  001B                     	;# 
  1088  001C                     	;# 
  1089  001E                     	;# 
  1090  001F                     	;# 
  1091  008C                     	;# 
  1092  008D                     	;# 
  1093  0091                     	;# 
  1094  0092                     	;# 
  1095  0093                     	;# 
  1096  0094                     	;# 
  1097  0095                     	;# 
  1098  0096                     	;# 
  1099  0097                     	;# 
  1100  0098                     	;# 
  1101  0099                     	;# 
  1102  009A                     	;# 
  1103  009B                     	;# 
  1104  009B                     	;# 
  1105  009C                     	;# 
  1106  009D                     	;# 
  1107  009E                     	;# 
  1108  010C                     	;# 
  1109  010D                     	;# 
  1110  0111                     	;# 
  1111  0112                     	;# 
  1112  0113                     	;# 
  1113  0114                     	;# 
  1114  0115                     	;# 
  1115  0116                     	;# 
  1116  0117                     	;# 
  1117  0118                     	;# 
  1118  0119                     	;# 
  1119  011A                     	;# 
  1120  011B                     	;# 
  1121  011D                     	;# 
  1122  011E                     	;# 
  1123  018C                     	;# 
  1124  018D                     	;# 
  1125  0191                     	;# 
  1126  0191                     	;# 
  1127  0192                     	;# 
  1128  0193                     	;# 
  1129  0193                     	;# 
  1130  0193                     	;# 
  1131  0194                     	;# 
  1132  0195                     	;# 
  1133  0196                     	;# 
  1134  0199                     	;# 
  1135  019A                     	;# 
  1136  019B                     	;# 
  1137  019B                     	;# 
  1138  019B                     	;# 
  1139  019B                     	;# 
  1140  019C                     	;# 
  1141  019C                     	;# 
  1142  019D                     	;# 
  1143  019E                     	;# 
  1144  019F                     	;# 
  1145  020C                     	;# 
  1146  020D                     	;# 
  1147  0211                     	;# 
  1148  0211                     	;# 
  1149  0212                     	;# 
  1150  0212                     	;# 
  1151  0213                     	;# 
  1152  0213                     	;# 
  1153  0214                     	;# 
  1154  0214                     	;# 
  1155  0215                     	;# 
  1156  0215                     	;# 
  1157  0215                     	;# 
  1158  0216                     	;# 
  1159  0216                     	;# 
  1160  0217                     	;# 
  1161  0217                     	;# 
  1162  0219                     	;# 
  1163  021A                     	;# 
  1164  021B                     	;# 
  1165  021C                     	;# 
  1166  021D                     	;# 
  1167  021E                     	;# 
  1168  021F                     	;# 
  1169  0291                     	;# 
  1170  0291                     	;# 
  1171  0292                     	;# 
  1172  0293                     	;# 
  1173  0294                     	;# 
  1174  0295                     	;# 
  1175  0295                     	;# 
  1176  0296                     	;# 
  1177  0298                     	;# 
  1178  0298                     	;# 
  1179  0299                     	;# 
  1180  029A                     	;# 
  1181  029B                     	;# 
  1182  029C                     	;# 
  1183  029C                     	;# 
  1184  029D                     	;# 
  1185  029E                     	;# 
  1186  029E                     	;# 
  1187  0311                     	;# 
  1188  0311                     	;# 
  1189  0312                     	;# 
  1190  0313                     	;# 
  1191  0318                     	;# 
  1192  0318                     	;# 
  1193  0319                     	;# 
  1194  031A                     	;# 
  1195  0394                     	;# 
  1196  0395                     	;# 
  1197  0396                     	;# 
  1198  039A                     	;# 
  1199  039C                     	;# 
  1200  039D                     	;# 
  1201  039E                     	;# 
  1202  039F                     	;# 
  1203  0415                     	;# 
  1204  0416                     	;# 
  1205  0417                     	;# 
  1206  041C                     	;# 
  1207  041D                     	;# 
  1208  041E                     	;# 
  1209  0FE4                     	;# 
  1210  0FE5                     	;# 
  1211  0FE6                     	;# 
  1212  0FE7                     	;# 
  1213  0FE8                     	;# 
  1214  0FE9                     	;# 
  1215  0FEA                     	;# 
  1216  0FEB                     	;# 
  1217  0FED                     	;# 
  1218  0FEE                     	;# 
  1219  0FEF                     	;# 
  1220  0000                     	;# 
  1221  0001                     	;# 
  1222  0002                     	;# 
  1223  0003                     	;# 
  1224  0004                     	;# 
  1225  0005                     	;# 
  1226  0006                     	;# 
  1227  0007                     	;# 
  1228  0008                     	;# 
  1229  0009                     	;# 
  1230  000A                     	;# 
  1231  000B                     	;# 
  1232  000C                     	;# 
  1233  000D                     	;# 
  1234  0011                     	;# 
  1235  0012                     	;# 
  1236  0013                     	;# 
  1237  0014                     	;# 
  1238  0015                     	;# 
  1239  0016                     	;# 
  1240  0016                     	;# 
  1241  0017                     	;# 
  1242  0018                     	;# 
  1243  0019                     	;# 
  1244  001A                     	;# 
  1245  001B                     	;# 
  1246  001C                     	;# 
  1247  001E                     	;# 
  1248  001F                     	;# 
  1249  008C                     	;# 
  1250  008D                     	;# 
  1251  0091                     	;# 
  1252  0092                     	;# 
  1253  0093                     	;# 
  1254  0094                     	;# 
  1255  0095                     	;# 
  1256  0096                     	;# 
  1257  0097                     	;# 
  1258  0098                     	;# 
  1259  0099                     	;# 
  1260  009A                     	;# 
  1261  009B                     	;# 
  1262  009B                     	;# 
  1263  009C                     	;# 
  1264  009D                     	;# 
  1265  009E                     	;# 
  1266  010C                     	;# 
  1267  010D                     	;# 
  1268  0111                     	;# 
  1269  0112                     	;# 
  1270  0113                     	;# 
  1271  0114                     	;# 
  1272  0115                     	;# 
  1273  0116                     	;# 
  1274  0117                     	;# 
  1275  0118                     	;# 
  1276  0119                     	;# 
  1277  011A                     	;# 
  1278  011B                     	;# 
  1279  011D                     	;# 
  1280  011E                     	;# 
  1281  018C                     	;# 
  1282  018D                     	;# 
  1283  0191                     	;# 
  1284  0191                     	;# 
  1285  0192                     	;# 
  1286  0193                     	;# 
  1287  0193                     	;# 
  1288  0193                     	;# 
  1289  0194                     	;# 
  1290  0195                     	;# 
  1291  0196                     	;# 
  1292  0199                     	;# 
  1293  019A                     	;# 
  1294  019B                     	;# 
  1295  019B                     	;# 
  1296  019B                     	;# 
  1297  019B                     	;# 
  1298  019C                     	;# 
  1299  019C                     	;# 
  1300  019D                     	;# 
  1301  019E                     	;# 
  1302  019F                     	;# 
  1303  020C                     	;# 
  1304  020D                     	;# 
  1305  0211                     	;# 
  1306  0211                     	;# 
  1307  0212                     	;# 
  1308  0212                     	;# 
  1309  0213                     	;# 
  1310  0213                     	;# 
  1311  0214                     	;# 
  1312  0214                     	;# 
  1313  0215                     	;# 
  1314  0215                     	;# 
  1315  0215                     	;# 
  1316  0216                     	;# 
  1317  0216                     	;# 
  1318  0217                     	;# 
  1319  0217                     	;# 
  1320  0219                     	;# 
  1321  021A                     	;# 
  1322  021B                     	;# 
  1323  021C                     	;# 
  1324  021D                     	;# 
  1325  021E                     	;# 
  1326  021F                     	;# 
  1327  0291                     	;# 
  1328  0291                     	;# 
  1329  0292                     	;# 
  1330  0293                     	;# 
  1331  0294                     	;# 
  1332  0295                     	;# 
  1333  0295                     	;# 
  1334  0296                     	;# 
  1335  0298                     	;# 
  1336  0298                     	;# 
  1337  0299                     	;# 
  1338  029A                     	;# 
  1339  029B                     	;# 
  1340  029C                     	;# 
  1341  029C                     	;# 
  1342  029D                     	;# 
  1343  029E                     	;# 
  1344  029E                     	;# 
  1345  0311                     	;# 
  1346  0311                     	;# 
  1347  0312                     	;# 
  1348  0313                     	;# 
  1349  0318                     	;# 
  1350  0318                     	;# 
  1351  0319                     	;# 
  1352  031A                     	;# 
  1353  0394                     	;# 
  1354  0395                     	;# 
  1355  0396                     	;# 
  1356  039A                     	;# 
  1357  039C                     	;# 
  1358  039D                     	;# 
  1359  039E                     	;# 
  1360  039F                     	;# 
  1361  0415                     	;# 
  1362  0416                     	;# 
  1363  0417                     	;# 
  1364  041C                     	;# 
  1365  041D                     	;# 
  1366  041E                     	;# 
  1367  0FE4                     	;# 
  1368  0FE5                     	;# 
  1369  0FE6                     	;# 
  1370  0FE7                     	;# 
  1371  0FE8                     	;# 
  1372  0FE9                     	;# 
  1373  0FEA                     	;# 
  1374  0FEB                     	;# 
  1375  0FED                     	;# 
  1376  0FEE                     	;# 
  1377  0FEF                     	;# 
  1378  0000                     	;# 
  1379  0001                     	;# 
  1380  0002                     	;# 
  1381  0003                     	;# 
  1382  0004                     	;# 
  1383  0005                     	;# 
  1384  0006                     	;# 
  1385  0007                     	;# 
  1386  0008                     	;# 
  1387  0009                     	;# 
  1388  000A                     	;# 
  1389  000B                     	;# 
  1390  000C                     	;# 
  1391  000D                     	;# 
  1392  0011                     	;# 
  1393  0012                     	;# 
  1394  0013                     	;# 
  1395  0014                     	;# 
  1396  0015                     	;# 
  1397  0016                     	;# 
  1398  0016                     	;# 
  1399  0017                     	;# 
  1400  0018                     	;# 
  1401  0019                     	;# 
  1402  001A                     	;# 
  1403  001B                     	;# 
  1404  001C                     	;# 
  1405  001E                     	;# 
  1406  001F                     	;# 
  1407  008C                     	;# 
  1408  008D                     	;# 
  1409  0091                     	;# 
  1410  0092                     	;# 
  1411  0093                     	;# 
  1412  0094                     	;# 
  1413  0095                     	;# 
  1414  0096                     	;# 
  1415  0097                     	;# 
  1416  0098                     	;# 
  1417  0099                     	;# 
  1418  009A                     	;# 
  1419  009B                     	;# 
  1420  009B                     	;# 
  1421  009C                     	;# 
  1422  009D                     	;# 
  1423  009E                     	;# 
  1424  010C                     	;# 
  1425  010D                     	;# 
  1426  0111                     	;# 
  1427  0112                     	;# 
  1428  0113                     	;# 
  1429  0114                     	;# 
  1430  0115                     	;# 
  1431  0116                     	;# 
  1432  0117                     	;# 
  1433  0118                     	;# 
  1434  0119                     	;# 
  1435  011A                     	;# 
  1436  011B                     	;# 
  1437  011D                     	;# 
  1438  011E                     	;# 
  1439  018C                     	;# 
  1440  018D                     	;# 
  1441  0191                     	;# 
  1442  0191                     	;# 
  1443  0192                     	;# 
  1444  0193                     	;# 
  1445  0193                     	;# 
  1446  0193                     	;# 
  1447  0194                     	;# 
  1448  0195                     	;# 
  1449  0196                     	;# 
  1450  0199                     	;# 
  1451  019A                     	;# 
  1452  019B                     	;# 
  1453  019B                     	;# 
  1454  019B                     	;# 
  1455  019B                     	;# 
  1456  019C                     	;# 
  1457  019C                     	;# 
  1458  019D                     	;# 
  1459  019E                     	;# 
  1460  019F                     	;# 
  1461  020C                     	;# 
  1462  020D                     	;# 
  1463  0211                     	;# 
  1464  0211                     	;# 
  1465  0212                     	;# 
  1466  0212                     	;# 
  1467  0213                     	;# 
  1468  0213                     	;# 
  1469  0214                     	;# 
  1470  0214                     	;# 
  1471  0215                     	;# 
  1472  0215                     	;# 
  1473  0215                     	;# 
  1474  0216                     	;# 
  1475  0216                     	;# 
  1476  0217                     	;# 
  1477  0217                     	;# 
  1478  0219                     	;# 
  1479  021A                     	;# 
  1480  021B                     	;# 
  1481  021C                     	;# 
  1482  021D                     	;# 
  1483  021E                     	;# 
  1484  021F                     	;# 
  1485  0291                     	;# 
  1486  0291                     	;# 
  1487  0292                     	;# 
  1488  0293                     	;# 
  1489  0294                     	;# 
  1490  0295                     	;# 
  1491  0295                     	;# 
  1492  0296                     	;# 
  1493  0298                     	;# 
  1494  0298                     	;# 
  1495  0299                     	;# 
  1496  029A                     	;# 
  1497  029B                     	;# 
  1498  029C                     	;# 
  1499  029C                     	;# 
  1500  029D                     	;# 
  1501  029E                     	;# 
  1502  029E                     	;# 
  1503  0311                     	;# 
  1504  0311                     	;# 
  1505  0312                     	;# 
  1506  0313                     	;# 
  1507  0318                     	;# 
  1508  0318                     	;# 
  1509  0319                     	;# 
  1510  031A                     	;# 
  1511  0394                     	;# 
  1512  0395                     	;# 
  1513  0396                     	;# 
  1514  039A                     	;# 
  1515  039C                     	;# 
  1516  039D                     	;# 
  1517  039E                     	;# 
  1518  039F                     	;# 
  1519  0415                     	;# 
  1520  0416                     	;# 
  1521  0417                     	;# 
  1522  041C                     	;# 
  1523  041D                     	;# 
  1524  041E                     	;# 
  1525  0FE4                     	;# 
  1526  0FE5                     	;# 
  1527  0FE6                     	;# 
  1528  0FE7                     	;# 
  1529  0FE8                     	;# 
  1530  0FE9                     	;# 
  1531  0FEA                     	;# 
  1532  0FEB                     	;# 
  1533  0FED                     	;# 
  1534  0FEE                     	;# 
  1535  0FEF                     	;# 
  1536  0000                     	;# 
  1537  0001                     	;# 
  1538  0002                     	;# 
  1539  0003                     	;# 
  1540  0004                     	;# 
  1541  0005                     	;# 
  1542  0006                     	;# 
  1543  0007                     	;# 
  1544  0008                     	;# 
  1545  0009                     	;# 
  1546  000A                     	;# 
  1547  000B                     	;# 
  1548  000C                     	;# 
  1549  000D                     	;# 
  1550  0011                     	;# 
  1551  0012                     	;# 
  1552  0013                     	;# 
  1553  0014                     	;# 
  1554  0015                     	;# 
  1555  0016                     	;# 
  1556  0016                     	;# 
  1557  0017                     	;# 
  1558  0018                     	;# 
  1559  0019                     	;# 
  1560  001A                     	;# 
  1561  001B                     	;# 
  1562  001C                     	;# 
  1563  001E                     	;# 
  1564  001F                     	;# 
  1565  008C                     	;# 
  1566  008D                     	;# 
  1567  0091                     	;# 
  1568  0092                     	;# 
  1569  0093                     	;# 
  1570  0094                     	;# 
  1571  0095                     	;# 
  1572  0096                     	;# 
  1573  0097                     	;# 
  1574  0098                     	;# 
  1575  0099                     	;# 
  1576  009A                     	;# 
  1577  009B                     	;# 
  1578  009B                     	;# 
  1579  009C                     	;# 
  1580  009D                     	;# 
  1581  009E                     	;# 
  1582  010C                     	;# 
  1583  010D                     	;# 
  1584  0111                     	;# 
  1585  0112                     	;# 
  1586  0113                     	;# 
  1587  0114                     	;# 
  1588  0115                     	;# 
  1589  0116                     	;# 
  1590  0117                     	;# 
  1591  0118                     	;# 
  1592  0119                     	;# 
  1593  011A                     	;# 
  1594  011B                     	;# 
  1595  011D                     	;# 
  1596  011E                     	;# 
  1597  018C                     	;# 
  1598  018D                     	;# 
  1599  0191                     	;# 
  1600  0191                     	;# 
  1601  0192                     	;# 
  1602  0193                     	;# 
  1603  0193                     	;# 
  1604  0193                     	;# 
  1605  0194                     	;# 
  1606  0195                     	;# 
  1607  0196                     	;# 
  1608  0199                     	;# 
  1609  019A                     	;# 
  1610  019B                     	;# 
  1611  019B                     	;# 
  1612  019B                     	;# 
  1613  019B                     	;# 
  1614  019C                     	;# 
  1615  019C                     	;# 
  1616  019D                     	;# 
  1617  019E                     	;# 
  1618  019F                     	;# 
  1619  020C                     	;# 
  1620  020D                     	;# 
  1621  0211                     	;# 
  1622  0211                     	;# 
  1623  0212                     	;# 
  1624  0212                     	;# 
  1625  0213                     	;# 
  1626  0213                     	;# 
  1627  0214                     	;# 
  1628  0214                     	;# 
  1629  0215                     	;# 
  1630  0215                     	;# 
  1631  0215                     	;# 
  1632  0216                     	;# 
  1633  0216                     	;# 
  1634  0217                     	;# 
  1635  0217                     	;# 
  1636  0219                     	;# 
  1637  021A                     	;# 
  1638  021B                     	;# 
  1639  021C                     	;# 
  1640  021D                     	;# 
  1641  021E                     	;# 
  1642  021F                     	;# 
  1643  0291                     	;# 
  1644  0291                     	;# 
  1645  0292                     	;# 
  1646  0293                     	;# 
  1647  0294                     	;# 
  1648  0295                     	;# 
  1649  0295                     	;# 
  1650  0296                     	;# 
  1651  0298                     	;# 
  1652  0298                     	;# 
  1653  0299                     	;# 
  1654  029A                     	;# 
  1655  029B                     	;# 
  1656  029C                     	;# 
  1657  029C                     	;# 
  1658  029D                     	;# 
  1659  029E                     	;# 
  1660  029E                     	;# 
  1661  0311                     	;# 
  1662  0311                     	;# 
  1663  0312                     	;# 
  1664  0313                     	;# 
  1665  0318                     	;# 
  1666  0318                     	;# 
  1667  0319                     	;# 
  1668  031A                     	;# 
  1669  0394                     	;# 
  1670  0395                     	;# 
  1671  0396                     	;# 
  1672  039A                     	;# 
  1673  039C                     	;# 
  1674  039D                     	;# 
  1675  039E                     	;# 
  1676  039F                     	;# 
  1677  0415                     	;# 
  1678  0416                     	;# 
  1679  0417                     	;# 
  1680  041C                     	;# 
  1681  041D                     	;# 
  1682  041E                     	;# 
  1683  0FE4                     	;# 
  1684  0FE5                     	;# 
  1685  0FE6                     	;# 
  1686  0FE7                     	;# 
  1687  0FE8                     	;# 
  1688  0FE9                     	;# 
  1689  0FEA                     	;# 
  1690  0FEB                     	;# 
  1691  0FED                     	;# 
  1692  0FEE                     	;# 
  1693  0FEF                     	;# 
  1694  0000                     	;# 
  1695  0001                     	;# 
  1696  0002                     	;# 
  1697  0003                     	;# 
  1698  0004                     	;# 
  1699  0005                     	;# 
  1700  0006                     	;# 
  1701  0007                     	;# 
  1702  0008                     	;# 
  1703  0009                     	;# 
  1704  000A                     	;# 
  1705  000B                     	;# 
  1706  000C                     	;# 
  1707  000D                     	;# 
  1708  0011                     	;# 
  1709  0012                     	;# 
  1710  0013                     	;# 
  1711  0014                     	;# 
  1712  0015                     	;# 
  1713  0016                     	;# 
  1714  0016                     	;# 
  1715  0017                     	;# 
  1716  0018                     	;# 
  1717  0019                     	;# 
  1718  001A                     	;# 
  1719  001B                     	;# 
  1720  001C                     	;# 
  1721  001E                     	;# 
  1722  001F                     	;# 
  1723  008C                     	;# 
  1724  008D                     	;# 
  1725  0091                     	;# 
  1726  0092                     	;# 
  1727  0093                     	;# 
  1728  0094                     	;# 
  1729  0095                     	;# 
  1730  0096                     	;# 
  1731  0097                     	;# 
  1732  0098                     	;# 
  1733  0099                     	;# 
  1734  009A                     	;# 
  1735  009B                     	;# 
  1736  009B                     	;# 
  1737  009C                     	;# 
  1738  009D                     	;# 
  1739  009E                     	;# 
  1740  010C                     	;# 
  1741  010D                     	;# 
  1742  0111                     	;# 
  1743  0112                     	;# 
  1744  0113                     	;# 
  1745  0114                     	;# 
  1746  0115                     	;# 
  1747  0116                     	;# 
  1748  0117                     	;# 
  1749  0118                     	;# 
  1750  0119                     	;# 
  1751  011A                     	;# 
  1752  011B                     	;# 
  1753  011D                     	;# 
  1754  011E                     	;# 
  1755  018C                     	;# 
  1756  018D                     	;# 
  1757  0191                     	;# 
  1758  0191                     	;# 
  1759  0192                     	;# 
  1760  0193                     	;# 
  1761  0193                     	;# 
  1762  0193                     	;# 
  1763  0194                     	;# 
  1764  0195                     	;# 
  1765  0196                     	;# 
  1766  0199                     	;# 
  1767  019A                     	;# 
  1768  019B                     	;# 
  1769  019B                     	;# 
  1770  019B                     	;# 
  1771  019B                     	;# 
  1772  019C                     	;# 
  1773  019C                     	;# 
  1774  019D                     	;# 
  1775  019E                     	;# 
  1776  019F                     	;# 
  1777  020C                     	;# 
  1778  020D                     	;# 
  1779  0211                     	;# 
  1780  0211                     	;# 
  1781  0212                     	;# 
  1782  0212                     	;# 
  1783  0213                     	;# 
  1784  0213                     	;# 
  1785  0214                     	;# 
  1786  0214                     	;# 
  1787  0215                     	;# 
  1788  0215                     	;# 
  1789  0215                     	;# 
  1790  0216                     	;# 
  1791  0216                     	;# 
  1792  0217                     	;# 
  1793  0217                     	;# 
  1794  0219                     	;# 
  1795  021A                     	;# 
  1796  021B                     	;# 
  1797  021C                     	;# 
  1798  021D                     	;# 
  1799  021E                     	;# 
  1800  021F                     	;# 
  1801  0291                     	;# 
  1802  0291                     	;# 
  1803  0292                     	;# 
  1804  0293                     	;# 
  1805  0294                     	;# 
  1806  0295                     	;# 
  1807  0295                     	;# 
  1808  0296                     	;# 
  1809  0298                     	;# 
  1810  0298                     	;# 
  1811  0299                     	;# 
  1812  029A                     	;# 
  1813  029B                     	;# 
  1814  029C                     	;# 
  1815  029C                     	;# 
  1816  029D                     	;# 
  1817  029E                     	;# 
  1818  029E                     	;# 
  1819  0311                     	;# 
  1820  0311                     	;# 
  1821  0312                     	;# 
  1822  0313                     	;# 
  1823  0318                     	;# 
  1824  0318                     	;# 
  1825  0319                     	;# 
  1826  031A                     	;# 
  1827  0394                     	;# 
  1828  0395                     	;# 
  1829  0396                     	;# 
  1830  039A                     	;# 
  1831  039C                     	;# 
  1832  039D                     	;# 
  1833  039E                     	;# 
  1834  039F                     	;# 
  1835  0415                     	;# 
  1836  0416                     	;# 
  1837  0417                     	;# 
  1838  041C                     	;# 
  1839  041D                     	;# 
  1840  041E                     	;# 
  1841  0FE4                     	;# 
  1842  0FE5                     	;# 
  1843  0FE6                     	;# 
  1844  0FE7                     	;# 
  1845  0FE8                     	;# 
  1846  0FE9                     	;# 
  1847  0FEA                     	;# 
  1848  0FEB                     	;# 
  1849  0FED                     	;# 
  1850  0FEE                     	;# 
  1851  0FEF                     	;# 
  1852  0000                     	;# 
  1853  0001                     	;# 
  1854  0002                     	;# 
  1855  0003                     	;# 
  1856  0004                     	;# 
  1857  0005                     	;# 
  1858  0006                     	;# 
  1859  0007                     	;# 
  1860  0008                     	;# 
  1861  0009                     	;# 
  1862  000A                     	;# 
  1863  000B                     	;# 
  1864  000C                     	;# 
  1865  000D                     	;# 
  1866  0011                     	;# 
  1867  0012                     	;# 
  1868  0013                     	;# 
  1869  0014                     	;# 
  1870  0015                     	;# 
  1871  0016                     	;# 
  1872  0016                     	;# 
  1873  0017                     	;# 
  1874  0018                     	;# 
  1875  0019                     	;# 
  1876  001A                     	;# 
  1877  001B                     	;# 
  1878  001C                     	;# 
  1879  001E                     	;# 
  1880  001F                     	;# 
  1881  008C                     	;# 
  1882  008D                     	;# 
  1883  0091                     	;# 
  1884  0092                     	;# 
  1885  0093                     	;# 
  1886  0094                     	;# 
  1887  0095                     	;# 
  1888  0096                     	;# 
  1889  0097                     	;# 
  1890  0098                     	;# 
  1891  0099                     	;# 
  1892  009A                     	;# 
  1893  009B                     	;# 
  1894  009B                     	;# 
  1895  009C                     	;# 
  1896  009D                     	;# 
  1897  009E                     	;# 
  1898  010C                     	;# 
  1899  010D                     	;# 
  1900  0111                     	;# 
  1901  0112                     	;# 
  1902  0113                     	;# 
  1903  0114                     	;# 
  1904  0115                     	;# 
  1905  0116                     	;# 
  1906  0117                     	;# 
  1907  0118                     	;# 
  1908  0119                     	;# 
  1909  011A                     	;# 
  1910  011B                     	;# 
  1911  011D                     	;# 
  1912  011E                     	;# 
  1913  018C                     	;# 
  1914  018D                     	;# 
  1915  0191                     	;# 
  1916  0191                     	;# 
  1917  0192                     	;# 
  1918  0193                     	;# 
  1919  0193                     	;# 
  1920  0193                     	;# 
  1921  0194                     	;# 
  1922  0195                     	;# 
  1923  0196                     	;# 
  1924  0199                     	;# 
  1925  019A                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019C                     	;# 
  1931  019C                     	;# 
  1932  019D                     	;# 
  1933  019E                     	;# 
  1934  019F                     	;# 
  1935  020C                     	;# 
  1936  020D                     	;# 
  1937  0211                     	;# 
  1938  0211                     	;# 
  1939  0212                     	;# 
  1940  0212                     	;# 
  1941  0213                     	;# 
  1942  0213                     	;# 
  1943  0214                     	;# 
  1944  0214                     	;# 
  1945  0215                     	;# 
  1946  0215                     	;# 
  1947  0215                     	;# 
  1948  0216                     	;# 
  1949  0216                     	;# 
  1950  0217                     	;# 
  1951  0217                     	;# 
  1952  0219                     	;# 
  1953  021A                     	;# 
  1954  021B                     	;# 
  1955  021C                     	;# 
  1956  021D                     	;# 
  1957  021E                     	;# 
  1958  021F                     	;# 
  1959  0291                     	;# 
  1960  0291                     	;# 
  1961  0292                     	;# 
  1962  0293                     	;# 
  1963  0294                     	;# 
  1964  0295                     	;# 
  1965  0295                     	;# 
  1966  0296                     	;# 
  1967  0298                     	;# 
  1968  0298                     	;# 
  1969  0299                     	;# 
  1970  029A                     	;# 
  1971  029B                     	;# 
  1972  029C                     	;# 
  1973  029C                     	;# 
  1974  029D                     	;# 
  1975  029E                     	;# 
  1976  029E                     	;# 
  1977  0311                     	;# 
  1978  0311                     	;# 
  1979  0312                     	;# 
  1980  0313                     	;# 
  1981  0318                     	;# 
  1982  0318                     	;# 
  1983  0319                     	;# 
  1984  031A                     	;# 
  1985  0394                     	;# 
  1986  0395                     	;# 
  1987  0396                     	;# 
  1988  039A                     	;# 
  1989  039C                     	;# 
  1990  039D                     	;# 
  1991  039E                     	;# 
  1992  039F                     	;# 
  1993  0415                     	;# 
  1994  0416                     	;# 
  1995  0417                     	;# 
  1996  041C                     	;# 
  1997  041D                     	;# 
  1998  041E                     	;# 
  1999  0FE4                     	;# 
  2000  0FE5                     	;# 
  2001  0FE6                     	;# 
  2002  0FE7                     	;# 
  2003  0FE8                     	;# 
  2004  0FE9                     	;# 
  2005  0FEA                     	;# 
  2006  0FEB                     	;# 
  2007  0FED                     	;# 
  2008  0FEE                     	;# 
  2009  0FEF                     	;# 
  2010  0000                     	;# 
  2011  0001                     	;# 
  2012  0002                     	;# 
  2013  0003                     	;# 
  2014  0004                     	;# 
  2015  0005                     	;# 
  2016  0006                     	;# 
  2017  0007                     	;# 
  2018  0008                     	;# 
  2019  0009                     	;# 
  2020  000A                     	;# 
  2021  000B                     	;# 
  2022  000C                     	;# 
  2023  000D                     	;# 
  2024  0011                     	;# 
  2025  0012                     	;# 
  2026  0013                     	;# 
  2027  0014                     	;# 
  2028  0015                     	;# 
  2029  0016                     	;# 
  2030  0016                     	;# 
  2031  0017                     	;# 
  2032  0018                     	;# 
  2033  0019                     	;# 
  2034  001A                     	;# 
  2035  001B                     	;# 
  2036  001C                     	;# 
  2037  001E                     	;# 
  2038  001F                     	;# 
  2039  008C                     	;# 
  2040  008D                     	;# 
  2041  0091                     	;# 
  2042  0092                     	;# 
  2043  0093                     	;# 
  2044  0094                     	;# 
  2045  0095                     	;# 
  2046  0096                     	;# 
  2047  0097                     	;# 
  2048  0098                     	;# 
  2049  0099                     	;# 
  2050  009A                     	;# 
  2051  009B                     	;# 
  2052  009B                     	;# 
  2053  009C                     	;# 
  2054  009D                     	;# 
  2055  009E                     	;# 
  2056  010C                     	;# 
  2057  010D                     	;# 
  2058  0111                     	;# 
  2059  0112                     	;# 
  2060  0113                     	;# 
  2061  0114                     	;# 
  2062  0115                     	;# 
  2063  0116                     	;# 
  2064  0117                     	;# 
  2065  0118                     	;# 
  2066  0119                     	;# 
  2067  011A                     	;# 
  2068  011B                     	;# 
  2069  011D                     	;# 
  2070  011E                     	;# 
  2071  018C                     	;# 
  2072  018D                     	;# 
  2073  0191                     	;# 
  2074  0191                     	;# 
  2075  0192                     	;# 
  2076  0193                     	;# 
  2077  0193                     	;# 
  2078  0193                     	;# 
  2079  0194                     	;# 
  2080  0195                     	;# 
  2081  0196                     	;# 
  2082  0199                     	;# 
  2083  019A                     	;# 
  2084  019B                     	;# 
  2085  019B                     	;# 
  2086  019B                     	;# 
  2087  019B                     	;# 
  2088  019C                     	;# 
  2089  019C                     	;# 
  2090  019D                     	;# 
  2091  019E                     	;# 
  2092  019F                     	;# 
  2093  020C                     	;# 
  2094  020D                     	;# 
  2095  0211                     	;# 
  2096  0211                     	;# 
  2097  0212                     	;# 
  2098  0212                     	;# 
  2099  0213                     	;# 
  2100  0213                     	;# 
  2101  0214                     	;# 
  2102  0214                     	;# 
  2103  0215                     	;# 
  2104  0215                     	;# 
  2105  0215                     	;# 
  2106  0216                     	;# 
  2107  0216                     	;# 
  2108  0217                     	;# 
  2109  0217                     	;# 
  2110  0219                     	;# 
  2111  021A                     	;# 
  2112  021B                     	;# 
  2113  021C                     	;# 
  2114  021D                     	;# 
  2115  021E                     	;# 
  2116  021F                     	;# 
  2117  0291                     	;# 
  2118  0291                     	;# 
  2119  0292                     	;# 
  2120  0293                     	;# 
  2121  0294                     	;# 
  2122  0295                     	;# 
  2123  0295                     	;# 
  2124  0296                     	;# 
  2125  0298                     	;# 
  2126  0298                     	;# 
  2127  0299                     	;# 
  2128  029A                     	;# 
  2129  029B                     	;# 
  2130  029C                     	;# 
  2131  029C                     	;# 
  2132  029D                     	;# 
  2133  029E                     	;# 
  2134  029E                     	;# 
  2135  0311                     	;# 
  2136  0311                     	;# 
  2137  0312                     	;# 
  2138  0313                     	;# 
  2139  0318                     	;# 
  2140  0318                     	;# 
  2141  0319                     	;# 
  2142  031A                     	;# 
  2143  0394                     	;# 
  2144  0395                     	;# 
  2145  0396                     	;# 
  2146  039A                     	;# 
  2147  039C                     	;# 
  2148  039D                     	;# 
  2149  039E                     	;# 
  2150  039F                     	;# 
  2151  0415                     	;# 
  2152  0416                     	;# 
  2153  0417                     	;# 
  2154  041C                     	;# 
  2155  041D                     	;# 
  2156  041E                     	;# 
  2157  0FE4                     	;# 
  2158  0FE5                     	;# 
  2159  0FE6                     	;# 
  2160  0FE7                     	;# 
  2161  0FE8                     	;# 
  2162  0FE9                     	;# 
  2163  0FEA                     	;# 
  2164  0FEB                     	;# 
  2165  0FED                     	;# 
  2166  0FEE                     	;# 
  2167  0FEF                     	;# 
  2168                           
  2169 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2170  0000                     
  2171 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2172  0000                     
  2173 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2174  0000                     
  2175                           	psect	nvBANK1
  2176  00E3                     __pnvBANK1:	
  2177  00E3                     _IOCBF5_InterruptHandler:	
  2178  00E3                     	ds	2
  2179  00E5                     _IOCBF4_InterruptHandler:	
  2180  00E5                     	ds	2
  2181  00E7                     _IOCBF3_InterruptHandler:	
  2182  00E7                     	ds	2
  2183  00E9                     _IOCBF0_InterruptHandler:	
  2184  00E9                     	ds	2
  2185  00EB                     _TMR4_InterruptHandler:	
  2186  00EB                     	ds	2
  2187  00ED                     _timer1ReloadVal:	
  2188  00ED                     	ds	2
  2189                           
  2190                           	psect	nvBANK2
  2191  0120                     __pnvBANK2:	
  2192  0120                     _CCP4_CallBack:	
  2193  0120                     	ds	2
  2194  0122                     _EUSART_ErrorHandler:	
  2195  0122                     	ds	2
  2196  0124                     _EUSART_OverrunErrorHandler:	
  2197  0124                     	ds	2
  2198  0126                     _EUSART_FramingErrorHandler:	
  2199  0126                     	ds	2
  2200  0128                     _temp_mt:	
  2201  0128                     	ds	4
  2202  012C                     _I_m:	
  2203  012C                     	ds	4
  2204  000B                     _INTCONbits	set	11
  2205  0013                     _PIR3bits	set	19
  2206  001C                     _T2CONbits	set	28
  2207  001C                     _T2CON	set	28
  2208  001A                     _TMR2	set	26
  2209  001B                     _PR2	set	27
  2210  0019                     _T1GCONbits	set	25
  2211  0018                     _T1CONbits	set	24
  2212  0018                     _T1CON	set	24
  2213  0016                     _TMR1L	set	22
  2214  0017                     _TMR1H	set	23
  2215  0019                     _T1GCON	set	25
  2216  0011                     _PIR1bits	set	17
  2217  0095                     _OPTION_REGbits	set	149
  2218  008D                     _TRISB	set	141
  2219  008C                     _TRISA	set	140
  2220  009D                     _ADCON0bits	set	157
  2221  009D                     _ADCON0	set	157
  2222  009C                     _ADRESH	set	156
  2223  009B                     _ADRESL	set	155
  2224  009E                     _ADCON1	set	158
  2225  0093                     _PIE3bits	set	147
  2226  0097                     _WDTCON	set	151
  2227  0098                     _OSCTUNE	set	152
  2228  0099                     _OSCCON	set	153
  2229  010C                     _LATAbits	set	268
  2230  011E                     _APFCON1	set	286
  2231  011D                     _APFCON0	set	285
  2232  010D                     _LATB	set	269
  2233  010C                     _LATA	set	268
  2234  0117                     _FVRCONbits	set	279
  2235  0117                     _FVRCON	set	279
  2236  0116                     _BORCON	set	278
  2237  018C                     _ANSELA	set	396
  2238  018D                     _ANSELB	set	397
  2239  019A                     _TXREG	set	410
  2240  0199                     _RCREG	set	409
  2241  019D                     _RCSTAbits	set	413
  2242  019E                     _TXSTAbits	set	414
  2243  019C                     _SPBRGH	set	412
  2244  019B                     _SPBRGL	set	411
  2245  019E                     _TXSTA	set	414
  2246  019D                     _RCSTA	set	413
  2247  019F                     _BAUDCON	set	415
  2248  020C                     _WPUA	set	524
  2249  020D                     _WPUB	set	525
  2250  029E                     _CCPTMRS0bits	set	670
  2251  0312                     _CCPR3H	set	786
  2252  0311                     _CCPR3L	set	785
  2253  0313                     _CCP3CON	set	787
  2254  0319                     _CCPR4H	set	793
  2255  0318                     _CCPR4L	set	792
  2256  031A                     _CCP4CON	set	794
  2257  0394                     _IOCBPbits	set	916
  2258  0395                     _IOCBNbits	set	917
  2259  0396                     _IOCBFbits	set	918
  2260  0417                     _T4CONbits	set	1047
  2261  0417                     _T4CON	set	1047
  2262  0415                     _TMR4	set	1045
  2263  0416                     _PR4	set	1046
  2264                           
  2265                           ; #config settings
  2266  0000                     
  2267                           	psect	cinit
  2268  0036                     start_initialization:	
  2269  0036                     __initialization:	
  2270                           
  2271                           ; Clear objects allocated to COMMON
  2272  0036  01F0               	clrf	__pbssCOMMON& (0+127)
  2273  0037  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2274  0038  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2275  0039  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2276  003A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2277  003B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2278  003C  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  2279                           
  2280                           ; Clear objects allocated to BANK0
  2281  003D  0020               	movlb	0	; select bank0
  2282  003E  01EF               	clrf	__pbssBANK0& (0+127)
  2283                           
  2284                           ; Clear objects allocated to BANK1
  2285  003F  30A0               	movlw	low __pbssBANK1
  2286  0040  0084               	movwf	4
  2287  0041  3000               	movlw	high __pbssBANK1
  2288  0042  0085               	movwf	5
  2289  0043  3043               	movlw	67
  2290  0044  3188  2053  3180   	fcall	clear_ram0
  2291                           
  2292                           ; Clear objects allocated to BANK2
  2293  0047  0022               	movlb	2	; select bank2
  2294  0048  01B0               	clrf	__pbssBANK2& (0+127)
  2295  0049  01B1               	clrf	(__pbssBANK2+1)& (0+127)
  2296  004A  01B2               	clrf	(__pbssBANK2+2)& (0+127)
  2297  004B  01B3               	clrf	(__pbssBANK2+3)& (0+127)
  2298  004C  01B4               	clrf	(__pbssBANK2+4)& (0+127)
  2299  004D                     end_of_initialization:	
  2300                           ;End of C runtime variable initialization code
  2301                           
  2302  004D                     __end_of__initialization:	
  2303  004D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2304  004E  0020               	movlb	0
  2305  004F  318B  2B17         	ljmp	_main	;jump to C main() function
  2306                           
  2307                           	psect	bssCOMMON
  2308  0070                     __pbssCOMMON:	
  2309  0070                     _min_origem_up:	
  2310  0070                     	ds	2
  2311  0072                     _max_origem_down:	
  2312  0072                     	ds	2
  2313  0074                     _and_dst:	
  2314  0074                     	ds	2
  2315  0076                     _eusartRxLastError:	
  2316  0076                     	ds	1
  2317                           
  2318                           	psect	bssBANK0
  2319  006F                     __pbssBANK0:	
  2320  006F                     _and_ating:	
  2321  006F                     	ds	1
  2322                           
  2323                           	psect	bssBANK1
  2324  00A0                     __pbssBANK1:	
  2325  00A0                     _origem_up:	
  2326  00A0                     	ds	10
  2327  00AA                     _origem_down:	
  2328  00AA                     	ds	10
  2329  00B4                     _fila_down:	
  2330  00B4                     	ds	10
  2331  00BE                     _fila_up:	
  2332  00BE                     	ds	10
  2333  00C8                     _and_ating2:	
  2334  00C8                     	ds	2
  2335  00CA                     _out_value:	
  2336  00CA                     	ds	2
  2337  00CC                     _min_fila_down:	
  2338  00CC                     	ds	2
  2339  00CE                     _max_fila_up:	
  2340  00CE                     	ds	2
  2341  00D0                     _distancia:	
  2342  00D0                     	ds	2
  2343  00D2                     _andar:	
  2344  00D2                     	ds	2
  2345  00D4                     _sentido2:	
  2346  00D4                     	ds	2
  2347  00D6                     _aux_tempo:	
  2348  00D6                     	ds	2
  2349  00D8                     _sentido:	
  2350  00D8                     	ds	2
  2351  00DA                     _and_origem:	
  2352  00DA                     	ds	2
  2353  00DC                     _ADC_InterruptHandler:	
  2354  00DC                     	ds	2
  2355  00DE                     _state_motor:	
  2356  00DE                     	ds	1
  2357  00DF                     _ccp_value:	
  2358  00DF                     	ds	2
  2359  00E1                     _pulses:	
  2360  00E1                     	ds	2
  2361                           
  2362                           	psect	bssBANK2
  2363  0130                     __pbssBANK2:	
  2364  0130                     _byte:	
  2365  0130                     	ds	5
  2366                           
  2367                           	psect	clrtext
  2368  0853                     clear_ram0:	
  2369                           ;	Called with FSR0 containing the base address, and
  2370                           ;	WREG with the size to clear
  2371                           
  2372  0853  0064               	clrwdt	;clear the watchdog before getting into this loop
  2373  0854                     clrloop0:	
  2374  0854  0180               	clrf	0	;clear RAM location pointed to by FSR
  2375  0855  3101               	addfsr 0,1
  2376  0856  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2377  0857  2854               	goto	clrloop0	;have we reached the end yet?
  2378  0858  3400               	retlw	0	;all done for this memory range, return
  2379                           
  2380                           	psect	cstackCOMMON
  2381  0077                     __pcstackCOMMON:	
  2382  0077                     ?_PIN_MANAGER_Initialize:	
  2383  0077                     ?_OSCILLATOR_Initialize:	
  2384                           ; 1 bytes @ 0x0
  2385                           
  2386  0077                     ?_WDT_Initialize:	
  2387                           ; 1 bytes @ 0x0
  2388                           
  2389  0077                     ?_FVR_Initialize:	
  2390                           ; 1 bytes @ 0x0
  2391                           
  2392  0077                     ?_CCP4_Initialize:	
  2393                           ; 1 bytes @ 0x0
  2394                           
  2395  0077                     ?_ADC_Initialize:	
  2396                           ; 1 bytes @ 0x0
  2397                           
  2398  0077                     ?_TMR4_Initialize:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401  0077                     ?_PWM3_Initialize:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404  0077                     ?_TMR2_Initialize:	
  2405                           ; 1 bytes @ 0x0
  2406                           
  2407  0077                     ?_TMR1_Initialize:	
  2408                           ; 1 bytes @ 0x0
  2409                           
  2410  0077                     ?_TMR4_DefaultInterruptHandler:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413  0077                     ??_TMR4_DefaultInterruptHandler:	
  2414                           ; 1 bytes @ 0x0
  2415                           
  2416  0077                     ?_PIN_MANAGER_IOC:	
  2417                           ; 1 bytes @ 0x0
  2418                           
  2419  0077                     ?_CCP4_CaptureISR:	
  2420                           ; 1 bytes @ 0x0
  2421                           
  2422  0077                     ?_IOCBF0_DefaultInterruptHandler:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  0077                     ??_IOCBF0_DefaultInterruptHandler:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428  0077                     ?_IOCBF3_DefaultInterruptHandler:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431  0077                     ??_IOCBF3_DefaultInterruptHandler:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434  0077                     ?_IOCBF4_DefaultInterruptHandler:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  0077                     ??_IOCBF4_DefaultInterruptHandler:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0077                     ?_IOCBF5_DefaultInterruptHandler:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  0077                     ??_IOCBF5_DefaultInterruptHandler:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446  0077                     ?_IOCBF0_ISR:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449  0077                     ??_IOCBF0_ISR:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  0077                     ?_IOCBF3_ISR:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455  0077                     ?_IOCBF4_ISR:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458  0077                     ?_IOCBF5_ISR:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461  0077                     ?_comunicacao:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464  0077                     ?_controle:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  0077                     ?_gerenciamento:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  0077                     ?_update:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473  0077                     ?_col_up:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476  0077                     ?_col_down:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479  0077                     ?_min_up:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482  0077                     ?_max_down:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485  0077                     ?_EUSART_Initialize:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488  0077                     ?_EUSART_is_tx_ready:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491  0077                     ??_EUSART_is_tx_ready:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494  0077                     ?_EUSART_is_rx_ready:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497  0077                     ?_EUSART_Read:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500  0077                     ?_EUSART_Write:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503  0077                     ??_EUSART_Write:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506  0077                     ?_SYSTEM_Initialize:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509  0077                     ?_TMR1_WriteTimer:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512  0077                     ?_TMR4_ISR:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515  0077                     ?_INTERRUPT_InterruptManager:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518  0077                     ?_send_data:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521  0077                     ?_sensor1:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524  0077                     ??_sensor1:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527  0077                     ?_sensor2:	
  2528                           ; 1 bytes @ 0x0
  2529                           
  2530  0077                     ??_sensor2:	
  2531                           ; 1 bytes @ 0x0
  2532                           
  2533  0077                     ?_sensor3:	
  2534                           ; 1 bytes @ 0x0
  2535                           
  2536  0077                     ??_sensor3:	
  2537                           ; 1 bytes @ 0x0
  2538                           
  2539  0077                     ?_sensor4:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542  0077                     ??_sensor4:	
  2543                           ; 1 bytes @ 0x0
  2544                           
  2545  0077                     ?_main:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548  0077                     _EUSART_is_tx_ready$167:	
  2549                           ; 1 bytes @ 0x0
  2550                           
  2551  0077                     EUSART_Write@txData:	
  2552                           ; 1 bytes @ 0x0
  2553                           
  2554  0077                     TMR1_WriteTimer@timerVal:	
  2555                           ; 1 bytes @ 0x0
  2556                           
  2557                           
  2558                           ; 2 bytes @ 0x0
  2559  0077                     	ds	1
  2560  0078                     ??_PIN_MANAGER_IOC:	
  2561  0078                     ??_IOCBF3_ISR:	
  2562                           ; 1 bytes @ 0x1
  2563                           
  2564  0078                     ??_IOCBF4_ISR:	
  2565                           ; 1 bytes @ 0x1
  2566                           
  2567  0078                     ??_IOCBF5_ISR:	
  2568                           ; 1 bytes @ 0x1
  2569                           
  2570  0078                     ??_send_data:	
  2571                           ; 1 bytes @ 0x1
  2572                           
  2573                           
  2574                           ; 1 bytes @ 0x1
  2575  0078                     	ds	1
  2576  0079                     ??_TMR1_WriteTimer:	
  2577  0079                     ?_CCP4_DefaultCallBack:	
  2578                           ; 1 bytes @ 0x2
  2579                           
  2580  0079                     ?_get_pulse:	
  2581                           ; 1 bytes @ 0x2
  2582                           
  2583  0079                     CCP4_DefaultCallBack@capturedValue:	
  2584                           ; 1 bytes @ 0x2
  2585                           
  2586  0079                     send_data@i:	
  2587                           ; 2 bytes @ 0x2
  2588                           
  2589  0079                     get_pulse@capturedValue:	
  2590                           ; 2 bytes @ 0x2
  2591                           
  2592                           
  2593                           ; 2 bytes @ 0x2
  2594  0079                     	ds	2
  2595  007B                     ??_CCP4_CaptureISR:	
  2596  007B                     ??_TMR4_ISR:	
  2597                           ; 1 bytes @ 0x4
  2598                           
  2599  007B                     ??_CCP4_DefaultCallBack:	
  2600                           ; 1 bytes @ 0x4
  2601                           
  2602  007B                     ??_get_pulse:	
  2603                           ; 1 bytes @ 0x4
  2604                           
  2605                           
  2606                           ; 1 bytes @ 0x4
  2607  007B                     	ds	1
  2608  007C                     CCP4_CaptureISR@module:	
  2609                           
  2610                           ; 2 bytes @ 0x5
  2611  007C                     	ds	2
  2612  007E                     ??_INTERRUPT_InterruptManager:	
  2613                           
  2614                           	psect	cstackBANK0
  2615  0020                     __pcstackBANK0:	
  2616                           ; 1 bytes @ 0x7
  2617                           
  2618  0020                     ?_EUSART_SetFramingErrorHandler:	
  2619  0020                     ?_EUSART_SetOverrunErrorHandler:	
  2620                           ; 1 bytes @ 0x0
  2621                           
  2622  0020                     ?_EUSART_SetErrorHandler:	
  2623                           ; 1 bytes @ 0x0
  2624                           
  2625  0020                     ??_OSCILLATOR_Initialize:	
  2626                           ; 1 bytes @ 0x0
  2627                           
  2628  0020                     ??_WDT_Initialize:	
  2629                           ; 1 bytes @ 0x0
  2630                           
  2631  0020                     ??_FVR_Initialize:	
  2632                           ; 1 bytes @ 0x0
  2633                           
  2634  0020                     ??_ADC_Initialize:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637  0020                     ??_PWM3_Initialize:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640  0020                     ??_TMR2_Initialize:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643  0020                     ??_TMR1_Initialize:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646  0020                     ?_TMR4_SetInterruptHandler:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649  0020                     ?_CCP4_SetCallBack:	
  2650                           ; 1 bytes @ 0x0
  2651                           
  2652  0020                     ?_IOCBF0_SetInterruptHandler:	
  2653                           ; 1 bytes @ 0x0
  2654                           
  2655  0020                     ?_IOCBF3_SetInterruptHandler:	
  2656                           ; 1 bytes @ 0x0
  2657                           
  2658  0020                     ?_IOCBF4_SetInterruptHandler:	
  2659                           ; 1 bytes @ 0x0
  2660                           
  2661  0020                     ?_IOCBF5_SetInterruptHandler:	
  2662                           ; 1 bytes @ 0x0
  2663                           
  2664  0020                     ??_min_up:	
  2665                           ; 1 bytes @ 0x0
  2666                           
  2667  0020                     ??_max_down:	
  2668                           ; 1 bytes @ 0x0
  2669                           
  2670  0020                     ??_EUSART_is_rx_ready:	
  2671                           ; 1 bytes @ 0x0
  2672                           
  2673  0020                     ??_EUSART_Read:	
  2674                           ; 1 bytes @ 0x0
  2675                           
  2676  0020                     ?_PWM3_LoadDutyValue:	
  2677                           ; 1 bytes @ 0x0
  2678                           
  2679  0020                     ?_abs:	
  2680                           ; 1 bytes @ 0x0
  2681                           
  2682  0020                     ?__Umul8_16:	
  2683                           ; 2 bytes @ 0x0
  2684                           
  2685  0020                     ?_ADC_GetConversion:	
  2686                           ; 2 bytes @ 0x0
  2687                           
  2688  0020                     ?___wmul:	
  2689                           ; 2 bytes @ 0x0
  2690                           
  2691  0020                     ?___fltol:	
  2692                           ; 2 bytes @ 0x0
  2693                           
  2694  0020                     __Umul8_16@multiplicand:	
  2695                           ; 4 bytes @ 0x0
  2696                           
  2697  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2698                           ; 1 bytes @ 0x0
  2699                           
  2700  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2701                           ; 2 bytes @ 0x0
  2702                           
  2703  0020                     EUSART_SetErrorHandler@interruptHandler:	
  2704                           ; 2 bytes @ 0x0
  2705                           
  2706  0020                     TMR4_SetInterruptHandler@InterruptHandler:	
  2707                           ; 2 bytes @ 0x0
  2708                           
  2709  0020                     CCP4_SetCallBack@customCallBack:	
  2710                           ; 2 bytes @ 0x0
  2711                           
  2712  0020                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  2713                           ; 2 bytes @ 0x0
  2714                           
  2715  0020                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  2716                           ; 2 bytes @ 0x0
  2717                           
  2718  0020                     IOCBF4_SetInterruptHandler@InterruptHandler:	
  2719                           ; 2 bytes @ 0x0
  2720                           
  2721  0020                     IOCBF5_SetInterruptHandler@InterruptHandler:	
  2722                           ; 2 bytes @ 0x0
  2723                           
  2724  0020                     PWM3_LoadDutyValue@dutyValue:	
  2725                           ; 2 bytes @ 0x0
  2726                           
  2727  0020                     ___wmul@multiplier:	
  2728                           ; 2 bytes @ 0x0
  2729                           
  2730  0020                     abs@a:	
  2731                           ; 2 bytes @ 0x0
  2732                           
  2733  0020                     ___fltol@f1:	
  2734                           ; 2 bytes @ 0x0
  2735                           
  2736                           
  2737                           ; 4 bytes @ 0x0
  2738  0020                     	ds	2
  2739  0022                     ??_EUSART_SetFramingErrorHandler:	
  2740  0022                     ??_EUSART_SetOverrunErrorHandler:	
  2741                           ; 1 bytes @ 0x2
  2742                           
  2743  0022                     ??_EUSART_SetErrorHandler:	
  2744                           ; 1 bytes @ 0x2
  2745                           
  2746  0022                     ??_PIN_MANAGER_Initialize:	
  2747                           ; 1 bytes @ 0x2
  2748                           
  2749  0022                     ??_CCP4_Initialize:	
  2750                           ; 1 bytes @ 0x2
  2751                           
  2752  0022                     ??_TMR4_Initialize:	
  2753                           ; 1 bytes @ 0x2
  2754                           
  2755  0022                     ??_TMR4_SetInterruptHandler:	
  2756                           ; 1 bytes @ 0x2
  2757                           
  2758  0022                     ??_CCP4_SetCallBack:	
  2759                           ; 1 bytes @ 0x2
  2760                           
  2761  0022                     ??_IOCBF0_SetInterruptHandler:	
  2762                           ; 1 bytes @ 0x2
  2763                           
  2764  0022                     ??_IOCBF3_SetInterruptHandler:	
  2765                           ; 1 bytes @ 0x2
  2766                           
  2767  0022                     ??_IOCBF4_SetInterruptHandler:	
  2768                           ; 1 bytes @ 0x2
  2769                           
  2770  0022                     ??_IOCBF5_SetInterruptHandler:	
  2771                           ; 1 bytes @ 0x2
  2772                           
  2773  0022                     ??_abs:	
  2774                           ; 1 bytes @ 0x2
  2775                           
  2776  0022                     ??__Umul8_16:	
  2777                           ; 1 bytes @ 0x2
  2778                           
  2779  0022                     ??_EUSART_Initialize:	
  2780                           ; 1 bytes @ 0x2
  2781                           
  2782  0022                     ??_SYSTEM_Initialize:	
  2783                           ; 1 bytes @ 0x2
  2784                           
  2785  0022                     ??_ADC_GetConversion:	
  2786                           ; 1 bytes @ 0x2
  2787                           
  2788  0022                     ??_PWM3_LoadDutyValue:	
  2789                           ; 1 bytes @ 0x2
  2790                           
  2791  0022                     ___wmul@multiplicand:	
  2792                           ; 1 bytes @ 0x2
  2793                           
  2794                           
  2795                           ; 2 bytes @ 0x2
  2796  0022                     	ds	1
  2797  0023                     ADC_GetConversion@channel:	
  2798  0023                     min_up@i:	
  2799                           ; 1 bytes @ 0x3
  2800                           
  2801  0023                     max_down@i:	
  2802                           ; 2 bytes @ 0x3
  2803                           
  2804                           
  2805                           ; 2 bytes @ 0x3
  2806  0023                     	ds	1
  2807  0024                     ??___wmul:	
  2808  0024                     ??___fltol:	
  2809                           ; 1 bytes @ 0x4
  2810                           
  2811  0024                     ?___xxtofl:	
  2812                           ; 1 bytes @ 0x4
  2813                           
  2814  0024                     ___wmul@product:	
  2815                           ; 4 bytes @ 0x4
  2816                           
  2817  0024                     __Umul8_16@product:	
  2818                           ; 2 bytes @ 0x4
  2819                           
  2820  0024                     ___xxtofl@val:	
  2821                           ; 2 bytes @ 0x4
  2822                           
  2823                           
  2824                           ; 4 bytes @ 0x4
  2825  0024                     	ds	1
  2826  0025                     ??_update:	
  2827                           
  2828                           ; 1 bytes @ 0x5
  2829  0025                     	ds	1
  2830  0026                     __Umul8_16@word_mpld:	
  2831                           
  2832                           ; 2 bytes @ 0x6
  2833  0026                     	ds	2
  2834  0028                     ??___xxtofl:	
  2835  0028                     update@aux:	
  2836                           ; 1 bytes @ 0x8
  2837                           
  2838  0028                     __Umul8_16@multiplier:	
  2839                           ; 1 bytes @ 0x8
  2840                           
  2841                           
  2842                           ; 1 bytes @ 0x8
  2843  0028                     	ds	1
  2844  0029                     ___fltol@sign1:	
  2845  0029                     update@i_1261:	
  2846                           ; 1 bytes @ 0x9
  2847                           
  2848                           
  2849                           ; 2 bytes @ 0x9
  2850  0029                     	ds	1
  2851  002A                     ___fltol@exp1:	
  2852                           
  2853                           ; 1 bytes @ 0xA
  2854  002A                     	ds	1
  2855  002B                     update@i:	
  2856                           
  2857                           ; 2 bytes @ 0xB
  2858  002B                     	ds	1
  2859  002C                     ___xxtofl@sign:	
  2860                           
  2861                           ; 1 bytes @ 0xC
  2862  002C                     	ds	1
  2863  002D                     ___xxtofl@exp:	
  2864  002D                     update@i_1262:	
  2865                           ; 1 bytes @ 0xD
  2866                           
  2867                           
  2868                           ; 2 bytes @ 0xD
  2869  002D                     	ds	1
  2870  002E                     ___xxtofl@arg:	
  2871                           
  2872                           ; 4 bytes @ 0xE
  2873  002E                     	ds	4
  2874  0032                     ?___flmul:	
  2875  0032                     ___flmul@b:	
  2876                           ; 4 bytes @ 0x12
  2877                           
  2878                           
  2879                           ; 4 bytes @ 0x12
  2880  0032                     	ds	4
  2881  0036                     ___flmul@a:	
  2882                           
  2883                           ; 4 bytes @ 0x16
  2884  0036                     	ds	4
  2885  003A                     ??___flmul:	
  2886                           
  2887                           ; 1 bytes @ 0x1A
  2888  003A                     	ds	5
  2889  003F                     ___flmul@sign:	
  2890                           
  2891                           ; 1 bytes @ 0x1F
  2892  003F                     	ds	1
  2893  0040                     ___flmul@grs:	
  2894                           
  2895                           ; 4 bytes @ 0x20
  2896  0040                     	ds	4
  2897  0044                     ___flmul@aexp:	
  2898                           
  2899                           ; 1 bytes @ 0x24
  2900  0044                     	ds	1
  2901  0045                     ___flmul@bexp:	
  2902                           
  2903                           ; 1 bytes @ 0x25
  2904  0045                     	ds	1
  2905  0046                     ___flmul@prod:	
  2906                           
  2907                           ; 4 bytes @ 0x26
  2908  0046                     	ds	4
  2909  004A                     ___flmul@temp:	
  2910                           
  2911                           ; 2 bytes @ 0x2A
  2912  004A                     	ds	2
  2913  004C                     ??_controle:	
  2914  004C                     ?___fldiv:	
  2915                           ; 1 bytes @ 0x2C
  2916                           
  2917  004C                     ___fldiv@a:	
  2918                           ; 4 bytes @ 0x2C
  2919                           
  2920                           
  2921                           ; 4 bytes @ 0x2C
  2922  004C                     	ds	4
  2923  0050                     controle@destiny:	
  2924  0050                     ___fldiv@b:	
  2925                           ; 2 bytes @ 0x30
  2926                           
  2927                           
  2928                           ; 4 bytes @ 0x30
  2929  0050                     	ds	2
  2930  0052                     controle@route:	
  2931                           
  2932                           ; 2 bytes @ 0x32
  2933  0052                     	ds	2
  2934  0054                     ??___fldiv:	
  2935  0054                     controle@a:	
  2936                           ; 1 bytes @ 0x34
  2937                           
  2938                           
  2939                           ; 2 bytes @ 0x34
  2940  0054                     	ds	2
  2941  0056                     controle@min_dutyValue:	
  2942                           
  2943                           ; 2 bytes @ 0x36
  2944  0056                     	ds	2
  2945  0058                     controle@max_dutyValue:	
  2946                           
  2947                           ; 2 bytes @ 0x38
  2948  0058                     	ds	1
  2949  0059                     ___fldiv@rem:	
  2950                           
  2951                           ; 4 bytes @ 0x39
  2952  0059                     	ds	1
  2953  005A                     controle@dutyValue:	
  2954                           
  2955                           ; 2 bytes @ 0x3A
  2956  005A                     	ds	2
  2957  005C                     controle@count:	
  2958                           
  2959                           ; 2 bytes @ 0x3C
  2960  005C                     	ds	1
  2961  005D                     ___fldiv@sign:	
  2962                           
  2963                           ; 1 bytes @ 0x3D
  2964  005D                     	ds	1
  2965  005E                     ??_col_up:	
  2966  005E                     ??_col_down:	
  2967                           ; 1 bytes @ 0x3E
  2968                           
  2969  005E                     ___fldiv@new_exp:	
  2970                           ; 1 bytes @ 0x3E
  2971                           
  2972                           
  2973                           ; 2 bytes @ 0x3E
  2974  005E                     	ds	2
  2975  0060                     ??_gerenciamento:	
  2976  0060                     ___fldiv@grs:	
  2977                           ; 1 bytes @ 0x40
  2978                           
  2979                           
  2980                           ; 4 bytes @ 0x40
  2981  0060                     	ds	4
  2982  0064                     ___fldiv@bexp:	
  2983                           
  2984                           ; 1 bytes @ 0x44
  2985  0064                     	ds	1
  2986  0065                     ___fldiv@aexp:	
  2987                           
  2988                           ; 1 bytes @ 0x45
  2989  0065                     	ds	1
  2990  0066                     ??_comunicacao:	
  2991                           
  2992                           ; 1 bytes @ 0x46
  2993  0066                     	ds	1
  2994  0067                     comunicacao@speed:	
  2995                           
  2996                           ; 4 bytes @ 0x47
  2997  0067                     	ds	4
  2998  006B                     comunicacao@position:	
  2999                           
  3000                           ; 4 bytes @ 0x4B
  3001  006B                     	ds	4
  3002  006F                     ??_main:	
  3003                           
  3004                           	psect	maintext
  3005  0B17                     __pmaintext:	
  3006                           ; 1 bytes @ 0x4F
  3007 ;;
  3008 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3009 ;;
  3010 ;; *************** function _main *****************
  3011 ;; Defined at:
  3012 ;;		line 125 in file "main.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;		None
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : B1F/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3026 ;;      Params:         0       0       0       0       0       0
  3027 ;;      Locals:         0       0       0       0       0       0
  3028 ;;      Temps:          0       0       0       0       0       0
  3029 ;;      Totals:         0       0       0       0       0       0
  3030 ;;Total ram usage:        0 bytes
  3031 ;; Hardware stack levels required when called:    9
  3032 ;; This function calls:
  3033 ;;		_CCP4_SetCallBack
  3034 ;;		_IOCBF0_SetInterruptHandler
  3035 ;;		_IOCBF3_SetInterruptHandler
  3036 ;;		_IOCBF4_SetInterruptHandler
  3037 ;;		_IOCBF5_SetInterruptHandler
  3038 ;;		_SYSTEM_Initialize
  3039 ;;		_TMR4_SetInterruptHandler
  3040 ;;		_comunicacao
  3041 ;;		_controle
  3042 ;;		_gerenciamento
  3043 ;; This function is called by:
  3044 ;;		Startup code after reset
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           
  3049                           ;psect for function _main
  3050  0B17                     _main:	
  3051  0B17                     l3983:	
  3052                           ;incstack = 0
  3053                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3054                           
  3055                           
  3056                           ;main.c: 129:     SYSTEM_Initialize();
  3057  0B17  318A  2253  318B   	fcall	_SYSTEM_Initialize
  3058  0B1A                     l3985:	
  3059                           
  3060                           ;main.c: 130:     (INTCONbits.GIE = 1);
  3061  0B1A  178B               	bsf	11,7	;volatile
  3062  0B1B                     l3987:	
  3063                           
  3064                           ;main.c: 131:     (INTCONbits.PEIE = 1);
  3065  0B1B  170B               	bsf	11,6	;volatile
  3066                           
  3067                           ;main.c: 134:     TMR4_SetInterruptHandler(send_data);
  3068  0B1C  30E2               	movlw	low _send_data
  3069  0B1D  0020               	movlb	0	; select bank0
  3070  0B1E  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  3071  0B1F  300A               	movlw	high _send_data
  3072  0B20  00A1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  3073  0B21  3187  27F7  318B   	fcall	_TMR4_SetInterruptHandler
  3074                           
  3075                           ;main.c: 135:     IOCBF0_SetInterruptHandler(sensor1);
  3076  0B24  3059               	movlw	low _sensor1
  3077  0B25  0020               	movlb	0	; select bank0
  3078  0B26  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler
  3079  0B27  3008               	movlw	high _sensor1
  3080  0B28  00A1               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler+1
  3081  0B29  3188  209B  318B   	fcall	_IOCBF0_SetInterruptHandler
  3082                           
  3083                           ;main.c: 136:     IOCBF3_SetInterruptHandler(sensor2);
  3084  0B2C  30D2               	movlw	low _sensor2
  3085  0B2D  0020               	movlb	0	; select bank0
  3086  0B2E  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler
  3087  0B2F  3008               	movlw	high _sensor2
  3088  0B30  00A1               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler+1
  3089  0B31  3188  20A4  318B   	fcall	_IOCBF3_SetInterruptHandler
  3090                           
  3091                           ;main.c: 137:     IOCBF4_SetInterruptHandler(sensor3);
  3092  0B34  30DD               	movlw	low _sensor3
  3093  0B35  0020               	movlb	0	; select bank0
  3094  0B36  00A0               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
  3095  0B37  3008               	movlw	high _sensor3
  3096  0B38  00A1               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
  3097  0B39  3188  20AD  318B   	fcall	_IOCBF4_SetInterruptHandler
  3098                           
  3099                           ;main.c: 138:     IOCBF5_SetInterruptHandler(sensor4);
  3100  0B3C  30E8               	movlw	low _sensor4
  3101  0B3D  0020               	movlb	0	; select bank0
  3102  0B3E  00A0               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler
  3103  0B3F  3008               	movlw	high _sensor4
  3104  0B40  00A1               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler+1
  3105  0B41  3188  20B6  318B   	fcall	_IOCBF5_SetInterruptHandler
  3106                           
  3107                           ;main.c: 139:     CCP4_SetCallBack(get_pulse);
  3108  0B44  30BD               	movlw	low _get_pulse
  3109  0B45  0020               	movlb	0	; select bank0
  3110  0B46  00A0               	movwf	CCP4_SetCallBack@customCallBack
  3111  0B47  300A               	movlw	high _get_pulse
  3112  0B48  00A1               	movwf	CCP4_SetCallBack@customCallBack+1
  3113  0B49  3188  2077  318B   	fcall	_CCP4_SetCallBack
  3114  0B4C                     l604:	
  3115                           ;main.c: 147:     while (1)
  3116                           
  3117                           
  3118                           ;main.c: 148:     {;main.c: 149:        comunicacao ();
  3119  0B4C  318F  272D  318B   	fcall	_comunicacao
  3120  0B4F                     l3989:	
  3121                           
  3122                           ;main.c: 150:        controle();
  3123  0B4F  3186  2635  318B   	fcall	_controle
  3124  0B52                     l3991:	
  3125                           
  3126                           ;main.c: 151:        gerenciamento();
  3127  0B52  318B  239C  318B   	fcall	_gerenciamento
  3128  0B55  2B4C               	goto	l604
  3129  0B56  3180  2834         	ljmp	start
  3130  0B58                     __end_of_main:	
  3131                           
  3132                           	psect	text1
  3133  0B9C                     __ptext1:	
  3134 ;; *************** function _gerenciamento *****************
  3135 ;; Defined at:
  3136 ;;		line 229 in file "main.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;		None
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;		None
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      void 
  3143 ;; Registers used:
  3144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3150 ;;      Params:         0       0       0       0       0       0
  3151 ;;      Locals:         0       0       0       0       0       0
  3152 ;;      Temps:          0       0       0       0       0       0
  3153 ;;      Totals:         0       0       0       0       0       0
  3154 ;;Total ram usage:        0 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:    8
  3157 ;; This function calls:
  3158 ;;		_abs
  3159 ;;		_col_down
  3160 ;;		_col_up
  3161 ;;		_update
  3162 ;; This function is called by:
  3163 ;;		_main
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           
  3168                           ;psect for function _gerenciamento
  3169  0B9C                     _gerenciamento:	
  3170  0B9C                     l3943:	
  3171                           ;incstack = 0
  3172                           ; Regs used in _gerenciamento: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3173                           
  3174                           
  3175                           ;main.c: 231:     update();
  3176  0B9C  3182  22A8  318B   	fcall	_update
  3177  0B9F                     l3945:	
  3178                           
  3179                           ;main.c: 236:    if(fila_up[0]!=out_value||fila_up[1]!=out_value||fila_up[2]!=out_value|
      +                          |fila_up[3]!=out_value||fila_up[4]!=out_value)
  3180  0B9F  0021               	movlb	1	; select bank1
  3181  0BA0  083E               	movf	_fila_up^(0+128),w
  3182  0BA1  043F               	iorwf	(_fila_up+1)^(0+128),w
  3183  0BA2  1D03               	btfss	3,2
  3184  0BA3  2BA5               	goto	u4051
  3185  0BA4  2BA6               	goto	u4050
  3186  0BA5                     u4051:	
  3187  0BA5  2BBE               	goto	l3955
  3188  0BA6                     u4050:	
  3189  0BA6                     l3947:	
  3190  0BA6  0840               	movf	(_fila_up^(0+128)+2),w
  3191  0BA7  0441               	iorwf	((_fila_up+1)^(0+128)+2),w
  3192  0BA8  1D03               	btfss	3,2
  3193  0BA9  2BAB               	goto	u4061
  3194  0BAA  2BAC               	goto	u4060
  3195  0BAB                     u4061:	
  3196  0BAB  2BBE               	goto	l3955
  3197  0BAC                     u4060:	
  3198  0BAC                     l3949:	
  3199  0BAC  0842               	movf	(_fila_up^(0+128)+4),w
  3200  0BAD  0443               	iorwf	((_fila_up+1)^(0+128)+4),w
  3201  0BAE  1D03               	btfss	3,2
  3202  0BAF  2BB1               	goto	u4071
  3203  0BB0  2BB2               	goto	u4070
  3204  0BB1                     u4071:	
  3205  0BB1  2BBE               	goto	l3955
  3206  0BB2                     u4070:	
  3207  0BB2                     l3951:	
  3208  0BB2  0844               	movf	(_fila_up^(0+128)+6),w
  3209  0BB3  0445               	iorwf	((_fila_up+1)^(0+128)+6),w
  3210  0BB4  1D03               	btfss	3,2
  3211  0BB5  2BB7               	goto	u4081
  3212  0BB6  2BB8               	goto	u4080
  3213  0BB7                     u4081:	
  3214  0BB7  2BBE               	goto	l3955
  3215  0BB8                     u4080:	
  3216  0BB8                     l3953:	
  3217  0BB8  0846               	movf	(_fila_up^(0+128)+8),w
  3218  0BB9  0447               	iorwf	((_fila_up+1)^(0+128)+8),w
  3219  0BBA  1903               	btfsc	3,2
  3220  0BBB  2BBD               	goto	u4091
  3221  0BBC  2BBE               	goto	u4090
  3222  0BBD                     u4091:	
  3223  0BBD  2BC6               	goto	l3959
  3224  0BBE                     u4090:	
  3225  0BBE                     l3955:	
  3226                           
  3227                           ;main.c: 237:    {;main.c: 238:      sentido2=1;
  3228  0BBE  3001               	movlw	1
  3229  0BBF  00D4               	movwf	_sentido2^(0+128)
  3230  0BC0  3000               	movlw	0
  3231  0BC1  00D5               	movwf	(_sentido2^(0+128)+1)
  3232  0BC2                     l3957:	
  3233                           
  3234                           ;main.c: 239:      col_up();
  3235  0BC2  3187  2775  318B   	fcall	_col_up
  3236                           
  3237                           ;main.c: 240:    }
  3238  0BC5  2C0D               	goto	l636
  3239  0BC6                     l3959:	
  3240  0BC6  082A               	movf	_origem_down^(0+128),w
  3241  0BC7  042B               	iorwf	(_origem_down+1)^(0+128),w
  3242  0BC8  1D03               	btfss	3,2
  3243  0BC9  2BCB               	goto	u4101
  3244  0BCA  2BCC               	goto	u4100
  3245  0BCB                     u4101:	
  3246  0BCB  2BE4               	goto	l3969
  3247  0BCC                     u4100:	
  3248  0BCC                     l3961:	
  3249  0BCC  082C               	movf	(_origem_down^(0+128)+2),w
  3250  0BCD  042D               	iorwf	((_origem_down+1)^(0+128)+2),w
  3251  0BCE  1D03               	btfss	3,2
  3252  0BCF  2BD1               	goto	u4111
  3253  0BD0  2BD2               	goto	u4110
  3254  0BD1                     u4111:	
  3255  0BD1  2BE4               	goto	l3969
  3256  0BD2                     u4110:	
  3257  0BD2                     l3963:	
  3258  0BD2  082E               	movf	(_origem_down^(0+128)+4),w
  3259  0BD3  042F               	iorwf	((_origem_down+1)^(0+128)+4),w
  3260  0BD4  1D03               	btfss	3,2
  3261  0BD5  2BD7               	goto	u4121
  3262  0BD6  2BD8               	goto	u4120
  3263  0BD7                     u4121:	
  3264  0BD7  2BE4               	goto	l3969
  3265  0BD8                     u4120:	
  3266  0BD8                     l3965:	
  3267  0BD8  0830               	movf	(_origem_down^(0+128)+6),w
  3268  0BD9  0431               	iorwf	((_origem_down+1)^(0+128)+6),w
  3269  0BDA  1D03               	btfss	3,2
  3270  0BDB  2BDD               	goto	u4131
  3271  0BDC  2BDE               	goto	u4130
  3272  0BDD                     u4131:	
  3273  0BDD  2BE4               	goto	l3969
  3274  0BDE                     u4130:	
  3275  0BDE                     l3967:	
  3276  0BDE  0832               	movf	(_origem_down^(0+128)+8),w
  3277  0BDF  0433               	iorwf	((_origem_down+1)^(0+128)+8),w
  3278  0BE0  1903               	btfsc	3,2
  3279  0BE1  2BE3               	goto	u4141
  3280  0BE2  2BE4               	goto	u4140
  3281  0BE3                     u4141:	
  3282  0BE3  2BEA               	goto	l3973
  3283  0BE4                     u4140:	
  3284  0BE4                     l3969:	
  3285                           
  3286                           ;main.c: 244:    {;main.c: 245:      sentido2=0;
  3287  0BE4  01D4               	clrf	_sentido2^(0+128)
  3288  0BE5  01D5               	clrf	(_sentido2+1)^(0+128)
  3289  0BE6                     l3971:	
  3290                           
  3291                           ;main.c: 246:      col_down();
  3292  0BE6  318C  2483  318B   	fcall	_col_down
  3293                           
  3294                           ;main.c: 247:    }
  3295  0BE9  2C0D               	goto	l636
  3296  0BEA                     l3973:	
  3297                           
  3298                           ;main.c: 251:    {;main.c: 252:      sentido2=2;
  3299  0BEA  3002               	movlw	2
  3300  0BEB  00D4               	movwf	_sentido2^(0+128)
  3301  0BEC  3000               	movlw	0
  3302  0BED  00D5               	movwf	(_sentido2^(0+128)+1)
  3303  0BEE                     l3975:	
  3304                           
  3305                           ;main.c: 253:      distancia=abs(and_ating-1);
  3306  0BEE  0020               	movlb	0	; select bank0
  3307  0BEF  086F               	movf	_and_ating,w
  3308  0BF0  3EFF               	addlw	255
  3309  0BF1  00A0               	movwf	abs@a
  3310  0BF2  30FF               	movlw	255
  3311  0BF3  1803               	skipnc
  3312  0BF4  3000               	movlw	0
  3313  0BF5  00A1               	movwf	abs@a+1
  3314  0BF6  3189  21B9  318B   	fcall	_abs
  3315  0BF9  0020               	movlb	0	; select bank0
  3316  0BFA  0821               	movf	?_abs+1,w
  3317  0BFB  0021               	movlb	1	; select bank1
  3318  0BFC  00D1               	movwf	(_distancia+1)^(0+128)
  3319  0BFD  0020               	movlb	0	; select bank0
  3320  0BFE  0820               	movf	?_abs,w
  3321  0BFF  0021               	movlb	1	; select bank1
  3322  0C00  00D0               	movwf	_distancia^(0+128)
  3323  0C01                     l3977:	
  3324                           
  3325                           ;main.c: 254:       if(and_ating > 1)
  3326  0C01  3002               	movlw	2
  3327  0C02  0020               	movlb	0	; select bank0
  3328  0C03  026F               	subwf	_and_ating,w
  3329  0C04  1C03               	skipc
  3330  0C05  2C07               	goto	u4151
  3331  0C06  2C08               	goto	u4150
  3332  0C07                     u4151:	
  3333  0C07  2C0D               	goto	l636
  3334  0C08                     u4150:	
  3335  0C08                     l3979:	
  3336                           
  3337                           ;main.c: 255:          {;main.c: 256:           sentido = 0;
  3338  0C08  0021               	movlb	1	; select bank1
  3339  0C09  01D8               	clrf	_sentido^(0+128)
  3340  0C0A  01D9               	clrf	(_sentido+1)^(0+128)
  3341  0C0B                     l3981:	
  3342                           
  3343                           ;main.c: 257:            LATAbits.LATA2 = 0;
  3344  0C0B  0022               	movlb	2	; select bank2
  3345  0C0C  110C               	bcf	12,2	;volatile
  3346  0C0D                     l636:	
  3347  0C0D  0008               	return
  3348  0C0E                     __end_of_gerenciamento:	
  3349                           
  3350                           	psect	text2
  3351  0775                     __ptext2:	
  3352 ;; *************** function _col_up *****************
  3353 ;; Defined at:
  3354 ;;		line 264 in file "main.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3368 ;;      Params:         0       0       0       0       0       0
  3369 ;;      Locals:         0       0       0       0       0       0
  3370 ;;      Temps:          0       2       0       0       0       0
  3371 ;;      Totals:         0       2       0       0       0       0
  3372 ;;Total ram usage:        2 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    7
  3375 ;; This function calls:
  3376 ;;		_abs
  3377 ;;		_controle
  3378 ;;		_min_up
  3379 ;; This function is called by:
  3380 ;;		_gerenciamento
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           
  3385                           ;psect for function _col_up
  3386  0775                     _col_up:	
  3387  0775                     l3889:	
  3388                           ;incstack = 0
  3389                           ; Regs used in _col_up: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3390                           
  3391                           
  3392                           ;main.c: 266:         while(and_ating!=min_origem_up)
  3393  0775  2FAB               	goto	l3903
  3394  0776                     l3891:	
  3395                           
  3396                           ;main.c: 267:         {;main.c: 268:             distancia=abs(and_ating-min_origem_up);
  3397  0776  086F               	movf	_and_ating,w
  3398  0777  00DE               	movwf	??_col_up
  3399  0778  0870               	movf	_min_origem_up,w
  3400  0779  025E               	subwf	??_col_up,w
  3401  077A  00A0               	movwf	abs@a
  3402  077B  0971               	comf	_min_origem_up+1,w
  3403  077C  1803               	skipnc
  3404  077D  0A89               	incf	9,f
  3405  077E  00A1               	movwf	abs@a+1
  3406  077F  3189  21B9  3187   	fcall	_abs
  3407  0782  0020               	movlb	0	; select bank0
  3408  0783  0821               	movf	?_abs+1,w
  3409  0784  0021               	movlb	1	; select bank1
  3410  0785  00D1               	movwf	(_distancia+1)^(0+128)
  3411  0786  0020               	movlb	0	; select bank0
  3412  0787  0820               	movf	?_abs,w
  3413  0788  0021               	movlb	1	; select bank1
  3414  0789  00D0               	movwf	_distancia^(0+128)
  3415  078A                     l3893:	
  3416                           
  3417                           ;main.c: 269:             if(and_ating>min_origem_up)
  3418  078A  0871               	movf	_min_origem_up+1,w
  3419  078B  3A80               	xorlw	128
  3420  078C  0020               	movlb	0	; select bank0
  3421  078D  00DE               	movwf	??_col_up
  3422  078E  3080               	movlw	128
  3423  078F  025E               	subwf	??_col_up,w
  3424  0790  1D03               	skipz
  3425  0791  2F94               	goto	u3955
  3426  0792  086F               	movf	_and_ating,w
  3427  0793  0270               	subwf	_min_origem_up,w
  3428  0794                     u3955:	
  3429  0794  1803               	skipnc
  3430  0795  2F97               	goto	u3951
  3431  0796  2F98               	goto	u3950
  3432  0797                     u3951:	
  3433  0797  2F9A               	goto	l3897
  3434  0798                     u3950:	
  3435  0798                     l3895:	
  3436                           
  3437                           ;main.c: 270:             {;main.c: 271:                 LATAbits.LATA2 = 0;
  3438  0798  0022               	movlb	2	; select bank2
  3439  0799  110C               	bcf	12,2	;volatile
  3440  079A                     l3897:	
  3441                           
  3442                           ;main.c: 273:             if(and_ating<min_origem_up)
  3443  079A  0871               	movf	_min_origem_up+1,w
  3444  079B  3A80               	xorlw	128
  3445  079C  3C80               	sublw	128
  3446  079D  1D03               	skipz
  3447  079E  2FA2               	goto	u3965
  3448  079F  0870               	movf	_min_origem_up,w
  3449  07A0  0020               	movlb	0	; select bank0
  3450  07A1  026F               	subwf	_and_ating,w
  3451  07A2                     u3965:	
  3452  07A2  1803               	skipnc
  3453  07A3  2FA5               	goto	u3961
  3454  07A4  2FA6               	goto	u3960
  3455  07A5                     u3961:	
  3456  07A5  2FA8               	goto	l3901
  3457  07A6                     u3960:	
  3458  07A6                     l3899:	
  3459                           
  3460                           ;main.c: 274:             {;main.c: 276:                 LATAbits.LATA2 = 1;
  3461  07A6  0022               	movlb	2	; select bank2
  3462  07A7  150C               	bsf	12,2	;volatile
  3463  07A8                     l3901:	
  3464                           
  3465                           ;main.c: 278:             controle();
  3466  07A8  3186  2635  3187   	fcall	_controle
  3467  07AB                     l3903:	
  3468                           
  3469                           ;main.c: 266:         while(and_ating!=min_origem_up)
  3470  07AB  0020               	movlb	0	; select bank0
  3471  07AC  086F               	movf	_and_ating,w
  3472  07AD  00DE               	movwf	??_col_up
  3473  07AE  01DF               	clrf	??_col_up+1
  3474  07AF  0871               	movf	_min_origem_up+1,w
  3475  07B0  065F               	xorwf	??_col_up+1,w
  3476  07B1  1D03               	skipz
  3477  07B2  2FB5               	goto	u3975
  3478  07B3  0870               	movf	_min_origem_up,w
  3479  07B4  065E               	xorwf	??_col_up,w
  3480  07B5                     u3975:	
  3481  07B5  1D03               	skipz
  3482  07B6  2FB8               	goto	u3971
  3483  07B7  2FB9               	goto	u3970
  3484  07B8                     u3971:	
  3485  07B8  2F76               	goto	l3891
  3486  07B9                     u3970:	
  3487  07B9                     l643:	
  3488                           
  3489                           ;main.c: 280:         LATAbits.LATA2 = 1;
  3490  07B9  0022               	movlb	2	; select bank2
  3491  07BA  150C               	bsf	12,2	;volatile
  3492  07BB                     l3905:	
  3493                           
  3494                           ;main.c: 282:         {;main.c: 283:             if(and_ating==min_origem_up)
  3495  07BB  0020               	movlb	0	; select bank0
  3496  07BC  086F               	movf	_and_ating,w
  3497  07BD  00DE               	movwf	??_col_up
  3498  07BE  01DF               	clrf	??_col_up+1
  3499  07BF  0871               	movf	_min_origem_up+1,w
  3500  07C0  065F               	xorwf	??_col_up+1,w
  3501  07C1  1D03               	skipz
  3502  07C2  2FC5               	goto	u3985
  3503  07C3  0870               	movf	_min_origem_up,w
  3504  07C4  065E               	xorwf	??_col_up,w
  3505  07C5                     u3985:	
  3506  07C5  1D03               	skipz
  3507  07C6  2FC8               	goto	u3981
  3508  07C7  2FC9               	goto	u3980
  3509  07C8                     u3981:	
  3510  07C8  2FE4               	goto	l3913
  3511  07C9                     u3980:	
  3512  07C9                     l3907:	
  3513                           
  3514                           ;main.c: 284:             {;main.c: 285:                 min_up();
  3515  07C9  318E  2660  3187   	fcall	_min_up
  3516  07CC                     l3909:	
  3517                           
  3518                           ;main.c: 286:                 distancia=abs(and_ating-min_origem_up);
  3519  07CC  0020               	movlb	0	; select bank0
  3520  07CD  086F               	movf	_and_ating,w
  3521  07CE  00DE               	movwf	??_col_up
  3522  07CF  0870               	movf	_min_origem_up,w
  3523  07D0  025E               	subwf	??_col_up,w
  3524  07D1  00A0               	movwf	abs@a
  3525  07D2  0971               	comf	_min_origem_up+1,w
  3526  07D3  1803               	skipnc
  3527  07D4  0A89               	incf	9,f
  3528  07D5  00A1               	movwf	abs@a+1
  3529  07D6  3189  21B9  3187   	fcall	_abs
  3530  07D9  0020               	movlb	0	; select bank0
  3531  07DA  0821               	movf	?_abs+1,w
  3532  07DB  0021               	movlb	1	; select bank1
  3533  07DC  00D1               	movwf	(_distancia+1)^(0+128)
  3534  07DD  0020               	movlb	0	; select bank0
  3535  07DE  0820               	movf	?_abs,w
  3536  07DF  0021               	movlb	1	; select bank1
  3537  07E0  00D0               	movwf	_distancia^(0+128)
  3538  07E1                     l3911:	
  3539                           
  3540                           ;main.c: 287:                 controle();
  3541  07E1  3186  2635  3187   	fcall	_controle
  3542  07E4                     l3913:	
  3543                           
  3544                           ;main.c: 289:         }while (and_ating!=max_fila_up);
  3545  07E4  0020               	movlb	0	; select bank0
  3546  07E5  086F               	movf	_and_ating,w
  3547  07E6  00DE               	movwf	??_col_up
  3548  07E7  01DF               	clrf	??_col_up+1
  3549  07E8  0021               	movlb	1	; select bank1
  3550  07E9  084F               	movf	(_max_fila_up+1)^(0+128),w
  3551  07EA  0020               	movlb	0	; select bank0
  3552  07EB  065F               	xorwf	??_col_up+1,w
  3553  07EC  1D03               	skipz
  3554  07ED  2FF2               	goto	u3995
  3555  07EE  0021               	movlb	1	; select bank1
  3556  07EF  084E               	movf	_max_fila_up^(0+128),w
  3557  07F0  0020               	movlb	0	; select bank0
  3558  07F1  065E               	xorwf	??_col_up,w
  3559  07F2                     u3995:	
  3560  07F2  1D03               	skipz
  3561  07F3  2FF5               	goto	u3991
  3562  07F4  2FF6               	goto	u3990
  3563  07F5                     u3991:	
  3564  07F5  2FBB               	goto	l3905
  3565  07F6                     u3990:	
  3566  07F6                     l647:	
  3567  07F6  0008               	return
  3568  07F7                     __end_of_col_up:	
  3569                           
  3570                           	psect	text3
  3571  0C83                     __ptext3:	
  3572 ;; *************** function _col_down *****************
  3573 ;; Defined at:
  3574 ;;		line 292 in file "main.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;		None
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3588 ;;      Params:         0       0       0       0       0       0
  3589 ;;      Locals:         0       0       0       0       0       0
  3590 ;;      Temps:          0       2       0       0       0       0
  3591 ;;      Totals:         0       2       0       0       0       0
  3592 ;;Total ram usage:        2 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    7
  3595 ;; This function calls:
  3596 ;;		_abs
  3597 ;;		_controle
  3598 ;;		_max_down
  3599 ;; This function is called by:
  3600 ;;		_gerenciamento
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           
  3605                           ;psect for function _col_down
  3606  0C83                     _col_down:	
  3607  0C83                     l3915:	
  3608                           ;incstack = 0
  3609                           ; Regs used in _col_down: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3610                           
  3611                           
  3612                           ;main.c: 294:         while(and_ating!=max_origem_down)
  3613  0C83  2CB9               	goto	l3929
  3614  0C84                     l3917:	
  3615                           
  3616                           ;main.c: 295:         {;main.c: 296:             distancia = abs(and_ating-max_origem_do
      +                          wn);
  3617  0C84  086F               	movf	_and_ating,w
  3618  0C85  00DE               	movwf	??_col_down
  3619  0C86  0872               	movf	_max_origem_down,w
  3620  0C87  025E               	subwf	??_col_down,w
  3621  0C88  00A0               	movwf	abs@a
  3622  0C89  0973               	comf	_max_origem_down+1,w
  3623  0C8A  1803               	skipnc
  3624  0C8B  0A89               	incf	9,f
  3625  0C8C  00A1               	movwf	abs@a+1
  3626  0C8D  3189  21B9  318C   	fcall	_abs
  3627  0C90  0020               	movlb	0	; select bank0
  3628  0C91  0821               	movf	?_abs+1,w
  3629  0C92  0021               	movlb	1	; select bank1
  3630  0C93  00D1               	movwf	(_distancia+1)^(0+128)
  3631  0C94  0020               	movlb	0	; select bank0
  3632  0C95  0820               	movf	?_abs,w
  3633  0C96  0021               	movlb	1	; select bank1
  3634  0C97  00D0               	movwf	_distancia^(0+128)
  3635  0C98                     l3919:	
  3636                           
  3637                           ;main.c: 297:             if(and_ating>max_origem_down)
  3638  0C98  0873               	movf	_max_origem_down+1,w
  3639  0C99  3A80               	xorlw	128
  3640  0C9A  0020               	movlb	0	; select bank0
  3641  0C9B  00DE               	movwf	??_col_down
  3642  0C9C  3080               	movlw	128
  3643  0C9D  025E               	subwf	??_col_down,w
  3644  0C9E  1D03               	skipz
  3645  0C9F  2CA2               	goto	u4005
  3646  0CA0  086F               	movf	_and_ating,w
  3647  0CA1  0272               	subwf	_max_origem_down,w
  3648  0CA2                     u4005:	
  3649  0CA2  1803               	skipnc
  3650  0CA3  2CA5               	goto	u4001
  3651  0CA4  2CA6               	goto	u4000
  3652  0CA5                     u4001:	
  3653  0CA5  2CA8               	goto	l3923
  3654  0CA6                     u4000:	
  3655  0CA6                     l3921:	
  3656                           
  3657                           ;main.c: 298:             {;main.c: 299:                 LATAbits.LATA2 = 0;
  3658  0CA6  0022               	movlb	2	; select bank2
  3659  0CA7  110C               	bcf	12,2	;volatile
  3660  0CA8                     l3923:	
  3661                           
  3662                           ;main.c: 301:             if(and_ating<max_origem_down)
  3663  0CA8  0873               	movf	_max_origem_down+1,w
  3664  0CA9  3A80               	xorlw	128
  3665  0CAA  3C80               	sublw	128
  3666  0CAB  1D03               	skipz
  3667  0CAC  2CB0               	goto	u4015
  3668  0CAD  0872               	movf	_max_origem_down,w
  3669  0CAE  0020               	movlb	0	; select bank0
  3670  0CAF  026F               	subwf	_and_ating,w
  3671  0CB0                     u4015:	
  3672  0CB0  1803               	skipnc
  3673  0CB1  2CB3               	goto	u4011
  3674  0CB2  2CB4               	goto	u4010
  3675  0CB3                     u4011:	
  3676  0CB3  2CB6               	goto	l3927
  3677  0CB4                     u4010:	
  3678  0CB4                     l3925:	
  3679                           
  3680                           ;main.c: 302:             {;main.c: 303:                 LATAbits.LATA2 = 1;
  3681  0CB4  0022               	movlb	2	; select bank2
  3682  0CB5  150C               	bsf	12,2	;volatile
  3683  0CB6                     l3927:	
  3684                           
  3685                           ;main.c: 305:             controle();
  3686  0CB6  3186  2635  318C   	fcall	_controle
  3687  0CB9                     l3929:	
  3688                           
  3689                           ;main.c: 294:         while(and_ating!=max_origem_down)
  3690  0CB9  0020               	movlb	0	; select bank0
  3691  0CBA  086F               	movf	_and_ating,w
  3692  0CBB  00DE               	movwf	??_col_down
  3693  0CBC  01DF               	clrf	??_col_down+1
  3694  0CBD  0873               	movf	_max_origem_down+1,w
  3695  0CBE  065F               	xorwf	??_col_down+1,w
  3696  0CBF  1D03               	skipz
  3697  0CC0  2CC3               	goto	u4025
  3698  0CC1  0872               	movf	_max_origem_down,w
  3699  0CC2  065E               	xorwf	??_col_down,w
  3700  0CC3                     u4025:	
  3701  0CC3  1D03               	skipz
  3702  0CC4  2CC6               	goto	u4021
  3703  0CC5  2CC7               	goto	u4020
  3704  0CC6                     u4021:	
  3705  0CC6  2C84               	goto	l3917
  3706  0CC7                     u4020:	
  3707  0CC7                     l654:	
  3708                           
  3709                           ;main.c: 307:         LATAbits.LATA2 = 0;
  3710  0CC7  0022               	movlb	2	; select bank2
  3711  0CC8  110C               	bcf	12,2	;volatile
  3712  0CC9                     l3931:	
  3713                           
  3714                           ;main.c: 309:         {;main.c: 310:             if(and_ating==max_origem_down)
  3715  0CC9  0020               	movlb	0	; select bank0
  3716  0CCA  086F               	movf	_and_ating,w
  3717  0CCB  00DE               	movwf	??_col_down
  3718  0CCC  01DF               	clrf	??_col_down+1
  3719  0CCD  0873               	movf	_max_origem_down+1,w
  3720  0CCE  065F               	xorwf	??_col_down+1,w
  3721  0CCF  1D03               	skipz
  3722  0CD0  2CD3               	goto	u4035
  3723  0CD1  0872               	movf	_max_origem_down,w
  3724  0CD2  065E               	xorwf	??_col_down,w
  3725  0CD3                     u4035:	
  3726  0CD3  1D03               	skipz
  3727  0CD4  2CD6               	goto	u4031
  3728  0CD5  2CD7               	goto	u4030
  3729  0CD6                     u4031:	
  3730  0CD6  2CF2               	goto	l3939
  3731  0CD7                     u4030:	
  3732  0CD7                     l3933:	
  3733                           
  3734                           ;main.c: 311:             {;main.c: 312:                 max_down();
  3735  0CD7  318D  25B2  318C   	fcall	_max_down
  3736  0CDA                     l3935:	
  3737                           
  3738                           ;main.c: 313:                 distancia=abs(and_ating-max_origem_down);
  3739  0CDA  0020               	movlb	0	; select bank0
  3740  0CDB  086F               	movf	_and_ating,w
  3741  0CDC  00DE               	movwf	??_col_down
  3742  0CDD  0872               	movf	_max_origem_down,w
  3743  0CDE  025E               	subwf	??_col_down,w
  3744  0CDF  00A0               	movwf	abs@a
  3745  0CE0  0973               	comf	_max_origem_down+1,w
  3746  0CE1  1803               	skipnc
  3747  0CE2  0A89               	incf	9,f
  3748  0CE3  00A1               	movwf	abs@a+1
  3749  0CE4  3189  21B9  318C   	fcall	_abs
  3750  0CE7  0020               	movlb	0	; select bank0
  3751  0CE8  0821               	movf	?_abs+1,w
  3752  0CE9  0021               	movlb	1	; select bank1
  3753  0CEA  00D1               	movwf	(_distancia+1)^(0+128)
  3754  0CEB  0020               	movlb	0	; select bank0
  3755  0CEC  0820               	movf	?_abs,w
  3756  0CED  0021               	movlb	1	; select bank1
  3757  0CEE  00D0               	movwf	_distancia^(0+128)
  3758  0CEF                     l3937:	
  3759                           
  3760                           ;main.c: 314:                 controle();
  3761  0CEF  3186  2635  318C   	fcall	_controle
  3762  0CF2                     l3939:	
  3763                           
  3764                           ;main.c: 316:         }while(and_ating!=min_fila_down);
  3765  0CF2  0020               	movlb	0	; select bank0
  3766  0CF3  086F               	movf	_and_ating,w
  3767  0CF4  00DE               	movwf	??_col_down
  3768  0CF5  01DF               	clrf	??_col_down+1
  3769  0CF6  0021               	movlb	1	; select bank1
  3770  0CF7  084D               	movf	(_min_fila_down+1)^(0+128),w
  3771  0CF8  0020               	movlb	0	; select bank0
  3772  0CF9  065F               	xorwf	??_col_down+1,w
  3773  0CFA  1D03               	skipz
  3774  0CFB  2D00               	goto	u4045
  3775  0CFC  0021               	movlb	1	; select bank1
  3776  0CFD  084C               	movf	_min_fila_down^(0+128),w
  3777  0CFE  0020               	movlb	0	; select bank0
  3778  0CFF  065E               	xorwf	??_col_down,w
  3779  0D00                     u4045:	
  3780  0D00  1D03               	skipz
  3781  0D01  2D03               	goto	u4041
  3782  0D02  2D04               	goto	u4040
  3783  0D03                     u4041:	
  3784  0D03  2CC9               	goto	l3931
  3785  0D04                     u4040:	
  3786  0D04                     l658:	
  3787  0D04  0008               	return
  3788  0D05                     __end_of_col_down:	
  3789                           
  3790                           	psect	text4
  3791  0635                     __ptext4:	
  3792 ;; *************** function _controle *****************
  3793 ;; Defined at:
  3794 ;;		line 184 in file "main.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;		None
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  count           2   60[BANK0 ] int 
  3799 ;;  dutyValue       2   58[BANK0 ] int 
  3800 ;;  max_dutyValu    2   56[BANK0 ] int 
  3801 ;;  min_dutyValu    2   54[BANK0 ] int 
  3802 ;;  a               2   52[BANK0 ] int 
  3803 ;;  route           2   50[BANK0 ] int 
  3804 ;;  destiny         2   48[BANK0 ] int 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      void 
  3807 ;; Registers used:
  3808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3814 ;;      Params:         0       0       0       0       0       0
  3815 ;;      Locals:         0      14       0       0       0       0
  3816 ;;      Temps:          0       4       0       0       0       0
  3817 ;;      Totals:         0      18       0       0       0       0
  3818 ;;Total ram usage:       18 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    6
  3821 ;; This function calls:
  3822 ;;		_ADC_GetConversion
  3823 ;;		_PWM3_LoadDutyValue
  3824 ;;		___flmul
  3825 ;;		___wmul
  3826 ;;		___xxtofl
  3827 ;;		_update
  3828 ;; This function is called by:
  3829 ;;		_main
  3830 ;;		_col_up
  3831 ;;		_col_down
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           
  3836                           ;psect for function _controle
  3837  0635                     _controle:	
  3838  0635                     l3707:	
  3839                           ;incstack = 0
  3840                           ; Regs used in _controle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3841                           
  3842                           
  3843                           ;main.c: 186:     I_m = 0.1*ADC_GetConversion(0);
  3844  0635  303D               	movlw	61
  3845  0636  0020               	movlb	0	; select bank0
  3846  0637  00B5               	movwf	___flmul@b+3
  3847  0638  30CC               	movlw	204
  3848  0639  00B4               	movwf	___flmul@b+2
  3849  063A  30CC               	movlw	204
  3850  063B  00B3               	movwf	___flmul@b+1
  3851  063C  30CD               	movlw	205
  3852  063D  00B2               	movwf	___flmul@b
  3853  063E  3000               	movlw	0
  3854  063F  318A  2232  3186   	fcall	_ADC_GetConversion
  3855  0642  0020               	movlb	0	; select bank0
  3856  0643  0820               	movf	?_ADC_GetConversion,w
  3857  0644  00CC               	movwf	??_controle
  3858  0645  0821               	movf	?_ADC_GetConversion+1,w
  3859  0646  00CD               	movwf	??_controle+1
  3860  0647  01CE               	clrf	??_controle+2
  3861  0648  01CF               	clrf	??_controle+3
  3862  0649  084F               	movf	??_controle+3,w
  3863  064A  00A7               	movwf	___xxtofl@val+3
  3864  064B  084E               	movf	??_controle+2,w
  3865  064C  00A6               	movwf	___xxtofl@val+2
  3866  064D  084D               	movf	??_controle+1,w
  3867  064E  00A5               	movwf	___xxtofl@val+1
  3868  064F  084C               	movf	??_controle,w
  3869  0650  00A4               	movwf	___xxtofl@val
  3870  0651  3000               	movlw	0
  3871  0652  318D  2505  3186   	fcall	___xxtofl
  3872  0655  0020               	movlb	0	; select bank0
  3873  0656  0827               	movf	?___xxtofl+3,w
  3874  0657  00B9               	movwf	___flmul@a+3
  3875  0658  0826               	movf	?___xxtofl+2,w
  3876  0659  00B8               	movwf	___flmul@a+2
  3877  065A  0825               	movf	?___xxtofl+1,w
  3878  065B  00B7               	movwf	___flmul@a+1
  3879  065C  0824               	movf	?___xxtofl,w
  3880  065D  00B6               	movwf	___flmul@a
  3881  065E  3180  2051  3186   	fcall	___flmul
  3882  0661  0020               	movlb	0	; select bank0
  3883  0662  0835               	movf	?___flmul+3,w
  3884  0663  0022               	movlb	2	; select bank2
  3885  0664  00AF               	movwf	(_I_m+3)^(0+256)
  3886  0665  0020               	movlb	0	; select bank0
  3887  0666  0834               	movf	?___flmul+2,w
  3888  0667  0022               	movlb	2	; select bank2
  3889  0668  00AE               	movwf	(_I_m+2)^(0+256)
  3890  0669  0020               	movlb	0	; select bank0
  3891  066A  0833               	movf	?___flmul+1,w
  3892  066B  0022               	movlb	2	; select bank2
  3893  066C  00AD               	movwf	(_I_m+1)^(0+256)
  3894  066D  0020               	movlb	0	; select bank0
  3895  066E  0832               	movf	?___flmul,w
  3896  066F  0022               	movlb	2	; select bank2
  3897  0670  00AC               	movwf	_I_m^(0+256)
  3898                           
  3899                           ;main.c: 187:     temp_mt = 0.3*ADC_GetConversion(1);
  3900  0671  303E               	movlw	62
  3901  0672  0020               	movlb	0	; select bank0
  3902  0673  00B5               	movwf	___flmul@b+3
  3903  0674  3099               	movlw	153
  3904  0675  00B4               	movwf	___flmul@b+2
  3905  0676  3099               	movlw	153
  3906  0677  00B3               	movwf	___flmul@b+1
  3907  0678  309A               	movlw	154
  3908  0679  00B2               	movwf	___flmul@b
  3909  067A  3001               	movlw	1
  3910  067B  318A  2232  3186   	fcall	_ADC_GetConversion
  3911  067E  0020               	movlb	0	; select bank0
  3912  067F  0820               	movf	?_ADC_GetConversion,w
  3913  0680  00CC               	movwf	??_controle
  3914  0681  0821               	movf	?_ADC_GetConversion+1,w
  3915  0682  00CD               	movwf	??_controle+1
  3916  0683  01CE               	clrf	??_controle+2
  3917  0684  01CF               	clrf	??_controle+3
  3918  0685  084F               	movf	??_controle+3,w
  3919  0686  00A7               	movwf	___xxtofl@val+3
  3920  0687  084E               	movf	??_controle+2,w
  3921  0688  00A6               	movwf	___xxtofl@val+2
  3922  0689  084D               	movf	??_controle+1,w
  3923  068A  00A5               	movwf	___xxtofl@val+1
  3924  068B  084C               	movf	??_controle,w
  3925  068C  00A4               	movwf	___xxtofl@val
  3926  068D  3000               	movlw	0
  3927  068E  318D  2505  3186   	fcall	___xxtofl
  3928  0691  0020               	movlb	0	; select bank0
  3929  0692  0827               	movf	?___xxtofl+3,w
  3930  0693  00B9               	movwf	___flmul@a+3
  3931  0694  0826               	movf	?___xxtofl+2,w
  3932  0695  00B8               	movwf	___flmul@a+2
  3933  0696  0825               	movf	?___xxtofl+1,w
  3934  0697  00B7               	movwf	___flmul@a+1
  3935  0698  0824               	movf	?___xxtofl,w
  3936  0699  00B6               	movwf	___flmul@a
  3937  069A  3180  2051  3186   	fcall	___flmul
  3938  069D  0020               	movlb	0	; select bank0
  3939  069E  0835               	movf	?___flmul+3,w
  3940  069F  0022               	movlb	2	; select bank2
  3941  06A0  00AB               	movwf	(_temp_mt+3)^(0+256)
  3942  06A1  0020               	movlb	0	; select bank0
  3943  06A2  0834               	movf	?___flmul+2,w
  3944  06A3  0022               	movlb	2	; select bank2
  3945  06A4  00AA               	movwf	(_temp_mt+2)^(0+256)
  3946  06A5  0020               	movlb	0	; select bank0
  3947  06A6  0833               	movf	?___flmul+1,w
  3948  06A7  0022               	movlb	2	; select bank2
  3949  06A8  00A9               	movwf	(_temp_mt+1)^(0+256)
  3950  06A9  0020               	movlb	0	; select bank0
  3951  06AA  0832               	movf	?___flmul,w
  3952  06AB  0022               	movlb	2	; select bank2
  3953  06AC  00A8               	movwf	_temp_mt^(0+256)
  3954  06AD                     l3709:	
  3955  06AD                     l3711:	
  3956                           
  3957                           ;main.c: 189:     int a = 52;
  3958  06AD  3034               	movlw	52
  3959  06AE  0020               	movlb	0	; select bank0
  3960  06AF  00D4               	movwf	controle@a
  3961  06B0  3000               	movlw	0
  3962  06B1  00D5               	movwf	controle@a+1
  3963  06B2                     l3713:	
  3964                           
  3965                           ;main.c: 190:     int max_dutyValue = 1023;
  3966  06B2  30FF               	movlw	255
  3967  06B3  00D8               	movwf	controle@max_dutyValue
  3968  06B4  3003               	movlw	3
  3969  06B5  00D9               	movwf	controle@max_dutyValue+1
  3970  06B6                     l3715:	
  3971                           
  3972                           ;main.c: 191:     int min_dutyValue = 256;
  3973  06B6  3000               	movlw	0
  3974  06B7  00D6               	movwf	controle@min_dutyValue
  3975  06B8  3001               	movlw	1
  3976  06B9  00D7               	movwf	controle@min_dutyValue+1
  3977  06BA                     l3717:	
  3978                           
  3979                           ;main.c: 192:     int destiny = distancia*60;
  3980  06BA  0021               	movlb	1	; select bank1
  3981  06BB  0851               	movf	(_distancia+1)^(0+128),w
  3982  06BC  0020               	movlb	0	; select bank0
  3983  06BD  00A1               	movwf	___wmul@multiplier+1
  3984  06BE  0021               	movlb	1	; select bank1
  3985  06BF  0850               	movf	_distancia^(0+128),w
  3986  06C0  0020               	movlb	0	; select bank0
  3987  06C1  00A0               	movwf	___wmul@multiplier
  3988  06C2  303C               	movlw	60
  3989  06C3  00A2               	movwf	___wmul@multiplicand
  3990  06C4  3000               	movlw	0
  3991  06C5  00A3               	movwf	___wmul@multiplicand+1
  3992  06C6  3189  21F1  3186   	fcall	___wmul
  3993  06C9  0020               	movlb	0	; select bank0
  3994  06CA  0821               	movf	?___wmul+1,w
  3995  06CB  00D1               	movwf	controle@destiny+1
  3996  06CC  0820               	movf	?___wmul,w
  3997  06CD  00D0               	movwf	controle@destiny
  3998  06CE                     l3719:	
  3999                           
  4000                           ;main.c: 193:     int route = destiny - 40;
  4001  06CE  0850               	movf	controle@destiny,w
  4002  06CF  3ED8               	addlw	216
  4003  06D0  00D2               	movwf	controle@route
  4004  06D1  30FF               	movlw	255
  4005  06D2  3D51               	addwfc	controle@destiny+1,w
  4006  06D3  00D3               	movwf	controle@route+1
  4007  06D4                     l3721:	
  4008                           
  4009                           ;main.c: 194:     int dutyValue = 0;
  4010  06D4  01DA               	clrf	controle@dutyValue
  4011  06D5  01DB               	clrf	controle@dutyValue+1
  4012  06D6                     l3723:	
  4013                           
  4014                           ;main.c: 197:     for(count = 0; count < 20; count++){
  4015  06D6  01DC               	clrf	controle@count
  4016  06D7  01DD               	clrf	controle@count+1
  4017  06D8                     l3729:	
  4018                           
  4019                           ;main.c: 199:         dutyValue+=a;
  4020  06D8  0020               	movlb	0	; select bank0
  4021  06D9  0854               	movf	controle@a,w
  4022  06DA  07DA               	addwf	controle@dutyValue,f
  4023  06DB  0855               	movf	controle@a+1,w
  4024  06DC  3DDB               	addwfc	controle@dutyValue+1,f
  4025                           
  4026                           ;main.c: 200:         if(dutyValue > max_dutyValue){
  4027  06DD  0859               	movf	controle@max_dutyValue+1,w
  4028  06DE  3A80               	xorlw	128
  4029  06DF  00CC               	movwf	??_controle
  4030  06E0  085B               	movf	controle@dutyValue+1,w
  4031  06E1  3A80               	xorlw	128
  4032  06E2  024C               	subwf	??_controle,w
  4033  06E3  1D03               	skipz
  4034  06E4  2EE7               	goto	u3905
  4035  06E5  085A               	movf	controle@dutyValue,w
  4036  06E6  0258               	subwf	controle@max_dutyValue,w
  4037  06E7                     u3905:	
  4038  06E7  1803               	skipnc
  4039  06E8  2EEA               	goto	u3901
  4040  06E9  2EEB               	goto	u3900
  4041  06EA                     u3901:	
  4042  06EA  2EF4               	goto	l3733
  4043  06EB                     u3900:	
  4044  06EB                     l3731:	
  4045                           
  4046                           ;main.c: 201:             PWM3_LoadDutyValue(max_dutyValue);
  4047  06EB  0020               	movlb	0	; select bank0
  4048  06EC  0859               	movf	controle@max_dutyValue+1,w
  4049  06ED  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4050  06EE  0858               	movf	controle@max_dutyValue,w
  4051  06EF  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4052  06F0  3189  21D5  3186   	fcall	_PWM3_LoadDutyValue
  4053                           
  4054                           ;main.c: 202:         }else{
  4055  06F3  2EFC               	goto	l3735
  4056  06F4                     l3733:	
  4057                           
  4058                           ;main.c: 203:             PWM3_LoadDutyValue(dutyValue);
  4059  06F4  0020               	movlb	0	; select bank0
  4060  06F5  085B               	movf	controle@dutyValue+1,w
  4061  06F6  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4062  06F7  085A               	movf	controle@dutyValue,w
  4063  06F8  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4064  06F9  3189  21D5  3186   	fcall	_PWM3_LoadDutyValue
  4065  06FC                     l3735:	
  4066                           
  4067                           ;main.c: 206:     }
  4068  06FC  3001               	movlw	1
  4069  06FD  0020               	movlb	0	; select bank0
  4070  06FE  07DC               	addwf	controle@count,f
  4071  06FF  3000               	movlw	0
  4072  0700  3DDD               	addwfc	controle@count+1,f
  4073  0701                     l3737:	
  4074  0701  085D               	movf	controle@count+1,w
  4075  0702  3A80               	xorlw	128
  4076  0703  00CC               	movwf	??_controle
  4077  0704  3080               	movlw	128
  4078  0705  024C               	subwf	??_controle,w
  4079  0706  1D03               	skipz
  4080  0707  2F0A               	goto	u3915
  4081  0708  3014               	movlw	20
  4082  0709  025C               	subwf	controle@count,w
  4083  070A                     u3915:	
  4084  070A  1C03               	skipc
  4085  070B  2F0D               	goto	u3911
  4086  070C  2F0E               	goto	u3910
  4087  070D                     u3911:	
  4088  070D  2ED8               	goto	l3729
  4089  070E                     u3910:	
  4090  070E                     l3739:	
  4091                           
  4092                           ;main.c: 207:     count = 0;
  4093  070E  0020               	movlb	0	; select bank0
  4094  070F  01DC               	clrf	controle@count
  4095  0710  01DD               	clrf	controle@count+1
  4096                           
  4097                           ;main.c: 208:     for(count = 0; count < route ; count++){
  4098  0711  01DC               	clrf	controle@count
  4099  0712  01DD               	clrf	controle@count+1
  4100  0713  2F21               	goto	l3745
  4101  0714                     l3741:	
  4102                           
  4103                           ;main.c: 210:         PWM3_LoadDutyValue(max_dutyValue);
  4104  0714  0020               	movlb	0	; select bank0
  4105  0715  0859               	movf	controle@max_dutyValue+1,w
  4106  0716  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4107  0717  0858               	movf	controle@max_dutyValue,w
  4108  0718  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4109  0719  3189  21D5  3186   	fcall	_PWM3_LoadDutyValue
  4110  071C                     l3743:	
  4111                           
  4112                           ;main.c: 211:     }
  4113  071C  3001               	movlw	1
  4114  071D  0020               	movlb	0	; select bank0
  4115  071E  07DC               	addwf	controle@count,f
  4116  071F  3000               	movlw	0
  4117  0720  3DDD               	addwfc	controle@count+1,f
  4118  0721                     l3745:	
  4119  0721  085D               	movf	controle@count+1,w
  4120  0722  3A80               	xorlw	128
  4121  0723  00CC               	movwf	??_controle
  4122  0724  0853               	movf	controle@route+1,w
  4123  0725  3A80               	xorlw	128
  4124  0726  024C               	subwf	??_controle,w
  4125  0727  1D03               	skipz
  4126  0728  2F2B               	goto	u3925
  4127  0729  0852               	movf	controle@route,w
  4128  072A  025C               	subwf	controle@count,w
  4129  072B                     u3925:	
  4130  072B  1C03               	skipc
  4131  072C  2F2E               	goto	u3921
  4132  072D  2F2F               	goto	u3920
  4133  072E                     u3921:	
  4134  072E  2F14               	goto	l3741
  4135  072F                     u3920:	
  4136  072F                     l3747:	
  4137                           
  4138                           ;main.c: 213:     count = 0;
  4139  072F  0020               	movlb	0	; select bank0
  4140  0730  01DC               	clrf	controle@count
  4141  0731  01DD               	clrf	controle@count+1
  4142                           
  4143                           ;main.c: 214:     for(count = 0; count < 20; count++){
  4144  0732  01DC               	clrf	controle@count
  4145  0733  01DD               	clrf	controle@count+1
  4146  0734                     l3753:	
  4147                           
  4148                           ;main.c: 216:         dutyValue-=a;
  4149  0734  0020               	movlb	0	; select bank0
  4150  0735  0854               	movf	controle@a,w
  4151  0736  02DA               	subwf	controle@dutyValue,f
  4152  0737  0855               	movf	controle@a+1,w
  4153  0738  3BDB               	subwfb	controle@dutyValue+1,f
  4154                           
  4155                           ;main.c: 217:         if(dutyValue < min_dutyValue){
  4156  0739  085B               	movf	controle@dutyValue+1,w
  4157  073A  3A80               	xorlw	128
  4158  073B  00CC               	movwf	??_controle
  4159  073C  0857               	movf	controle@min_dutyValue+1,w
  4160  073D  3A80               	xorlw	128
  4161  073E  024C               	subwf	??_controle,w
  4162  073F  1D03               	skipz
  4163  0740  2F43               	goto	u3935
  4164  0741  0856               	movf	controle@min_dutyValue,w
  4165  0742  025A               	subwf	controle@dutyValue,w
  4166  0743                     u3935:	
  4167  0743  1803               	skipnc
  4168  0744  2F46               	goto	u3931
  4169  0745  2F47               	goto	u3930
  4170  0746                     u3931:	
  4171  0746  2F50               	goto	l3757
  4172  0747                     u3930:	
  4173  0747                     l3755:	
  4174                           
  4175                           ;main.c: 218:             PWM3_LoadDutyValue(min_dutyValue);
  4176  0747  0020               	movlb	0	; select bank0
  4177  0748  0857               	movf	controle@min_dutyValue+1,w
  4178  0749  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4179  074A  0856               	movf	controle@min_dutyValue,w
  4180  074B  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4181  074C  3189  21D5  3186   	fcall	_PWM3_LoadDutyValue
  4182                           
  4183                           ;main.c: 219:         }else{
  4184  074F  2F58               	goto	l3759
  4185  0750                     l3757:	
  4186                           
  4187                           ;main.c: 220:         PWM3_LoadDutyValue(dutyValue);
  4188  0750  0020               	movlb	0	; select bank0
  4189  0751  085B               	movf	controle@dutyValue+1,w
  4190  0752  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4191  0753  085A               	movf	controle@dutyValue,w
  4192  0754  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4193  0755  3189  21D5  3186   	fcall	_PWM3_LoadDutyValue
  4194  0758                     l3759:	
  4195                           
  4196                           ;main.c: 222:     }
  4197  0758  3001               	movlw	1
  4198  0759  0020               	movlb	0	; select bank0
  4199  075A  07DC               	addwf	controle@count,f
  4200  075B  3000               	movlw	0
  4201  075C  3DDD               	addwfc	controle@count+1,f
  4202  075D                     l3761:	
  4203  075D  085D               	movf	controle@count+1,w
  4204  075E  3A80               	xorlw	128
  4205  075F  00CC               	movwf	??_controle
  4206  0760  3080               	movlw	128
  4207  0761  024C               	subwf	??_controle,w
  4208  0762  1D03               	skipz
  4209  0763  2F66               	goto	u3945
  4210  0764  3014               	movlw	20
  4211  0765  025C               	subwf	controle@count,w
  4212  0766                     u3945:	
  4213  0766  1C03               	skipc
  4214  0767  2F69               	goto	u3941
  4215  0768  2F6A               	goto	u3940
  4216  0769                     u3941:	
  4217  0769  2F34               	goto	l3753
  4218  076A                     u3940:	
  4219  076A                     l3763:	
  4220                           
  4221                           ;main.c: 223:     update();
  4222  076A  3182  22A8  3186   	fcall	_update
  4223  076D                     l3765:	
  4224                           
  4225                           ;main.c: 225:     PWM3_LoadDutyValue(0);
  4226  076D  3000               	movlw	0
  4227  076E  0020               	movlb	0	; select bank0
  4228  076F  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4229  0770  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4230  0771  3189  21D5  3186   	fcall	_PWM3_LoadDutyValue
  4231  0774                     l624:	
  4232  0774  0008               	return
  4233  0775                     __end_of_controle:	
  4234                           
  4235                           	psect	text5
  4236  02A8                     __ptext5:	
  4237 ;; *************** function _update *****************
  4238 ;; Defined at:
  4239 ;;		line 387 in file "main.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;		None
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  i               2   13[BANK0 ] int 
  4244 ;;  i               2   11[BANK0 ] int 
  4245 ;;  i               2    9[BANK0 ] int 
  4246 ;;  aux             1    8[BANK0 ] unsigned char 
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      void 
  4249 ;; Registers used:
  4250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4256 ;;      Params:         0       0       0       0       0       0
  4257 ;;      Locals:         0       7       0       0       0       0
  4258 ;;      Temps:          0       3       0       0       0       0
  4259 ;;      Totals:         0      10       0       0       0       0
  4260 ;;Total ram usage:       10 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    5
  4263 ;; This function calls:
  4264 ;;		_EUSART_Read
  4265 ;;		_EUSART_is_rx_ready
  4266 ;;		_max_down
  4267 ;;		_min_up
  4268 ;; This function is called by:
  4269 ;;		_controle
  4270 ;;		_gerenciamento
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           
  4275                           ;psect for function _update
  4276  02A8                     _update:	
  4277  02A8                     l3545:	
  4278                           ;incstack = 0
  4279                           ; Regs used in _update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4280                           
  4281                           
  4282                           ;main.c: 389:     uint8_t aux;;main.c: 390:     if(EUSART_is_rx_ready())
  4283  02A8  3188  204E  3182   	fcall	_EUSART_is_rx_ready
  4284  02AB  3A00               	xorlw	0
  4285  02AC  1903               	skipnz
  4286  02AD  2AAF               	goto	u3641
  4287  02AE  2AB0               	goto	u3640
  4288  02AF                     u3641:	
  4289  02AF  2AD1               	goto	l3553
  4290  02B0                     u3640:	
  4291  02B0                     l3547:	
  4292                           
  4293                           ;main.c: 391:         {;main.c: 392:             aux= EUSART_Read();
  4294  02B0  3189  214D  3182   	fcall	_EUSART_Read
  4295  02B3  0020               	movlb	0	; select bank0
  4296  02B4  00A5               	movwf	??_update
  4297  02B5  0825               	movf	??_update,w
  4298  02B6  00A8               	movwf	update@aux
  4299  02B7                     l3549:	
  4300                           
  4301                           ;main.c: 393:             and_origem = (int)((aux & 0x0C)>>2);
  4302  02B7  0828               	movf	update@aux,w
  4303  02B8  00A5               	movwf	??_update
  4304  02B9  3002               	movlw	2
  4305  02BA                     u3655:	
  4306  02BA  36A5               	lsrf	??_update,f
  4307  02BB  0B89               	decfsz	9,f
  4308  02BC  2ABA               	goto	u3655
  4309  02BD  0825               	movf	??_update,w
  4310  02BE  3903               	andlw	3
  4311  02BF  00A6               	movwf	??_update+1
  4312  02C0  01A7               	clrf	??_update+2
  4313  02C1  0826               	movf	??_update+1,w
  4314  02C2  0021               	movlb	1	; select bank1
  4315  02C3  00DA               	movwf	_and_origem^(0+128)
  4316  02C4  0020               	movlb	0	; select bank0
  4317  02C5  0827               	movf	??_update+2,w
  4318  02C6  0021               	movlb	1	; select bank1
  4319  02C7  00DB               	movwf	(_and_origem+1)^(0+128)
  4320  02C8                     l3551:	
  4321                           
  4322                           ;main.c: 395:             and_dst = (int)(aux & 0x02);
  4323  02C8  0020               	movlb	0	; select bank0
  4324  02C9  0828               	movf	update@aux,w
  4325  02CA  3902               	andlw	2
  4326  02CB  00A5               	movwf	??_update
  4327  02CC  01A6               	clrf	??_update+1
  4328  02CD  0825               	movf	??_update,w
  4329  02CE  00F4               	movwf	_and_dst
  4330  02CF  0826               	movf	??_update+1,w
  4331  02D0  00F5               	movwf	_and_dst+1
  4332  02D1                     l3553:	
  4333                           
  4334                           ;main.c: 399:     if(and_dst>and_origem)
  4335  02D1  0021               	movlb	1	; select bank1
  4336  02D2  085B               	movf	(_and_origem+1)^(0+128),w
  4337  02D3  3A80               	xorlw	128
  4338  02D4  0020               	movlb	0	; select bank0
  4339  02D5  00A5               	movwf	??_update
  4340  02D6  0875               	movf	_and_dst+1,w
  4341  02D7  3A80               	xorlw	128
  4342  02D8  0225               	subwf	??_update,w
  4343  02D9  1D03               	skipz
  4344  02DA  2ADE               	goto	u3665
  4345  02DB  0874               	movf	_and_dst,w
  4346  02DC  0021               	movlb	1	; select bank1
  4347  02DD  025A               	subwf	_and_origem^(0+128),w
  4348  02DE                     u3665:	
  4349  02DE  1803               	skipnc
  4350  02DF  2AE1               	goto	u3661
  4351  02E0  2AE2               	goto	u3660
  4352  02E1                     u3661:	
  4353  02E1  2B55               	goto	l3597
  4354  02E2                     u3660:	
  4355  02E2                     l3555:	
  4356  02E2                     l3557:	
  4357                           
  4358                           ;main.c: 402:       for(i=3;i>=0;i--)
  4359  02E2  3003               	movlw	3
  4360  02E3  0020               	movlb	0	; select bank0
  4361  02E4  00AB               	movwf	update@i
  4362  02E5  3000               	movlw	0
  4363  02E6  00AC               	movwf	update@i+1
  4364  02E7                     l3563:	
  4365                           
  4366                           ;main.c: 403:       {;main.c: 404:           if(i==0){
  4367  02E7  082B               	movf	update@i,w
  4368  02E8  042C               	iorwf	update@i+1,w
  4369  02E9  1D03               	btfss	3,2
  4370  02EA  2AEC               	goto	u3671
  4371  02EB  2AED               	goto	u3670
  4372  02EC                     u3671:	
  4373  02EC  2AF8               	goto	l3569
  4374  02ED                     u3670:	
  4375  02ED                     l3565:	
  4376                           
  4377                           ;main.c: 405:               fila_up[1] = fila_up[0];
  4378  02ED  0021               	movlb	1	; select bank1
  4379  02EE  083F               	movf	(_fila_up+1)^(0+128),w
  4380  02EF  00C1               	movwf	((_fila_up+1)^(0+128)+2)
  4381  02F0  083E               	movf	_fila_up^(0+128),w
  4382  02F1  00C0               	movwf	(_fila_up^(0+128)+2)
  4383  02F2                     l3567:	
  4384                           
  4385                           ;main.c: 406:               fila_up[0] = and_dst+1;
  4386  02F2  0874               	movf	_and_dst,w
  4387  02F3  3E01               	addlw	1
  4388  02F4  00BE               	movwf	_fila_up^(0+128)
  4389  02F5  3000               	movlw	0
  4390  02F6  3D75               	addwfc	_and_dst+1,w
  4391  02F7  00BF               	movwf	(_fila_up+1)^(0+128)
  4392  02F8                     l3569:	
  4393                           
  4394                           ;main.c: 409:           if(i>0){
  4395  02F8  0020               	movlb	0	; select bank0
  4396  02F9  082C               	movf	update@i+1,w
  4397  02FA  3A80               	xorlw	128
  4398  02FB  00A5               	movwf	??_update
  4399  02FC  3080               	movlw	128
  4400  02FD  0225               	subwf	??_update,w
  4401  02FE  1D03               	skipz
  4402  02FF  2B02               	goto	u3685
  4403  0300  3001               	movlw	1
  4404  0301  022B               	subwf	update@i,w
  4405  0302                     u3685:	
  4406  0302  1C03               	skipc
  4407  0303  2B05               	goto	u3681
  4408  0304  2B06               	goto	u3680
  4409  0305                     u3681:	
  4410  0305  2B13               	goto	l3573
  4411  0306                     u3680:	
  4412  0306                     l3571:	
  4413                           
  4414                           ;main.c: 410:               fila_up[i+1] = fila_up[i];
  4415  0306  0020               	movlb	0	; select bank0
  4416  0307  352B               	lslf	update@i,w
  4417  0308  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  4418  0309  0086               	movwf	6
  4419  030A  0187               	clrf	7
  4420  030B  352B               	lslf	update@i,w
  4421  030C  3EC0               	addlw	(low ((_fila_up| 0+2)))& (0+255)
  4422  030D  0084               	movwf	4
  4423  030E  0185               	clrf	5
  4424  030F  3F40               	moviw [0]fsr1
  4425  0310  3F80               	movwi [0]fsr0
  4426  0311  3F41               	moviw [1]fsr1
  4427  0312  3F81               	movwi [1]fsr0
  4428  0313                     l3573:	
  4429                           
  4430                           ;main.c: 412:       }
  4431  0313  30FF               	movlw	255
  4432  0314  0020               	movlb	0	; select bank0
  4433  0315  07AB               	addwf	update@i,f
  4434  0316  30FF               	movlw	255
  4435  0317  3DAC               	addwfc	update@i+1,f
  4436  0318                     l3575:	
  4437  0318  1FAC               	btfss	update@i+1,7
  4438  0319  2B1B               	goto	u3691
  4439  031A  2B1C               	goto	u3690
  4440  031B                     u3691:	
  4441  031B  2AE7               	goto	l3563
  4442  031C                     u3690:	
  4443  031C                     l3577:	
  4444                           
  4445                           ;main.c: 414:       for(i=3;i>=0;i--)
  4446  031C  3003               	movlw	3
  4447  031D  00AB               	movwf	update@i
  4448  031E  3000               	movlw	0
  4449  031F  00AC               	movwf	update@i+1
  4450  0320                     l3583:	
  4451                           
  4452                           ;main.c: 415:       {;main.c: 416:           if(i==0){
  4453  0320  082B               	movf	update@i,w
  4454  0321  042C               	iorwf	update@i+1,w
  4455  0322  1D03               	btfss	3,2
  4456  0323  2B25               	goto	u3701
  4457  0324  2B26               	goto	u3700
  4458  0325                     u3701:	
  4459  0325  2B31               	goto	l3589
  4460  0326                     u3700:	
  4461  0326                     l3585:	
  4462                           
  4463                           ;main.c: 417:               origem_up[1] = origem_up[0];
  4464  0326  0021               	movlb	1	; select bank1
  4465  0327  0821               	movf	(_origem_up+1)^(0+128),w
  4466  0328  00A3               	movwf	((_origem_up+1)^(0+128)+2)
  4467  0329  0820               	movf	_origem_up^(0+128),w
  4468  032A  00A2               	movwf	(_origem_up^(0+128)+2)
  4469  032B                     l3587:	
  4470                           
  4471                           ;main.c: 418:               origem_up[0] = and_origem+1;
  4472  032B  085A               	movf	_and_origem^(0+128),w
  4473  032C  3E01               	addlw	1
  4474  032D  00A0               	movwf	_origem_up^(0+128)
  4475  032E  3000               	movlw	0
  4476  032F  3D5B               	addwfc	(_and_origem+1)^(0+128),w
  4477  0330  00A1               	movwf	(_origem_up+1)^(0+128)
  4478  0331                     l3589:	
  4479                           
  4480                           ;main.c: 421:           if(i>0){
  4481  0331  0020               	movlb	0	; select bank0
  4482  0332  082C               	movf	update@i+1,w
  4483  0333  3A80               	xorlw	128
  4484  0334  00A5               	movwf	??_update
  4485  0335  3080               	movlw	128
  4486  0336  0225               	subwf	??_update,w
  4487  0337  1D03               	skipz
  4488  0338  2B3B               	goto	u3715
  4489  0339  3001               	movlw	1
  4490  033A  022B               	subwf	update@i,w
  4491  033B                     u3715:	
  4492  033B  1C03               	skipc
  4493  033C  2B3E               	goto	u3711
  4494  033D  2B3F               	goto	u3710
  4495  033E                     u3711:	
  4496  033E  2B4C               	goto	l3593
  4497  033F                     u3710:	
  4498  033F                     l3591:	
  4499                           
  4500                           ;main.c: 422:               origem_up[i+1] = origem_up[i];
  4501  033F  0020               	movlb	0	; select bank0
  4502  0340  352B               	lslf	update@i,w
  4503  0341  3EA0               	addlw	(low (_origem_up| 0))& (0+255)
  4504  0342  0086               	movwf	6
  4505  0343  0187               	clrf	7
  4506  0344  352B               	lslf	update@i,w
  4507  0345  3EA2               	addlw	(low ((_origem_up| 0+2)))& (0+255)
  4508  0346  0084               	movwf	4
  4509  0347  0185               	clrf	5
  4510  0348  3F40               	moviw [0]fsr1
  4511  0349  3F80               	movwi [0]fsr0
  4512  034A  3F41               	moviw [1]fsr1
  4513  034B  3F81               	movwi [1]fsr0
  4514  034C                     l3593:	
  4515                           
  4516                           ;main.c: 424:       }
  4517  034C  30FF               	movlw	255
  4518  034D  0020               	movlb	0	; select bank0
  4519  034E  07AB               	addwf	update@i,f
  4520  034F  30FF               	movlw	255
  4521  0350  3DAC               	addwfc	update@i+1,f
  4522  0351                     l3595:	
  4523  0351  1FAC               	btfss	update@i+1,7
  4524  0352  2B54               	goto	u3721
  4525  0353  2B55               	goto	u3720
  4526  0354                     u3721:	
  4527  0354  2B20               	goto	l3583
  4528  0355                     u3720:	
  4529  0355                     l3597:	
  4530                           
  4531                           ;main.c: 427:     int i;;main.c: 428:     max_fila_up = fila_up[0];
  4532  0355  0021               	movlb	1	; select bank1
  4533  0356  083F               	movf	(_fila_up+1)^(0+128),w
  4534  0357  00CF               	movwf	(_max_fila_up+1)^(0+128)
  4535  0358  083E               	movf	_fila_up^(0+128),w
  4536  0359  00CE               	movwf	_max_fila_up^(0+128)
  4537                           
  4538                           ;main.c: 429:     for(i=1;i<=4;i++)
  4539  035A  3001               	movlw	1
  4540  035B  0020               	movlb	0	; select bank0
  4541  035C  00A9               	movwf	update@i_1261
  4542  035D  3000               	movlw	0
  4543  035E  00AA               	movwf	update@i_1261+1
  4544  035F                     l3601:	
  4545                           
  4546                           ;main.c: 430:     {;main.c: 431:             if(fila_up[i]>max_fila_up)
  4547  035F  0020               	movlb	0	; select bank0
  4548  0360  3529               	lslf	update@i_1261,w
  4549  0361  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  4550  0362  0086               	movwf	6
  4551  0363  0187               	clrf	7
  4552  0364  3F40               	moviw [0]fsr1
  4553  0365  00A5               	movwf	??_update
  4554  0366  3F41               	moviw [1]fsr1
  4555  0367  00A6               	movwf	??_update+1
  4556  0368  0021               	movlb	1	; select bank1
  4557  0369  084F               	movf	(_max_fila_up+1)^(0+128),w
  4558  036A  3A80               	xorlw	128
  4559  036B  0020               	movlb	0	; select bank0
  4560  036C  00A7               	movwf	??_update+2
  4561  036D  0826               	movf	??_update+1,w
  4562  036E  3A80               	xorlw	128
  4563  036F  0227               	subwf	??_update+2,w
  4564  0370  1D03               	skipz
  4565  0371  2B75               	goto	u3735
  4566  0372  0825               	movf	??_update,w
  4567  0373  0021               	movlb	1	; select bank1
  4568  0374  024E               	subwf	_max_fila_up^(0+128),w
  4569  0375                     u3735:	
  4570  0375  1803               	skipnc
  4571  0376  2B78               	goto	u3731
  4572  0377  2B79               	goto	u3730
  4573  0378                     u3731:	
  4574  0378  2B83               	goto	l3605
  4575  0379                     u3730:	
  4576  0379                     l3603:	
  4577                           
  4578                           ;main.c: 432:             {;main.c: 433:                 max_fila_up = fila_up[i];
  4579  0379  0020               	movlb	0	; select bank0
  4580  037A  3529               	lslf	update@i_1261,w
  4581  037B  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  4582  037C  0086               	movwf	6
  4583  037D  0187               	clrf	7
  4584  037E  3F40               	moviw [0]fsr1
  4585  037F  0021               	movlb	1	; select bank1
  4586  0380  00CE               	movwf	_max_fila_up^(0+128)
  4587  0381  3F41               	moviw [1]fsr1
  4588  0382  00CF               	movwf	(_max_fila_up+1)^(0+128)
  4589  0383                     l3605:	
  4590                           
  4591                           ;main.c: 435:     }
  4592  0383  3001               	movlw	1
  4593  0384  0020               	movlb	0	; select bank0
  4594  0385  07A9               	addwf	update@i_1261,f
  4595  0386  3000               	movlw	0
  4596  0387  3DAA               	addwfc	update@i_1261+1,f
  4597  0388                     l3607:	
  4598  0388  082A               	movf	update@i_1261+1,w
  4599  0389  3A80               	xorlw	128
  4600  038A  00A5               	movwf	??_update
  4601  038B  3080               	movlw	128
  4602  038C  0225               	subwf	??_update,w
  4603  038D  1D03               	skipz
  4604  038E  2B91               	goto	u3745
  4605  038F  3005               	movlw	5
  4606  0390  0229               	subwf	update@i_1261,w
  4607  0391                     u3745:	
  4608  0391  1C03               	skipc
  4609  0392  2B94               	goto	u3741
  4610  0393  2B95               	goto	u3740
  4611  0394                     u3741:	
  4612  0394  2B5F               	goto	l3601
  4613  0395                     u3740:	
  4614  0395                     l3609:	
  4615                           
  4616                           ;main.c: 436:     if(max_fila_up==0)
  4617  0395  0021               	movlb	1	; select bank1
  4618  0396  084E               	movf	_max_fila_up^(0+128),w
  4619  0397  044F               	iorwf	(_max_fila_up+1)^(0+128),w
  4620  0398  1D03               	btfss	3,2
  4621  0399  2B9B               	goto	u3751
  4622  039A  2B9C               	goto	u3750
  4623  039B                     u3751:	
  4624  039B  2BA0               	goto	l697
  4625  039C                     u3750:	
  4626  039C                     l3611:	
  4627                           
  4628                           ;main.c: 437:     {;main.c: 438:         max_fila_up=1;
  4629  039C  3001               	movlw	1
  4630  039D  00CE               	movwf	_max_fila_up^(0+128)
  4631  039E  3000               	movlw	0
  4632  039F  00CF               	movwf	(_max_fila_up^(0+128)+1)
  4633  03A0                     l697:	
  4634                           ;main.c: 439:     }
  4635                           
  4636                           
  4637                           ;main.c: 441:     if(and_dst<and_origem)
  4638  03A0  0875               	movf	_and_dst+1,w
  4639  03A1  3A80               	xorlw	128
  4640  03A2  0020               	movlb	0	; select bank0
  4641  03A3  00A5               	movwf	??_update
  4642  03A4  0021               	movlb	1	; select bank1
  4643  03A5  085B               	movf	(_and_origem+1)^(0+128),w
  4644  03A6  3A80               	xorlw	128
  4645  03A7  0020               	movlb	0	; select bank0
  4646  03A8  0225               	subwf	??_update,w
  4647  03A9  1D03               	skipz
  4648  03AA  2BAE               	goto	u3765
  4649  03AB  0021               	movlb	1	; select bank1
  4650  03AC  085A               	movf	_and_origem^(0+128),w
  4651  03AD  0274               	subwf	_and_dst,w
  4652  03AE                     u3765:	
  4653  03AE  1803               	skipnc
  4654  03AF  2BB1               	goto	u3761
  4655  03B0  2BB2               	goto	u3760
  4656  03B1                     u3761:	
  4657  03B1  2C25               	goto	l3655
  4658  03B2                     u3760:	
  4659  03B2                     l3613:	
  4660  03B2                     l3615:	
  4661                           
  4662                           ;main.c: 444:       for(i=3;i>=0;i--)
  4663  03B2  3003               	movlw	3
  4664  03B3  0020               	movlb	0	; select bank0
  4665  03B4  00AD               	movwf	update@i_1262
  4666  03B5  3000               	movlw	0
  4667  03B6  00AE               	movwf	update@i_1262+1
  4668  03B7                     l3621:	
  4669                           
  4670                           ;main.c: 445:       {;main.c: 446:           if(i==0){
  4671  03B7  082D               	movf	update@i_1262,w
  4672  03B8  042E               	iorwf	update@i_1262+1,w
  4673  03B9  1D03               	btfss	3,2
  4674  03BA  2BBC               	goto	u3771
  4675  03BB  2BBD               	goto	u3770
  4676  03BC                     u3771:	
  4677  03BC  2BC8               	goto	l3627
  4678  03BD                     u3770:	
  4679  03BD                     l3623:	
  4680                           
  4681                           ;main.c: 447:               fila_down[1] = fila_down[0];
  4682  03BD  0021               	movlb	1	; select bank1
  4683  03BE  0835               	movf	(_fila_down+1)^(0+128),w
  4684  03BF  00B7               	movwf	((_fila_down+1)^(0+128)+2)
  4685  03C0  0834               	movf	_fila_down^(0+128),w
  4686  03C1  00B6               	movwf	(_fila_down^(0+128)+2)
  4687  03C2                     l3625:	
  4688                           
  4689                           ;main.c: 448:               fila_down[0] = and_dst+1;
  4690  03C2  0874               	movf	_and_dst,w
  4691  03C3  3E01               	addlw	1
  4692  03C4  00B4               	movwf	_fila_down^(0+128)
  4693  03C5  3000               	movlw	0
  4694  03C6  3D75               	addwfc	_and_dst+1,w
  4695  03C7  00B5               	movwf	(_fila_down+1)^(0+128)
  4696  03C8                     l3627:	
  4697                           
  4698                           ;main.c: 451:           if(i>0){
  4699  03C8  0020               	movlb	0	; select bank0
  4700  03C9  082E               	movf	update@i_1262+1,w
  4701  03CA  3A80               	xorlw	128
  4702  03CB  00A5               	movwf	??_update
  4703  03CC  3080               	movlw	128
  4704  03CD  0225               	subwf	??_update,w
  4705  03CE  1D03               	skipz
  4706  03CF  2BD2               	goto	u3785
  4707  03D0  3001               	movlw	1
  4708  03D1  022D               	subwf	update@i_1262,w
  4709  03D2                     u3785:	
  4710  03D2  1C03               	skipc
  4711  03D3  2BD5               	goto	u3781
  4712  03D4  2BD6               	goto	u3780
  4713  03D5                     u3781:	
  4714  03D5  2BE3               	goto	l3631
  4715  03D6                     u3780:	
  4716  03D6                     l3629:	
  4717                           
  4718                           ;main.c: 452:               fila_down[i+1] = fila_down[i];
  4719  03D6  0020               	movlb	0	; select bank0
  4720  03D7  352D               	lslf	update@i_1262,w
  4721  03D8  3EB4               	addlw	(low (_fila_down| 0))& (0+255)
  4722  03D9  0086               	movwf	6
  4723  03DA  0187               	clrf	7
  4724  03DB  352D               	lslf	update@i_1262,w
  4725  03DC  3EB6               	addlw	(low ((_fila_down| 0+2)))& (0+255)
  4726  03DD  0084               	movwf	4
  4727  03DE  0185               	clrf	5
  4728  03DF  3F40               	moviw [0]fsr1
  4729  03E0  3F80               	movwi [0]fsr0
  4730  03E1  3F41               	moviw [1]fsr1
  4731  03E2  3F81               	movwi [1]fsr0
  4732  03E3                     l3631:	
  4733                           
  4734                           ;main.c: 454:       }
  4735  03E3  30FF               	movlw	255
  4736  03E4  0020               	movlb	0	; select bank0
  4737  03E5  07AD               	addwf	update@i_1262,f
  4738  03E6  30FF               	movlw	255
  4739  03E7  3DAE               	addwfc	update@i_1262+1,f
  4740  03E8                     l3633:	
  4741  03E8  1FAE               	btfss	update@i_1262+1,7
  4742  03E9  2BEB               	goto	u3791
  4743  03EA  2BEC               	goto	u3790
  4744  03EB                     u3791:	
  4745  03EB  2BB7               	goto	l3621
  4746  03EC                     u3790:	
  4747  03EC                     l3635:	
  4748                           
  4749                           ;main.c: 456:       for(i=3;i>=0;i--)
  4750  03EC  3003               	movlw	3
  4751  03ED  00AD               	movwf	update@i_1262
  4752  03EE  3000               	movlw	0
  4753  03EF  00AE               	movwf	update@i_1262+1
  4754  03F0                     l3641:	
  4755                           
  4756                           ;main.c: 457:       {;main.c: 458:           if(i==0){
  4757  03F0  082D               	movf	update@i_1262,w
  4758  03F1  042E               	iorwf	update@i_1262+1,w
  4759  03F2  1D03               	btfss	3,2
  4760  03F3  2BF5               	goto	u3801
  4761  03F4  2BF6               	goto	u3800
  4762  03F5                     u3801:	
  4763  03F5  2C01               	goto	l3647
  4764  03F6                     u3800:	
  4765  03F6                     l3643:	
  4766                           
  4767                           ;main.c: 459:               origem_down[1] = origem_down[0];
  4768  03F6  0021               	movlb	1	; select bank1
  4769  03F7  082B               	movf	(_origem_down+1)^(0+128),w
  4770  03F8  00AD               	movwf	((_origem_down+1)^(0+128)+2)
  4771  03F9  082A               	movf	_origem_down^(0+128),w
  4772  03FA  00AC               	movwf	(_origem_down^(0+128)+2)
  4773  03FB                     l3645:	
  4774                           
  4775                           ;main.c: 460:               origem_down[0] = and_origem+1;
  4776  03FB  085A               	movf	_and_origem^(0+128),w
  4777  03FC  3E01               	addlw	1
  4778  03FD  00AA               	movwf	_origem_down^(0+128)
  4779  03FE  3000               	movlw	0
  4780  03FF  3D5B               	addwfc	(_and_origem+1)^(0+128),w
  4781  0400  00AB               	movwf	(_origem_down+1)^(0+128)
  4782  0401                     l3647:	
  4783                           
  4784                           ;main.c: 462:           if(i>0){
  4785  0401  0020               	movlb	0	; select bank0
  4786  0402  082E               	movf	update@i_1262+1,w
  4787  0403  3A80               	xorlw	128
  4788  0404  00A5               	movwf	??_update
  4789  0405  3080               	movlw	128
  4790  0406  0225               	subwf	??_update,w
  4791  0407  1D03               	skipz
  4792  0408  2C0B               	goto	u3815
  4793  0409  3001               	movlw	1
  4794  040A  022D               	subwf	update@i_1262,w
  4795  040B                     u3815:	
  4796  040B  1C03               	skipc
  4797  040C  2C0E               	goto	u3811
  4798  040D  2C0F               	goto	u3810
  4799  040E                     u3811:	
  4800  040E  2C1C               	goto	l3651
  4801  040F                     u3810:	
  4802  040F                     l3649:	
  4803                           
  4804                           ;main.c: 463:               origem_down[i+1] = origem_down[i];
  4805  040F  0020               	movlb	0	; select bank0
  4806  0410  352D               	lslf	update@i_1262,w
  4807  0411  3EAA               	addlw	(low (_origem_down| 0))& (0+255)
  4808  0412  0086               	movwf	6
  4809  0413  0187               	clrf	7
  4810  0414  352D               	lslf	update@i_1262,w
  4811  0415  3EAC               	addlw	(low ((_origem_down| 0+2)))& (0+255)
  4812  0416  0084               	movwf	4
  4813  0417  0185               	clrf	5
  4814  0418  3F40               	moviw [0]fsr1
  4815  0419  3F80               	movwi [0]fsr0
  4816  041A  3F41               	moviw [1]fsr1
  4817  041B  3F81               	movwi [1]fsr0
  4818  041C                     l3651:	
  4819                           
  4820                           ;main.c: 465:       }
  4821  041C  30FF               	movlw	255
  4822  041D  0020               	movlb	0	; select bank0
  4823  041E  07AD               	addwf	update@i_1262,f
  4824  041F  30FF               	movlw	255
  4825  0420  3DAE               	addwfc	update@i_1262+1,f
  4826  0421                     l3653:	
  4827  0421  1FAE               	btfss	update@i_1262+1,7
  4828  0422  2C24               	goto	u3821
  4829  0423  2C25               	goto	u3820
  4830  0424                     u3821:	
  4831  0424  2BF0               	goto	l3641
  4832  0425                     u3820:	
  4833  0425                     l3655:	
  4834                           
  4835                           ;main.c: 469:     min_fila_down = 4;
  4836  0425  3004               	movlw	4
  4837  0426  0021               	movlb	1	; select bank1
  4838  0427  00CC               	movwf	_min_fila_down^(0+128)
  4839  0428  3000               	movlw	0
  4840  0429  00CD               	movwf	(_min_fila_down^(0+128)+1)
  4841  042A                     l3657:	
  4842                           
  4843                           ;main.c: 470:     for(i=0;i<=4;i++)
  4844  042A  0020               	movlb	0	; select bank0
  4845  042B  01A9               	clrf	update@i_1261
  4846  042C  01AA               	clrf	update@i_1261+1
  4847  042D                     l3663:	
  4848                           
  4849                           ;main.c: 471:     {;main.c: 472:         if(fila_down[i]<min_fila_down&&fila_down[i]>0)
  4850  042D  0020               	movlb	0	; select bank0
  4851  042E  3529               	lslf	update@i_1261,w
  4852  042F  3EB4               	addlw	(low (_fila_down| 0))& (0+255)
  4853  0430  0086               	movwf	6
  4854  0431  0187               	clrf	7
  4855  0432  3F40               	moviw [0]fsr1
  4856  0433  00A5               	movwf	??_update
  4857  0434  3F41               	moviw [1]fsr1
  4858  0435  00A6               	movwf	??_update+1
  4859  0436  0826               	movf	??_update+1,w
  4860  0437  3A80               	xorlw	128
  4861  0438  00A7               	movwf	??_update+2
  4862  0439  0021               	movlb	1	; select bank1
  4863  043A  084D               	movf	(_min_fila_down+1)^(0+128),w
  4864  043B  3A80               	xorlw	128
  4865  043C  0020               	movlb	0	; select bank0
  4866  043D  0227               	subwf	??_update+2,w
  4867  043E  1D03               	skipz
  4868  043F  2C44               	goto	u3835
  4869  0440  0021               	movlb	1	; select bank1
  4870  0441  084C               	movf	_min_fila_down^(0+128),w
  4871  0442  0020               	movlb	0	; select bank0
  4872  0443  0225               	subwf	??_update,w
  4873  0444                     u3835:	
  4874  0444  1803               	skipnc
  4875  0445  2C47               	goto	u3831
  4876  0446  2C48               	goto	u3830
  4877  0447                     u3831:	
  4878  0447  2C68               	goto	l3669
  4879  0448                     u3830:	
  4880  0448                     l3665:	
  4881  0448  0020               	movlb	0	; select bank0
  4882  0449  3529               	lslf	update@i_1261,w
  4883  044A  3EB4               	addlw	(low (_fila_down| 0))& (0+255)
  4884  044B  0086               	movwf	6
  4885  044C  0187               	clrf	7
  4886  044D  3F40               	moviw [0]fsr1
  4887  044E  00A5               	movwf	??_update
  4888  044F  3F41               	moviw [1]fsr1
  4889  0450  00A6               	movwf	??_update+1
  4890  0451  0826               	movf	??_update+1,w
  4891  0452  3A80               	xorlw	128
  4892  0453  00A7               	movwf	??_update+2
  4893  0454  3080               	movlw	128
  4894  0455  0227               	subwf	??_update+2,w
  4895  0456  1D03               	skipz
  4896  0457  2C5A               	goto	u3845
  4897  0458  3001               	movlw	1
  4898  0459  0225               	subwf	??_update,w
  4899  045A                     u3845:	
  4900  045A  1C03               	skipc
  4901  045B  2C5D               	goto	u3841
  4902  045C  2C5E               	goto	u3840
  4903  045D                     u3841:	
  4904  045D  2C68               	goto	l3669
  4905  045E                     u3840:	
  4906  045E                     l3667:	
  4907                           
  4908                           ;main.c: 473:         {;main.c: 474:             min_fila_down = fila_down[i];
  4909  045E  0020               	movlb	0	; select bank0
  4910  045F  3529               	lslf	update@i_1261,w
  4911  0460  3EB4               	addlw	(low (_fila_down| 0))& (0+255)
  4912  0461  0086               	movwf	6
  4913  0462  0187               	clrf	7
  4914  0463  3F40               	moviw [0]fsr1
  4915  0464  0021               	movlb	1	; select bank1
  4916  0465  00CC               	movwf	_min_fila_down^(0+128)
  4917  0466  3F41               	moviw [1]fsr1
  4918  0467  00CD               	movwf	(_min_fila_down+1)^(0+128)
  4919  0468                     l3669:	
  4920                           
  4921                           ;main.c: 476:     }
  4922  0468  3001               	movlw	1
  4923  0469  0020               	movlb	0	; select bank0
  4924  046A  07A9               	addwf	update@i_1261,f
  4925  046B  3000               	movlw	0
  4926  046C  3DAA               	addwfc	update@i_1261+1,f
  4927  046D                     l3671:	
  4928  046D  082A               	movf	update@i_1261+1,w
  4929  046E  3A80               	xorlw	128
  4930  046F  00A5               	movwf	??_update
  4931  0470  3080               	movlw	128
  4932  0471  0225               	subwf	??_update,w
  4933  0472  1D03               	skipz
  4934  0473  2C76               	goto	u3855
  4935  0474  3005               	movlw	5
  4936  0475  0229               	subwf	update@i_1261,w
  4937  0476                     u3855:	
  4938  0476  1C03               	skipc
  4939  0477  2C79               	goto	u3851
  4940  0478  2C7A               	goto	u3850
  4941  0479                     u3851:	
  4942  0479  2C2D               	goto	l3663
  4943  047A                     u3850:	
  4944  047A                     l3673:	
  4945                           
  4946                           ;main.c: 478:     min_up();
  4947  047A  318E  2660  3182   	fcall	_min_up
  4948                           
  4949                           ;main.c: 479:     max_down();
  4950  047D  318D  25B2  3182   	fcall	_max_down
  4951  0480                     l710:	
  4952  0480  0008               	return
  4953  0481                     __end_of_update:	
  4954                           
  4955                           	psect	text6
  4956  0E60                     __ptext6:	
  4957 ;; *************** function _min_up *****************
  4958 ;; Defined at:
  4959 ;;		line 319 in file "main.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;		None
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;  i               2    3[BANK0 ] int 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  1    wreg      void 
  4966 ;; Registers used:
  4967 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4973 ;;      Params:         0       0       0       0       0       0
  4974 ;;      Locals:         0       2       0       0       0       0
  4975 ;;      Temps:          0       3       0       0       0       0
  4976 ;;      Totals:         0       5       0       0       0       0
  4977 ;;Total ram usage:        5 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; Hardware stack levels required when called:    4
  4980 ;; This function calls:
  4981 ;;		Nothing
  4982 ;; This function is called by:
  4983 ;;		_col_up
  4984 ;;		_update
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           
  4989                           ;psect for function _min_up
  4990  0E60                     _min_up:	
  4991  0E60                     l2497:	
  4992                           ;incstack = 0
  4993                           ; Regs used in _min_up: [wreg+fsr1l+fsr1h+status,2+status,0]
  4994                           
  4995                           
  4996                           ;main.c: 322:     min_origem_up = 4;
  4997  0E60  3004               	movlw	4
  4998  0E61  00F0               	movwf	_min_origem_up
  4999  0E62  3000               	movlw	0
  5000  0E63  00F1               	movwf	_min_origem_up+1
  5001  0E64                     l2499:	
  5002                           
  5003                           ;main.c: 323:     int i;;main.c: 324:     for(i=0;i<=4;i++)
  5004  0E64  0020               	movlb	0	; select bank0
  5005  0E65  01A3               	clrf	min_up@i
  5006  0E66  01A4               	clrf	min_up@i+1
  5007  0E67                     l2505:	
  5008                           
  5009                           ;main.c: 325:     {;main.c: 326:         if(origem_up[i]<min_origem_up&&origem_up[i]>0)
  5010  0E67  0020               	movlb	0	; select bank0
  5011  0E68  3523               	lslf	min_up@i,w
  5012  0E69  3EA0               	addlw	(low (_origem_up| 0))& (0+255)
  5013  0E6A  0086               	movwf	6
  5014  0E6B  0187               	clrf	7
  5015  0E6C  3F40               	moviw [0]fsr1
  5016  0E6D  00A0               	movwf	??_min_up
  5017  0E6E  3F41               	moviw [1]fsr1
  5018  0E6F  00A1               	movwf	??_min_up+1
  5019  0E70  0821               	movf	??_min_up+1,w
  5020  0E71  3A80               	xorlw	128
  5021  0E72  00A2               	movwf	??_min_up+2
  5022  0E73  0871               	movf	_min_origem_up+1,w
  5023  0E74  3A80               	xorlw	128
  5024  0E75  0222               	subwf	??_min_up+2,w
  5025  0E76  1D03               	skipz
  5026  0E77  2E7A               	goto	u1845
  5027  0E78  0870               	movf	_min_origem_up,w
  5028  0E79  0220               	subwf	??_min_up,w
  5029  0E7A                     u1845:	
  5030  0E7A  1803               	skipnc
  5031  0E7B  2E7D               	goto	u1841
  5032  0E7C  2E7E               	goto	u1840
  5033  0E7D                     u1841:	
  5034  0E7D  2E9D               	goto	l663
  5035  0E7E                     u1840:	
  5036  0E7E                     l2507:	
  5037  0E7E  0020               	movlb	0	; select bank0
  5038  0E7F  3523               	lslf	min_up@i,w
  5039  0E80  3EA0               	addlw	(low (_origem_up| 0))& (0+255)
  5040  0E81  0086               	movwf	6
  5041  0E82  0187               	clrf	7
  5042  0E83  3F40               	moviw [0]fsr1
  5043  0E84  00A0               	movwf	??_min_up
  5044  0E85  3F41               	moviw [1]fsr1
  5045  0E86  00A1               	movwf	??_min_up+1
  5046  0E87  0821               	movf	??_min_up+1,w
  5047  0E88  3A80               	xorlw	128
  5048  0E89  00A2               	movwf	??_min_up+2
  5049  0E8A  3080               	movlw	128
  5050  0E8B  0222               	subwf	??_min_up+2,w
  5051  0E8C  1D03               	skipz
  5052  0E8D  2E90               	goto	u1855
  5053  0E8E  3001               	movlw	1
  5054  0E8F  0220               	subwf	??_min_up,w
  5055  0E90                     u1855:	
  5056  0E90  1C03               	skipc
  5057  0E91  2E93               	goto	u1851
  5058  0E92  2E94               	goto	u1850
  5059  0E93                     u1851:	
  5060  0E93  2E9D               	goto	l663
  5061  0E94                     u1850:	
  5062  0E94                     l2509:	
  5063                           
  5064                           ;main.c: 327:         {;main.c: 328:             min_origem_up = origem_up[i];
  5065  0E94  0020               	movlb	0	; select bank0
  5066  0E95  3523               	lslf	min_up@i,w
  5067  0E96  3EA0               	addlw	(low (_origem_up| 0))& (0+255)
  5068  0E97  0086               	movwf	6
  5069  0E98  0187               	clrf	7
  5070  0E99  3F40               	moviw [0]fsr1
  5071  0E9A  00F0               	movwf	_min_origem_up
  5072  0E9B  3F41               	moviw [1]fsr1
  5073  0E9C  00F1               	movwf	_min_origem_up+1
  5074  0E9D                     l663:	
  5075                           ;main.c: 329:         }
  5076                           
  5077                           
  5078                           ;main.c: 330:         if(fila_up[i]<min_origem_up&&fila_up[i]>0)
  5079  0E9D  0020               	movlb	0	; select bank0
  5080  0E9E  3523               	lslf	min_up@i,w
  5081  0E9F  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  5082  0EA0  0086               	movwf	6
  5083  0EA1  0187               	clrf	7
  5084  0EA2  3F40               	moviw [0]fsr1
  5085  0EA3  00A0               	movwf	??_min_up
  5086  0EA4  3F41               	moviw [1]fsr1
  5087  0EA5  00A1               	movwf	??_min_up+1
  5088  0EA6  0821               	movf	??_min_up+1,w
  5089  0EA7  3A80               	xorlw	128
  5090  0EA8  00A2               	movwf	??_min_up+2
  5091  0EA9  0871               	movf	_min_origem_up+1,w
  5092  0EAA  3A80               	xorlw	128
  5093  0EAB  0222               	subwf	??_min_up+2,w
  5094  0EAC  1D03               	skipz
  5095  0EAD  2EB0               	goto	u1865
  5096  0EAE  0870               	movf	_min_origem_up,w
  5097  0EAF  0220               	subwf	??_min_up,w
  5098  0EB0                     u1865:	
  5099  0EB0  1803               	skipnc
  5100  0EB1  2EB3               	goto	u1861
  5101  0EB2  2EB4               	goto	u1860
  5102  0EB3                     u1861:	
  5103  0EB3  2ED3               	goto	l2515
  5104  0EB4                     u1860:	
  5105  0EB4                     l2511:	
  5106  0EB4  0020               	movlb	0	; select bank0
  5107  0EB5  3523               	lslf	min_up@i,w
  5108  0EB6  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  5109  0EB7  0086               	movwf	6
  5110  0EB8  0187               	clrf	7
  5111  0EB9  3F40               	moviw [0]fsr1
  5112  0EBA  00A0               	movwf	??_min_up
  5113  0EBB  3F41               	moviw [1]fsr1
  5114  0EBC  00A1               	movwf	??_min_up+1
  5115  0EBD  0821               	movf	??_min_up+1,w
  5116  0EBE  3A80               	xorlw	128
  5117  0EBF  00A2               	movwf	??_min_up+2
  5118  0EC0  3080               	movlw	128
  5119  0EC1  0222               	subwf	??_min_up+2,w
  5120  0EC2  1D03               	skipz
  5121  0EC3  2EC6               	goto	u1875
  5122  0EC4  3001               	movlw	1
  5123  0EC5  0220               	subwf	??_min_up,w
  5124  0EC6                     u1875:	
  5125  0EC6  1C03               	skipc
  5126  0EC7  2EC9               	goto	u1871
  5127  0EC8  2ECA               	goto	u1870
  5128  0EC9                     u1871:	
  5129  0EC9  2ED3               	goto	l2515
  5130  0ECA                     u1870:	
  5131  0ECA                     l2513:	
  5132                           
  5133                           ;main.c: 331:         {;main.c: 332:             min_origem_up = fila_up[i];
  5134  0ECA  0020               	movlb	0	; select bank0
  5135  0ECB  3523               	lslf	min_up@i,w
  5136  0ECC  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  5137  0ECD  0086               	movwf	6
  5138  0ECE  0187               	clrf	7
  5139  0ECF  3F40               	moviw [0]fsr1
  5140  0ED0  00F0               	movwf	_min_origem_up
  5141  0ED1  3F41               	moviw [1]fsr1
  5142  0ED2  00F1               	movwf	_min_origem_up+1
  5143  0ED3                     l2515:	
  5144                           
  5145                           ;main.c: 334:     }
  5146  0ED3  3001               	movlw	1
  5147  0ED4  0020               	movlb	0	; select bank0
  5148  0ED5  07A3               	addwf	min_up@i,f
  5149  0ED6  3000               	movlw	0
  5150  0ED7  3DA4               	addwfc	min_up@i+1,f
  5151  0ED8                     l2517:	
  5152  0ED8  0824               	movf	min_up@i+1,w
  5153  0ED9  3A80               	xorlw	128
  5154  0EDA  00A0               	movwf	??_min_up
  5155  0EDB  3080               	movlw	128
  5156  0EDC  0220               	subwf	??_min_up,w
  5157  0EDD  1D03               	skipz
  5158  0EDE  2EE1               	goto	u1885
  5159  0EDF  3005               	movlw	5
  5160  0EE0  0223               	subwf	min_up@i,w
  5161  0EE1                     u1885:	
  5162  0EE1  1C03               	skipc
  5163  0EE2  2EE4               	goto	u1881
  5164  0EE3  2EE5               	goto	u1880
  5165  0EE4                     u1881:	
  5166  0EE4  2E67               	goto	l2505
  5167  0EE5                     u1880:	
  5168  0EE5                     l2519:	
  5169                           
  5170                           ;main.c: 336:     for(i=0;i<=4;i++)
  5171  0EE5  0020               	movlb	0	; select bank0
  5172  0EE6  01A3               	clrf	min_up@i
  5173  0EE7  01A4               	clrf	min_up@i+1
  5174  0EE8                     l2525:	
  5175                           
  5176                           ;main.c: 337:     {;main.c: 338:         if(origem_up[i]==min_origem_up)
  5177  0EE8  0020               	movlb	0	; select bank0
  5178  0EE9  3523               	lslf	min_up@i,w
  5179  0EEA  3EA0               	addlw	(low (_origem_up| 0))& (0+255)
  5180  0EEB  0086               	movwf	6
  5181  0EEC  0187               	clrf	7
  5182  0EED  3F40               	moviw [0]fsr1
  5183  0EEE  00A0               	movwf	??_min_up
  5184  0EEF  3F41               	moviw [1]fsr1
  5185  0EF0  00A1               	movwf	??_min_up+1
  5186  0EF1  0871               	movf	_min_origem_up+1,w
  5187  0EF2  0621               	xorwf	??_min_up+1,w
  5188  0EF3  1D03               	skipz
  5189  0EF4  2EF7               	goto	u1895
  5190  0EF5  0870               	movf	_min_origem_up,w
  5191  0EF6  0620               	xorwf	??_min_up,w
  5192  0EF7                     u1895:	
  5193  0EF7  1D03               	skipz
  5194  0EF8  2EFA               	goto	u1891
  5195  0EF9  2EFB               	goto	u1890
  5196  0EFA                     u1891:	
  5197  0EFA  2F02               	goto	l667
  5198  0EFB                     u1890:	
  5199  0EFB                     l2527:	
  5200                           
  5201                           ;main.c: 339:         {;main.c: 340:             origem_up[i]=out_value;
  5202  0EFB  3523               	lslf	min_up@i,w
  5203  0EFC  3EA0               	addlw	(low (_origem_up| 0))& (0+255)
  5204  0EFD  0086               	movwf	6
  5205  0EFE  0187               	clrf	7
  5206  0EFF  3000               	movlw	0
  5207  0F00  3FC0               	movwi [0]fsr1
  5208  0F01  3FC1               	movwi [1]fsr1
  5209  0F02                     l667:	
  5210                           ;main.c: 341:         }
  5211                           
  5212                           
  5213                           ;main.c: 342:         if(fila_up[i]==min_origem_up)
  5214  0F02  3523               	lslf	min_up@i,w
  5215  0F03  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  5216  0F04  0086               	movwf	6
  5217  0F05  0187               	clrf	7
  5218  0F06  3F40               	moviw [0]fsr1
  5219  0F07  00A0               	movwf	??_min_up
  5220  0F08  3F41               	moviw [1]fsr1
  5221  0F09  00A1               	movwf	??_min_up+1
  5222  0F0A  0871               	movf	_min_origem_up+1,w
  5223  0F0B  0621               	xorwf	??_min_up+1,w
  5224  0F0C  1D03               	skipz
  5225  0F0D  2F10               	goto	u1905
  5226  0F0E  0870               	movf	_min_origem_up,w
  5227  0F0F  0620               	xorwf	??_min_up,w
  5228  0F10                     u1905:	
  5229  0F10  1D03               	skipz
  5230  0F11  2F13               	goto	u1901
  5231  0F12  2F14               	goto	u1900
  5232  0F13                     u1901:	
  5233  0F13  2F1B               	goto	l2531
  5234  0F14                     u1900:	
  5235  0F14                     l2529:	
  5236                           
  5237                           ;main.c: 343:         {;main.c: 344:             fila_up[i]=out_value;
  5238  0F14  3523               	lslf	min_up@i,w
  5239  0F15  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  5240  0F16  0086               	movwf	6
  5241  0F17  0187               	clrf	7
  5242  0F18  3000               	movlw	0
  5243  0F19  3FC0               	movwi [0]fsr1
  5244  0F1A  3FC1               	movwi [1]fsr1
  5245  0F1B                     l2531:	
  5246                           
  5247                           ;main.c: 346:     }
  5248  0F1B  3001               	movlw	1
  5249  0F1C  07A3               	addwf	min_up@i,f
  5250  0F1D  3000               	movlw	0
  5251  0F1E  3DA4               	addwfc	min_up@i+1,f
  5252  0F1F                     l2533:	
  5253  0F1F  0824               	movf	min_up@i+1,w
  5254  0F20  3A80               	xorlw	128
  5255  0F21  00A0               	movwf	??_min_up
  5256  0F22  3080               	movlw	128
  5257  0F23  0220               	subwf	??_min_up,w
  5258  0F24  1D03               	skipz
  5259  0F25  2F28               	goto	u1915
  5260  0F26  3005               	movlw	5
  5261  0F27  0223               	subwf	min_up@i,w
  5262  0F28                     u1915:	
  5263  0F28  1C03               	skipc
  5264  0F29  2F2B               	goto	u1911
  5265  0F2A  2F2C               	goto	u1910
  5266  0F2B                     u1911:	
  5267  0F2B  2EE8               	goto	l2525
  5268  0F2C                     u1910:	
  5269  0F2C                     l669:	
  5270  0F2C  0008               	return
  5271  0F2D                     __end_of_min_up:	
  5272                           
  5273                           	psect	text7
  5274  0DB2                     __ptext7:	
  5275 ;; *************** function _max_down *****************
  5276 ;; Defined at:
  5277 ;;		line 351 in file "main.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;		None
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;  i               2    3[BANK0 ] int 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      void 
  5284 ;; Registers used:
  5285 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5291 ;;      Params:         0       0       0       0       0       0
  5292 ;;      Locals:         0       2       0       0       0       0
  5293 ;;      Temps:          0       3       0       0       0       0
  5294 ;;      Totals:         0       5       0       0       0       0
  5295 ;;Total ram usage:        5 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; Hardware stack levels required when called:    4
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_col_down
  5302 ;;		_update
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           
  5307                           ;psect for function _max_down
  5308  0DB2                     _max_down:	
  5309  0DB2                     l2535:	
  5310                           ;incstack = 0
  5311                           ; Regs used in _max_down: [wreg+fsr1l+fsr1h+status,2+status,0]
  5312                           
  5313                           
  5314                           ;main.c: 353:     max_origem_down = origem_down[0];
  5315  0DB2  0021               	movlb	1	; select bank1
  5316  0DB3  082B               	movf	(_origem_down+1)^(0+128),w
  5317  0DB4  00F3               	movwf	_max_origem_down+1
  5318  0DB5  082A               	movf	_origem_down^(0+128),w
  5319  0DB6  00F2               	movwf	_max_origem_down
  5320                           
  5321                           ;main.c: 354:     int i;;main.c: 355:     for(i=1;i<=4;i++)
  5322  0DB7  3001               	movlw	1
  5323  0DB8  0020               	movlb	0	; select bank0
  5324  0DB9  00A3               	movwf	max_down@i
  5325  0DBA  3000               	movlw	0
  5326  0DBB  00A4               	movwf	max_down@i+1
  5327  0DBC                     l2539:	
  5328                           
  5329                           ;main.c: 356:     {;main.c: 357:         if(origem_down[i]>max_origem_down)
  5330  0DBC  0020               	movlb	0	; select bank0
  5331  0DBD  3523               	lslf	max_down@i,w
  5332  0DBE  3EAA               	addlw	(low (_origem_down| 0))& (0+255)
  5333  0DBF  0086               	movwf	6
  5334  0DC0  0187               	clrf	7
  5335  0DC1  3F40               	moviw [0]fsr1
  5336  0DC2  00A0               	movwf	??_max_down
  5337  0DC3  3F41               	moviw [1]fsr1
  5338  0DC4  00A1               	movwf	??_max_down+1
  5339  0DC5  0873               	movf	_max_origem_down+1,w
  5340  0DC6  3A80               	xorlw	128
  5341  0DC7  00A2               	movwf	??_max_down+2
  5342  0DC8  0821               	movf	??_max_down+1,w
  5343  0DC9  3A80               	xorlw	128
  5344  0DCA  0222               	subwf	??_max_down+2,w
  5345  0DCB  1D03               	skipz
  5346  0DCC  2DCF               	goto	u1925
  5347  0DCD  0820               	movf	??_max_down,w
  5348  0DCE  0272               	subwf	_max_origem_down,w
  5349  0DCF                     u1925:	
  5350  0DCF  1803               	skipnc
  5351  0DD0  2DD2               	goto	u1921
  5352  0DD1  2DD3               	goto	u1920
  5353  0DD2                     u1921:	
  5354  0DD2  2DDC               	goto	l674
  5355  0DD3                     u1920:	
  5356  0DD3                     l2541:	
  5357                           
  5358                           ;main.c: 358:         {;main.c: 359:             max_origem_down = origem_down[i];
  5359  0DD3  0020               	movlb	0	; select bank0
  5360  0DD4  3523               	lslf	max_down@i,w
  5361  0DD5  3EAA               	addlw	(low (_origem_down| 0))& (0+255)
  5362  0DD6  0086               	movwf	6
  5363  0DD7  0187               	clrf	7
  5364  0DD8  3F40               	moviw [0]fsr1
  5365  0DD9  00F2               	movwf	_max_origem_down
  5366  0DDA  3F41               	moviw [1]fsr1
  5367  0DDB  00F3               	movwf	_max_origem_down+1
  5368  0DDC                     l674:	
  5369                           ;main.c: 360:         }
  5370                           
  5371                           
  5372                           ;main.c: 361:         if(fila_down[i]>max_origem_down)
  5373  0DDC  0020               	movlb	0	; select bank0
  5374  0DDD  3523               	lslf	max_down@i,w
  5375  0DDE  3EB4               	addlw	(low (_fila_down| 0))& (0+255)
  5376  0DDF  0086               	movwf	6
  5377  0DE0  0187               	clrf	7
  5378  0DE1  3F40               	moviw [0]fsr1
  5379  0DE2  00A0               	movwf	??_max_down
  5380  0DE3  3F41               	moviw [1]fsr1
  5381  0DE4  00A1               	movwf	??_max_down+1
  5382  0DE5  0873               	movf	_max_origem_down+1,w
  5383  0DE6  3A80               	xorlw	128
  5384  0DE7  00A2               	movwf	??_max_down+2
  5385  0DE8  0821               	movf	??_max_down+1,w
  5386  0DE9  3A80               	xorlw	128
  5387  0DEA  0222               	subwf	??_max_down+2,w
  5388  0DEB  1D03               	skipz
  5389  0DEC  2DEF               	goto	u1935
  5390  0DED  0820               	movf	??_max_down,w
  5391  0DEE  0272               	subwf	_max_origem_down,w
  5392  0DEF                     u1935:	
  5393  0DEF  1803               	skipnc
  5394  0DF0  2DF2               	goto	u1931
  5395  0DF1  2DF3               	goto	u1930
  5396  0DF2                     u1931:	
  5397  0DF2  2DFC               	goto	l2545
  5398  0DF3                     u1930:	
  5399  0DF3                     l2543:	
  5400                           
  5401                           ;main.c: 362:         {;main.c: 363:             max_origem_down = fila_down[i];
  5402  0DF3  0020               	movlb	0	; select bank0
  5403  0DF4  3523               	lslf	max_down@i,w
  5404  0DF5  3EB4               	addlw	(low (_fila_down| 0))& (0+255)
  5405  0DF6  0086               	movwf	6
  5406  0DF7  0187               	clrf	7
  5407  0DF8  3F40               	moviw [0]fsr1
  5408  0DF9  00F2               	movwf	_max_origem_down
  5409  0DFA  3F41               	moviw [1]fsr1
  5410  0DFB  00F3               	movwf	_max_origem_down+1
  5411  0DFC                     l2545:	
  5412                           
  5413                           ;main.c: 365:     }
  5414  0DFC  3001               	movlw	1
  5415  0DFD  0020               	movlb	0	; select bank0
  5416  0DFE  07A3               	addwf	max_down@i,f
  5417  0DFF  3000               	movlw	0
  5418  0E00  3DA4               	addwfc	max_down@i+1,f
  5419  0E01                     l2547:	
  5420  0E01  0824               	movf	max_down@i+1,w
  5421  0E02  3A80               	xorlw	128
  5422  0E03  00A0               	movwf	??_max_down
  5423  0E04  3080               	movlw	128
  5424  0E05  0220               	subwf	??_max_down,w
  5425  0E06  1D03               	skipz
  5426  0E07  2E0A               	goto	u1945
  5427  0E08  3005               	movlw	5
  5428  0E09  0223               	subwf	max_down@i,w
  5429  0E0A                     u1945:	
  5430  0E0A  1C03               	skipc
  5431  0E0B  2E0D               	goto	u1941
  5432  0E0C  2E0E               	goto	u1940
  5433  0E0D                     u1941:	
  5434  0E0D  2DBC               	goto	l2539
  5435  0E0E                     u1940:	
  5436  0E0E                     l2549:	
  5437                           
  5438                           ;main.c: 367:     for(i=0;i<=4;i++)
  5439  0E0E  0020               	movlb	0	; select bank0
  5440  0E0F  01A3               	clrf	max_down@i
  5441  0E10  01A4               	clrf	max_down@i+1
  5442  0E11                     l2555:	
  5443                           
  5444                           ;main.c: 368:     {;main.c: 369:         if(origem_down[i]==max_origem_down)
  5445  0E11  0020               	movlb	0	; select bank0
  5446  0E12  3523               	lslf	max_down@i,w
  5447  0E13  3EAA               	addlw	(low (_origem_down| 0))& (0+255)
  5448  0E14  0086               	movwf	6
  5449  0E15  0187               	clrf	7
  5450  0E16  3F40               	moviw [0]fsr1
  5451  0E17  00A0               	movwf	??_max_down
  5452  0E18  3F41               	moviw [1]fsr1
  5453  0E19  00A1               	movwf	??_max_down+1
  5454  0E1A  0873               	movf	_max_origem_down+1,w
  5455  0E1B  0621               	xorwf	??_max_down+1,w
  5456  0E1C  1D03               	skipz
  5457  0E1D  2E20               	goto	u1955
  5458  0E1E  0872               	movf	_max_origem_down,w
  5459  0E1F  0620               	xorwf	??_max_down,w
  5460  0E20                     u1955:	
  5461  0E20  1D03               	skipz
  5462  0E21  2E23               	goto	u1951
  5463  0E22  2E24               	goto	u1950
  5464  0E23                     u1951:	
  5465  0E23  2E2B               	goto	l678
  5466  0E24                     u1950:	
  5467  0E24                     l2557:	
  5468                           
  5469                           ;main.c: 370:         {;main.c: 371:             origem_down[i]=out_value;
  5470  0E24  3523               	lslf	max_down@i,w
  5471  0E25  3EAA               	addlw	(low (_origem_down| 0))& (0+255)
  5472  0E26  0086               	movwf	6
  5473  0E27  0187               	clrf	7
  5474  0E28  3000               	movlw	0
  5475  0E29  3FC0               	movwi [0]fsr1
  5476  0E2A  3FC1               	movwi [1]fsr1
  5477  0E2B                     l678:	
  5478                           ;main.c: 372:         }
  5479                           
  5480                           
  5481                           ;main.c: 373:         if(fila_up[i]==max_origem_down)
  5482  0E2B  3523               	lslf	max_down@i,w
  5483  0E2C  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  5484  0E2D  0086               	movwf	6
  5485  0E2E  0187               	clrf	7
  5486  0E2F  3F40               	moviw [0]fsr1
  5487  0E30  00A0               	movwf	??_max_down
  5488  0E31  3F41               	moviw [1]fsr1
  5489  0E32  00A1               	movwf	??_max_down+1
  5490  0E33  0873               	movf	_max_origem_down+1,w
  5491  0E34  0621               	xorwf	??_max_down+1,w
  5492  0E35  1D03               	skipz
  5493  0E36  2E39               	goto	u1965
  5494  0E37  0872               	movf	_max_origem_down,w
  5495  0E38  0620               	xorwf	??_max_down,w
  5496  0E39                     u1965:	
  5497  0E39  1D03               	skipz
  5498  0E3A  2E3C               	goto	u1961
  5499  0E3B  2E3D               	goto	u1960
  5500  0E3C                     u1961:	
  5501  0E3C  2E44               	goto	l2561
  5502  0E3D                     u1960:	
  5503  0E3D                     l2559:	
  5504                           
  5505                           ;main.c: 374:         {;main.c: 375:             fila_down[i]=out_value;
  5506  0E3D  3523               	lslf	max_down@i,w
  5507  0E3E  3EB4               	addlw	(low (_fila_down| 0))& (0+255)
  5508  0E3F  0086               	movwf	6
  5509  0E40  0187               	clrf	7
  5510  0E41  3000               	movlw	0
  5511  0E42  3FC0               	movwi [0]fsr1
  5512  0E43  3FC1               	movwi [1]fsr1
  5513  0E44                     l2561:	
  5514                           
  5515                           ;main.c: 377:     }
  5516  0E44  3001               	movlw	1
  5517  0E45  07A3               	addwf	max_down@i,f
  5518  0E46  3000               	movlw	0
  5519  0E47  3DA4               	addwfc	max_down@i+1,f
  5520  0E48                     l2563:	
  5521  0E48  0824               	movf	max_down@i+1,w
  5522  0E49  3A80               	xorlw	128
  5523  0E4A  00A0               	movwf	??_max_down
  5524  0E4B  3080               	movlw	128
  5525  0E4C  0220               	subwf	??_max_down,w
  5526  0E4D  1D03               	skipz
  5527  0E4E  2E51               	goto	u1975
  5528  0E4F  3005               	movlw	5
  5529  0E50  0223               	subwf	max_down@i,w
  5530  0E51                     u1975:	
  5531  0E51  1C03               	skipc
  5532  0E52  2E54               	goto	u1971
  5533  0E53  2E55               	goto	u1970
  5534  0E54                     u1971:	
  5535  0E54  2E11               	goto	l2555
  5536  0E55                     u1970:	
  5537  0E55                     l2565:	
  5538                           
  5539                           ;main.c: 379:     if(max_origem_down==0)
  5540  0E55  0872               	movf	_max_origem_down,w
  5541  0E56  0473               	iorwf	_max_origem_down+1,w
  5542  0E57  1D03               	btfss	3,2
  5543  0E58  2E5A               	goto	u1981
  5544  0E59  2E5B               	goto	u1980
  5545  0E5A                     u1981:	
  5546  0E5A  2E5F               	goto	l681
  5547  0E5B                     u1980:	
  5548  0E5B                     l2567:	
  5549                           
  5550                           ;main.c: 380:     {;main.c: 381:         max_origem_down=1;
  5551  0E5B  3001               	movlw	1
  5552  0E5C  00F2               	movwf	_max_origem_down
  5553  0E5D  3000               	movlw	0
  5554  0E5E  00F3               	movwf	_max_origem_down+1
  5555  0E5F                     l681:	
  5556  0E5F  0008               	return
  5557  0E60                     __end_of_max_down:	
  5558                           
  5559                           	psect	text8
  5560  084E                     __ptext8:	
  5561 ;; *************** function _EUSART_is_rx_ready *****************
  5562 ;; Defined at:
  5563 ;;		line 99 in file "mcc_generated_files/eusart.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;		None
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;		None
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  1    wreg      _Bool 
  5570 ;; Registers used:
  5571 ;;		wreg, status,2, status,0
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5577 ;;      Params:         0       0       0       0       0       0
  5578 ;;      Locals:         0       0       0       0       0       0
  5579 ;;      Temps:          0       0       0       0       0       0
  5580 ;;      Totals:         0       0       0       0       0       0
  5581 ;;Total ram usage:        0 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    4
  5584 ;; This function calls:
  5585 ;;		Nothing
  5586 ;; This function is called by:
  5587 ;;		_update
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           
  5592                           ;psect for function _EUSART_is_rx_ready
  5593  084E                     _EUSART_is_rx_ready:	
  5594  084E                     l3529:	
  5595                           ;incstack = 0
  5596                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  5597                           
  5598                           
  5599                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  5600  084E  0020               	movlb	0	; select bank0
  5601  084F  0E11               	swapf	17,w	;volatile
  5602  0850  0C89               	rrf	9,f
  5603  0851  3901               	andlw	1
  5604  0852                     l51:	
  5605  0852  0008               	return
  5606  0853                     __end_of_EUSART_is_rx_ready:	
  5607                           
  5608                           	psect	text9
  5609  094D                     __ptext9:	
  5610 ;; *************** function _EUSART_Read *****************
  5611 ;; Defined at:
  5612 ;;		line 113 in file "mcc_generated_files/eusart.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;		None
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;		None
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      unsigned char 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5626 ;;      Params:         0       0       0       0       0       0
  5627 ;;      Locals:         0       0       0       0       0       0
  5628 ;;      Temps:          0       0       0       0       0       0
  5629 ;;      Totals:         0       0       0       0       0       0
  5630 ;;Total ram usage:        0 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:    4
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_update
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           
  5641                           ;psect for function _EUSART_Read
  5642  094D                     _EUSART_Read:	
  5643  094D                     l3533:	
  5644                           ;incstack = 0
  5645                           ; Regs used in _EUSART_Read: [wreg+status,2]
  5646                           
  5647  094D                     l60:	
  5648                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  5649                           
  5650                           
  5651                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  5652  094D  0020               	movlb	0	; select bank0
  5653  094E  1E91               	btfss	17,5	;volatile
  5654  094F  2951               	goto	u3621
  5655  0950  2952               	goto	u3620
  5656  0951                     u3621:	
  5657  0951  294D               	goto	l60
  5658  0952                     u3620:	
  5659  0952                     l3535:	
  5660                           
  5661                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  5662  0952  01F6               	clrf	_eusartRxLastError	;volatile
  5663  0953                     l3537:	
  5664                           
  5665                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  5666  0953  0023               	movlb	3	; select bank3
  5667  0954  1C9D               	btfss	29,1	;volatile
  5668  0955  2957               	goto	u3631
  5669  0956  2958               	goto	u3630
  5670  0957                     u3631:	
  5671  0957  295A               	goto	l3541
  5672  0958                     u3630:	
  5673  0958                     l3539:	
  5674                           
  5675                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  5676  0958  121D               	bcf	29,4	;volatile
  5677                           
  5678                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  5679  0959  161D               	bsf	29,4	;volatile
  5680  095A                     l3541:	
  5681                           
  5682                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  5683  095A  0819               	movf	25,w	;volatile
  5684  095B                     l64:	
  5685  095B  0008               	return
  5686  095C                     __end_of_EUSART_Read:	
  5687                           
  5688                           	psect	text10
  5689  09F1                     __ptext10:	
  5690 ;; *************** function ___wmul *****************
  5691 ;; Defined at:
  5692 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5695 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  product         2    4[BANK0 ] unsigned int 
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  2    0[BANK0 ] unsigned int 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5707 ;;      Params:         0       4       0       0       0       0
  5708 ;;      Locals:         0       2       0       0       0       0
  5709 ;;      Temps:          0       0       0       0       0       0
  5710 ;;      Totals:         0       6       0       0       0       0
  5711 ;;Total ram usage:        6 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; Hardware stack levels required when called:    4
  5714 ;; This function calls:
  5715 ;;		Nothing
  5716 ;; This function is called by:
  5717 ;;		_controle
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           
  5722                           ;psect for function ___wmul
  5723  09F1                     ___wmul:	
  5724  09F1                     l3675:	
  5725                           ;incstack = 0
  5726                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5727                           
  5728  09F1  0020               	movlb	0	; select bank0
  5729  09F2  01A4               	clrf	___wmul@product
  5730  09F3  01A5               	clrf	___wmul@product+1
  5731  09F4                     l3677:	
  5732  09F4  1C20               	btfss	___wmul@multiplier,0
  5733  09F5  29F7               	goto	u3861
  5734  09F6  29F8               	goto	u3860
  5735  09F7                     u3861:	
  5736  09F7  29FC               	goto	l860
  5737  09F8                     u3860:	
  5738  09F8                     l3679:	
  5739  09F8  0822               	movf	___wmul@multiplicand,w
  5740  09F9  07A4               	addwf	___wmul@product,f
  5741  09FA  0823               	movf	___wmul@multiplicand+1,w
  5742  09FB  3DA5               	addwfc	___wmul@product+1,f
  5743  09FC                     l860:	
  5744  09FC  3001               	movlw	1
  5745  09FD                     u3875:	
  5746  09FD  35A2               	lslf	___wmul@multiplicand,f
  5747  09FE  0DA3               	rlf	___wmul@multiplicand+1,f
  5748  09FF  0B89               	decfsz	9,f
  5749  0A00  29FD               	goto	u3875
  5750  0A01                     l3681:	
  5751  0A01  3001               	movlw	1
  5752  0A02                     u3885:	
  5753  0A02  36A1               	lsrf	___wmul@multiplier+1,f
  5754  0A03  0CA0               	rrf	___wmul@multiplier,f
  5755  0A04  0B89               	decfsz	9,f
  5756  0A05  2A02               	goto	u3885
  5757  0A06                     l3683:	
  5758  0A06  0820               	movf	___wmul@multiplier,w
  5759  0A07  0421               	iorwf	___wmul@multiplier+1,w
  5760  0A08  1D03               	btfss	3,2
  5761  0A09  2A0B               	goto	u3891
  5762  0A0A  2A0C               	goto	u3890
  5763  0A0B                     u3891:	
  5764  0A0B  29F4               	goto	l3677
  5765  0A0C                     u3890:	
  5766  0A0C                     l3685:	
  5767  0A0C  0825               	movf	___wmul@product+1,w
  5768  0A0D  00A1               	movwf	?___wmul+1
  5769  0A0E  0824               	movf	___wmul@product,w
  5770  0A0F  00A0               	movwf	?___wmul
  5771  0A10                     l862:	
  5772  0A10  0008               	return
  5773  0A11                     __end_of___wmul:	
  5774                           
  5775                           	psect	text11
  5776  09D5                     __ptext11:	
  5777 ;; *************** function _PWM3_LoadDutyValue *****************
  5778 ;; Defined at:
  5779 ;;		line 82 in file "mcc_generated_files/pwm3.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  dutyValue       2    0[BANK0 ] unsigned short 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      void 
  5786 ;; Registers used:
  5787 ;;		wreg, status,2, status,0
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5793 ;;      Params:         0       2       0       0       0       0
  5794 ;;      Locals:         0       0       0       0       0       0
  5795 ;;      Temps:          0       2       0       0       0       0
  5796 ;;      Totals:         0       4       0       0       0       0
  5797 ;;Total ram usage:        4 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:    4
  5800 ;; This function calls:
  5801 ;;		Nothing
  5802 ;; This function is called by:
  5803 ;;		_controle
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           
  5808                           ;psect for function _PWM3_LoadDutyValue
  5809  09D5                     _PWM3_LoadDutyValue:	
  5810  09D5                     l2595:	
  5811                           ;incstack = 0
  5812                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  5813                           
  5814                           
  5815                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
  5816  09D5  0020               	movlb	0	; select bank0
  5817  09D6  0821               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  5818  09D7  00A3               	movwf	??_PWM3_LoadDutyValue+1
  5819  09D8  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
  5820  09D9  00A2               	movwf	??_PWM3_LoadDutyValue
  5821  09DA  36A3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5822  09DB  0CA2               	rrf	??_PWM3_LoadDutyValue,f
  5823  09DC  36A3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5824  09DD  0CA2               	rrf	??_PWM3_LoadDutyValue,f
  5825  09DE  0822               	movf	??_PWM3_LoadDutyValue,w
  5826  09DF  0026               	movlb	6	; select bank6
  5827  09E0  0091               	movwf	17	;volatile
  5828                           
  5829                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
  5830  09E1  0020               	movlb	0	; select bank0
  5831  09E2  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
  5832  09E3  3903               	andlw	3
  5833  09E4  00A2               	movwf	??_PWM3_LoadDutyValue
  5834  09E5  3004               	movlw	4
  5835  09E6                     u2035:	
  5836  09E6  35A2               	lslf	??_PWM3_LoadDutyValue,f
  5837  09E7  0B89               	decfsz	9,f
  5838  09E8  29E6               	goto	u2035
  5839  09E9  0026               	movlb	6	; select bank6
  5840  09EA  0813               	movf	19,w	;volatile
  5841  09EB  39CF               	andlw	207
  5842  09EC  0020               	movlb	0	; select bank0
  5843  09ED  0422               	iorwf	??_PWM3_LoadDutyValue,w
  5844  09EE  0026               	movlb	6	; select bank6
  5845  09EF  0093               	movwf	19	;volatile
  5846  09F0                     l475:	
  5847  09F0  0008               	return
  5848  09F1                     __end_of_PWM3_LoadDutyValue:	
  5849                           
  5850                           	psect	text12
  5851  0A32                     __ptext12:	
  5852 ;; *************** function _ADC_GetConversion *****************
  5853 ;; Defined at:
  5854 ;;		line 112 in file "mcc_generated_files/adc.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;  channel         1    wreg     enum E2474
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;  channel         1    3[BANK0 ] enum E2474
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  2    0[BANK0 ] unsigned short 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5868 ;;      Params:         0       2       0       0       0       0
  5869 ;;      Locals:         0       1       0       0       0       0
  5870 ;;      Temps:          0       1       0       0       0       0
  5871 ;;      Totals:         0       4       0       0       0       0
  5872 ;;Total ram usage:        4 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; Hardware stack levels required when called:    4
  5875 ;; This function calls:
  5876 ;;		Nothing
  5877 ;; This function is called by:
  5878 ;;		_controle
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           
  5883                           ;psect for function _ADC_GetConversion
  5884  0A32                     _ADC_GetConversion:	
  5885                           
  5886                           ;incstack = 0
  5887                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  5888                           ;ADC_GetConversion@channel stored from wreg
  5889  0A32  0020               	movlb	0	; select bank0
  5890  0A33  00A3               	movwf	ADC_GetConversion@channel
  5891  0A34                     l2583:	
  5892                           
  5893                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  5894  0A34  0823               	movf	ADC_GetConversion@channel,w
  5895  0A35  00A2               	movwf	??_ADC_GetConversion
  5896  0A36  0DA2               	rlf	??_ADC_GetConversion,f
  5897  0A37  0DA2               	rlf	??_ADC_GetConversion,f
  5898  0A38  0021               	movlb	1	; select bank1
  5899  0A39  081D               	movf	29,w	;volatile
  5900  0A3A  0020               	movlb	0	; select bank0
  5901  0A3B  0622               	xorwf	??_ADC_GetConversion,w
  5902  0A3C  3983               	andlw	-125
  5903  0A3D  0622               	xorwf	??_ADC_GetConversion,w
  5904  0A3E  0021               	movlb	1	; select bank1
  5905  0A3F  009D               	movwf	29	;volatile
  5906  0A40                     l2585:	
  5907                           
  5908                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  5909  0A40  141D               	bsf	29,0	;volatile
  5910  0A41                     l2587:	
  5911                           
  5912                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  5913  0A41  3003               	movlw	3
  5914  0A42                     u4167:	
  5915  0A42  0B89               	decfsz	9,f
  5916  0A43  2A42               	goto	u4167
  5917  0A44  0000               	nop
  5918  0A45                     l2589:	
  5919                           
  5920                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  5921  0A45  0021               	movlb	1	; select bank1
  5922  0A46  149D               	bsf	29,1	;volatile
  5923  0A47                     l282:	
  5924                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  5925                           
  5926                           
  5927                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  5928  0A47  189D               	btfsc	29,1	;volatile
  5929  0A48  2A4A               	goto	u2021
  5930  0A49  2A4B               	goto	u2020
  5931  0A4A                     u2021:	
  5932  0A4A  2A47               	goto	l282
  5933  0A4B                     u2020:	
  5934  0A4B                     l2591:	
  5935                           
  5936                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5937  0A4B  081C               	movf	28,w	;volatile
  5938  0A4C  0020               	movlb	0	; select bank0
  5939  0A4D  00A1               	movwf	?_ADC_GetConversion+1
  5940  0A4E  0021               	movlb	1	; select bank1
  5941  0A4F  081B               	movf	27,w	;volatile
  5942  0A50  0020               	movlb	0	; select bank0
  5943  0A51  00A0               	movwf	?_ADC_GetConversion
  5944  0A52                     l285:	
  5945  0A52  0008               	return
  5946  0A53                     __end_of_ADC_GetConversion:	
  5947                           
  5948                           	psect	text13
  5949  09B9                     __ptext13:	
  5950 ;; *************** function _abs *****************
  5951 ;; Defined at:
  5952 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;  a               2    0[BANK0 ] int 
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;		None
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  2    0[BANK0 ] int 
  5959 ;; Registers used:
  5960 ;;		wreg, status,2, status,0
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5966 ;;      Params:         0       2       0       0       0       0
  5967 ;;      Locals:         0       0       0       0       0       0
  5968 ;;      Temps:          0       2       0       0       0       0
  5969 ;;      Totals:         0       4       0       0       0       0
  5970 ;;Total ram usage:        4 bytes
  5971 ;; Hardware stack levels used:    1
  5972 ;; Hardware stack levels required when called:    4
  5973 ;; This function calls:
  5974 ;;		Nothing
  5975 ;; This function is called by:
  5976 ;;		_gerenciamento
  5977 ;;		_col_up
  5978 ;;		_col_down
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           
  5983                           ;psect for function _abs
  5984  09B9                     _abs:	
  5985  09B9                     l3043:	
  5986                           ;incstack = 0
  5987                           ; Regs used in _abs: [wreg+status,2+status,0]
  5988                           
  5989  09B9  0020               	movlb	0	; select bank0
  5990  09BA  0821               	movf	abs@a+1,w
  5991  09BB  3A80               	xorlw	128
  5992  09BC  00A2               	movwf	??_abs
  5993  09BD  3080               	movlw	128
  5994  09BE  0222               	subwf	??_abs,w
  5995  09BF  1D03               	skipz
  5996  09C0  29C3               	goto	u2795
  5997  09C1  3001               	movlw	1
  5998  09C2  0220               	subwf	abs@a,w
  5999  09C3                     u2795:	
  6000  09C3  1803               	skipnc
  6001  09C4  29C6               	goto	u2791
  6002  09C5  29C7               	goto	u2790
  6003  09C6                     u2791:	
  6004  09C6  29D4               	goto	l1314
  6005  09C7                     u2790:	
  6006  09C7                     l3045:	
  6007  09C7  0020               	movlb	0	; select bank0
  6008  09C8  0920               	comf	abs@a,w
  6009  09C9  00A2               	movwf	??_abs
  6010  09CA  0921               	comf	abs@a+1,w
  6011  09CB  00A3               	movwf	??_abs+1
  6012  09CC  0AA2               	incf	??_abs,f
  6013  09CD  1903               	skipnz
  6014  09CE  0AA3               	incf	??_abs+1,f
  6015  09CF  0822               	movf	??_abs,w
  6016  09D0  00A0               	movwf	?_abs
  6017  09D1  0823               	movf	??_abs+1,w
  6018  09D2  00A1               	movwf	?_abs+1
  6019  09D3  29D4               	goto	l1317
  6020  09D4                     l1314:	
  6021  09D4                     l1317:	
  6022  09D4  0008               	return
  6023  09D5                     __end_of_abs:	
  6024                           
  6025                           	psect	text14
  6026  0F2D                     __ptext14:	
  6027 ;; *************** function _comunicacao *****************
  6028 ;; Defined at:
  6029 ;;		line 155 in file "main.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;		None
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;  position        4   75[BANK0 ] float 
  6034 ;;  speed           4   71[BANK0 ] float 
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  1    wreg      void 
  6037 ;; Registers used:
  6038 ;;		wreg, status,2, status,0, pclath, cstack
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6044 ;;      Params:         0       0       0       0       0       0
  6045 ;;      Locals:         0       8       0       0       0       0
  6046 ;;      Temps:          0       1       0       0       0       0
  6047 ;;      Totals:         0       9       0       0       0       0
  6048 ;;Total ram usage:        9 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; Hardware stack levels required when called:    6
  6051 ;; This function calls:
  6052 ;;		___fldiv
  6053 ;;		___flmul
  6054 ;;		___fltol
  6055 ;;		___xxtofl
  6056 ;; This function is called by:
  6057 ;;		_main
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           
  6062                           ;psect for function _comunicacao
  6063  0F2D                     _comunicacao:	
  6064  0F2D                     l3449:	
  6065                           ;incstack = 0
  6066                           ; Regs used in _comunicacao: [wreg+status,2+status,0+pclath+cstack]
  6067                           
  6068                           
  6069                           ;main.c: 160:     float speed = 3.75/(((float)ccp_value)*0.0000005);
  6070  0F2D  3035               	movlw	53
  6071  0F2E  0020               	movlb	0	; select bank0
  6072  0F2F  00B5               	movwf	___flmul@b+3
  6073  0F30  3006               	movlw	6
  6074  0F31  00B4               	movwf	___flmul@b+2
  6075  0F32  3037               	movlw	55
  6076  0F33  00B3               	movwf	___flmul@b+1
  6077  0F34  30BD               	movlw	189
  6078  0F35  00B2               	movwf	___flmul@b
  6079  0F36  0021               	movlb	1	; select bank1
  6080  0F37  085F               	movf	_ccp_value^(0+128),w
  6081  0F38  0020               	movlb	0	; select bank0
  6082  0F39  00A4               	movwf	___xxtofl@val
  6083  0F3A  0021               	movlb	1	; select bank1
  6084  0F3B  0860               	movf	(_ccp_value+1)^(0+128),w
  6085  0F3C  0020               	movlb	0	; select bank0
  6086  0F3D  00A5               	movwf	___xxtofl@val+1
  6087  0F3E  01A6               	clrf	___xxtofl@val+2
  6088  0F3F  01A7               	clrf	___xxtofl@val+3
  6089  0F40  3000               	movlw	0
  6090  0F41  318D  2505  318F   	fcall	___xxtofl
  6091  0F44  0020               	movlb	0	; select bank0
  6092  0F45  0827               	movf	?___xxtofl+3,w
  6093  0F46  00B9               	movwf	___flmul@a+3
  6094  0F47  0826               	movf	?___xxtofl+2,w
  6095  0F48  00B8               	movwf	___flmul@a+2
  6096  0F49  0825               	movf	?___xxtofl+1,w
  6097  0F4A  00B7               	movwf	___flmul@a+1
  6098  0F4B  0824               	movf	?___xxtofl,w
  6099  0F4C  00B6               	movwf	___flmul@a
  6100  0F4D  3180  2051  318F   	fcall	___flmul
  6101  0F50  0020               	movlb	0	; select bank0
  6102  0F51  0835               	movf	?___flmul+3,w
  6103  0F52  00CF               	movwf	___fldiv@a+3
  6104  0F53  0834               	movf	?___flmul+2,w
  6105  0F54  00CE               	movwf	___fldiv@a+2
  6106  0F55  0833               	movf	?___flmul+1,w
  6107  0F56  00CD               	movwf	___fldiv@a+1
  6108  0F57  0832               	movf	?___flmul,w
  6109  0F58  00CC               	movwf	___fldiv@a
  6110  0F59  3040               	movlw	64
  6111  0F5A  00D3               	movwf	___fldiv@b+3
  6112  0F5B  3070               	movlw	112
  6113  0F5C  00D2               	movwf	___fldiv@b+2
  6114  0F5D  3000               	movlw	0
  6115  0F5E  00D1               	movwf	___fldiv@b+1
  6116  0F5F  3000               	movlw	0
  6117  0F60  00D0               	movwf	___fldiv@b
  6118  0F61  3184  2481  318F   	fcall	___fldiv
  6119  0F64  0020               	movlb	0	; select bank0
  6120  0F65  084F               	movf	?___fldiv+3,w
  6121  0F66  00EA               	movwf	comunicacao@speed+3
  6122  0F67  084E               	movf	?___fldiv+2,w
  6123  0F68  00E9               	movwf	comunicacao@speed+2
  6124  0F69  084D               	movf	?___fldiv+1,w
  6125  0F6A  00E8               	movwf	comunicacao@speed+1
  6126  0F6B  084C               	movf	?___fldiv,w
  6127  0F6C  00E7               	movwf	comunicacao@speed
  6128                           
  6129                           ;main.c: 161:     float position = 1.5*pulses;
  6130  0F6D  303F               	movlw	63
  6131  0F6E  00B5               	movwf	___flmul@b+3
  6132  0F6F  30C0               	movlw	192
  6133  0F70  00B4               	movwf	___flmul@b+2
  6134  0F71  3000               	movlw	0
  6135  0F72  00B3               	movwf	___flmul@b+1
  6136  0F73  3000               	movlw	0
  6137  0F74  00B2               	movwf	___flmul@b
  6138  0F75  0021               	movlb	1	; select bank1
  6139  0F76  0861               	movf	_pulses^(0+128),w
  6140  0F77  0020               	movlb	0	; select bank0
  6141  0F78  00A4               	movwf	___xxtofl@val
  6142  0F79  0021               	movlb	1	; select bank1
  6143  0F7A  0862               	movf	(_pulses+1)^(0+128),w
  6144  0F7B  0020               	movlb	0	; select bank0
  6145  0F7C  00A5               	movwf	___xxtofl@val+1
  6146  0F7D  0D89               	rlf	9,f
  6147  0F7E  3B89               	subwfb	9,f
  6148  0F7F  0989               	comf	9,f
  6149  0F80  00A6               	movwf	___xxtofl@val+2
  6150  0F81  00A7               	movwf	___xxtofl@val+3
  6151  0F82  3001               	movlw	1
  6152  0F83  318D  2505  318F   	fcall	___xxtofl
  6153  0F86  0020               	movlb	0	; select bank0
  6154  0F87  0827               	movf	?___xxtofl+3,w
  6155  0F88  00B9               	movwf	___flmul@a+3
  6156  0F89  0826               	movf	?___xxtofl+2,w
  6157  0F8A  00B8               	movwf	___flmul@a+2
  6158  0F8B  0825               	movf	?___xxtofl+1,w
  6159  0F8C  00B7               	movwf	___flmul@a+1
  6160  0F8D  0824               	movf	?___xxtofl,w
  6161  0F8E  00B6               	movwf	___flmul@a
  6162  0F8F  3180  2051  318F   	fcall	___flmul
  6163  0F92  0020               	movlb	0	; select bank0
  6164  0F93  0835               	movf	?___flmul+3,w
  6165  0F94  00EE               	movwf	comunicacao@position+3
  6166  0F95  0834               	movf	?___flmul+2,w
  6167  0F96  00ED               	movwf	comunicacao@position+2
  6168  0F97  0833               	movf	?___flmul+1,w
  6169  0F98  00EC               	movwf	comunicacao@position+1
  6170  0F99  0832               	movf	?___flmul,w
  6171  0F9A  00EB               	movwf	comunicacao@position
  6172  0F9B                     l3451:	
  6173                           
  6174                           ;main.c: 176:     byte[0] = ((state_motor<<4)& 0x20)|(and_ating2 & 0x02);
  6175  0F9B  0021               	movlb	1	; select bank1
  6176  0F9C  0848               	movf	_and_ating2^(0+128),w
  6177  0F9D  3902               	andlw	2
  6178  0F9E  0020               	movlb	0	; select bank0
  6179  0F9F  00E6               	movwf	??_comunicacao
  6180  0FA0  0866               	movf	??_comunicacao,w
  6181  0FA1  0022               	movlb	2	; select bank2
  6182  0FA2  00B0               	movwf	_byte^(0+256)
  6183  0FA3                     l3453:	
  6184                           
  6185                           ;main.c: 177:     byte[1] = 0x80 |((((uint8_t)position)>>1)& 0x7F);
  6186  0FA3  0020               	movlb	0	; select bank0
  6187  0FA4  086E               	movf	comunicacao@position+3,w
  6188  0FA5  00A3               	movwf	___fltol@f1+3
  6189  0FA6  086D               	movf	comunicacao@position+2,w
  6190  0FA7  00A2               	movwf	___fltol@f1+2
  6191  0FA8  086C               	movf	comunicacao@position+1,w
  6192  0FA9  00A1               	movwf	___fltol@f1+1
  6193  0FAA  086B               	movf	comunicacao@position,w
  6194  0FAB  00A0               	movwf	___fltol@f1
  6195  0FAC  318C  240E  318F   	fcall	___fltol
  6196  0FAF  0020               	movlb	0	; select bank0
  6197  0FB0  3620               	lsrf	?___fltol,w
  6198  0FB1  397F               	andlw	127
  6199  0FB2  3880               	iorlw	128
  6200  0FB3  00E6               	movwf	??_comunicacao
  6201  0FB4  0866               	movf	??_comunicacao,w
  6202  0FB5  0022               	movlb	2	; select bank2
  6203  0FB6  00B1               	movwf	(_byte^(0+256)+1)
  6204  0FB7                     l3455:	
  6205                           
  6206                           ;main.c: 178:     byte[2] = 0x80 |((((uint8_t)speed)>>1)& 0x7F);
  6207  0FB7  0020               	movlb	0	; select bank0
  6208  0FB8  086A               	movf	comunicacao@speed+3,w
  6209  0FB9  00A3               	movwf	___fltol@f1+3
  6210  0FBA  0869               	movf	comunicacao@speed+2,w
  6211  0FBB  00A2               	movwf	___fltol@f1+2
  6212  0FBC  0868               	movf	comunicacao@speed+1,w
  6213  0FBD  00A1               	movwf	___fltol@f1+1
  6214  0FBE  0867               	movf	comunicacao@speed,w
  6215  0FBF  00A0               	movwf	___fltol@f1
  6216  0FC0  318C  240E  318F   	fcall	___fltol
  6217  0FC3  0020               	movlb	0	; select bank0
  6218  0FC4  3620               	lsrf	?___fltol,w
  6219  0FC5  397F               	andlw	127
  6220  0FC6  3880               	iorlw	128
  6221  0FC7  00E6               	movwf	??_comunicacao
  6222  0FC8  0866               	movf	??_comunicacao,w
  6223  0FC9  0022               	movlb	2	; select bank2
  6224  0FCA  00B2               	movwf	(_byte^(0+256)+2)
  6225  0FCB                     l3457:	
  6226                           
  6227                           ;main.c: 179:     byte[3] = 0x80 |((((uint8_t)I_m)>>1)& 0x7F);
  6228  0FCB  082F               	movf	(_I_m+3)^(0+256),w
  6229  0FCC  0020               	movlb	0	; select bank0
  6230  0FCD  00A3               	movwf	___fltol@f1+3
  6231  0FCE  0022               	movlb	2	; select bank2
  6232  0FCF  082E               	movf	(_I_m+2)^(0+256),w
  6233  0FD0  0020               	movlb	0	; select bank0
  6234  0FD1  00A2               	movwf	___fltol@f1+2
  6235  0FD2  0022               	movlb	2	; select bank2
  6236  0FD3  082D               	movf	(_I_m+1)^(0+256),w
  6237  0FD4  0020               	movlb	0	; select bank0
  6238  0FD5  00A1               	movwf	___fltol@f1+1
  6239  0FD6  0022               	movlb	2	; select bank2
  6240  0FD7  082C               	movf	_I_m^(0+256),w
  6241  0FD8  0020               	movlb	0	; select bank0
  6242  0FD9  00A0               	movwf	___fltol@f1
  6243  0FDA  318C  240E  318F   	fcall	___fltol
  6244  0FDD  0020               	movlb	0	; select bank0
  6245  0FDE  3620               	lsrf	?___fltol,w
  6246  0FDF  397F               	andlw	127
  6247  0FE0  3880               	iorlw	128
  6248  0FE1  00E6               	movwf	??_comunicacao
  6249  0FE2  0866               	movf	??_comunicacao,w
  6250  0FE3  0022               	movlb	2	; select bank2
  6251  0FE4  00B3               	movwf	(_byte^(0+256)+3)
  6252  0FE5                     l3459:	
  6253                           
  6254                           ;main.c: 180:     byte[4] = 0x80 |((((uint8_t)temp_mt)>>1)& 0x7F);
  6255  0FE5  082B               	movf	(_temp_mt+3)^(0+256),w
  6256  0FE6  0020               	movlb	0	; select bank0
  6257  0FE7  00A3               	movwf	___fltol@f1+3
  6258  0FE8  0022               	movlb	2	; select bank2
  6259  0FE9  082A               	movf	(_temp_mt+2)^(0+256),w
  6260  0FEA  0020               	movlb	0	; select bank0
  6261  0FEB  00A2               	movwf	___fltol@f1+2
  6262  0FEC  0022               	movlb	2	; select bank2
  6263  0FED  0829               	movf	(_temp_mt+1)^(0+256),w
  6264  0FEE  0020               	movlb	0	; select bank0
  6265  0FEF  00A1               	movwf	___fltol@f1+1
  6266  0FF0  0022               	movlb	2	; select bank2
  6267  0FF1  0828               	movf	_temp_mt^(0+256),w
  6268  0FF2  0020               	movlb	0	; select bank0
  6269  0FF3  00A0               	movwf	___fltol@f1
  6270  0FF4  318C  240E  318F   	fcall	___fltol
  6271  0FF7  0020               	movlb	0	; select bank0
  6272  0FF8  3620               	lsrf	?___fltol,w
  6273  0FF9  397F               	andlw	127
  6274  0FFA  3880               	iorlw	128
  6275  0FFB  00E6               	movwf	??_comunicacao
  6276  0FFC  0866               	movf	??_comunicacao,w
  6277  0FFD  0022               	movlb	2	; select bank2
  6278  0FFE  00B4               	movwf	(_byte^(0+256)+4)
  6279  0FFF                     l610:	
  6280  0FFF  0008               	return
  6281  1000                     __end_of_comunicacao:	
  6282                           
  6283                           	psect	text15
  6284  0D05                     __ptext15:	
  6285 ;; *************** function ___xxtofl *****************
  6286 ;; Defined at:
  6287 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;  sign            1    wreg     unsigned char 
  6290 ;;  val             4    4[BANK0 ] long 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;  sign            1   12[BANK0 ] unsigned char 
  6293 ;;  arg             4   14[BANK0 ] unsigned long 
  6294 ;;  exp             1   13[BANK0 ] unsigned char 
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  4    4[BANK0 ] unsigned char 
  6297 ;; Registers used:
  6298 ;;		wreg, status,2, status,0
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6304 ;;      Params:         0       4       0       0       0       0
  6305 ;;      Locals:         0       6       0       0       0       0
  6306 ;;      Temps:          0       4       0       0       0       0
  6307 ;;      Totals:         0      14       0       0       0       0
  6308 ;;Total ram usage:       14 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:    4
  6311 ;; This function calls:
  6312 ;;		Nothing
  6313 ;; This function is called by:
  6314 ;;		_comunicacao
  6315 ;;		_controle
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           
  6320                           ;psect for function ___xxtofl
  6321  0D05                     ___xxtofl:	
  6322                           
  6323                           ;incstack = 0
  6324                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6325                           ;___xxtofl@sign stored from wreg
  6326  0D05  0020               	movlb	0	; select bank0
  6327  0D06  00AC               	movwf	___xxtofl@sign
  6328  0D07                     l2881:	
  6329  0D07  082C               	movf	___xxtofl@sign,w
  6330  0D08  1903               	btfsc	3,2
  6331  0D09  2D0B               	goto	u2561
  6332  0D0A  2D0C               	goto	u2560
  6333  0D0B                     u2561:	
  6334  0D0B  2D20               	goto	l2887
  6335  0D0C                     u2560:	
  6336  0D0C                     l2883:	
  6337  0D0C  1FA7               	btfss	___xxtofl@val+3,7
  6338  0D0D  2D0F               	goto	u2571
  6339  0D0E  2D10               	goto	u2570
  6340  0D0F                     u2571:	
  6341  0D0F  2D20               	goto	l2887
  6342  0D10                     u2570:	
  6343  0D10                     l2885:	
  6344  0D10  0924               	comf	___xxtofl@val,w
  6345  0D11  00AE               	movwf	___xxtofl@arg
  6346  0D12  0925               	comf	___xxtofl@val+1,w
  6347  0D13  00AF               	movwf	___xxtofl@arg+1
  6348  0D14  0926               	comf	___xxtofl@val+2,w
  6349  0D15  00B0               	movwf	___xxtofl@arg+2
  6350  0D16  0927               	comf	___xxtofl@val+3,w
  6351  0D17  00B1               	movwf	___xxtofl@arg+3
  6352  0D18  0AAE               	incf	___xxtofl@arg,f
  6353  0D19  1903               	skipnz
  6354  0D1A  0AAF               	incf	___xxtofl@arg+1,f
  6355  0D1B  1903               	skipnz
  6356  0D1C  0AB0               	incf	___xxtofl@arg+2,f
  6357  0D1D  1903               	skipnz
  6358  0D1E  0AB1               	incf	___xxtofl@arg+3,f
  6359  0D1F  2D28               	goto	l1295
  6360  0D20                     l2887:	
  6361  0D20  0827               	movf	___xxtofl@val+3,w
  6362  0D21  00B1               	movwf	___xxtofl@arg+3
  6363  0D22  0826               	movf	___xxtofl@val+2,w
  6364  0D23  00B0               	movwf	___xxtofl@arg+2
  6365  0D24  0825               	movf	___xxtofl@val+1,w
  6366  0D25  00AF               	movwf	___xxtofl@arg+1
  6367  0D26  0824               	movf	___xxtofl@val,w
  6368  0D27  00AE               	movwf	___xxtofl@arg
  6369  0D28                     l1295:	
  6370  0D28  0827               	movf	___xxtofl@val+3,w
  6371  0D29  0426               	iorwf	___xxtofl@val+2,w
  6372  0D2A  0425               	iorwf	___xxtofl@val+1,w
  6373  0D2B  0424               	iorwf	___xxtofl@val,w
  6374  0D2C  1D03               	skipz
  6375  0D2D  2D2F               	goto	u2581
  6376  0D2E  2D30               	goto	u2580
  6377  0D2F                     u2581:	
  6378  0D2F  2D39               	goto	l2893
  6379  0D30                     u2580:	
  6380  0D30                     l2889:	
  6381  0D30  3000               	movlw	0
  6382  0D31  00A7               	movwf	?___xxtofl+3
  6383  0D32  3000               	movlw	0
  6384  0D33  00A6               	movwf	?___xxtofl+2
  6385  0D34  3000               	movlw	0
  6386  0D35  00A5               	movwf	?___xxtofl+1
  6387  0D36  3000               	movlw	0
  6388  0D37  00A4               	movwf	?___xxtofl
  6389  0D38  2DB1               	goto	l1297
  6390  0D39                     l2893:	
  6391  0D39  3096               	movlw	150
  6392  0D3A  00A8               	movwf	??___xxtofl
  6393  0D3B  0828               	movf	??___xxtofl,w
  6394  0D3C  00AD               	movwf	___xxtofl@exp
  6395  0D3D  2D49               	goto	l2897
  6396  0D3E                     l2895:	
  6397  0D3E  3001               	movlw	1
  6398  0D3F  00A8               	movwf	??___xxtofl
  6399  0D40  0828               	movf	??___xxtofl,w
  6400  0D41  07AD               	addwf	___xxtofl@exp,f
  6401  0D42  3001               	movlw	1
  6402  0D43                     u2595:	
  6403  0D43  36B1               	lsrf	___xxtofl@arg+3,f
  6404  0D44  0CB0               	rrf	___xxtofl@arg+2,f
  6405  0D45  0CAF               	rrf	___xxtofl@arg+1,f
  6406  0D46  0CAE               	rrf	___xxtofl@arg,f
  6407  0D47  0B89               	decfsz	9,f
  6408  0D48  2D43               	goto	u2595
  6409  0D49                     l2897:	
  6410  0D49  30FE               	movlw	254
  6411  0D4A  0531               	andwf	___xxtofl@arg+3,w
  6412  0D4B  1D03               	btfss	3,2
  6413  0D4C  2D4E               	goto	u2601
  6414  0D4D  2D4F               	goto	u2600
  6415  0D4E                     u2601:	
  6416  0D4E  2D3E               	goto	l2895
  6417  0D4F                     u2600:	
  6418  0D4F  2D63               	goto	l1301
  6419  0D50                     l2899:	
  6420  0D50  3001               	movlw	1
  6421  0D51  00A8               	movwf	??___xxtofl
  6422  0D52  0828               	movf	??___xxtofl,w
  6423  0D53  07AD               	addwf	___xxtofl@exp,f
  6424  0D54                     l2901:	
  6425  0D54  3001               	movlw	1
  6426  0D55  07AE               	addwf	___xxtofl@arg,f
  6427  0D56  3000               	movlw	0
  6428  0D57  3DAF               	addwfc	___xxtofl@arg+1,f
  6429  0D58  3000               	movlw	0
  6430  0D59  3DB0               	addwfc	___xxtofl@arg+2,f
  6431  0D5A  3000               	movlw	0
  6432  0D5B  3DB1               	addwfc	___xxtofl@arg+3,f
  6433  0D5C                     l2903:	
  6434  0D5C  3001               	movlw	1
  6435  0D5D                     u2615:	
  6436  0D5D  36B1               	lsrf	___xxtofl@arg+3,f
  6437  0D5E  0CB0               	rrf	___xxtofl@arg+2,f
  6438  0D5F  0CAF               	rrf	___xxtofl@arg+1,f
  6439  0D60  0CAE               	rrf	___xxtofl@arg,f
  6440  0D61  0B89               	decfsz	9,f
  6441  0D62  2D5D               	goto	u2615
  6442  0D63                     l1301:	
  6443  0D63  30FF               	movlw	255
  6444  0D64  0531               	andwf	___xxtofl@arg+3,w
  6445  0D65  1D03               	btfss	3,2
  6446  0D66  2D68               	goto	u2621
  6447  0D67  2D69               	goto	u2620
  6448  0D68                     u2621:	
  6449  0D68  2D50               	goto	l2899
  6450  0D69                     u2620:	
  6451  0D69  2D73               	goto	l2907
  6452  0D6A                     l2905:	
  6453  0D6A  3001               	movlw	1
  6454  0D6B  02AD               	subwf	___xxtofl@exp,f
  6455  0D6C  3001               	movlw	1
  6456  0D6D                     u2635:	
  6457  0D6D  35AE               	lslf	___xxtofl@arg,f
  6458  0D6E  0DAF               	rlf	___xxtofl@arg+1,f
  6459  0D6F  0DB0               	rlf	___xxtofl@arg+2,f
  6460  0D70  0DB1               	rlf	___xxtofl@arg+3,f
  6461  0D71  0B89               	decfsz	9,f
  6462  0D72  2D6D               	goto	u2635
  6463  0D73                     l2907:	
  6464  0D73  1BB0               	btfsc	___xxtofl@arg+2,7
  6465  0D74  2D76               	goto	u2641
  6466  0D75  2D77               	goto	u2640
  6467  0D76                     u2641:	
  6468  0D76  2D7D               	goto	l1308
  6469  0D77                     u2640:	
  6470  0D77                     l2909:	
  6471  0D77  3002               	movlw	2
  6472  0D78  022D               	subwf	___xxtofl@exp,w
  6473  0D79  1803               	skipnc
  6474  0D7A  2D7C               	goto	u2651
  6475  0D7B  2D7D               	goto	u2650
  6476  0D7C                     u2651:	
  6477  0D7C  2D6A               	goto	l2905
  6478  0D7D                     u2650:	
  6479  0D7D                     l1308:	
  6480  0D7D  182D               	btfsc	___xxtofl@exp,0
  6481  0D7E  2D80               	goto	u2661
  6482  0D7F  2D81               	goto	u2660
  6483  0D80                     u2661:	
  6484  0D80  2D89               	goto	l1309
  6485  0D81                     u2660:	
  6486  0D81                     l2911:	
  6487  0D81  30FF               	movlw	255
  6488  0D82  05AE               	andwf	___xxtofl@arg,f
  6489  0D83  30FF               	movlw	255
  6490  0D84  05AF               	andwf	___xxtofl@arg+1,f
  6491  0D85  307F               	movlw	127
  6492  0D86  05B0               	andwf	___xxtofl@arg+2,f
  6493  0D87  30FF               	movlw	255
  6494  0D88  05B1               	andwf	___xxtofl@arg+3,f
  6495  0D89                     l1309:	
  6496  0D89  1003               	clrc
  6497  0D8A  0CAD               	rrf	___xxtofl@exp,f
  6498  0D8B                     l2913:	
  6499  0D8B  082D               	movf	___xxtofl@exp,w
  6500  0D8C  00A8               	movwf	??___xxtofl
  6501  0D8D  01A9               	clrf	??___xxtofl+1
  6502  0D8E  01AA               	clrf	??___xxtofl+2
  6503  0D8F  01AB               	clrf	??___xxtofl+3
  6504  0D90  3018               	movlw	24
  6505  0D91                     u2675:	
  6506  0D91  35A8               	lslf	??___xxtofl,f
  6507  0D92  0DA9               	rlf	??___xxtofl+1,f
  6508  0D93  0DAA               	rlf	??___xxtofl+2,f
  6509  0D94  0DAB               	rlf	??___xxtofl+3,f
  6510  0D95                     u2670:	
  6511  0D95  0B89               	decfsz	9,f
  6512  0D96  2D91               	goto	u2675
  6513  0D97  0828               	movf	??___xxtofl,w
  6514  0D98  04AE               	iorwf	___xxtofl@arg,f
  6515  0D99  0829               	movf	??___xxtofl+1,w
  6516  0D9A  04AF               	iorwf	___xxtofl@arg+1,f
  6517  0D9B  082A               	movf	??___xxtofl+2,w
  6518  0D9C  04B0               	iorwf	___xxtofl@arg+2,f
  6519  0D9D  082B               	movf	??___xxtofl+3,w
  6520  0D9E  04B1               	iorwf	___xxtofl@arg+3,f
  6521  0D9F                     l2915:	
  6522  0D9F  082C               	movf	___xxtofl@sign,w
  6523  0DA0  1903               	btfsc	3,2
  6524  0DA1  2DA3               	goto	u2681
  6525  0DA2  2DA4               	goto	u2680
  6526  0DA3                     u2681:	
  6527  0DA3  2DA9               	goto	l2921
  6528  0DA4                     u2680:	
  6529  0DA4                     l2917:	
  6530  0DA4  1FA7               	btfss	___xxtofl@val+3,7
  6531  0DA5  2DA7               	goto	u2691
  6532  0DA6  2DA8               	goto	u2690
  6533  0DA7                     u2691:	
  6534  0DA7  2DA9               	goto	l2921
  6535  0DA8                     u2690:	
  6536  0DA8                     l2919:	
  6537  0DA8  17B1               	bsf	___xxtofl@arg+3,7
  6538  0DA9                     l2921:	
  6539  0DA9  0831               	movf	___xxtofl@arg+3,w
  6540  0DAA  00A7               	movwf	?___xxtofl+3
  6541  0DAB  0830               	movf	___xxtofl@arg+2,w
  6542  0DAC  00A6               	movwf	?___xxtofl+2
  6543  0DAD  082F               	movf	___xxtofl@arg+1,w
  6544  0DAE  00A5               	movwf	?___xxtofl+1
  6545  0DAF  082E               	movf	___xxtofl@arg,w
  6546  0DB0  00A4               	movwf	?___xxtofl
  6547  0DB1                     l1297:	
  6548  0DB1  0008               	return
  6549  0DB2                     __end_of___xxtofl:	
  6550                           
  6551                           	psect	text16
  6552  0C0E                     __ptext16:	
  6553 ;; *************** function ___fltol *****************
  6554 ;; Defined at:
  6555 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;  f1              4    0[BANK0 ] unsigned char 
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;  exp1            1   10[BANK0 ] unsigned char 
  6560 ;;  sign1           1    9[BANK0 ] unsigned char 
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  4    0[BANK0 ] long 
  6563 ;; Registers used:
  6564 ;;		wreg, status,2, status,0
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6570 ;;      Params:         0       4       0       0       0       0
  6571 ;;      Locals:         0       2       0       0       0       0
  6572 ;;      Temps:          0       5       0       0       0       0
  6573 ;;      Totals:         0      11       0       0       0       0
  6574 ;;Total ram usage:       11 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; Hardware stack levels required when called:    4
  6577 ;; This function calls:
  6578 ;;		Nothing
  6579 ;; This function is called by:
  6580 ;;		_comunicacao
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584                           
  6585                           ;psect for function ___fltol
  6586  0C0E                     ___fltol:	
  6587  0C0E                     l3243:	
  6588                           ;incstack = 0
  6589                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6590                           
  6591  0C0E  1003               	clrc
  6592  0C0F  0020               	movlb	0	; select bank0
  6593  0C10  0D22               	rlf	___fltol@f1+2,w
  6594  0C11  0D23               	rlf	___fltol@f1+3,w
  6595  0C12  00A4               	movwf	??___fltol
  6596  0C13  0824               	movf	??___fltol,w
  6597  0C14  00AA               	movwf	___fltol@exp1
  6598  0C15  082A               	movf	___fltol@exp1,w
  6599  0C16  1D03               	btfss	3,2
  6600  0C17  2C19               	goto	u3001
  6601  0C18  2C1A               	goto	u3000
  6602  0C19                     u3001:	
  6603  0C19  2C23               	goto	l3249
  6604  0C1A                     u3000:	
  6605  0C1A                     l3245:	
  6606  0C1A  3000               	movlw	0
  6607  0C1B  00A3               	movwf	?___fltol+3
  6608  0C1C  3000               	movlw	0
  6609  0C1D  00A2               	movwf	?___fltol+2
  6610  0C1E  3000               	movlw	0
  6611  0C1F  00A1               	movwf	?___fltol+1
  6612  0C20  3000               	movlw	0
  6613  0C21  00A0               	movwf	?___fltol
  6614  0C22  2C82               	goto	l1054
  6615  0C23                     l3249:	
  6616  0C23  0820               	movf	___fltol@f1,w
  6617  0C24  00A4               	movwf	??___fltol
  6618  0C25  0821               	movf	___fltol@f1+1,w
  6619  0C26  00A5               	movwf	??___fltol+1
  6620  0C27  0822               	movf	___fltol@f1+2,w
  6621  0C28  00A6               	movwf	??___fltol+2
  6622  0C29  0823               	movf	___fltol@f1+3,w
  6623  0C2A  00A7               	movwf	??___fltol+3
  6624  0C2B  301F               	movlw	31
  6625  0C2C                     u3015:	
  6626  0C2C  36A7               	lsrf	??___fltol+3,f
  6627  0C2D  0CA6               	rrf	??___fltol+2,f
  6628  0C2E  0CA5               	rrf	??___fltol+1,f
  6629  0C2F  0CA4               	rrf	??___fltol,f
  6630  0C30                     u3010:	
  6631  0C30  0B89               	decfsz	9,f
  6632  0C31  2C2C               	goto	u3015
  6633  0C32  0824               	movf	??___fltol,w
  6634  0C33  00A8               	movwf	??___fltol+4
  6635  0C34  0828               	movf	??___fltol+4,w
  6636  0C35  00A9               	movwf	___fltol@sign1
  6637  0C36                     l3251:	
  6638  0C36  17A2               	bsf	___fltol@f1+2,7
  6639  0C37                     l3253:	
  6640  0C37  30FF               	movlw	255
  6641  0C38  05A0               	andwf	___fltol@f1,f
  6642  0C39  30FF               	movlw	255
  6643  0C3A  05A1               	andwf	___fltol@f1+1,f
  6644  0C3B  30FF               	movlw	255
  6645  0C3C  05A2               	andwf	___fltol@f1+2,f
  6646  0C3D  3000               	movlw	0
  6647  0C3E  05A3               	andwf	___fltol@f1+3,f
  6648  0C3F                     l3255:	
  6649  0C3F  3096               	movlw	150
  6650  0C40  02AA               	subwf	___fltol@exp1,f
  6651  0C41                     l3257:	
  6652  0C41  1FAA               	btfss	___fltol@exp1,7
  6653  0C42  2C44               	goto	u3021
  6654  0C43  2C45               	goto	u3020
  6655  0C44                     u3021:	
  6656  0C44  2C5D               	goto	l3267
  6657  0C45                     u3020:	
  6658  0C45                     l3259:	
  6659  0C45  082A               	movf	___fltol@exp1,w
  6660  0C46  3A80               	xorlw	128
  6661  0C47  3E97               	addlw	151
  6662  0C48  1803               	skipnc
  6663  0C49  2C4B               	goto	u3031
  6664  0C4A  2C4C               	goto	u3030
  6665  0C4B                     u3031:	
  6666  0C4B  2C4D               	goto	l3265
  6667  0C4C                     u3030:	
  6668  0C4C  2C1A               	goto	l3245
  6669  0C4D                     l3265:	
  6670  0C4D  3001               	movlw	1
  6671  0C4E                     u3045:	
  6672  0C4E  36A3               	lsrf	___fltol@f1+3,f
  6673  0C4F  0CA2               	rrf	___fltol@f1+2,f
  6674  0C50  0CA1               	rrf	___fltol@f1+1,f
  6675  0C51  0CA0               	rrf	___fltol@f1,f
  6676  0C52  0B89               	decfsz	9,f
  6677  0C53  2C4E               	goto	u3045
  6678  0C54  3001               	movlw	1
  6679  0C55  00A4               	movwf	??___fltol
  6680  0C56  0824               	movf	??___fltol,w
  6681  0C57  07AA               	addwf	___fltol@exp1,f
  6682  0C58  1D03               	btfss	3,2
  6683  0C59  2C5B               	goto	u3051
  6684  0C5A  2C5C               	goto	u3050
  6685  0C5B                     u3051:	
  6686  0C5B  2C4D               	goto	l3265
  6687  0C5C                     u3050:	
  6688  0C5C  2C72               	goto	l3275
  6689  0C5D                     l3267:	
  6690  0C5D  3020               	movlw	32
  6691  0C5E  022A               	subwf	___fltol@exp1,w
  6692  0C5F  1C03               	skipc
  6693  0C60  2C62               	goto	u3061
  6694  0C61  2C63               	goto	u3060
  6695  0C62                     u3061:	
  6696  0C62  2C6D               	goto	l1061
  6697  0C63                     u3060:	
  6698  0C63  2C1A               	goto	l3245
  6699  0C64                     l3273:	
  6700  0C64  3001               	movlw	1
  6701  0C65                     u3075:	
  6702  0C65  35A0               	lslf	___fltol@f1,f
  6703  0C66  0DA1               	rlf	___fltol@f1+1,f
  6704  0C67  0DA2               	rlf	___fltol@f1+2,f
  6705  0C68  0DA3               	rlf	___fltol@f1+3,f
  6706  0C69  0B89               	decfsz	9,f
  6707  0C6A  2C65               	goto	u3075
  6708  0C6B  3001               	movlw	1
  6709  0C6C  02AA               	subwf	___fltol@exp1,f
  6710  0C6D                     l1061:	
  6711  0C6D  082A               	movf	___fltol@exp1,w
  6712  0C6E  1D03               	btfss	3,2
  6713  0C6F  2C71               	goto	u3081
  6714  0C70  2C72               	goto	u3080
  6715  0C71                     u3081:	
  6716  0C71  2C64               	goto	l3273
  6717  0C72                     u3080:	
  6718  0C72                     l3275:	
  6719  0C72  0829               	movf	___fltol@sign1,w
  6720  0C73  1903               	btfsc	3,2
  6721  0C74  2C76               	goto	u3091
  6722  0C75  2C77               	goto	u3090
  6723  0C76                     u3091:	
  6724  0C76  2C82               	goto	l1064
  6725  0C77                     u3090:	
  6726  0C77                     l3277:	
  6727  0C77  09A0               	comf	___fltol@f1,f
  6728  0C78  09A1               	comf	___fltol@f1+1,f
  6729  0C79  09A2               	comf	___fltol@f1+2,f
  6730  0C7A  09A3               	comf	___fltol@f1+3,f
  6731  0C7B  0AA0               	incf	___fltol@f1,f
  6732  0C7C  1903               	skipnz
  6733  0C7D  0AA1               	incf	___fltol@f1+1,f
  6734  0C7E  1903               	skipnz
  6735  0C7F  0AA2               	incf	___fltol@f1+2,f
  6736  0C80  1903               	skipnz
  6737  0C81  0AA3               	incf	___fltol@f1+3,f
  6738  0C82                     l1064:	
  6739  0C82                     l1054:	
  6740  0C82  0008               	return
  6741  0C83                     __end_of___fltol:	
  6742                           
  6743                           	psect	text17
  6744  0051                     __ptext17:	
  6745 ;; *************** function ___flmul *****************
  6746 ;; Defined at:
  6747 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  b               4   18[BANK0 ] long 
  6750 ;;  a               4   22[BANK0 ] long 
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;  prod            4   38[BANK0 ] struct .
  6753 ;;  grs             4   32[BANK0 ] unsigned long 
  6754 ;;  temp            2   42[BANK0 ] struct .
  6755 ;;  bexp            1   37[BANK0 ] unsigned char 
  6756 ;;  aexp            1   36[BANK0 ] unsigned char 
  6757 ;;  sign            1   31[BANK0 ] unsigned char 
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  4   18[BANK0 ] unsigned char 
  6760 ;; Registers used:
  6761 ;;		wreg, status,2, status,0, pclath, cstack
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6767 ;;      Params:         0       8       0       0       0       0
  6768 ;;      Locals:         0      13       0       0       0       0
  6769 ;;      Temps:          0       5       0       0       0       0
  6770 ;;      Totals:         0      26       0       0       0       0
  6771 ;;Total ram usage:       26 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:    5
  6774 ;; This function calls:
  6775 ;;		__Umul8_16
  6776 ;; This function is called by:
  6777 ;;		_comunicacao
  6778 ;;		_controle
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           
  6783                           ;psect for function ___flmul
  6784  0051                     ___flmul:	
  6785  0051                     l2741:	
  6786                           ;incstack = 0
  6787                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  6788                           
  6789  0051  0020               	movlb	0	; select bank0
  6790  0052  0835               	movf	___flmul@b+3,w
  6791  0053  3980               	andlw	128
  6792  0054  00BA               	movwf	??___flmul
  6793  0055  083A               	movf	??___flmul,w
  6794  0056  00BF               	movwf	___flmul@sign
  6795  0057                     l2743:	
  6796  0057  3535               	lslf	___flmul@b+3,w
  6797  0058  00BA               	movwf	??___flmul
  6798  0059  083A               	movf	??___flmul,w
  6799  005A  00C5               	movwf	___flmul@bexp
  6800  005B                     l2745:	
  6801  005B  1FB4               	btfss	___flmul@b+2,7
  6802  005C  285E               	goto	u2301
  6803  005D  285F               	goto	u2300
  6804  005E                     u2301:	
  6805  005E  2860               	goto	l2749
  6806  005F                     u2300:	
  6807  005F                     l2747:	
  6808  005F  1445               	bsf	___flmul@bexp,0
  6809  0060                     l2749:	
  6810  0060  0845               	movf	___flmul@bexp,w
  6811  0061  1903               	btfsc	3,2
  6812  0062  2864               	goto	u2311
  6813  0063  2865               	goto	u2310
  6814  0064                     u2311:	
  6815  0064  2874               	goto	l2757
  6816  0065                     u2310:	
  6817  0065                     l2751:	
  6818  0065  0A45               	incf	___flmul@bexp,w
  6819  0066  1D03               	btfss	3,2
  6820  0067  2869               	goto	u2321
  6821  0068  286A               	goto	u2320
  6822  0069                     u2321:	
  6823  0069  2872               	goto	l2755
  6824  006A                     u2320:	
  6825  006A                     l2753:	
  6826  006A  3000               	movlw	0
  6827  006B  00B5               	movwf	___flmul@b+3
  6828  006C  3000               	movlw	0
  6829  006D  00B4               	movwf	___flmul@b+2
  6830  006E  3000               	movlw	0
  6831  006F  00B3               	movwf	___flmul@b+1
  6832  0070  3000               	movlw	0
  6833  0071  00B2               	movwf	___flmul@b
  6834  0072                     l2755:	
  6835  0072  17B4               	bsf	___flmul@b+2,7
  6836  0073  287C               	goto	l2759
  6837  0074                     l2757:	
  6838  0074  3000               	movlw	0
  6839  0075  00B5               	movwf	___flmul@b+3
  6840  0076  3000               	movlw	0
  6841  0077  00B4               	movwf	___flmul@b+2
  6842  0078  3000               	movlw	0
  6843  0079  00B3               	movwf	___flmul@b+1
  6844  007A  3000               	movlw	0
  6845  007B  00B2               	movwf	___flmul@b
  6846  007C                     l2759:	
  6847  007C  0839               	movf	___flmul@a+3,w
  6848  007D  3980               	andlw	128
  6849  007E  00BA               	movwf	??___flmul
  6850  007F  083A               	movf	??___flmul,w
  6851  0080  06BF               	xorwf	___flmul@sign,f
  6852  0081                     l2761:	
  6853  0081  3539               	lslf	___flmul@a+3,w
  6854  0082  00BA               	movwf	??___flmul
  6855  0083  083A               	movf	??___flmul,w
  6856  0084  00C4               	movwf	___flmul@aexp
  6857  0085                     l2763:	
  6858  0085  1FB8               	btfss	___flmul@a+2,7
  6859  0086  2888               	goto	u2331
  6860  0087  2889               	goto	u2330
  6861  0088                     u2331:	
  6862  0088  288A               	goto	l2767
  6863  0089                     u2330:	
  6864  0089                     l2765:	
  6865  0089  1444               	bsf	___flmul@aexp,0
  6866  008A                     l2767:	
  6867  008A  0844               	movf	___flmul@aexp,w
  6868  008B  1903               	btfsc	3,2
  6869  008C  288E               	goto	u2341
  6870  008D  288F               	goto	u2340
  6871  008E                     u2341:	
  6872  008E  289E               	goto	l2775
  6873  008F                     u2340:	
  6874  008F                     l2769:	
  6875  008F  0A44               	incf	___flmul@aexp,w
  6876  0090  1D03               	btfss	3,2
  6877  0091  2893               	goto	u2351
  6878  0092  2894               	goto	u2350
  6879  0093                     u2351:	
  6880  0093  289C               	goto	l2773
  6881  0094                     u2350:	
  6882  0094                     l2771:	
  6883  0094  3000               	movlw	0
  6884  0095  00B9               	movwf	___flmul@a+3
  6885  0096  3000               	movlw	0
  6886  0097  00B8               	movwf	___flmul@a+2
  6887  0098  3000               	movlw	0
  6888  0099  00B7               	movwf	___flmul@a+1
  6889  009A  3000               	movlw	0
  6890  009B  00B6               	movwf	___flmul@a
  6891  009C                     l2773:	
  6892  009C  17B8               	bsf	___flmul@a+2,7
  6893  009D  28A6               	goto	l2777
  6894  009E                     l2775:	
  6895  009E  3000               	movlw	0
  6896  009F  00B9               	movwf	___flmul@a+3
  6897  00A0  3000               	movlw	0
  6898  00A1  00B8               	movwf	___flmul@a+2
  6899  00A2  3000               	movlw	0
  6900  00A3  00B7               	movwf	___flmul@a+1
  6901  00A4  3000               	movlw	0
  6902  00A5  00B6               	movwf	___flmul@a
  6903  00A6                     l2777:	
  6904  00A6  0844               	movf	___flmul@aexp,w
  6905  00A7  1903               	btfsc	3,2
  6906  00A8  28AA               	goto	u2361
  6907  00A9  28AB               	goto	u2360
  6908  00AA                     u2361:	
  6909  00AA  28B0               	goto	l2781
  6910  00AB                     u2360:	
  6911  00AB                     l2779:	
  6912  00AB  0845               	movf	___flmul@bexp,w
  6913  00AC  1D03               	btfss	3,2
  6914  00AD  28AF               	goto	u2371
  6915  00AE  28B0               	goto	u2370
  6916  00AF                     u2371:	
  6917  00AF  28B9               	goto	l2785
  6918  00B0                     u2370:	
  6919  00B0                     l2781:	
  6920  00B0  3000               	movlw	0
  6921  00B1  00B5               	movwf	?___flmul+3
  6922  00B2  3000               	movlw	0
  6923  00B3  00B4               	movwf	?___flmul+2
  6924  00B4  3000               	movlw	0
  6925  00B5  00B3               	movwf	?___flmul+1
  6926  00B6  3000               	movlw	0
  6927  00B7  00B2               	movwf	?___flmul
  6928  00B8  2AA7               	goto	l1257
  6929  00B9                     l2785:	
  6930  00B9  0832               	movf	___flmul@b,w
  6931  00BA  00BA               	movwf	??___flmul
  6932  00BB  083A               	movf	??___flmul,w
  6933  00BC  00A0               	movwf	__Umul8_16@multiplicand
  6934  00BD  0838               	movf	___flmul@a+2,w
  6935  00BE  318A  2299  3180   	fcall	__Umul8_16
  6936  00C1  0020               	movlb	0	; select bank0
  6937  00C2  0821               	movf	?__Umul8_16+1,w
  6938  00C3  00CB               	movwf	___flmul@temp+1
  6939  00C4  0820               	movf	?__Umul8_16,w
  6940  00C5  00CA               	movwf	___flmul@temp
  6941  00C6                     l2787:	
  6942  00C6  084A               	movf	___flmul@temp,w
  6943  00C7  00BA               	movwf	??___flmul
  6944  00C8  01BB               	clrf	??___flmul+1
  6945  00C9  01BC               	clrf	??___flmul+2
  6946  00CA  01BD               	clrf	??___flmul+3
  6947  00CB  083D               	movf	??___flmul+3,w
  6948  00CC  00C3               	movwf	___flmul@grs+3
  6949  00CD  083C               	movf	??___flmul+2,w
  6950  00CE  00C2               	movwf	___flmul@grs+2
  6951  00CF  083B               	movf	??___flmul+1,w
  6952  00D0  00C1               	movwf	___flmul@grs+1
  6953  00D1  083A               	movf	??___flmul,w
  6954  00D2  00C0               	movwf	___flmul@grs
  6955  00D3                     l2789:	
  6956  00D3  084B               	movf	___flmul@temp+1,w
  6957  00D4  00BA               	movwf	??___flmul
  6958  00D5  01BB               	clrf	??___flmul+1
  6959  00D6  01BC               	clrf	??___flmul+2
  6960  00D7  01BD               	clrf	??___flmul+3
  6961  00D8  083D               	movf	??___flmul+3,w
  6962  00D9  00C9               	movwf	___flmul@prod+3
  6963  00DA  083C               	movf	??___flmul+2,w
  6964  00DB  00C8               	movwf	___flmul@prod+2
  6965  00DC  083B               	movf	??___flmul+1,w
  6966  00DD  00C7               	movwf	___flmul@prod+1
  6967  00DE  083A               	movf	??___flmul,w
  6968  00DF  00C6               	movwf	___flmul@prod
  6969  00E0  0833               	movf	___flmul@b+1,w
  6970  00E1  00BA               	movwf	??___flmul
  6971  00E2  083A               	movf	??___flmul,w
  6972  00E3  00A0               	movwf	__Umul8_16@multiplicand
  6973  00E4  0837               	movf	___flmul@a+1,w
  6974  00E5  318A  2299  3180   	fcall	__Umul8_16
  6975  00E8  0020               	movlb	0	; select bank0
  6976  00E9  0821               	movf	?__Umul8_16+1,w
  6977  00EA  00CB               	movwf	___flmul@temp+1
  6978  00EB  0820               	movf	?__Umul8_16,w
  6979  00EC  00CA               	movwf	___flmul@temp
  6980  00ED                     l2791:	
  6981  00ED  084A               	movf	___flmul@temp,w
  6982  00EE  00BA               	movwf	??___flmul
  6983  00EF  01BB               	clrf	??___flmul+1
  6984  00F0  01BC               	clrf	??___flmul+2
  6985  00F1  01BD               	clrf	??___flmul+3
  6986  00F2  083A               	movf	??___flmul,w
  6987  00F3  07C0               	addwf	___flmul@grs,f
  6988  00F4  083B               	movf	??___flmul+1,w
  6989  00F5  3DC1               	addwfc	___flmul@grs+1,f
  6990  00F6  083C               	movf	??___flmul+2,w
  6991  00F7  3DC2               	addwfc	___flmul@grs+2,f
  6992  00F8  083D               	movf	??___flmul+3,w
  6993  00F9  3DC3               	addwfc	___flmul@grs+3,f
  6994  00FA                     l2793:	
  6995  00FA  084B               	movf	___flmul@temp+1,w
  6996  00FB  00BA               	movwf	??___flmul
  6997  00FC  01BB               	clrf	??___flmul+1
  6998  00FD  01BC               	clrf	??___flmul+2
  6999  00FE  01BD               	clrf	??___flmul+3
  7000  00FF  083A               	movf	??___flmul,w
  7001  0100  07C6               	addwf	___flmul@prod,f
  7002  0101  083B               	movf	??___flmul+1,w
  7003  0102  3DC7               	addwfc	___flmul@prod+1,f
  7004  0103  083C               	movf	??___flmul+2,w
  7005  0104  3DC8               	addwfc	___flmul@prod+2,f
  7006  0105  083D               	movf	??___flmul+3,w
  7007  0106  3DC9               	addwfc	___flmul@prod+3,f
  7008  0107  0834               	movf	___flmul@b+2,w
  7009  0108  00BA               	movwf	??___flmul
  7010  0109  083A               	movf	??___flmul,w
  7011  010A  00A0               	movwf	__Umul8_16@multiplicand
  7012  010B  0836               	movf	___flmul@a,w
  7013  010C  318A  2299  3180   	fcall	__Umul8_16
  7014  010F  0020               	movlb	0	; select bank0
  7015  0110  0821               	movf	?__Umul8_16+1,w
  7016  0111  00CB               	movwf	___flmul@temp+1
  7017  0112  0820               	movf	?__Umul8_16,w
  7018  0113  00CA               	movwf	___flmul@temp
  7019  0114                     l2795:	
  7020  0114  084A               	movf	___flmul@temp,w
  7021  0115  00BA               	movwf	??___flmul
  7022  0116  01BB               	clrf	??___flmul+1
  7023  0117  01BC               	clrf	??___flmul+2
  7024  0118  01BD               	clrf	??___flmul+3
  7025  0119  083A               	movf	??___flmul,w
  7026  011A  07C0               	addwf	___flmul@grs,f
  7027  011B  083B               	movf	??___flmul+1,w
  7028  011C  3DC1               	addwfc	___flmul@grs+1,f
  7029  011D  083C               	movf	??___flmul+2,w
  7030  011E  3DC2               	addwfc	___flmul@grs+2,f
  7031  011F  083D               	movf	??___flmul+3,w
  7032  0120  3DC3               	addwfc	___flmul@grs+3,f
  7033  0121                     l2797:	
  7034  0121  084B               	movf	___flmul@temp+1,w
  7035  0122  00BA               	movwf	??___flmul
  7036  0123  01BB               	clrf	??___flmul+1
  7037  0124  01BC               	clrf	??___flmul+2
  7038  0125  01BD               	clrf	??___flmul+3
  7039  0126  083A               	movf	??___flmul,w
  7040  0127  07C6               	addwf	___flmul@prod,f
  7041  0128  083B               	movf	??___flmul+1,w
  7042  0129  3DC7               	addwfc	___flmul@prod+1,f
  7043  012A  083C               	movf	??___flmul+2,w
  7044  012B  3DC8               	addwfc	___flmul@prod+2,f
  7045  012C  083D               	movf	??___flmul+3,w
  7046  012D  3DC9               	addwfc	___flmul@prod+3,f
  7047  012E                     l2799:	
  7048  012E  3008               	movlw	8
  7049  012F                     u2385:	
  7050  012F  35C0               	lslf	___flmul@grs,f
  7051  0130  0DC1               	rlf	___flmul@grs+1,f
  7052  0131  0DC2               	rlf	___flmul@grs+2,f
  7053  0132  0DC3               	rlf	___flmul@grs+3,f
  7054  0133  0B89               	decfsz	9,f
  7055  0134  292F               	goto	u2385
  7056  0135                     l2801:	
  7057  0135  0833               	movf	___flmul@b+1,w
  7058  0136  00BA               	movwf	??___flmul
  7059  0137  083A               	movf	??___flmul,w
  7060  0138  00A0               	movwf	__Umul8_16@multiplicand
  7061  0139  0836               	movf	___flmul@a,w
  7062  013A  318A  2299  3180   	fcall	__Umul8_16
  7063  013D  0020               	movlb	0	; select bank0
  7064  013E  0821               	movf	?__Umul8_16+1,w
  7065  013F  00CB               	movwf	___flmul@temp+1
  7066  0140  0820               	movf	?__Umul8_16,w
  7067  0141  00CA               	movwf	___flmul@temp
  7068  0142                     l2803:	
  7069  0142  084A               	movf	___flmul@temp,w
  7070  0143  07C0               	addwf	___flmul@grs,f
  7071  0144  084B               	movf	___flmul@temp+1,w
  7072  0145  3DC1               	addwfc	___flmul@grs+1,f
  7073  0146  3000               	movlw	0
  7074  0147  3DC2               	addwfc	___flmul@grs+2,f
  7075  0148  3DC3               	addwfc	___flmul@grs+3,f
  7076  0149                     l2805:	
  7077  0149  0832               	movf	___flmul@b,w
  7078  014A  00BA               	movwf	??___flmul
  7079  014B  083A               	movf	??___flmul,w
  7080  014C  00A0               	movwf	__Umul8_16@multiplicand
  7081  014D  0837               	movf	___flmul@a+1,w
  7082  014E  318A  2299  3180   	fcall	__Umul8_16
  7083  0151  0020               	movlb	0	; select bank0
  7084  0152  0821               	movf	?__Umul8_16+1,w
  7085  0153  00CB               	movwf	___flmul@temp+1
  7086  0154  0820               	movf	?__Umul8_16,w
  7087  0155  00CA               	movwf	___flmul@temp
  7088  0156                     l2807:	
  7089  0156  084A               	movf	___flmul@temp,w
  7090  0157  07C0               	addwf	___flmul@grs,f
  7091  0158  084B               	movf	___flmul@temp+1,w
  7092  0159  3DC1               	addwfc	___flmul@grs+1,f
  7093  015A  3000               	movlw	0
  7094  015B  3DC2               	addwfc	___flmul@grs+2,f
  7095  015C  3DC3               	addwfc	___flmul@grs+3,f
  7096  015D                     l2809:	
  7097  015D  3008               	movlw	8
  7098  015E                     u2395:	
  7099  015E  35C0               	lslf	___flmul@grs,f
  7100  015F  0DC1               	rlf	___flmul@grs+1,f
  7101  0160  0DC2               	rlf	___flmul@grs+2,f
  7102  0161  0DC3               	rlf	___flmul@grs+3,f
  7103  0162  0B89               	decfsz	9,f
  7104  0163  295E               	goto	u2395
  7105  0164  0832               	movf	___flmul@b,w
  7106  0165  00BA               	movwf	??___flmul
  7107  0166  083A               	movf	??___flmul,w
  7108  0167  00A0               	movwf	__Umul8_16@multiplicand
  7109  0168  0836               	movf	___flmul@a,w
  7110  0169  318A  2299  3180   	fcall	__Umul8_16
  7111  016C  0020               	movlb	0	; select bank0
  7112  016D  0821               	movf	?__Umul8_16+1,w
  7113  016E  00CB               	movwf	___flmul@temp+1
  7114  016F  0820               	movf	?__Umul8_16,w
  7115  0170  00CA               	movwf	___flmul@temp
  7116  0171                     l2811:	
  7117  0171  084A               	movf	___flmul@temp,w
  7118  0172  07C0               	addwf	___flmul@grs,f
  7119  0173  084B               	movf	___flmul@temp+1,w
  7120  0174  3DC1               	addwfc	___flmul@grs+1,f
  7121  0175  3000               	movlw	0
  7122  0176  3DC2               	addwfc	___flmul@grs+2,f
  7123  0177  3DC3               	addwfc	___flmul@grs+3,f
  7124  0178                     l2813:	
  7125  0178  0833               	movf	___flmul@b+1,w
  7126  0179  00BA               	movwf	??___flmul
  7127  017A  083A               	movf	??___flmul,w
  7128  017B  00A0               	movwf	__Umul8_16@multiplicand
  7129  017C  0838               	movf	___flmul@a+2,w
  7130  017D  318A  2299  3180   	fcall	__Umul8_16
  7131  0180  0020               	movlb	0	; select bank0
  7132  0181  0821               	movf	?__Umul8_16+1,w
  7133  0182  00CB               	movwf	___flmul@temp+1
  7134  0183  0820               	movf	?__Umul8_16,w
  7135  0184  00CA               	movwf	___flmul@temp
  7136  0185  084A               	movf	___flmul@temp,w
  7137  0186  07C6               	addwf	___flmul@prod,f
  7138  0187  084B               	movf	___flmul@temp+1,w
  7139  0188  3DC7               	addwfc	___flmul@prod+1,f
  7140  0189  3000               	movlw	0
  7141  018A  3DC8               	addwfc	___flmul@prod+2,f
  7142  018B  3DC9               	addwfc	___flmul@prod+3,f
  7143  018C                     l2815:	
  7144  018C  0834               	movf	___flmul@b+2,w
  7145  018D  00BA               	movwf	??___flmul
  7146  018E  083A               	movf	??___flmul,w
  7147  018F  00A0               	movwf	__Umul8_16@multiplicand
  7148  0190  0837               	movf	___flmul@a+1,w
  7149  0191  318A  2299  3180   	fcall	__Umul8_16
  7150  0194  0020               	movlb	0	; select bank0
  7151  0195  0821               	movf	?__Umul8_16+1,w
  7152  0196  00CB               	movwf	___flmul@temp+1
  7153  0197  0820               	movf	?__Umul8_16,w
  7154  0198  00CA               	movwf	___flmul@temp
  7155  0199                     l2817:	
  7156  0199  084A               	movf	___flmul@temp,w
  7157  019A  07C6               	addwf	___flmul@prod,f
  7158  019B  084B               	movf	___flmul@temp+1,w
  7159  019C  3DC7               	addwfc	___flmul@prod+1,f
  7160  019D  3000               	movlw	0
  7161  019E  3DC8               	addwfc	___flmul@prod+2,f
  7162  019F  3DC9               	addwfc	___flmul@prod+3,f
  7163  01A0  0834               	movf	___flmul@b+2,w
  7164  01A1  00BA               	movwf	??___flmul
  7165  01A2  083A               	movf	??___flmul,w
  7166  01A3  00A0               	movwf	__Umul8_16@multiplicand
  7167  01A4  0838               	movf	___flmul@a+2,w
  7168  01A5  318A  2299  3180   	fcall	__Umul8_16
  7169  01A8  0020               	movlb	0	; select bank0
  7170  01A9  0821               	movf	?__Umul8_16+1,w
  7171  01AA  00CB               	movwf	___flmul@temp+1
  7172  01AB  0820               	movf	?__Umul8_16,w
  7173  01AC  00CA               	movwf	___flmul@temp
  7174  01AD                     l2819:	
  7175  01AD  084A               	movf	___flmul@temp,w
  7176  01AE  00BA               	movwf	??___flmul
  7177  01AF  084B               	movf	___flmul@temp+1,w
  7178  01B0  00BB               	movwf	??___flmul+1
  7179  01B1  01BC               	clrf	??___flmul+2
  7180  01B2  01BD               	clrf	??___flmul+3
  7181  01B3  3008               	movlw	8
  7182  01B4                     u2405:	
  7183  01B4  35BA               	lslf	??___flmul,f
  7184  01B5  0DBB               	rlf	??___flmul+1,f
  7185  01B6  0DBC               	rlf	??___flmul+2,f
  7186  01B7  0DBD               	rlf	??___flmul+3,f
  7187  01B8                     u2400:	
  7188  01B8  0B89               	decfsz	9,f
  7189  01B9  29B4               	goto	u2405
  7190  01BA  083A               	movf	??___flmul,w
  7191  01BB  07C6               	addwf	___flmul@prod,f
  7192  01BC  083B               	movf	??___flmul+1,w
  7193  01BD  3DC7               	addwfc	___flmul@prod+1,f
  7194  01BE  083C               	movf	??___flmul+2,w
  7195  01BF  3DC8               	addwfc	___flmul@prod+2,f
  7196  01C0  083D               	movf	??___flmul+3,w
  7197  01C1  3DC9               	addwfc	___flmul@prod+3,f
  7198  01C2                     l2821:	
  7199  01C2  0840               	movf	___flmul@grs,w
  7200  01C3  00BA               	movwf	??___flmul
  7201  01C4  0841               	movf	___flmul@grs+1,w
  7202  01C5  00BB               	movwf	??___flmul+1
  7203  01C6  0842               	movf	___flmul@grs+2,w
  7204  01C7  00BC               	movwf	??___flmul+2
  7205  01C8  0843               	movf	___flmul@grs+3,w
  7206  01C9  00BD               	movwf	??___flmul+3
  7207  01CA  3018               	movlw	24
  7208  01CB                     u2415:	
  7209  01CB  36BD               	lsrf	??___flmul+3,f
  7210  01CC  0CBC               	rrf	??___flmul+2,f
  7211  01CD  0CBB               	rrf	??___flmul+1,f
  7212  01CE  0CBA               	rrf	??___flmul,f
  7213  01CF                     u2410:	
  7214  01CF  0B89               	decfsz	9,f
  7215  01D0  29CB               	goto	u2415
  7216  01D1  083A               	movf	??___flmul,w
  7217  01D2  07C6               	addwf	___flmul@prod,f
  7218  01D3  083B               	movf	??___flmul+1,w
  7219  01D4  3DC7               	addwfc	___flmul@prod+1,f
  7220  01D5  083C               	movf	??___flmul+2,w
  7221  01D6  3DC8               	addwfc	___flmul@prod+2,f
  7222  01D7  083D               	movf	??___flmul+3,w
  7223  01D8  3DC9               	addwfc	___flmul@prod+3,f
  7224  01D9                     l2823:	
  7225  01D9  3008               	movlw	8
  7226  01DA                     u2425:	
  7227  01DA  35C0               	lslf	___flmul@grs,f
  7228  01DB  0DC1               	rlf	___flmul@grs+1,f
  7229  01DC  0DC2               	rlf	___flmul@grs+2,f
  7230  01DD  0DC3               	rlf	___flmul@grs+3,f
  7231  01DE  0B89               	decfsz	9,f
  7232  01DF  29DA               	goto	u2425
  7233  01E0                     l2825:	
  7234  01E0  0845               	movf	___flmul@bexp,w
  7235  01E1  0744               	addwf	___flmul@aexp,w
  7236  01E2  00BA               	movwf	??___flmul
  7237  01E3  01BB               	clrf	??___flmul+1
  7238  01E4  0DBB               	rlf	??___flmul+1,f
  7239  01E5  083A               	movf	??___flmul,w
  7240  01E6  3E82               	addlw	130
  7241  01E7  00CA               	movwf	___flmul@temp
  7242  01E8  30FF               	movlw	255
  7243  01E9  3D3B               	addwfc	??___flmul+1,w
  7244  01EA  00CB               	movwf	___flmul@temp+1
  7245  01EB  2A03               	goto	l2837
  7246  01EC                     l2827:	
  7247  01EC  3001               	movlw	1
  7248  01ED                     u2435:	
  7249  01ED  35C6               	lslf	___flmul@prod,f
  7250  01EE  0DC7               	rlf	___flmul@prod+1,f
  7251  01EF  0DC8               	rlf	___flmul@prod+2,f
  7252  01F0  0DC9               	rlf	___flmul@prod+3,f
  7253  01F1  0B89               	decfsz	9,f
  7254  01F2  29ED               	goto	u2435
  7255  01F3                     l2829:	
  7256  01F3  1FC3               	btfss	___flmul@grs+3,7
  7257  01F4  29F6               	goto	u2441
  7258  01F5  29F7               	goto	u2440
  7259  01F6                     u2441:	
  7260  01F6  29F8               	goto	l2833
  7261  01F7                     u2440:	
  7262  01F7                     l2831:	
  7263  01F7  1446               	bsf	___flmul@prod,0
  7264  01F8                     l2833:	
  7265  01F8  3001               	movlw	1
  7266  01F9                     u2455:	
  7267  01F9  35C0               	lslf	___flmul@grs,f
  7268  01FA  0DC1               	rlf	___flmul@grs+1,f
  7269  01FB  0DC2               	rlf	___flmul@grs+2,f
  7270  01FC  0DC3               	rlf	___flmul@grs+3,f
  7271  01FD  0B89               	decfsz	9,f
  7272  01FE  29F9               	goto	u2455
  7273  01FF                     l2835:	
  7274  01FF  30FF               	movlw	255
  7275  0200  07CA               	addwf	___flmul@temp,f
  7276  0201  30FF               	movlw	255
  7277  0202  3DCB               	addwfc	___flmul@temp+1,f
  7278  0203                     l2837:	
  7279  0203  1FC8               	btfss	___flmul@prod+2,7
  7280  0204  2A06               	goto	u2461
  7281  0205  2A07               	goto	u2460
  7282  0206                     u2461:	
  7283  0206  29EC               	goto	l2827
  7284  0207                     u2460:	
  7285  0207                     l2839:	
  7286  0207  01C4               	clrf	___flmul@aexp
  7287  0208                     l2841:	
  7288  0208  1FC3               	btfss	___flmul@grs+3,7
  7289  0209  2A0B               	goto	u2471
  7290  020A  2A0C               	goto	u2470
  7291  020B                     u2471:	
  7292  020B  2A28               	goto	l2849
  7293  020C                     u2470:	
  7294  020C                     l2843:	
  7295  020C  30FF               	movlw	255
  7296  020D  0540               	andwf	___flmul@grs,w
  7297  020E  00BA               	movwf	??___flmul
  7298  020F  30FF               	movlw	255
  7299  0210  0541               	andwf	___flmul@grs+1,w
  7300  0211  00BB               	movwf	??___flmul+1
  7301  0212  30FF               	movlw	255
  7302  0213  0542               	andwf	___flmul@grs+2,w
  7303  0214  00BC               	movwf	??___flmul+2
  7304  0215  307F               	movlw	127
  7305  0216  0543               	andwf	___flmul@grs+3,w
  7306  0217  00BD               	movwf	??___flmul+3
  7307  0218  083D               	movf	??___flmul+3,w
  7308  0219  043C               	iorwf	??___flmul+2,w
  7309  021A  043B               	iorwf	??___flmul+1,w
  7310  021B  043A               	iorwf	??___flmul,w
  7311  021C  1903               	skipnz
  7312  021D  2A1F               	goto	u2481
  7313  021E  2A20               	goto	u2480
  7314  021F                     u2481:	
  7315  021F  2A23               	goto	l1263
  7316  0220                     u2480:	
  7317  0220                     l2845:	
  7318  0220  01C4               	clrf	___flmul@aexp
  7319  0221  0AC4               	incf	___flmul@aexp,f
  7320  0222  2A28               	goto	l2849
  7321  0223                     l1263:	
  7322  0223  1C46               	btfss	___flmul@prod,0
  7323  0224  2A26               	goto	u2491
  7324  0225  2A27               	goto	u2490
  7325  0226                     u2491:	
  7326  0226  2A28               	goto	l2849
  7327  0227                     u2490:	
  7328  0227  2A20               	goto	l2845
  7329  0228                     l2849:	
  7330  0228  0844               	movf	___flmul@aexp,w
  7331  0229  1903               	btfsc	3,2
  7332  022A  2A2C               	goto	u2501
  7333  022B  2A2D               	goto	u2500
  7334  022C                     u2501:	
  7335  022C  2A55               	goto	l2859
  7336  022D                     u2500:	
  7337  022D                     l2851:	
  7338  022D  3001               	movlw	1
  7339  022E  07C6               	addwf	___flmul@prod,f
  7340  022F  3000               	movlw	0
  7341  0230  3DC7               	addwfc	___flmul@prod+1,f
  7342  0231  3000               	movlw	0
  7343  0232  3DC8               	addwfc	___flmul@prod+2,f
  7344  0233  3000               	movlw	0
  7345  0234  3DC9               	addwfc	___flmul@prod+3,f
  7346  0235                     l2853:	
  7347  0235  1C49               	btfss	___flmul@prod+3,0
  7348  0236  2A38               	goto	u2511
  7349  0237  2A39               	goto	u2510
  7350  0238                     u2511:	
  7351  0238  2A55               	goto	l2859
  7352  0239                     u2510:	
  7353  0239                     l2855:	
  7354  0239  0846               	movf	___flmul@prod,w
  7355  023A  00BA               	movwf	??___flmul
  7356  023B  0847               	movf	___flmul@prod+1,w
  7357  023C  00BB               	movwf	??___flmul+1
  7358  023D  0848               	movf	___flmul@prod+2,w
  7359  023E  00BC               	movwf	??___flmul+2
  7360  023F  0849               	movf	___flmul@prod+3,w
  7361  0240  00BD               	movwf	??___flmul+3
  7362  0241  3001               	movlw	1
  7363  0242  00BE               	movwf	??___flmul+4
  7364  0243                     u2525:	
  7365  0243  37BD               	asrf	??___flmul+3,f
  7366  0244  0CBC               	rrf	??___flmul+2,f
  7367  0245  0CBB               	rrf	??___flmul+1,f
  7368  0246  0CBA               	rrf	??___flmul,f
  7369  0247                     u2520:	
  7370  0247  0BBE               	decfsz	??___flmul+4,f
  7371  0248  2A43               	goto	u2525
  7372  0249  083D               	movf	??___flmul+3,w
  7373  024A  00C9               	movwf	___flmul@prod+3
  7374  024B  083C               	movf	??___flmul+2,w
  7375  024C  00C8               	movwf	___flmul@prod+2
  7376  024D  083B               	movf	??___flmul+1,w
  7377  024E  00C7               	movwf	___flmul@prod+1
  7378  024F  083A               	movf	??___flmul,w
  7379  0250  00C6               	movwf	___flmul@prod
  7380  0251                     l2857:	
  7381  0251  3001               	movlw	1
  7382  0252  07CA               	addwf	___flmul@temp,f
  7383  0253  3000               	movlw	0
  7384  0254  3DCB               	addwfc	___flmul@temp+1,f
  7385  0255                     l2859:	
  7386  0255  084B               	movf	___flmul@temp+1,w
  7387  0256  3A80               	xorlw	128
  7388  0257  00BA               	movwf	??___flmul
  7389  0258  3080               	movlw	128
  7390  0259  023A               	subwf	??___flmul,w
  7391  025A  1D03               	skipz
  7392  025B  2A5E               	goto	u2535
  7393  025C  30FF               	movlw	255
  7394  025D  024A               	subwf	___flmul@temp,w
  7395  025E                     u2535:	
  7396  025E  1C03               	skipc
  7397  025F  2A61               	goto	u2531
  7398  0260  2A62               	goto	u2530
  7399  0261                     u2531:	
  7400  0261  2A6C               	goto	l2863
  7401  0262                     u2530:	
  7402  0262                     l2861:	
  7403  0262  307F               	movlw	127
  7404  0263  0020               	movlb	0	; select bank0
  7405  0264  00C9               	movwf	___flmul@prod+3
  7406  0265  3080               	movlw	128
  7407  0266  00C8               	movwf	___flmul@prod+2
  7408  0267  3000               	movlw	0
  7409  0268  00C7               	movwf	___flmul@prod+1
  7410  0269  3000               	movlw	0
  7411  026A  00C6               	movwf	___flmul@prod
  7412  026B  2A9B               	goto	l1269
  7413  026C                     l2863:	
  7414  026C  0020               	movlb	0	; select bank0
  7415  026D  084B               	movf	___flmul@temp+1,w
  7416  026E  3A80               	xorlw	128
  7417  026F  00BA               	movwf	??___flmul
  7418  0270  3080               	movlw	128
  7419  0271  023A               	subwf	??___flmul,w
  7420  0272  1D03               	skipz
  7421  0273  2A76               	goto	u2545
  7422  0274  3001               	movlw	1
  7423  0275  024A               	subwf	___flmul@temp,w
  7424  0276                     u2545:	
  7425  0276  1803               	skipnc
  7426  0277  2A79               	goto	u2541
  7427  0278  2A7A               	goto	u2540
  7428  0279                     u2541:	
  7429  0279  2A85               	goto	l2869
  7430  027A                     u2540:	
  7431  027A                     l2865:	
  7432  027A  3000               	movlw	0
  7433  027B  0020               	movlb	0	; select bank0
  7434  027C  00C9               	movwf	___flmul@prod+3
  7435  027D  3000               	movlw	0
  7436  027E  00C8               	movwf	___flmul@prod+2
  7437  027F  3000               	movlw	0
  7438  0280  00C7               	movwf	___flmul@prod+1
  7439  0281  3000               	movlw	0
  7440  0282  00C6               	movwf	___flmul@prod
  7441  0283                     l2867:	
  7442  0283  01BF               	clrf	___flmul@sign
  7443  0284  2A9B               	goto	l1269
  7444  0285                     l2869:	
  7445  0285  0020               	movlb	0	; select bank0
  7446  0286  084A               	movf	___flmul@temp,w
  7447  0287  00BA               	movwf	??___flmul
  7448  0288  083A               	movf	??___flmul,w
  7449  0289  00C5               	movwf	___flmul@bexp
  7450  028A  30FF               	movlw	255
  7451  028B  05C6               	andwf	___flmul@prod,f
  7452  028C  30FF               	movlw	255
  7453  028D  05C7               	andwf	___flmul@prod+1,f
  7454  028E  307F               	movlw	127
  7455  028F  05C8               	andwf	___flmul@prod+2,f
  7456  0290  3000               	movlw	0
  7457  0291  05C9               	andwf	___flmul@prod+3,f
  7458  0292                     l2871:	
  7459  0292  1C45               	btfss	___flmul@bexp,0
  7460  0293  2A95               	goto	u2551
  7461  0294  2A96               	goto	u2550
  7462  0295                     u2551:	
  7463  0295  2A97               	goto	l2875
  7464  0296                     u2550:	
  7465  0296                     l2873:	
  7466  0296  17C8               	bsf	___flmul@prod+2,7
  7467  0297                     l2875:	
  7468  0297  3645               	lsrf	___flmul@bexp,w
  7469  0298  00BA               	movwf	??___flmul
  7470  0299  083A               	movf	??___flmul,w
  7471  029A  00C9               	movwf	___flmul@prod+3
  7472  029B                     l1269:	
  7473  029B  083F               	movf	___flmul@sign,w
  7474  029C  00BA               	movwf	??___flmul
  7475  029D  083A               	movf	??___flmul,w
  7476  029E  04C9               	iorwf	___flmul@prod+3,f
  7477  029F                     l2877:	
  7478  029F  0849               	movf	___flmul@prod+3,w
  7479  02A0  00B5               	movwf	?___flmul+3
  7480  02A1  0848               	movf	___flmul@prod+2,w
  7481  02A2  00B4               	movwf	?___flmul+2
  7482  02A3  0847               	movf	___flmul@prod+1,w
  7483  02A4  00B3               	movwf	?___flmul+1
  7484  02A5  0846               	movf	___flmul@prod,w
  7485  02A6  00B2               	movwf	?___flmul
  7486  02A7                     l1257:	
  7487  02A7  0008               	return
  7488  02A8                     __end_of___flmul:	
  7489                           
  7490                           	psect	text18
  7491  0A99                     __ptext18:	
  7492 ;; *************** function __Umul8_16 *****************
  7493 ;; Defined at:
  7494 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8_16.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;  multiplier      1    wreg     unsigned char 
  7497 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;  multiplier      1    8[BANK0 ] unsigned char 
  7500 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  7501 ;;  product         2    4[BANK0 ] unsigned int 
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  2    0[BANK0 ] unsigned int 
  7504 ;; Registers used:
  7505 ;;		wreg, status,2, status,0
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7511 ;;      Params:         0       2       0       0       0       0
  7512 ;;      Locals:         0       5       0       0       0       0
  7513 ;;      Temps:          0       2       0       0       0       0
  7514 ;;      Totals:         0       9       0       0       0       0
  7515 ;;Total ram usage:        9 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:    4
  7518 ;; This function calls:
  7519 ;;		Nothing
  7520 ;; This function is called by:
  7521 ;;		___flmul
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           
  7526                           ;psect for function __Umul8_16
  7527  0A99                     __Umul8_16:	
  7528                           
  7529                           ;incstack = 0
  7530                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7531                           ;__Umul8_16@multiplier stored from wreg
  7532  0A99  0020               	movlb	0	; select bank0
  7533  0A9A  00A8               	movwf	__Umul8_16@multiplier
  7534  0A9B                     l2569:	
  7535  0A9B  01A4               	clrf	__Umul8_16@product
  7536  0A9C  01A5               	clrf	__Umul8_16@product+1
  7537  0A9D                     l2571:	
  7538  0A9D  0820               	movf	__Umul8_16@multiplicand,w
  7539  0A9E  00A2               	movwf	??__Umul8_16
  7540  0A9F  01A3               	clrf	??__Umul8_16+1
  7541  0AA0  0822               	movf	??__Umul8_16,w
  7542  0AA1  00A6               	movwf	__Umul8_16@word_mpld
  7543  0AA2  0823               	movf	??__Umul8_16+1,w
  7544  0AA3  00A7               	movwf	__Umul8_16@word_mpld+1
  7545  0AA4                     l2573:	
  7546  0AA4  1C28               	btfss	__Umul8_16@multiplier,0
  7547  0AA5  2AA7               	goto	u1991
  7548  0AA6  2AA8               	goto	u1990
  7549  0AA7                     u1991:	
  7550  0AA7  2AAC               	goto	l1321
  7551  0AA8                     u1990:	
  7552  0AA8                     l2575:	
  7553  0AA8  0826               	movf	__Umul8_16@word_mpld,w
  7554  0AA9  07A4               	addwf	__Umul8_16@product,f
  7555  0AAA  0827               	movf	__Umul8_16@word_mpld+1,w
  7556  0AAB  3DA5               	addwfc	__Umul8_16@product+1,f
  7557  0AAC                     l1321:	
  7558  0AAC  3001               	movlw	1
  7559  0AAD                     u2005:	
  7560  0AAD  35A6               	lslf	__Umul8_16@word_mpld,f
  7561  0AAE  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  7562  0AAF  0B89               	decfsz	9,f
  7563  0AB0  2AAD               	goto	u2005
  7564  0AB1  1003               	clrc
  7565  0AB2  0CA8               	rrf	__Umul8_16@multiplier,f
  7566  0AB3                     l2577:	
  7567  0AB3  0828               	movf	__Umul8_16@multiplier,w
  7568  0AB4  1D03               	btfss	3,2
  7569  0AB5  2AB7               	goto	u2011
  7570  0AB6  2AB8               	goto	u2010
  7571  0AB7                     u2011:	
  7572  0AB7  2AA4               	goto	l2573
  7573  0AB8                     u2010:	
  7574  0AB8                     l2579:	
  7575  0AB8  0825               	movf	__Umul8_16@product+1,w
  7576  0AB9  00A1               	movwf	?__Umul8_16+1
  7577  0ABA  0824               	movf	__Umul8_16@product,w
  7578  0ABB  00A0               	movwf	?__Umul8_16
  7579  0ABC                     l1323:	
  7580  0ABC  0008               	return
  7581  0ABD                     __end_of__Umul8_16:	
  7582                           
  7583                           	psect	text19
  7584  0481                     __ptext19:	
  7585 ;; *************** function ___fldiv *****************
  7586 ;; Defined at:
  7587 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  a               4   44[BANK0 ] unsigned int 
  7590 ;;  b               4   48[BANK0 ] unsigned int 
  7591 ;; Auto vars:     Size  Location     Type
  7592 ;;  grs             4   64[BANK0 ] unsigned long 
  7593 ;;  rem             4   57[BANK0 ] unsigned long 
  7594 ;;  new_exp         2   62[BANK0 ] int 
  7595 ;;  aexp            1   69[BANK0 ] unsigned char 
  7596 ;;  bexp            1   68[BANK0 ] unsigned char 
  7597 ;;  sign            1   61[BANK0 ] unsigned char 
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  4   44[BANK0 ] unsigned char 
  7600 ;; Registers used:
  7601 ;;		wreg, status,2, status,0
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7607 ;;      Params:         0       8       0       0       0       0
  7608 ;;      Locals:         0      13       0       0       0       0
  7609 ;;      Temps:          0       5       0       0       0       0
  7610 ;;      Totals:         0      26       0       0       0       0
  7611 ;;Total ram usage:       26 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    4
  7614 ;; This function calls:
  7615 ;;		Nothing
  7616 ;; This function is called by:
  7617 ;;		_comunicacao
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           
  7622                           ;psect for function ___fldiv
  7623  0481                     ___fldiv:	
  7624  0481                     l3279:	
  7625                           ;incstack = 0
  7626                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  7627                           
  7628  0481  0020               	movlb	0	; select bank0
  7629  0482  0853               	movf	___fldiv@b+3,w
  7630  0483  3980               	andlw	128
  7631  0484  00D4               	movwf	??___fldiv
  7632  0485  0854               	movf	??___fldiv,w
  7633  0486  00DD               	movwf	___fldiv@sign
  7634  0487                     l3281:	
  7635  0487  3553               	lslf	___fldiv@b+3,w
  7636  0488  00D4               	movwf	??___fldiv
  7637  0489  0854               	movf	??___fldiv,w
  7638  048A  00E4               	movwf	___fldiv@bexp
  7639  048B                     l3283:	
  7640  048B  1FD2               	btfss	___fldiv@b+2,7
  7641  048C  2C8E               	goto	u3101
  7642  048D  2C8F               	goto	u3100
  7643  048E                     u3101:	
  7644  048E  2C90               	goto	l3287
  7645  048F                     u3100:	
  7646  048F                     l3285:	
  7647  048F  1464               	bsf	___fldiv@bexp,0
  7648  0490                     l3287:	
  7649  0490  0864               	movf	___fldiv@bexp,w
  7650  0491  1903               	btfsc	3,2
  7651  0492  2C94               	goto	u3111
  7652  0493  2C95               	goto	u3110
  7653  0494                     u3111:	
  7654  0494  2CA5               	goto	l3297
  7655  0495                     u3110:	
  7656  0495                     l3289:	
  7657  0495  0A64               	incf	___fldiv@bexp,w
  7658  0496  1D03               	btfss	3,2
  7659  0497  2C99               	goto	u3121
  7660  0498  2C9A               	goto	u3120
  7661  0499                     u3121:	
  7662  0499  2CA2               	goto	l3293
  7663  049A                     u3120:	
  7664  049A                     l3291:	
  7665  049A  3000               	movlw	0
  7666  049B  00D3               	movwf	___fldiv@b+3
  7667  049C  3000               	movlw	0
  7668  049D  00D2               	movwf	___fldiv@b+2
  7669  049E  3000               	movlw	0
  7670  049F  00D1               	movwf	___fldiv@b+1
  7671  04A0  3000               	movlw	0
  7672  04A1  00D0               	movwf	___fldiv@b
  7673  04A2                     l3293:	
  7674  04A2  17D2               	bsf	___fldiv@b+2,7
  7675  04A3                     l3295:	
  7676  04A3  01D3               	clrf	___fldiv@b+3
  7677  04A4  2CAD               	goto	l3299
  7678  04A5                     l3297:	
  7679  04A5  3000               	movlw	0
  7680  04A6  00D3               	movwf	___fldiv@b+3
  7681  04A7  3000               	movlw	0
  7682  04A8  00D2               	movwf	___fldiv@b+2
  7683  04A9  3000               	movlw	0
  7684  04AA  00D1               	movwf	___fldiv@b+1
  7685  04AB  3000               	movlw	0
  7686  04AC  00D0               	movwf	___fldiv@b
  7687  04AD                     l3299:	
  7688  04AD  084F               	movf	___fldiv@a+3,w
  7689  04AE  3980               	andlw	128
  7690  04AF  00D4               	movwf	??___fldiv
  7691  04B0  0854               	movf	??___fldiv,w
  7692  04B1  06DD               	xorwf	___fldiv@sign,f
  7693  04B2                     l3301:	
  7694  04B2  354F               	lslf	___fldiv@a+3,w
  7695  04B3  00D4               	movwf	??___fldiv
  7696  04B4  0854               	movf	??___fldiv,w
  7697  04B5  00E5               	movwf	___fldiv@aexp
  7698  04B6                     l3303:	
  7699  04B6  1FCE               	btfss	___fldiv@a+2,7
  7700  04B7  2CB9               	goto	u3131
  7701  04B8  2CBA               	goto	u3130
  7702  04B9                     u3131:	
  7703  04B9  2CBB               	goto	l3307
  7704  04BA                     u3130:	
  7705  04BA                     l3305:	
  7706  04BA  1465               	bsf	___fldiv@aexp,0
  7707  04BB                     l3307:	
  7708  04BB  0865               	movf	___fldiv@aexp,w
  7709  04BC  1903               	btfsc	3,2
  7710  04BD  2CBF               	goto	u3141
  7711  04BE  2CC0               	goto	u3140
  7712  04BF                     u3141:	
  7713  04BF  2CD0               	goto	l3317
  7714  04C0                     u3140:	
  7715  04C0                     l3309:	
  7716  04C0  0A65               	incf	___fldiv@aexp,w
  7717  04C1  1D03               	btfss	3,2
  7718  04C2  2CC4               	goto	u3151
  7719  04C3  2CC5               	goto	u3150
  7720  04C4                     u3151:	
  7721  04C4  2CCD               	goto	l3313
  7722  04C5                     u3150:	
  7723  04C5                     l3311:	
  7724  04C5  3000               	movlw	0
  7725  04C6  00CF               	movwf	___fldiv@a+3
  7726  04C7  3000               	movlw	0
  7727  04C8  00CE               	movwf	___fldiv@a+2
  7728  04C9  3000               	movlw	0
  7729  04CA  00CD               	movwf	___fldiv@a+1
  7730  04CB  3000               	movlw	0
  7731  04CC  00CC               	movwf	___fldiv@a
  7732  04CD                     l3313:	
  7733  04CD  17CE               	bsf	___fldiv@a+2,7
  7734  04CE                     l3315:	
  7735  04CE  01CF               	clrf	___fldiv@a+3
  7736  04CF  2CD8               	goto	l1217
  7737  04D0                     l3317:	
  7738  04D0  3000               	movlw	0
  7739  04D1  00CF               	movwf	___fldiv@a+3
  7740  04D2  3000               	movlw	0
  7741  04D3  00CE               	movwf	___fldiv@a+2
  7742  04D4  3000               	movlw	0
  7743  04D5  00CD               	movwf	___fldiv@a+1
  7744  04D6  3000               	movlw	0
  7745  04D7  00CC               	movwf	___fldiv@a
  7746  04D8                     l1217:	
  7747  04D8  084F               	movf	___fldiv@a+3,w
  7748  04D9  044E               	iorwf	___fldiv@a+2,w
  7749  04DA  044D               	iorwf	___fldiv@a+1,w
  7750  04DB  044C               	iorwf	___fldiv@a,w
  7751  04DC  1D03               	skipz
  7752  04DD  2CDF               	goto	u3161
  7753  04DE  2CE0               	goto	u3160
  7754  04DF                     u3161:	
  7755  04DF  2CF9               	goto	l3327
  7756  04E0                     u3160:	
  7757  04E0                     l3319:	
  7758  04E0  3000               	movlw	0
  7759  04E1  00D3               	movwf	___fldiv@b+3
  7760  04E2  3000               	movlw	0
  7761  04E3  00D2               	movwf	___fldiv@b+2
  7762  04E4  3000               	movlw	0
  7763  04E5  00D1               	movwf	___fldiv@b+1
  7764  04E6  3000               	movlw	0
  7765  04E7  00D0               	movwf	___fldiv@b
  7766  04E8  3080               	movlw	128
  7767  04E9  04D2               	iorwf	___fldiv@b+2,f
  7768  04EA  307F               	movlw	127
  7769  04EB  04D3               	iorwf	___fldiv@b+3,f
  7770  04EC                     l3321:	
  7771  04EC  085D               	movf	___fldiv@sign,w
  7772  04ED  00D4               	movwf	??___fldiv
  7773  04EE  0854               	movf	??___fldiv,w
  7774  04EF  04D3               	iorwf	___fldiv@b+3,f
  7775  04F0                     l3323:	
  7776  04F0  0853               	movf	___fldiv@b+3,w
  7777  04F1  00CF               	movwf	?___fldiv+3
  7778  04F2  0852               	movf	___fldiv@b+2,w
  7779  04F3  00CE               	movwf	?___fldiv+2
  7780  04F4  0851               	movf	___fldiv@b+1,w
  7781  04F5  00CD               	movwf	?___fldiv+1
  7782  04F6  0850               	movf	___fldiv@b,w
  7783  04F7  00CC               	movwf	?___fldiv
  7784  04F8  2E34               	goto	l1219
  7785  04F9                     l3327:	
  7786  04F9  0864               	movf	___fldiv@bexp,w
  7787  04FA  1D03               	btfss	3,2
  7788  04FB  2CFD               	goto	u3171
  7789  04FC  2CFE               	goto	u3170
  7790  04FD                     u3171:	
  7791  04FD  2D07               	goto	l3333
  7792  04FE                     u3170:	
  7793  04FE                     l3329:	
  7794  04FE  3000               	movlw	0
  7795  04FF  00CF               	movwf	?___fldiv+3
  7796  0500  3000               	movlw	0
  7797  0501  00CE               	movwf	?___fldiv+2
  7798  0502  3000               	movlw	0
  7799  0503  00CD               	movwf	?___fldiv+1
  7800  0504  3000               	movlw	0
  7801  0505  00CC               	movwf	?___fldiv
  7802  0506  2E34               	goto	l1219
  7803  0507                     l3333:	
  7804  0507  0864               	movf	___fldiv@bexp,w
  7805  0508  00D4               	movwf	??___fldiv
  7806  0509  01D5               	clrf	??___fldiv+1
  7807  050A  0855               	movf	??___fldiv+1,w
  7808  050B  00D7               	movwf	??___fldiv+3
  7809  050C  0865               	movf	___fldiv@aexp,w
  7810  050D  0254               	subwf	??___fldiv,w
  7811  050E  00D6               	movwf	??___fldiv+2
  7812  050F  1C03               	skipc
  7813  0510  03D7               	decf	??___fldiv+3,f
  7814  0511  0856               	movf	??___fldiv+2,w
  7815  0512  3E7F               	addlw	127
  7816  0513  00DE               	movwf	___fldiv@new_exp
  7817  0514  3000               	movlw	0
  7818  0515  3D57               	addwfc	??___fldiv+3,w
  7819  0516  00DF               	movwf	___fldiv@new_exp+1
  7820  0517                     l3335:	
  7821  0517  0853               	movf	___fldiv@b+3,w
  7822  0518  00DC               	movwf	___fldiv@rem+3
  7823  0519  0852               	movf	___fldiv@b+2,w
  7824  051A  00DB               	movwf	___fldiv@rem+2
  7825  051B  0851               	movf	___fldiv@b+1,w
  7826  051C  00DA               	movwf	___fldiv@rem+1
  7827  051D  0850               	movf	___fldiv@b,w
  7828  051E  00D9               	movwf	___fldiv@rem
  7829  051F                     l3337:	
  7830  051F  3000               	movlw	0
  7831  0520  00D3               	movwf	___fldiv@b+3
  7832  0521  3000               	movlw	0
  7833  0522  00D2               	movwf	___fldiv@b+2
  7834  0523  3000               	movlw	0
  7835  0524  00D1               	movwf	___fldiv@b+1
  7836  0525  3000               	movlw	0
  7837  0526  00D0               	movwf	___fldiv@b
  7838  0527                     l3339:	
  7839  0527  3000               	movlw	0
  7840  0528  00E3               	movwf	___fldiv@grs+3
  7841  0529  3000               	movlw	0
  7842  052A  00E2               	movwf	___fldiv@grs+2
  7843  052B  3000               	movlw	0
  7844  052C  00E1               	movwf	___fldiv@grs+1
  7845  052D  3000               	movlw	0
  7846  052E  00E0               	movwf	___fldiv@grs
  7847  052F                     l3341:	
  7848  052F  01E5               	clrf	___fldiv@aexp
  7849  0530  2D6F               	goto	l3361
  7850  0531                     l3343:	
  7851  0531  0865               	movf	___fldiv@aexp,w
  7852  0532  1903               	btfsc	3,2
  7853  0533  2D35               	goto	u3181
  7854  0534  2D36               	goto	u3180
  7855  0535                     u3181:	
  7856  0535  2D50               	goto	l3353
  7857  0536                     u3180:	
  7858  0536                     l3345:	
  7859  0536  3001               	movlw	1
  7860  0537                     u3195:	
  7861  0537  35D9               	lslf	___fldiv@rem,f
  7862  0538  0DDA               	rlf	___fldiv@rem+1,f
  7863  0539  0DDB               	rlf	___fldiv@rem+2,f
  7864  053A  0DDC               	rlf	___fldiv@rem+3,f
  7865  053B  0B89               	decfsz	9,f
  7866  053C  2D37               	goto	u3195
  7867  053D  3001               	movlw	1
  7868  053E                     u3205:	
  7869  053E  35D0               	lslf	___fldiv@b,f
  7870  053F  0DD1               	rlf	___fldiv@b+1,f
  7871  0540  0DD2               	rlf	___fldiv@b+2,f
  7872  0541  0DD3               	rlf	___fldiv@b+3,f
  7873  0542  0B89               	decfsz	9,f
  7874  0543  2D3E               	goto	u3205
  7875  0544                     l3347:	
  7876  0544  1FE3               	btfss	___fldiv@grs+3,7
  7877  0545  2D47               	goto	u3211
  7878  0546  2D48               	goto	u3210
  7879  0547                     u3211:	
  7880  0547  2D49               	goto	l3351
  7881  0548                     u3210:	
  7882  0548                     l3349:	
  7883  0548  1450               	bsf	___fldiv@b,0
  7884  0549                     l3351:	
  7885  0549  3001               	movlw	1
  7886  054A                     u3225:	
  7887  054A  35E0               	lslf	___fldiv@grs,f
  7888  054B  0DE1               	rlf	___fldiv@grs+1,f
  7889  054C  0DE2               	rlf	___fldiv@grs+2,f
  7890  054D  0DE3               	rlf	___fldiv@grs+3,f
  7891  054E  0B89               	decfsz	9,f
  7892  054F  2D4A               	goto	u3225
  7893  0550                     l3353:	
  7894  0550  084F               	movf	___fldiv@a+3,w
  7895  0551  025C               	subwf	___fldiv@rem+3,w
  7896  0552  1D03               	skipz
  7897  0553  2D5E               	goto	u3235
  7898  0554  084E               	movf	___fldiv@a+2,w
  7899  0555  025B               	subwf	___fldiv@rem+2,w
  7900  0556  1D03               	skipz
  7901  0557  2D5E               	goto	u3235
  7902  0558  084D               	movf	___fldiv@a+1,w
  7903  0559  025A               	subwf	___fldiv@rem+1,w
  7904  055A  1D03               	skipz
  7905  055B  2D5E               	goto	u3235
  7906  055C  084C               	movf	___fldiv@a,w
  7907  055D  0259               	subwf	___fldiv@rem,w
  7908  055E                     u3235:	
  7909  055E  1C03               	skipc
  7910  055F  2D61               	goto	u3231
  7911  0560  2D62               	goto	u3230
  7912  0561                     u3231:	
  7913  0561  2D6B               	goto	l3359
  7914  0562                     u3230:	
  7915  0562                     l3355:	
  7916  0562  1763               	bsf	___fldiv@grs+3,6
  7917  0563                     l3357:	
  7918  0563  084C               	movf	___fldiv@a,w
  7919  0564  02D9               	subwf	___fldiv@rem,f
  7920  0565  084D               	movf	___fldiv@a+1,w
  7921  0566  3BDA               	subwfb	___fldiv@rem+1,f
  7922  0567  084E               	movf	___fldiv@a+2,w
  7923  0568  3BDB               	subwfb	___fldiv@rem+2,f
  7924  0569  084F               	movf	___fldiv@a+3,w
  7925  056A  3BDC               	subwfb	___fldiv@rem+3,f
  7926  056B                     l3359:	
  7927  056B  3001               	movlw	1
  7928  056C  00D4               	movwf	??___fldiv
  7929  056D  0854               	movf	??___fldiv,w
  7930  056E  07E5               	addwf	___fldiv@aexp,f
  7931  056F                     l3361:	
  7932  056F  301A               	movlw	26
  7933  0570  0265               	subwf	___fldiv@aexp,w
  7934  0571  1C03               	skipc
  7935  0572  2D74               	goto	u3241
  7936  0573  2D75               	goto	u3240
  7937  0574                     u3241:	
  7938  0574  2D31               	goto	l3343
  7939  0575                     u3240:	
  7940  0575                     l3363:	
  7941  0575  085C               	movf	___fldiv@rem+3,w
  7942  0576  045B               	iorwf	___fldiv@rem+2,w
  7943  0577  045A               	iorwf	___fldiv@rem+1,w
  7944  0578  0459               	iorwf	___fldiv@rem,w
  7945  0579  1903               	skipnz
  7946  057A  2D7C               	goto	u3251
  7947  057B  2D7D               	goto	u3250
  7948  057C                     u3251:	
  7949  057C  2D96               	goto	l3377
  7950  057D                     u3250:	
  7951  057D                     l3365:	
  7952  057D  1460               	bsf	___fldiv@grs,0
  7953  057E  2D96               	goto	l3377
  7954  057F                     l3367:	
  7955  057F  3001               	movlw	1
  7956  0580                     u3265:	
  7957  0580  35D0               	lslf	___fldiv@b,f
  7958  0581  0DD1               	rlf	___fldiv@b+1,f
  7959  0582  0DD2               	rlf	___fldiv@b+2,f
  7960  0583  0DD3               	rlf	___fldiv@b+3,f
  7961  0584  0B89               	decfsz	9,f
  7962  0585  2D80               	goto	u3265
  7963  0586                     l3369:	
  7964  0586  1FE3               	btfss	___fldiv@grs+3,7
  7965  0587  2D89               	goto	u3271
  7966  0588  2D8A               	goto	u3270
  7967  0589                     u3271:	
  7968  0589  2D8B               	goto	l3373
  7969  058A                     u3270:	
  7970  058A                     l3371:	
  7971  058A  1450               	bsf	___fldiv@b,0
  7972  058B                     l3373:	
  7973  058B  3001               	movlw	1
  7974  058C                     u3285:	
  7975  058C  35E0               	lslf	___fldiv@grs,f
  7976  058D  0DE1               	rlf	___fldiv@grs+1,f
  7977  058E  0DE2               	rlf	___fldiv@grs+2,f
  7978  058F  0DE3               	rlf	___fldiv@grs+3,f
  7979  0590  0B89               	decfsz	9,f
  7980  0591  2D8C               	goto	u3285
  7981  0592                     l3375:	
  7982  0592  30FF               	movlw	255
  7983  0593  07DE               	addwf	___fldiv@new_exp,f
  7984  0594  30FF               	movlw	255
  7985  0595  3DDF               	addwfc	___fldiv@new_exp+1,f
  7986  0596                     l3377:	
  7987  0596  1FD2               	btfss	___fldiv@b+2,7
  7988  0597  2D99               	goto	u3291
  7989  0598  2D9A               	goto	u3290
  7990  0599                     u3291:	
  7991  0599  2D7F               	goto	l3367
  7992  059A                     u3290:	
  7993  059A                     l3379:	
  7994  059A  01E5               	clrf	___fldiv@aexp
  7995  059B                     l3381:	
  7996  059B  1FE3               	btfss	___fldiv@grs+3,7
  7997  059C  2D9E               	goto	u3301
  7998  059D  2D9F               	goto	u3300
  7999  059E                     u3301:	
  8000  059E  2DBB               	goto	l3389
  8001  059F                     u3300:	
  8002  059F                     l3383:	
  8003  059F  30FF               	movlw	255
  8004  05A0  0560               	andwf	___fldiv@grs,w
  8005  05A1  00D4               	movwf	??___fldiv
  8006  05A2  30FF               	movlw	255
  8007  05A3  0561               	andwf	___fldiv@grs+1,w
  8008  05A4  00D5               	movwf	??___fldiv+1
  8009  05A5  30FF               	movlw	255
  8010  05A6  0562               	andwf	___fldiv@grs+2,w
  8011  05A7  00D6               	movwf	??___fldiv+2
  8012  05A8  307F               	movlw	127
  8013  05A9  0563               	andwf	___fldiv@grs+3,w
  8014  05AA  00D7               	movwf	??___fldiv+3
  8015  05AB  0857               	movf	??___fldiv+3,w
  8016  05AC  0456               	iorwf	??___fldiv+2,w
  8017  05AD  0455               	iorwf	??___fldiv+1,w
  8018  05AE  0454               	iorwf	??___fldiv,w
  8019  05AF  1903               	skipnz
  8020  05B0  2DB2               	goto	u3311
  8021  05B1  2DB3               	goto	u3310
  8022  05B2                     u3311:	
  8023  05B2  2DB6               	goto	l1233
  8024  05B3                     u3310:	
  8025  05B3                     l3385:	
  8026  05B3  01E5               	clrf	___fldiv@aexp
  8027  05B4  0AE5               	incf	___fldiv@aexp,f
  8028  05B5  2DBB               	goto	l3389
  8029  05B6                     l1233:	
  8030  05B6  1C50               	btfss	___fldiv@b,0
  8031  05B7  2DB9               	goto	u3321
  8032  05B8  2DBA               	goto	u3320
  8033  05B9                     u3321:	
  8034  05B9  2DBB               	goto	l3389
  8035  05BA                     u3320:	
  8036  05BA  2DB3               	goto	l3385
  8037  05BB                     l3389:	
  8038  05BB  0865               	movf	___fldiv@aexp,w
  8039  05BC  1903               	btfsc	3,2
  8040  05BD  2DBF               	goto	u3331
  8041  05BE  2DC0               	goto	u3330
  8042  05BF                     u3331:	
  8043  05BF  2DE8               	goto	l3399
  8044  05C0                     u3330:	
  8045  05C0                     l3391:	
  8046  05C0  3001               	movlw	1
  8047  05C1  07D0               	addwf	___fldiv@b,f
  8048  05C2  3000               	movlw	0
  8049  05C3  3DD1               	addwfc	___fldiv@b+1,f
  8050  05C4  3000               	movlw	0
  8051  05C5  3DD2               	addwfc	___fldiv@b+2,f
  8052  05C6  3000               	movlw	0
  8053  05C7  3DD3               	addwfc	___fldiv@b+3,f
  8054  05C8                     l3393:	
  8055  05C8  1C53               	btfss	___fldiv@b+3,0
  8056  05C9  2DCB               	goto	u3341
  8057  05CA  2DCC               	goto	u3340
  8058  05CB                     u3341:	
  8059  05CB  2DE8               	goto	l3399
  8060  05CC                     u3340:	
  8061  05CC                     l3395:	
  8062  05CC  0850               	movf	___fldiv@b,w
  8063  05CD  00D4               	movwf	??___fldiv
  8064  05CE  0851               	movf	___fldiv@b+1,w
  8065  05CF  00D5               	movwf	??___fldiv+1
  8066  05D0  0852               	movf	___fldiv@b+2,w
  8067  05D1  00D6               	movwf	??___fldiv+2
  8068  05D2  0853               	movf	___fldiv@b+3,w
  8069  05D3  00D7               	movwf	??___fldiv+3
  8070  05D4  3001               	movlw	1
  8071  05D5  00D8               	movwf	??___fldiv+4
  8072  05D6                     u3355:	
  8073  05D6  37D7               	asrf	??___fldiv+3,f
  8074  05D7  0CD6               	rrf	??___fldiv+2,f
  8075  05D8  0CD5               	rrf	??___fldiv+1,f
  8076  05D9  0CD4               	rrf	??___fldiv,f
  8077  05DA                     u3350:	
  8078  05DA  0BD8               	decfsz	??___fldiv+4,f
  8079  05DB  2DD6               	goto	u3355
  8080  05DC  0857               	movf	??___fldiv+3,w
  8081  05DD  00D3               	movwf	___fldiv@b+3
  8082  05DE  0856               	movf	??___fldiv+2,w
  8083  05DF  00D2               	movwf	___fldiv@b+2
  8084  05E0  0855               	movf	??___fldiv+1,w
  8085  05E1  00D1               	movwf	___fldiv@b+1
  8086  05E2  0854               	movf	??___fldiv,w
  8087  05E3  00D0               	movwf	___fldiv@b
  8088  05E4                     l3397:	
  8089  05E4  3001               	movlw	1
  8090  05E5  07DE               	addwf	___fldiv@new_exp,f
  8091  05E6  3000               	movlw	0
  8092  05E7  3DDF               	addwfc	___fldiv@new_exp+1,f
  8093  05E8                     l3399:	
  8094  05E8  085F               	movf	___fldiv@new_exp+1,w
  8095  05E9  3A80               	xorlw	128
  8096  05EA  00D4               	movwf	??___fldiv
  8097  05EB  3080               	movlw	128
  8098  05EC  0254               	subwf	??___fldiv,w
  8099  05ED  1D03               	skipz
  8100  05EE  2DF1               	goto	u3365
  8101  05EF  30FF               	movlw	255
  8102  05F0  025E               	subwf	___fldiv@new_exp,w
  8103  05F1                     u3365:	
  8104  05F1  1C03               	skipc
  8105  05F2  2DF4               	goto	u3361
  8106  05F3  2DF5               	goto	u3360
  8107  05F4                     u3361:	
  8108  05F4  2E02               	goto	l1238
  8109  05F5                     u3360:	
  8110  05F5                     l3401:	
  8111  05F5  30FF               	movlw	255
  8112  05F6  0020               	movlb	0	; select bank0
  8113  05F7  00DE               	movwf	___fldiv@new_exp
  8114  05F8  3000               	movlw	0
  8115  05F9  00DF               	movwf	___fldiv@new_exp+1
  8116  05FA  3000               	movlw	0
  8117  05FB  00D3               	movwf	___fldiv@b+3
  8118  05FC  3000               	movlw	0
  8119  05FD  00D2               	movwf	___fldiv@b+2
  8120  05FE  3000               	movlw	0
  8121  05FF  00D1               	movwf	___fldiv@b+1
  8122  0600  3000               	movlw	0
  8123  0601  00D0               	movwf	___fldiv@b
  8124  0602                     l1238:	
  8125  0602  0020               	movlb	0	; select bank0
  8126  0603  085F               	movf	___fldiv@new_exp+1,w
  8127  0604  3A80               	xorlw	128
  8128  0605  00D4               	movwf	??___fldiv
  8129  0606  3080               	movlw	128
  8130  0607  0254               	subwf	??___fldiv,w
  8131  0608  1D03               	skipz
  8132  0609  2E0C               	goto	u3375
  8133  060A  3001               	movlw	1
  8134  060B  025E               	subwf	___fldiv@new_exp,w
  8135  060C                     u3375:	
  8136  060C  1803               	skipnc
  8137  060D  2E0F               	goto	u3371
  8138  060E  2E10               	goto	u3370
  8139  060F                     u3371:	
  8140  060F  2E1C               	goto	l1239
  8141  0610                     u3370:	
  8142  0610                     l3403:	
  8143  0610  0020               	movlb	0	; select bank0
  8144  0611  01DE               	clrf	___fldiv@new_exp
  8145  0612  01DF               	clrf	___fldiv@new_exp+1
  8146  0613                     l3405:	
  8147  0613  3000               	movlw	0
  8148  0614  00D3               	movwf	___fldiv@b+3
  8149  0615  3000               	movlw	0
  8150  0616  00D2               	movwf	___fldiv@b+2
  8151  0617  3000               	movlw	0
  8152  0618  00D1               	movwf	___fldiv@b+1
  8153  0619  3000               	movlw	0
  8154  061A  00D0               	movwf	___fldiv@b
  8155  061B                     l3407:	
  8156  061B  01DD               	clrf	___fldiv@sign
  8157  061C                     l1239:	
  8158  061C  0020               	movlb	0	; select bank0
  8159  061D  085E               	movf	___fldiv@new_exp,w
  8160  061E  00D4               	movwf	??___fldiv
  8161  061F  0854               	movf	??___fldiv,w
  8162  0620  00E4               	movwf	___fldiv@bexp
  8163  0621                     l3409:	
  8164  0621  1C64               	btfss	___fldiv@bexp,0
  8165  0622  2E24               	goto	u3381
  8166  0623  2E25               	goto	u3380
  8167  0624                     u3381:	
  8168  0624  2E27               	goto	l3413
  8169  0625                     u3380:	
  8170  0625                     l3411:	
  8171  0625  17D2               	bsf	___fldiv@b+2,7
  8172  0626  2E2B               	goto	l1241
  8173  0627                     l3413:	
  8174  0627  307F               	movlw	127
  8175  0628  00D4               	movwf	??___fldiv
  8176  0629  0854               	movf	??___fldiv,w
  8177  062A  05D2               	andwf	___fldiv@b+2,f
  8178  062B                     l1241:	
  8179  062B  3664               	lsrf	___fldiv@bexp,w
  8180  062C  00D4               	movwf	??___fldiv
  8181  062D  0854               	movf	??___fldiv,w
  8182  062E  00D3               	movwf	___fldiv@b+3
  8183  062F  085D               	movf	___fldiv@sign,w
  8184  0630  00D4               	movwf	??___fldiv
  8185  0631  0854               	movf	??___fldiv,w
  8186  0632  04D3               	iorwf	___fldiv@b+3,f
  8187  0633  2CF0               	goto	l3323
  8188  0634                     l1219:	
  8189  0634  0008               	return
  8190  0635                     __end_of___fldiv:	
  8191                           
  8192                           	psect	text20
  8193  0A53                     __ptext20:	
  8194 ;; *************** function _SYSTEM_Initialize *****************
  8195 ;; Defined at:
  8196 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;		None
  8199 ;; Auto vars:     Size  Location     Type
  8200 ;;		None
  8201 ;; Return value:  Size  Location     Type
  8202 ;;                  1    wreg      void 
  8203 ;; Registers used:
  8204 ;;		wreg, status,2, status,0, pclath, cstack
  8205 ;; Tracked objects:
  8206 ;;		On entry : 0/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8210 ;;      Params:         0       0       0       0       0       0
  8211 ;;      Locals:         0       0       0       0       0       0
  8212 ;;      Temps:          0       0       0       0       0       0
  8213 ;;      Totals:         0       0       0       0       0       0
  8214 ;;Total ram usage:        0 bytes
  8215 ;; Hardware stack levels used:    1
  8216 ;; Hardware stack levels required when called:    6
  8217 ;; This function calls:
  8218 ;;		_ADC_Initialize
  8219 ;;		_CCP4_Initialize
  8220 ;;		_EUSART_Initialize
  8221 ;;		_FVR_Initialize
  8222 ;;		_OSCILLATOR_Initialize
  8223 ;;		_PIN_MANAGER_Initialize
  8224 ;;		_PWM3_Initialize
  8225 ;;		_TMR1_Initialize
  8226 ;;		_TMR2_Initialize
  8227 ;;		_TMR4_Initialize
  8228 ;;		_WDT_Initialize
  8229 ;; This function is called by:
  8230 ;;		_main
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           
  8235                           ;psect for function _SYSTEM_Initialize
  8236  0A53                     _SYSTEM_Initialize:	
  8237  0A53                     l3941:	
  8238                           ;incstack = 0
  8239                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8240                           
  8241                           
  8242                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8243  0A53  318B  2358  318A   	fcall	_PIN_MANAGER_Initialize
  8244                           
  8245                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8246  0A56  3188  2060  318A   	fcall	_OSCILLATOR_Initialize
  8247                           
  8248                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  8249  0A59  3188  204A  318A   	fcall	_WDT_Initialize
  8250                           
  8251                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  8252  0A5C  3188  2046  318A   	fcall	_FVR_Initialize
  8253                           
  8254                           ;mcc_generated_files/mcc.c: 57:     CCP4_Initialize();
  8255  0A5F  3189  217D  318A   	fcall	_CCP4_Initialize
  8256                           
  8257                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  8258  0A62  3188  2067  318A   	fcall	_ADC_Initialize
  8259                           
  8260                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
  8261  0A65  3189  218F  318A   	fcall	_TMR4_Initialize
  8262                           
  8263                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
  8264  0A68  3188  20BF  318A   	fcall	_PWM3_Initialize
  8265                           
  8266                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  8267  0A6B  3188  206F  318A   	fcall	_TMR2_Initialize
  8268                           
  8269                           ;mcc_generated_files/mcc.c: 62:     TMR1_Initialize();
  8270  0A6E  3189  215C  318A   	fcall	_TMR1_Initialize
  8271                           
  8272                           ;mcc_generated_files/mcc.c: 63:     EUSART_Initialize();
  8273  0A71  318A  2275  318A   	fcall	_EUSART_Initialize
  8274  0A74                     l121:	
  8275  0A74  0008               	return
  8276  0A75                     __end_of_SYSTEM_Initialize:	
  8277                           
  8278                           	psect	text21
  8279  084A                     __ptext21:	
  8280 ;; *************** function _WDT_Initialize *****************
  8281 ;; Defined at:
  8282 ;;		line 76 in file "mcc_generated_files/mcc.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;		None
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;		None
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  1    wreg      void 
  8289 ;; Registers used:
  8290 ;;		wreg
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8296 ;;      Params:         0       0       0       0       0       0
  8297 ;;      Locals:         0       0       0       0       0       0
  8298 ;;      Temps:          0       0       0       0       0       0
  8299 ;;      Totals:         0       0       0       0       0       0
  8300 ;;Total ram usage:        0 bytes
  8301 ;; Hardware stack levels used:    1
  8302 ;; Hardware stack levels required when called:    4
  8303 ;; This function calls:
  8304 ;;		Nothing
  8305 ;; This function is called by:
  8306 ;;		_SYSTEM_Initialize
  8307 ;; This function uses a non-reentrant model
  8308 ;;
  8309                           
  8310                           
  8311                           ;psect for function _WDT_Initialize
  8312  084A                     _WDT_Initialize:	
  8313  084A                     l3831:	
  8314                           ;incstack = 0
  8315                           ; Regs used in _WDT_Initialize: [wreg]
  8316                           
  8317                           
  8318                           ;mcc_generated_files/mcc.c: 79:     WDTCON = 0x16;
  8319  084A  3016               	movlw	22
  8320  084B  0021               	movlb	1	; select bank1
  8321  084C  0097               	movwf	23	;volatile
  8322  084D                     l127:	
  8323  084D  0008               	return
  8324  084E                     __end_of_WDT_Initialize:	
  8325                           
  8326                           	psect	text22
  8327  098F                     __ptext22:	
  8328 ;; *************** function _TMR4_Initialize *****************
  8329 ;; Defined at:
  8330 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;		None
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;		None
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  1    wreg      void 
  8337 ;; Registers used:
  8338 ;;		wreg, status,2, status,0, pclath, cstack
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8344 ;;      Params:         0       0       0       0       0       0
  8345 ;;      Locals:         0       0       0       0       0       0
  8346 ;;      Temps:          0       0       0       0       0       0
  8347 ;;      Totals:         0       0       0       0       0       0
  8348 ;;Total ram usage:        0 bytes
  8349 ;; Hardware stack levels used:    1
  8350 ;; Hardware stack levels required when called:    5
  8351 ;; This function calls:
  8352 ;;		_TMR4_SetInterruptHandler
  8353 ;; This function is called by:
  8354 ;;		_SYSTEM_Initialize
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           
  8359                           ;psect for function _TMR4_Initialize
  8360  098F                     _TMR4_Initialize:	
  8361  098F                     l3853:	
  8362                           ;incstack = 0
  8363                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8364                           
  8365                           
  8366                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xDE;
  8367  098F  30DE               	movlw	222
  8368  0990  0028               	movlb	8	; select bank8
  8369  0991  0096               	movwf	22	;volatile
  8370  0992                     l3855:	
  8371                           
  8372                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  8373  0992  0195               	clrf	21	;volatile
  8374  0993                     l3857:	
  8375                           
  8376                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  8377  0993  0020               	movlb	0	; select bank0
  8378  0994  1093               	bcf	19,1	;volatile
  8379  0995                     l3859:	
  8380                           
  8381                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  8382  0995  0021               	movlb	1	; select bank1
  8383  0996  1493               	bsf	19,1	;volatile
  8384  0997                     l3861:	
  8385                           
  8386                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  8387  0997  3003               	movlw	low _TMR4_DefaultInterruptHandler
  8388  0998  0020               	movlb	0	; select bank0
  8389  0999  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  8390  099A  3000               	movlw	high _TMR4_DefaultInterruptHandler
  8391  099B  00A1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  8392  099C  3187  27F7  3189   	fcall	_TMR4_SetInterruptHandler
  8393  099F                     l3863:	
  8394                           
  8395                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x07;
  8396  099F  3007               	movlw	7
  8397  09A0  0028               	movlb	8	; select bank8
  8398  09A1  0097               	movwf	23	;volatile
  8399  09A2                     l225:	
  8400  09A2  0008               	return
  8401  09A3                     __end_of_TMR4_Initialize:	
  8402                           
  8403                           	psect	text23
  8404  07F7                     __ptext23:	
  8405 ;; *************** function _TMR4_SetInterruptHandler *****************
  8406 ;; Defined at:
  8407 ;;		line 132 in file "mcc_generated_files/tmr4.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8410 ;;		 -> send_data(1), TMR4_DefaultInterruptHandler(1), 
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;		None
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  1    wreg      void 
  8415 ;; Registers used:
  8416 ;;		wreg
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8422 ;;      Params:         0       2       0       0       0       0
  8423 ;;      Locals:         0       0       0       0       0       0
  8424 ;;      Temps:          0       0       0       0       0       0
  8425 ;;      Totals:         0       2       0       0       0       0
  8426 ;;Total ram usage:        2 bytes
  8427 ;; Hardware stack levels used:    1
  8428 ;; Hardware stack levels required when called:    4
  8429 ;; This function calls:
  8430 ;;		Nothing
  8431 ;; This function is called by:
  8432 ;;		_TMR4_Initialize
  8433 ;;		_main
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437                           
  8438                           ;psect for function _TMR4_SetInterruptHandler
  8439  07F7                     _TMR4_SetInterruptHandler:	
  8440  07F7                     l3695:	
  8441                           ;incstack = 0
  8442                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  8443                           
  8444                           
  8445                           ;mcc_generated_files/tmr4.c: 133:     TMR4_InterruptHandler = InterruptHandler;
  8446  07F7  0020               	movlb	0	; select bank0
  8447  07F8  0821               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
  8448  07F9  0021               	movlb	1	; select bank1
  8449  07FA  00EC               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
  8450  07FB  0020               	movlb	0	; select bank0
  8451  07FC  0820               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
  8452  07FD  0021               	movlb	1	; select bank1
  8453  07FE  00EB               	movwf	_TMR4_InterruptHandler^(0+128)
  8454  07FF                     l247:	
  8455  07FF  0008               	return
  8456  0800                     __end_of_TMR4_SetInterruptHandler:	
  8457                           
  8458                           	psect	text24
  8459  086F                     __ptext24:	
  8460 ;; *************** function _TMR2_Initialize *****************
  8461 ;; Defined at:
  8462 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8463 ;; Parameters:    Size  Location     Type
  8464 ;;		None
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;		None
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  1    wreg      void 
  8469 ;; Registers used:
  8470 ;;		wreg, status,2
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8476 ;;      Params:         0       0       0       0       0       0
  8477 ;;      Locals:         0       0       0       0       0       0
  8478 ;;      Temps:          0       0       0       0       0       0
  8479 ;;      Totals:         0       0       0       0       0       0
  8480 ;;Total ram usage:        0 bytes
  8481 ;; Hardware stack levels used:    1
  8482 ;; Hardware stack levels required when called:    4
  8483 ;; This function calls:
  8484 ;;		Nothing
  8485 ;; This function is called by:
  8486 ;;		_SYSTEM_Initialize
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           
  8491                           ;psect for function _TMR2_Initialize
  8492  086F                     _TMR2_Initialize:	
  8493  086F                     l3873:	
  8494                           ;incstack = 0
  8495                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8496                           
  8497                           
  8498                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  8499  086F  30FF               	movlw	255
  8500  0870  0020               	movlb	0	; select bank0
  8501  0871  009B               	movwf	27	;volatile
  8502  0872                     l3875:	
  8503                           
  8504                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  8505  0872  019A               	clrf	26	;volatile
  8506  0873                     l3877:	
  8507                           
  8508                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  8509  0873  1091               	bcf	17,1	;volatile
  8510  0874                     l3879:	
  8511                           
  8512                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  8513  0874  3004               	movlw	4
  8514  0875  009C               	movwf	28	;volatile
  8515  0876                     l185:	
  8516  0876  0008               	return
  8517  0877                     __end_of_TMR2_Initialize:	
  8518                           
  8519                           	psect	text25
  8520  095C                     __ptext25:	
  8521 ;; *************** function _TMR1_Initialize *****************
  8522 ;; Defined at:
  8523 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;		None
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;		None
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  1    wreg      void 
  8530 ;; Registers used:
  8531 ;;		wreg, status,2
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8537 ;;      Params:         0       0       0       0       0       0
  8538 ;;      Locals:         0       0       0       0       0       0
  8539 ;;      Temps:          0       0       0       0       0       0
  8540 ;;      Totals:         0       0       0       0       0       0
  8541 ;;Total ram usage:        0 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; Hardware stack levels required when called:    4
  8544 ;; This function calls:
  8545 ;;		Nothing
  8546 ;; This function is called by:
  8547 ;;		_SYSTEM_Initialize
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           
  8551                           
  8552                           ;psect for function _TMR1_Initialize
  8553  095C                     _TMR1_Initialize:	
  8554  095C                     l3881:	
  8555                           ;incstack = 0
  8556                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  8557                           
  8558                           
  8559                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  8560  095C  0020               	movlb	0	; select bank0
  8561  095D  0199               	clrf	25	;volatile
  8562                           
  8563                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
  8564  095E  0197               	clrf	23	;volatile
  8565                           
  8566                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  8567  095F  0196               	clrf	22	;volatile
  8568  0960                     l3883:	
  8569                           
  8570                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  8571  0960  1011               	bcf	17,0	;volatile
  8572  0961                     l3885:	
  8573                           
  8574                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8575  0961  0817               	movf	23,w	;volatile
  8576  0962  0021               	movlb	1	; select bank1
  8577  0963  00EE               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  8578  0964  0020               	movlb	0	; select bank0
  8579  0965  0816               	movf	22,w	;volatile
  8580  0966  0021               	movlb	1	; select bank1
  8581  0967  00ED               	movwf	_timer1ReloadVal^(0+128)	;volatile
  8582  0968                     l3887:	
  8583                           
  8584                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  8585  0968  3031               	movlw	49
  8586  0969  0020               	movlb	0	; select bank0
  8587  096A  0098               	movwf	24	;volatile
  8588  096B                     l146:	
  8589  096B  0008               	return
  8590  096C                     __end_of_TMR1_Initialize:	
  8591                           
  8592                           	psect	text26
  8593  08BF                     __ptext26:	
  8594 ;; *************** function _PWM3_Initialize *****************
  8595 ;; Defined at:
  8596 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;		None
  8599 ;; Auto vars:     Size  Location     Type
  8600 ;;		None
  8601 ;; Return value:  Size  Location     Type
  8602 ;;                  1    wreg      void 
  8603 ;; Registers used:
  8604 ;;		wreg, status,2, status,0
  8605 ;; Tracked objects:
  8606 ;;		On entry : 0/0
  8607 ;;		On exit  : 0/0
  8608 ;;		Unchanged: 0/0
  8609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8610 ;;      Params:         0       0       0       0       0       0
  8611 ;;      Locals:         0       0       0       0       0       0
  8612 ;;      Temps:          0       0       0       0       0       0
  8613 ;;      Totals:         0       0       0       0       0       0
  8614 ;;Total ram usage:        0 bytes
  8615 ;; Hardware stack levels used:    1
  8616 ;; Hardware stack levels required when called:    4
  8617 ;; This function calls:
  8618 ;;		Nothing
  8619 ;; This function is called by:
  8620 ;;		_SYSTEM_Initialize
  8621 ;; This function uses a non-reentrant model
  8622 ;;
  8623                           
  8624                           
  8625                           ;psect for function _PWM3_Initialize
  8626  08BF                     _PWM3_Initialize:	
  8627  08BF                     l3865:	
  8628                           ;incstack = 0
  8629                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  8630                           
  8631                           
  8632                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x0C;
  8633  08BF  300C               	movlw	12
  8634  08C0  0026               	movlb	6	; select bank6
  8635  08C1  0093               	movwf	19	;volatile
  8636  08C2                     l3867:	
  8637                           
  8638                           ;mcc_generated_files/pwm3.c: 72:  CCPR3L = 0x00;
  8639  08C2  0191               	clrf	17	;volatile
  8640  08C3                     l3869:	
  8641                           
  8642                           ;mcc_generated_files/pwm3.c: 75:  CCPR3H = 0x00;
  8643  08C3  0192               	clrf	18	;volatile
  8644  08C4                     l3871:	
  8645                           
  8646                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x0;
  8647  08C4  30CF               	movlw	-49
  8648  08C5  0025               	movlb	5	; select bank5
  8649  08C6  059E               	andwf	30,f	;volatile
  8650  08C7                     l472:	
  8651  08C7  0008               	return
  8652  08C8                     __end_of_PWM3_Initialize:	
  8653                           
  8654                           	psect	text27
  8655  0B58                     __ptext27:	
  8656 ;; *************** function _PIN_MANAGER_Initialize *****************
  8657 ;; Defined at:
  8658 ;;		line 60 in file "mcc_generated_files/pin_manager.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;		None
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;		None
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  1    wreg      void 
  8665 ;; Registers used:
  8666 ;;		wreg, status,2, status,0, pclath, cstack
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8672 ;;      Params:         0       0       0       0       0       0
  8673 ;;      Locals:         0       0       0       0       0       0
  8674 ;;      Temps:          0       0       0       0       0       0
  8675 ;;      Totals:         0       0       0       0       0       0
  8676 ;;Total ram usage:        0 bytes
  8677 ;; Hardware stack levels used:    1
  8678 ;; Hardware stack levels required when called:    5
  8679 ;; This function calls:
  8680 ;;		_IOCBF0_SetInterruptHandler
  8681 ;;		_IOCBF3_SetInterruptHandler
  8682 ;;		_IOCBF4_SetInterruptHandler
  8683 ;;		_IOCBF5_SetInterruptHandler
  8684 ;; This function is called by:
  8685 ;;		_SYSTEM_Initialize
  8686 ;; This function uses a non-reentrant model
  8687 ;;
  8688                           
  8689                           
  8690                           ;psect for function _PIN_MANAGER_Initialize
  8691  0B58                     _PIN_MANAGER_Initialize:	
  8692  0B58                     l3779:	
  8693                           ;incstack = 0
  8694                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8695                           
  8696                           
  8697                           ;mcc_generated_files/pin_manager.c: 65:     LATA = 0x00;
  8698  0B58  0022               	movlb	2	; select bank2
  8699  0B59  018C               	clrf	12	;volatile
  8700                           
  8701                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
  8702  0B5A  018D               	clrf	13	;volatile
  8703  0B5B                     l3781:	
  8704                           
  8705                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0x33;
  8706  0B5B  3033               	movlw	51
  8707  0B5C  0021               	movlb	1	; select bank1
  8708  0B5D  008C               	movwf	12	;volatile
  8709  0B5E                     l3783:	
  8710                           
  8711                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
  8712  0B5E  30FF               	movlw	255
  8713  0B5F  008D               	movwf	13	;volatile
  8714  0B60                     l3785:	
  8715                           
  8716                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xC0;
  8717  0B60  30C0               	movlw	192
  8718  0B61  0023               	movlb	3	; select bank3
  8719  0B62  008D               	movwf	13	;volatile
  8720  0B63                     l3787:	
  8721                           
  8722                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x03;
  8723  0B63  3003               	movlw	3
  8724  0B64  008C               	movwf	12	;volatile
  8725                           
  8726                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  8727  0B65  0024               	movlb	4	; select bank4
  8728  0B66  018D               	clrf	13	;volatile
  8729                           
  8730                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  8731  0B67  018C               	clrf	12	;volatile
  8732  0B68                     l3789:	
  8733                           
  8734                           ;mcc_generated_files/pin_manager.c: 85:     OPTION_REGbits.nWPUEN = 1;
  8735  0B68  0021               	movlb	1	; select bank1
  8736  0B69  1795               	bsf	21,7	;volatile
  8737                           
  8738                           ;mcc_generated_files/pin_manager.c: 91:     APFCON0 = 0x00;
  8739  0B6A  0022               	movlb	2	; select bank2
  8740  0B6B  019D               	clrf	29	;volatile
  8741                           
  8742                           ;mcc_generated_files/pin_manager.c: 92:     APFCON1 = 0x00;
  8743  0B6C  019E               	clrf	30	;volatile
  8744  0B6D                     l3791:	
  8745                           
  8746                           ;mcc_generated_files/pin_manager.c: 98:     IOCBFbits.IOCBF0 = 0;
  8747  0B6D  0027               	movlb	7	; select bank7
  8748  0B6E  1016               	bcf	22,0	;volatile
  8749  0B6F                     l3793:	
  8750                           
  8751                           ;mcc_generated_files/pin_manager.c: 100:     IOCBFbits.IOCBF3 = 0;
  8752  0B6F  1196               	bcf	22,3	;volatile
  8753  0B70                     l3795:	
  8754                           
  8755                           ;mcc_generated_files/pin_manager.c: 102:     IOCBFbits.IOCBF4 = 0;
  8756  0B70  1216               	bcf	22,4	;volatile
  8757  0B71                     l3797:	
  8758                           
  8759                           ;mcc_generated_files/pin_manager.c: 104:     IOCBFbits.IOCBF5 = 0;
  8760  0B71  1296               	bcf	22,5	;volatile
  8761  0B72                     l3799:	
  8762                           
  8763                           ;mcc_generated_files/pin_manager.c: 106:     IOCBNbits.IOCBN0 = 1;
  8764  0B72  1415               	bsf	21,0	;volatile
  8765  0B73                     l3801:	
  8766                           
  8767                           ;mcc_generated_files/pin_manager.c: 108:     IOCBNbits.IOCBN3 = 1;
  8768  0B73  1595               	bsf	21,3	;volatile
  8769  0B74                     l3803:	
  8770                           
  8771                           ;mcc_generated_files/pin_manager.c: 110:     IOCBNbits.IOCBN4 = 1;
  8772  0B74  1615               	bsf	21,4	;volatile
  8773  0B75                     l3805:	
  8774                           
  8775                           ;mcc_generated_files/pin_manager.c: 112:     IOCBNbits.IOCBN5 = 1;
  8776  0B75  1695               	bsf	21,5	;volatile
  8777  0B76                     l3807:	
  8778                           
  8779                           ;mcc_generated_files/pin_manager.c: 114:     IOCBPbits.IOCBP0 = 0;
  8780  0B76  1014               	bcf	20,0	;volatile
  8781  0B77                     l3809:	
  8782                           
  8783                           ;mcc_generated_files/pin_manager.c: 116:     IOCBPbits.IOCBP3 = 0;
  8784  0B77  1194               	bcf	20,3	;volatile
  8785  0B78                     l3811:	
  8786                           
  8787                           ;mcc_generated_files/pin_manager.c: 118:     IOCBPbits.IOCBP4 = 0;
  8788  0B78  1214               	bcf	20,4	;volatile
  8789  0B79                     l3813:	
  8790                           
  8791                           ;mcc_generated_files/pin_manager.c: 120:     IOCBPbits.IOCBP5 = 0;
  8792  0B79  1294               	bcf	20,5	;volatile
  8793  0B7A                     l3815:	
  8794                           
  8795                           ;mcc_generated_files/pin_manager.c: 125:     IOCBF0_SetInterruptHandler(IOCBF0_DefaultIn
      +                          terruptHandler);
  8796  0B7A  3043               	movlw	low _IOCBF0_DefaultInterruptHandler
  8797  0B7B  0020               	movlb	0	; select bank0
  8798  0B7C  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler
  8799  0B7D  3008               	movlw	high _IOCBF0_DefaultInterruptHandler
  8800  0B7E  00A1               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler+1
  8801  0B7F  3188  209B  318B   	fcall	_IOCBF0_SetInterruptHandler
  8802  0B82                     l3817:	
  8803                           
  8804                           ;mcc_generated_files/pin_manager.c: 126:     IOCBF3_SetInterruptHandler(IOCBF3_DefaultIn
      +                          terruptHandler);
  8805  0B82  3044               	movlw	low _IOCBF3_DefaultInterruptHandler
  8806  0B83  0020               	movlb	0	; select bank0
  8807  0B84  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler
  8808  0B85  3008               	movlw	high _IOCBF3_DefaultInterruptHandler
  8809  0B86  00A1               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler+1
  8810  0B87  3188  20A4  318B   	fcall	_IOCBF3_SetInterruptHandler
  8811  0B8A                     l3819:	
  8812                           
  8813                           ;mcc_generated_files/pin_manager.c: 127:     IOCBF4_SetInterruptHandler(IOCBF4_DefaultIn
      +                          terruptHandler);
  8814  0B8A  3045               	movlw	low _IOCBF4_DefaultInterruptHandler
  8815  0B8B  0020               	movlb	0	; select bank0
  8816  0B8C  00A0               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
  8817  0B8D  3008               	movlw	high _IOCBF4_DefaultInterruptHandler
  8818  0B8E  00A1               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
  8819  0B8F  3188  20AD  318B   	fcall	_IOCBF4_SetInterruptHandler
  8820  0B92                     l3821:	
  8821                           
  8822                           ;mcc_generated_files/pin_manager.c: 128:     IOCBF5_SetInterruptHandler(IOCBF5_DefaultIn
      +                          terruptHandler);
  8823  0B92  3002               	movlw	low _IOCBF5_DefaultInterruptHandler
  8824  0B93  0020               	movlb	0	; select bank0
  8825  0B94  00A0               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler
  8826  0B95  3000               	movlw	high _IOCBF5_DefaultInterruptHandler
  8827  0B96  00A1               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler+1
  8828  0B97  3188  20B6  318B   	fcall	_IOCBF5_SetInterruptHandler
  8829  0B9A                     l3823:	
  8830                           
  8831                           ;mcc_generated_files/pin_manager.c: 131:     INTCONbits.IOCIE = 1;
  8832  0B9A  158B               	bsf	11,3	;volatile
  8833  0B9B                     l414:	
  8834  0B9B  0008               	return
  8835  0B9C                     __end_of_PIN_MANAGER_Initialize:	
  8836                           
  8837                           	psect	text28
  8838  08B6                     __ptext28:	
  8839 ;; *************** function _IOCBF5_SetInterruptHandler *****************
  8840 ;; Defined at:
  8841 ;;		line 267 in file "mcc_generated_files/pin_manager.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8844 ;;		 -> sensor4(1), IOCBF5_DefaultInterruptHandler(1), 
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;		None
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  1    wreg      void 
  8849 ;; Registers used:
  8850 ;;		wreg
  8851 ;; Tracked objects:
  8852 ;;		On entry : 0/0
  8853 ;;		On exit  : 0/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8856 ;;      Params:         0       2       0       0       0       0
  8857 ;;      Locals:         0       0       0       0       0       0
  8858 ;;      Temps:          0       0       0       0       0       0
  8859 ;;      Totals:         0       2       0       0       0       0
  8860 ;;Total ram usage:        2 bytes
  8861 ;; Hardware stack levels used:    1
  8862 ;; Hardware stack levels required when called:    4
  8863 ;; This function calls:
  8864 ;;		Nothing
  8865 ;; This function is called by:
  8866 ;;		_PIN_MANAGER_Initialize
  8867 ;;		_main
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871                           
  8872                           ;psect for function _IOCBF5_SetInterruptHandler
  8873  08B6                     _IOCBF5_SetInterruptHandler:	
  8874  08B6                     l3705:	
  8875                           ;incstack = 0
  8876                           ; Regs used in _IOCBF5_SetInterruptHandler: [wreg]
  8877                           
  8878                           
  8879                           ;mcc_generated_files/pin_manager.c: 268:     IOCBF5_InterruptHandler = InterruptHandler;
  8880  08B6  0020               	movlb	0	; select bank0
  8881  08B7  0821               	movf	IOCBF5_SetInterruptHandler@InterruptHandler+1,w
  8882  08B8  0021               	movlb	1	; select bank1
  8883  08B9  00E4               	movwf	(_IOCBF5_InterruptHandler+1)^(0+128)
  8884  08BA  0020               	movlb	0	; select bank0
  8885  08BB  0820               	movf	IOCBF5_SetInterruptHandler@InterruptHandler,w
  8886  08BC  0021               	movlb	1	; select bank1
  8887  08BD  00E3               	movwf	_IOCBF5_InterruptHandler^(0+128)
  8888  08BE                     l458:	
  8889  08BE  0008               	return
  8890  08BF                     __end_of_IOCBF5_SetInterruptHandler:	
  8891                           
  8892                           	psect	text29
  8893  08AD                     __ptext29:	
  8894 ;; *************** function _IOCBF4_SetInterruptHandler *****************
  8895 ;; Defined at:
  8896 ;;		line 237 in file "mcc_generated_files/pin_manager.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8899 ;;		 -> sensor3(1), IOCBF4_DefaultInterruptHandler(1), 
  8900 ;; Auto vars:     Size  Location     Type
  8901 ;;		None
  8902 ;; Return value:  Size  Location     Type
  8903 ;;                  1    wreg      void 
  8904 ;; Registers used:
  8905 ;;		wreg
  8906 ;; Tracked objects:
  8907 ;;		On entry : 0/0
  8908 ;;		On exit  : 0/0
  8909 ;;		Unchanged: 0/0
  8910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8911 ;;      Params:         0       2       0       0       0       0
  8912 ;;      Locals:         0       0       0       0       0       0
  8913 ;;      Temps:          0       0       0       0       0       0
  8914 ;;      Totals:         0       2       0       0       0       0
  8915 ;;Total ram usage:        2 bytes
  8916 ;; Hardware stack levels used:    1
  8917 ;; Hardware stack levels required when called:    4
  8918 ;; This function calls:
  8919 ;;		Nothing
  8920 ;; This function is called by:
  8921 ;;		_PIN_MANAGER_Initialize
  8922 ;;		_main
  8923 ;; This function uses a non-reentrant model
  8924 ;;
  8925                           
  8926                           
  8927                           ;psect for function _IOCBF4_SetInterruptHandler
  8928  08AD                     _IOCBF4_SetInterruptHandler:	
  8929  08AD                     l3703:	
  8930                           ;incstack = 0
  8931                           ; Regs used in _IOCBF4_SetInterruptHandler: [wreg]
  8932                           
  8933                           
  8934                           ;mcc_generated_files/pin_manager.c: 238:     IOCBF4_InterruptHandler = InterruptHandler;
  8935  08AD  0020               	movlb	0	; select bank0
  8936  08AE  0821               	movf	IOCBF4_SetInterruptHandler@InterruptHandler+1,w
  8937  08AF  0021               	movlb	1	; select bank1
  8938  08B0  00E6               	movwf	(_IOCBF4_InterruptHandler+1)^(0+128)
  8939  08B1  0020               	movlb	0	; select bank0
  8940  08B2  0820               	movf	IOCBF4_SetInterruptHandler@InterruptHandler,w
  8941  08B3  0021               	movlb	1	; select bank1
  8942  08B4  00E5               	movwf	_IOCBF4_InterruptHandler^(0+128)
  8943  08B5                     l448:	
  8944  08B5  0008               	return
  8945  08B6                     __end_of_IOCBF4_SetInterruptHandler:	
  8946                           
  8947                           	psect	text30
  8948  08A4                     __ptext30:	
  8949 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  8950 ;; Defined at:
  8951 ;;		line 207 in file "mcc_generated_files/pin_manager.c"
  8952 ;; Parameters:    Size  Location     Type
  8953 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8954 ;;		 -> sensor2(1), IOCBF3_DefaultInterruptHandler(1), 
  8955 ;; Auto vars:     Size  Location     Type
  8956 ;;		None
  8957 ;; Return value:  Size  Location     Type
  8958 ;;                  1    wreg      void 
  8959 ;; Registers used:
  8960 ;;		wreg
  8961 ;; Tracked objects:
  8962 ;;		On entry : 0/0
  8963 ;;		On exit  : 0/0
  8964 ;;		Unchanged: 0/0
  8965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8966 ;;      Params:         0       2       0       0       0       0
  8967 ;;      Locals:         0       0       0       0       0       0
  8968 ;;      Temps:          0       0       0       0       0       0
  8969 ;;      Totals:         0       2       0       0       0       0
  8970 ;;Total ram usage:        2 bytes
  8971 ;; Hardware stack levels used:    1
  8972 ;; Hardware stack levels required when called:    4
  8973 ;; This function calls:
  8974 ;;		Nothing
  8975 ;; This function is called by:
  8976 ;;		_PIN_MANAGER_Initialize
  8977 ;;		_main
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981                           
  8982                           ;psect for function _IOCBF3_SetInterruptHandler
  8983  08A4                     _IOCBF3_SetInterruptHandler:	
  8984  08A4                     l3701:	
  8985                           ;incstack = 0
  8986                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  8987                           
  8988                           
  8989                           ;mcc_generated_files/pin_manager.c: 208:     IOCBF3_InterruptHandler = InterruptHandler;
  8990  08A4  0020               	movlb	0	; select bank0
  8991  08A5  0821               	movf	IOCBF3_SetInterruptHandler@InterruptHandler+1,w
  8992  08A6  0021               	movlb	1	; select bank1
  8993  08A7  00E8               	movwf	(_IOCBF3_InterruptHandler+1)^(0+128)
  8994  08A8  0020               	movlb	0	; select bank0
  8995  08A9  0820               	movf	IOCBF3_SetInterruptHandler@InterruptHandler,w
  8996  08AA  0021               	movlb	1	; select bank1
  8997  08AB  00E7               	movwf	_IOCBF3_InterruptHandler^(0+128)
  8998  08AC                     l438:	
  8999  08AC  0008               	return
  9000  08AD                     __end_of_IOCBF3_SetInterruptHandler:	
  9001                           
  9002                           	psect	text31
  9003  089B                     __ptext31:	
  9004 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  9005 ;; Defined at:
  9006 ;;		line 177 in file "mcc_generated_files/pin_manager.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9009 ;;		 -> sensor1(1), IOCBF0_DefaultInterruptHandler(1), 
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;		None
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  1    wreg      void 
  9014 ;; Registers used:
  9015 ;;		wreg
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9021 ;;      Params:         0       2       0       0       0       0
  9022 ;;      Locals:         0       0       0       0       0       0
  9023 ;;      Temps:          0       0       0       0       0       0
  9024 ;;      Totals:         0       2       0       0       0       0
  9025 ;;Total ram usage:        2 bytes
  9026 ;; Hardware stack levels used:    1
  9027 ;; Hardware stack levels required when called:    4
  9028 ;; This function calls:
  9029 ;;		Nothing
  9030 ;; This function is called by:
  9031 ;;		_PIN_MANAGER_Initialize
  9032 ;;		_main
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           
  9037                           ;psect for function _IOCBF0_SetInterruptHandler
  9038  089B                     _IOCBF0_SetInterruptHandler:	
  9039  089B                     l3699:	
  9040                           ;incstack = 0
  9041                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  9042                           
  9043                           
  9044                           ;mcc_generated_files/pin_manager.c: 178:     IOCBF0_InterruptHandler = InterruptHandler;
  9045  089B  0020               	movlb	0	; select bank0
  9046  089C  0821               	movf	IOCBF0_SetInterruptHandler@InterruptHandler+1,w
  9047  089D  0021               	movlb	1	; select bank1
  9048  089E  00EA               	movwf	(_IOCBF0_InterruptHandler+1)^(0+128)
  9049  089F  0020               	movlb	0	; select bank0
  9050  08A0  0820               	movf	IOCBF0_SetInterruptHandler@InterruptHandler,w
  9051  08A1  0021               	movlb	1	; select bank1
  9052  08A2  00E9               	movwf	_IOCBF0_InterruptHandler^(0+128)
  9053  08A3                     l428:	
  9054  08A3  0008               	return
  9055  08A4                     __end_of_IOCBF0_SetInterruptHandler:	
  9056                           
  9057                           	psect	text32
  9058  0860                     __ptext32:	
  9059 ;; *************** function _OSCILLATOR_Initialize *****************
  9060 ;; Defined at:
  9061 ;;		line 66 in file "mcc_generated_files/mcc.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;		None
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;		None
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  1    wreg      void 
  9068 ;; Registers used:
  9069 ;;		wreg, status,2
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9075 ;;      Params:         0       0       0       0       0       0
  9076 ;;      Locals:         0       0       0       0       0       0
  9077 ;;      Temps:          0       0       0       0       0       0
  9078 ;;      Totals:         0       0       0       0       0       0
  9079 ;;Total ram usage:        0 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; Hardware stack levels required when called:    4
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		_SYSTEM_Initialize
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           
  9090                           ;psect for function _OSCILLATOR_Initialize
  9091  0860                     _OSCILLATOR_Initialize:	
  9092  0860                     l3825:	
  9093                           ;incstack = 0
  9094                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9095                           
  9096                           
  9097                           ;mcc_generated_files/mcc.c: 69:     OSCCON = 0x70;
  9098  0860  3070               	movlw	112
  9099  0861  0021               	movlb	1	; select bank1
  9100  0862  0099               	movwf	25	;volatile
  9101  0863                     l3827:	
  9102                           
  9103                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  9104  0863  0198               	clrf	24	;volatile
  9105  0864                     l3829:	
  9106                           
  9107                           ;mcc_generated_files/mcc.c: 73:     BORCON = 0x00;
  9108  0864  0022               	movlb	2	; select bank2
  9109  0865  0196               	clrf	22	;volatile
  9110  0866                     l124:	
  9111  0866  0008               	return
  9112  0867                     __end_of_OSCILLATOR_Initialize:	
  9113                           
  9114                           	psect	text33
  9115  0846                     __ptext33:	
  9116 ;; *************** function _FVR_Initialize *****************
  9117 ;; Defined at:
  9118 ;;		line 58 in file "mcc_generated_files/fvr.c"
  9119 ;; Parameters:    Size  Location     Type
  9120 ;;		None
  9121 ;; Auto vars:     Size  Location     Type
  9122 ;;		None
  9123 ;; Return value:  Size  Location     Type
  9124 ;;                  1    wreg      void 
  9125 ;; Registers used:
  9126 ;;		wreg
  9127 ;; Tracked objects:
  9128 ;;		On entry : 0/0
  9129 ;;		On exit  : 0/0
  9130 ;;		Unchanged: 0/0
  9131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9132 ;;      Params:         0       0       0       0       0       0
  9133 ;;      Locals:         0       0       0       0       0       0
  9134 ;;      Temps:          0       0       0       0       0       0
  9135 ;;      Totals:         0       0       0       0       0       0
  9136 ;;Total ram usage:        0 bytes
  9137 ;; Hardware stack levels used:    1
  9138 ;; Hardware stack levels required when called:    4
  9139 ;; This function calls:
  9140 ;;		Nothing
  9141 ;; This function is called by:
  9142 ;;		_SYSTEM_Initialize
  9143 ;; This function uses a non-reentrant model
  9144 ;;
  9145                           
  9146                           
  9147                           ;psect for function _FVR_Initialize
  9148  0846                     _FVR_Initialize:	
  9149  0846                     l3833:	
  9150                           ;incstack = 0
  9151                           ; Regs used in _FVR_Initialize: [wreg]
  9152                           
  9153                           
  9154                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x81;
  9155  0846  3081               	movlw	129
  9156  0847  0022               	movlb	2	; select bank2
  9157  0848  0097               	movwf	23	;volatile
  9158  0849                     l320:	
  9159  0849  0008               	return
  9160  084A                     __end_of_FVR_Initialize:	
  9161                           
  9162                           	psect	text34
  9163  0A75                     __ptext34:	
  9164 ;; *************** function _EUSART_Initialize *****************
  9165 ;; Defined at:
  9166 ;;		line 66 in file "mcc_generated_files/eusart.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;		None
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;		None
  9171 ;; Return value:  Size  Location     Type
  9172 ;;                  1    wreg      void 
  9173 ;; Registers used:
  9174 ;;		wreg, status,2, status,0, pclath, cstack
  9175 ;; Tracked objects:
  9176 ;;		On entry : 0/0
  9177 ;;		On exit  : 0/0
  9178 ;;		Unchanged: 0/0
  9179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9180 ;;      Params:         0       0       0       0       0       0
  9181 ;;      Locals:         0       0       0       0       0       0
  9182 ;;      Temps:          0       0       0       0       0       0
  9183 ;;      Totals:         0       0       0       0       0       0
  9184 ;;Total ram usage:        0 bytes
  9185 ;; Hardware stack levels used:    1
  9186 ;; Hardware stack levels required when called:    5
  9187 ;; This function calls:
  9188 ;;		_EUSART_SetErrorHandler
  9189 ;;		_EUSART_SetFramingErrorHandler
  9190 ;;		_EUSART_SetOverrunErrorHandler
  9191 ;; This function is called by:
  9192 ;;		_SYSTEM_Initialize
  9193 ;; This function uses a non-reentrant model
  9194 ;;
  9195                           
  9196                           
  9197                           ;psect for function _EUSART_Initialize
  9198  0A75                     _EUSART_Initialize:	
  9199  0A75                     l3767:	
  9200                           ;incstack = 0
  9201                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9202                           
  9203                           
  9204                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  9205  0A75  3008               	movlw	8
  9206  0A76  0023               	movlb	3	; select bank3
  9207  0A77  009F               	movwf	31	;volatile
  9208                           
  9209                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  9210  0A78  3090               	movlw	144
  9211  0A79  009D               	movwf	29	;volatile
  9212                           
  9213                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  9214  0A7A  3024               	movlw	36
  9215  0A7B  009E               	movwf	30	;volatile
  9216                           
  9217                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  9218  0A7C  3067               	movlw	103
  9219  0A7D  009B               	movwf	27	;volatile
  9220  0A7E                     l3769:	
  9221                           
  9222                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  9223  0A7E  019C               	clrf	28	;volatile
  9224  0A7F                     l3771:	
  9225                           
  9226                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  9227  0A7F  3000               	movlw	0
  9228  0A80  0020               	movlb	0	; select bank0
  9229  0A81  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  9230  0A82  3000               	movlw	0
  9231  0A83  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  9232  0A84  3188  2089  318A   	fcall	_EUSART_SetFramingErrorHandler
  9233  0A87                     l3773:	
  9234                           
  9235                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  9236  0A87  3000               	movlw	0
  9237  0A88  0020               	movlb	0	; select bank0
  9238  0A89  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  9239  0A8A  3000               	movlw	0
  9240  0A8B  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  9241  0A8C  3188  2092  318A   	fcall	_EUSART_SetOverrunErrorHandler
  9242  0A8F                     l3775:	
  9243                           
  9244                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  9245  0A8F  3000               	movlw	0
  9246  0A90  0020               	movlb	0	; select bank0
  9247  0A91  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  9248  0A92  3000               	movlw	0
  9249  0A93  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  9250  0A94  3188  2080  318A   	fcall	_EUSART_SetErrorHandler
  9251  0A97                     l3777:	
  9252                           
  9253                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  9254  0A97  01F6               	clrf	_eusartRxLastError	;volatile
  9255  0A98                     l43:	
  9256  0A98  0008               	return
  9257  0A99                     __end_of_EUSART_Initialize:	
  9258                           
  9259                           	psect	text35
  9260  0892                     __ptext35:	
  9261 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  9262 ;; Defined at:
  9263 ;;		line 161 in file "mcc_generated_files/eusart.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9266 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  9267 ;; Auto vars:     Size  Location     Type
  9268 ;;		None
  9269 ;; Return value:  Size  Location     Type
  9270 ;;                  1    wreg      void 
  9271 ;; Registers used:
  9272 ;;		wreg
  9273 ;; Tracked objects:
  9274 ;;		On entry : 0/0
  9275 ;;		On exit  : 0/0
  9276 ;;		Unchanged: 0/0
  9277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9278 ;;      Params:         0       2       0       0       0       0
  9279 ;;      Locals:         0       0       0       0       0       0
  9280 ;;      Temps:          0       0       0       0       0       0
  9281 ;;      Totals:         0       2       0       0       0       0
  9282 ;;Total ram usage:        2 bytes
  9283 ;; Hardware stack levels used:    1
  9284 ;; Hardware stack levels required when called:    4
  9285 ;; This function calls:
  9286 ;;		Nothing
  9287 ;; This function is called by:
  9288 ;;		_EUSART_Initialize
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           
  9293                           ;psect for function _EUSART_SetOverrunErrorHandler
  9294  0892                     _EUSART_SetOverrunErrorHandler:	
  9295  0892                     l3691:	
  9296                           ;incstack = 0
  9297                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  9298                           
  9299                           
  9300                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  9301  0892  0020               	movlb	0	; select bank0
  9302  0893  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  9303  0894  0022               	movlb	2	; select bank2
  9304  0895  00A5               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  9305  0896  0020               	movlb	0	; select bank0
  9306  0897  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  9307  0898  0022               	movlb	2	; select bank2
  9308  0899  00A4               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  9309  089A                     l85:	
  9310  089A  0008               	return
  9311  089B                     __end_of_EUSART_SetOverrunErrorHandler:	
  9312                           
  9313                           	psect	text36
  9314  0889                     __ptext36:	
  9315 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  9316 ;; Defined at:
  9317 ;;		line 157 in file "mcc_generated_files/eusart.c"
  9318 ;; Parameters:    Size  Location     Type
  9319 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9320 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;		None
  9323 ;; Return value:  Size  Location     Type
  9324 ;;                  1    wreg      void 
  9325 ;; Registers used:
  9326 ;;		wreg
  9327 ;; Tracked objects:
  9328 ;;		On entry : 0/0
  9329 ;;		On exit  : 0/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9332 ;;      Params:         0       2       0       0       0       0
  9333 ;;      Locals:         0       0       0       0       0       0
  9334 ;;      Temps:          0       0       0       0       0       0
  9335 ;;      Totals:         0       2       0       0       0       0
  9336 ;;Total ram usage:        2 bytes
  9337 ;; Hardware stack levels used:    1
  9338 ;; Hardware stack levels required when called:    4
  9339 ;; This function calls:
  9340 ;;		Nothing
  9341 ;; This function is called by:
  9342 ;;		_EUSART_Initialize
  9343 ;; This function uses a non-reentrant model
  9344 ;;
  9345                           
  9346                           
  9347                           ;psect for function _EUSART_SetFramingErrorHandler
  9348  0889                     _EUSART_SetFramingErrorHandler:	
  9349  0889                     l3689:	
  9350                           ;incstack = 0
  9351                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9352                           
  9353                           
  9354                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  9355  0889  0020               	movlb	0	; select bank0
  9356  088A  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  9357  088B  0022               	movlb	2	; select bank2
  9358  088C  00A7               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  9359  088D  0020               	movlb	0	; select bank0
  9360  088E  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  9361  088F  0022               	movlb	2	; select bank2
  9362  0890  00A6               	movwf	_EUSART_FramingErrorHandler^(0+256)
  9363  0891                     l82:	
  9364  0891  0008               	return
  9365  0892                     __end_of_EUSART_SetFramingErrorHandler:	
  9366                           
  9367                           	psect	text37
  9368  0880                     __ptext37:	
  9369 ;; *************** function _EUSART_SetErrorHandler *****************
  9370 ;; Defined at:
  9371 ;;		line 165 in file "mcc_generated_files/eusart.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9374 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9375 ;; Auto vars:     Size  Location     Type
  9376 ;;		None
  9377 ;; Return value:  Size  Location     Type
  9378 ;;                  1    wreg      void 
  9379 ;; Registers used:
  9380 ;;		wreg
  9381 ;; Tracked objects:
  9382 ;;		On entry : 0/0
  9383 ;;		On exit  : 0/0
  9384 ;;		Unchanged: 0/0
  9385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9386 ;;      Params:         0       2       0       0       0       0
  9387 ;;      Locals:         0       0       0       0       0       0
  9388 ;;      Temps:          0       0       0       0       0       0
  9389 ;;      Totals:         0       2       0       0       0       0
  9390 ;;Total ram usage:        2 bytes
  9391 ;; Hardware stack levels used:    1
  9392 ;; Hardware stack levels required when called:    4
  9393 ;; This function calls:
  9394 ;;		Nothing
  9395 ;; This function is called by:
  9396 ;;		_EUSART_Initialize
  9397 ;; This function uses a non-reentrant model
  9398 ;;
  9399                           
  9400                           
  9401                           ;psect for function _EUSART_SetErrorHandler
  9402  0880                     _EUSART_SetErrorHandler:	
  9403  0880                     l3693:	
  9404                           ;incstack = 0
  9405                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9406                           
  9407                           
  9408                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  9409  0880  0020               	movlb	0	; select bank0
  9410  0881  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9411  0882  0022               	movlb	2	; select bank2
  9412  0883  00A3               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  9413  0884  0020               	movlb	0	; select bank0
  9414  0885  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9415  0886  0022               	movlb	2	; select bank2
  9416  0887  00A2               	movwf	_EUSART_ErrorHandler^(0+256)
  9417  0888                     l88:	
  9418  0888  0008               	return
  9419  0889                     __end_of_EUSART_SetErrorHandler:	
  9420                           
  9421                           	psect	text38
  9422  097D                     __ptext38:	
  9423 ;; *************** function _CCP4_Initialize *****************
  9424 ;; Defined at:
  9425 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  9426 ;; Parameters:    Size  Location     Type
  9427 ;;		None
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;		None
  9430 ;; Return value:  Size  Location     Type
  9431 ;;                  1    wreg      void 
  9432 ;; Registers used:
  9433 ;;		wreg, status,2, status,0, pclath, cstack
  9434 ;; Tracked objects:
  9435 ;;		On entry : 0/0
  9436 ;;		On exit  : 0/0
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9439 ;;      Params:         0       0       0       0       0       0
  9440 ;;      Locals:         0       0       0       0       0       0
  9441 ;;      Temps:          0       0       0       0       0       0
  9442 ;;      Totals:         0       0       0       0       0       0
  9443 ;;Total ram usage:        0 bytes
  9444 ;; Hardware stack levels used:    1
  9445 ;; Hardware stack levels required when called:    5
  9446 ;; This function calls:
  9447 ;;		_CCP4_SetCallBack
  9448 ;; This function is called by:
  9449 ;;		_SYSTEM_Initialize
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453                           
  9454                           ;psect for function _CCP4_Initialize
  9455  097D                     _CCP4_Initialize:	
  9456  097D                     l3835:	
  9457                           ;incstack = 0
  9458                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9459                           
  9460                           
  9461                           ;mcc_generated_files/ccp4.c: 70:  CCP4CON = 0x05;
  9462  097D  3005               	movlw	5
  9463  097E  0026               	movlb	6	; select bank6
  9464  097F  009A               	movwf	26	;volatile
  9465  0980                     l3837:	
  9466                           
  9467                           ;mcc_generated_files/ccp4.c: 73:  CCPR4L = 0x00;
  9468  0980  0198               	clrf	24	;volatile
  9469  0981                     l3839:	
  9470                           
  9471                           ;mcc_generated_files/ccp4.c: 76:  CCPR4H = 0x00;
  9472  0981  0199               	clrf	25	;volatile
  9473  0982                     l3841:	
  9474                           
  9475                           ;mcc_generated_files/ccp4.c: 79:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  9476  0982  3042               	movlw	low _CCP4_DefaultCallBack
  9477  0983  0020               	movlb	0	; select bank0
  9478  0984  00A0               	movwf	CCP4_SetCallBack@customCallBack
  9479  0985  3008               	movlw	high _CCP4_DefaultCallBack
  9480  0986  00A1               	movwf	CCP4_SetCallBack@customCallBack+1
  9481  0987  3188  2077  3189   	fcall	_CCP4_SetCallBack
  9482  098A                     l3843:	
  9483                           
  9484                           ;mcc_generated_files/ccp4.c: 83:     PIR3bits.CCP4IF = 0;
  9485  098A  0020               	movlb	0	; select bank0
  9486  098B  1293               	bcf	19,5	;volatile
  9487  098C                     l3845:	
  9488                           
  9489                           ;mcc_generated_files/ccp4.c: 86:     PIE3bits.CCP4IE = 1;
  9490  098C  0021               	movlb	1	; select bank1
  9491  098D  1693               	bsf	19,5	;volatile
  9492  098E                     l343:	
  9493  098E  0008               	return
  9494  098F                     __end_of_CCP4_Initialize:	
  9495                           
  9496                           	psect	text39
  9497  0877                     __ptext39:	
  9498 ;; *************** function _CCP4_SetCallBack *****************
  9499 ;; Defined at:
  9500 ;;		line 104 in file "mcc_generated_files/ccp4.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  9503 ;;		 -> get_pulse(1), CCP4_DefaultCallBack(1), 
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		wreg
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9515 ;;      Params:         0       2       0       0       0       0
  9516 ;;      Locals:         0       0       0       0       0       0
  9517 ;;      Temps:          0       0       0       0       0       0
  9518 ;;      Totals:         0       2       0       0       0       0
  9519 ;;Total ram usage:        2 bytes
  9520 ;; Hardware stack levels used:    1
  9521 ;; Hardware stack levels required when called:    4
  9522 ;; This function calls:
  9523 ;;		Nothing
  9524 ;; This function is called by:
  9525 ;;		_CCP4_Initialize
  9526 ;;		_main
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           
  9531                           ;psect for function _CCP4_SetCallBack
  9532  0877                     _CCP4_SetCallBack:	
  9533  0877                     l3697:	
  9534                           ;incstack = 0
  9535                           ; Regs used in _CCP4_SetCallBack: [wreg]
  9536                           
  9537                           
  9538                           ;mcc_generated_files/ccp4.c: 105:     CCP4_CallBack = customCallBack;
  9539  0877  0020               	movlb	0	; select bank0
  9540  0878  0821               	movf	CCP4_SetCallBack@customCallBack+1,w
  9541  0879  0022               	movlb	2	; select bank2
  9542  087A  00A1               	movwf	(_CCP4_CallBack+1)^(0+256)
  9543  087B  0020               	movlb	0	; select bank0
  9544  087C  0820               	movf	CCP4_SetCallBack@customCallBack,w
  9545  087D  0022               	movlb	2	; select bank2
  9546  087E  00A0               	movwf	_CCP4_CallBack^(0+256)
  9547  087F                     l349:	
  9548  087F  0008               	return
  9549  0880                     __end_of_CCP4_SetCallBack:	
  9550                           
  9551                           	psect	text40
  9552  0867                     __ptext40:	
  9553 ;; *************** function _ADC_Initialize *****************
  9554 ;; Defined at:
  9555 ;;		line 67 in file "mcc_generated_files/adc.c"
  9556 ;; Parameters:    Size  Location     Type
  9557 ;;		None
  9558 ;; Auto vars:     Size  Location     Type
  9559 ;;		None
  9560 ;; Return value:  Size  Location     Type
  9561 ;;                  1    wreg      void 
  9562 ;; Registers used:
  9563 ;;		wreg, status,2
  9564 ;; Tracked objects:
  9565 ;;		On entry : 0/0
  9566 ;;		On exit  : 0/0
  9567 ;;		Unchanged: 0/0
  9568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9569 ;;      Params:         0       0       0       0       0       0
  9570 ;;      Locals:         0       0       0       0       0       0
  9571 ;;      Temps:          0       0       0       0       0       0
  9572 ;;      Totals:         0       0       0       0       0       0
  9573 ;;Total ram usage:        0 bytes
  9574 ;; Hardware stack levels used:    1
  9575 ;; Hardware stack levels required when called:    4
  9576 ;; This function calls:
  9577 ;;		Nothing
  9578 ;; This function is called by:
  9579 ;;		_SYSTEM_Initialize
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           
  9584                           ;psect for function _ADC_Initialize
  9585  0867                     _ADC_Initialize:	
  9586  0867                     l3847:	
  9587                           ;incstack = 0
  9588                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9589                           
  9590                           
  9591                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  9592  0867  30D3               	movlw	211
  9593  0868  0021               	movlb	1	; select bank1
  9594  0869  009E               	movwf	30	;volatile
  9595  086A                     l3849:	
  9596                           
  9597                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  9598  086A  019B               	clrf	27	;volatile
  9599  086B                     l3851:	
  9600                           
  9601                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  9602  086B  019C               	clrf	28	;volatile
  9603                           
  9604                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  9605  086C  3001               	movlw	1
  9606  086D  009D               	movwf	29	;volatile
  9607  086E                     l267:	
  9608  086E  0008               	return
  9609  086F                     __end_of_ADC_Initialize:	
  9610                           
  9611                           	psect	intentry
  9612  0004                     __pintentry:	
  9613 ;; *************** function _INTERRUPT_InterruptManager *****************
  9614 ;; Defined at:
  9615 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;		None
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;		None
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  1    wreg      void 
  9622 ;; Registers used:
  9623 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9629 ;;      Params:         0       0       0       0       0       0
  9630 ;;      Locals:         0       0       0       0       0       0
  9631 ;;      Temps:          0       0       0       0       0       0
  9632 ;;      Totals:         0       0       0       0       0       0
  9633 ;;Total ram usage:        0 bytes
  9634 ;; Hardware stack levels used:    1
  9635 ;; Hardware stack levels required when called:    3
  9636 ;; This function calls:
  9637 ;;		_CCP4_CaptureISR
  9638 ;;		_PIN_MANAGER_IOC
  9639 ;;		_TMR4_ISR
  9640 ;; This function is called by:
  9641 ;;		Interrupt level 1
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645  0004                     _INTERRUPT_InterruptManager:	
  9646                           
  9647                           ;incstack = 0
  9648  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  9649                           
  9650                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  9651  0005  3180               	pagesel	$
  9652  0006                     i1l3503:	
  9653                           
  9654                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  9655  0006  1D8B               	btfss	11,3	;volatile
  9656  0007  2809               	goto	u355_21
  9657  0008  280A               	goto	u355_20
  9658  0009                     u355_21:	
  9659  0009  2812               	goto	i1l305
  9660  000A                     u355_20:	
  9661  000A                     i1l3505:	
  9662  000A  1C0B               	btfss	11,0	;volatile
  9663  000B  280D               	goto	u356_21
  9664  000C  280E               	goto	u356_20
  9665  000D                     u356_21:	
  9666  000D  2812               	goto	i1l305
  9667  000E                     u356_20:	
  9668  000E                     i1l3507:	
  9669                           
  9670                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  9671  000E  318A  2211  3180   	fcall	_PIN_MANAGER_IOC
  9672                           
  9673                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  9674  0011  2832               	goto	i1l313
  9675  0012                     i1l305:	
  9676                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  9677                           
  9678  0012  1F0B               	btfss	11,6	;volatile
  9679  0013  2815               	goto	u357_21
  9680  0014  2816               	goto	u357_20
  9681  0015                     u357_21:	
  9682  0015  2832               	goto	i1l313
  9683  0016                     u357_20:	
  9684  0016                     i1l3509:	
  9685                           
  9686                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.CCP4IE == 1 && PIR3bits.CCP4IF == 1)
  9687  0016  0021               	movlb	1	; select bank1
  9688  0017  1E93               	btfss	19,5	;volatile
  9689  0018  281A               	goto	u358_21
  9690  0019  281B               	goto	u358_20
  9691  001A                     u358_21:	
  9692  001A  2824               	goto	i1l308
  9693  001B                     u358_20:	
  9694  001B                     i1l3511:	
  9695  001B  0020               	movlb	0	; select bank0
  9696  001C  1E93               	btfss	19,5	;volatile
  9697  001D  281F               	goto	u359_21
  9698  001E  2820               	goto	u359_20
  9699  001F                     u359_21:	
  9700  001F  2824               	goto	i1l308
  9701  0020                     u359_20:	
  9702  0020                     i1l3513:	
  9703                           
  9704                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             CCP4_CaptureISR();
  9705  0020  3189  21A3  3180   	fcall	_CCP4_CaptureISR
  9706                           
  9707                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  9708  0023  2832               	goto	i1l313
  9709  0024                     i1l308:	
  9710                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.TMR4IE == 1 && PI
      +                          R3bits.TMR4IF == 1)
  9711                           
  9712  0024  0021               	movlb	1	; select bank1
  9713  0025  1C93               	btfss	19,1	;volatile
  9714  0026  2828               	goto	u360_21
  9715  0027  2829               	goto	u360_20
  9716  0028                     u360_21:	
  9717  0028  2832               	goto	i1l312
  9718  0029                     u360_20:	
  9719  0029                     i1l3515:	
  9720  0029  0020               	movlb	0	; select bank0
  9721  002A  1C93               	btfss	19,1	;volatile
  9722  002B  282D               	goto	u361_21
  9723  002C  282E               	goto	u361_20
  9724  002D                     u361_21:	
  9725  002D  2832               	goto	i1l312
  9726  002E                     u361_20:	
  9727  002E                     i1l3517:	
  9728                           
  9729                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR4_ISR();
  9730  002E  3189  213E  3180   	fcall	_TMR4_ISR
  9731                           
  9732                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  9733  0031  2832               	goto	i1l313
  9734  0032                     i1l312:	
  9735                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  9736                           
  9737  0032                     i1l313:	
  9738  0032  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9739  0033  0009               	retfie
  9740  0034                     __end_of_INTERRUPT_InterruptManager:	
  9741                           
  9742                           	psect	text42
  9743  093E                     __ptext42:	
  9744 ;; *************** function _TMR4_ISR *****************
  9745 ;; Defined at:
  9746 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  9747 ;; Parameters:    Size  Location     Type
  9748 ;;		None
  9749 ;; Auto vars:     Size  Location     Type
  9750 ;;		None
  9751 ;; Return value:  Size  Location     Type
  9752 ;;                  1    wreg      void 
  9753 ;; Registers used:
  9754 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9755 ;; Tracked objects:
  9756 ;;		On entry : 0/0
  9757 ;;		On exit  : 0/0
  9758 ;;		Unchanged: 0/0
  9759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9760 ;;      Params:         0       0       0       0       0       0
  9761 ;;      Locals:         0       0       0       0       0       0
  9762 ;;      Temps:          0       0       0       0       0       0
  9763 ;;      Totals:         0       0       0       0       0       0
  9764 ;;Total ram usage:        0 bytes
  9765 ;; Hardware stack levels used:    1
  9766 ;; Hardware stack levels required when called:    2
  9767 ;; This function calls:
  9768 ;;		Absolute function
  9769 ;;		_TMR4_DefaultInterruptHandler
  9770 ;;		_send_data
  9771 ;; This function is called by:
  9772 ;;		_INTERRUPT_InterruptManager
  9773 ;; This function uses a non-reentrant model
  9774 ;;
  9775                           
  9776                           
  9777                           ;psect for function _TMR4_ISR
  9778  093E                     _TMR4_ISR:	
  9779  093E                     i1l3421:	
  9780                           ;incstack = 0
  9781                           ; Regs used in _TMR4_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9782                           
  9783                           
  9784                           ;mcc_generated_files/tmr4.c: 123:     PIR3bits.TMR4IF = 0;
  9785  093E  0020               	movlb	0	; select bank0
  9786  093F  1093               	bcf	19,1	;volatile
  9787  0940                     i1l3423:	
  9788                           
  9789                           ;mcc_generated_files/tmr4.c: 125:     if(TMR4_InterruptHandler)
  9790  0940  0021               	movlb	1	; select bank1
  9791  0941  086B               	movf	_TMR4_InterruptHandler^(0+128),w
  9792  0942  046C               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
  9793  0943  1903               	btfsc	3,2
  9794  0944  2946               	goto	u339_21
  9795  0945  2947               	goto	u339_20
  9796  0946                     u339_21:	
  9797  0946  294C               	goto	i1l244
  9798  0947                     u339_20:	
  9799  0947                     i1l3425:	
  9800                           
  9801                           ;mcc_generated_files/tmr4.c: 126:     {;mcc_generated_files/tmr4.c: 127:         TMR4_In
      +                          terruptHandler();
  9802  0947  086C               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
  9803  0948  008A               	movwf	10
  9804  0949  086B               	movf	_TMR4_InterruptHandler^(0+128),w
  9805  094A  000A               	callw
  9806  094B  3189               	pagesel	$
  9807  094C                     i1l244:	
  9808  094C  0008               	return
  9809  094D                     __end_of_TMR4_ISR:	
  9810                           
  9811                           	psect	text43
  9812  0003                     __ptext43:	
  9813 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  9814 ;; Defined at:
  9815 ;;		line 136 in file "mcc_generated_files/tmr4.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;		None
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;		None
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  1    wreg      void 
  9822 ;; Registers used:
  9823 ;;		None
  9824 ;; Tracked objects:
  9825 ;;		On entry : 0/0
  9826 ;;		On exit  : 0/0
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9829 ;;      Params:         0       0       0       0       0       0
  9830 ;;      Locals:         0       0       0       0       0       0
  9831 ;;      Temps:          0       0       0       0       0       0
  9832 ;;      Totals:         0       0       0       0       0       0
  9833 ;;Total ram usage:        0 bytes
  9834 ;; Hardware stack levels used:    1
  9835 ;; This function calls:
  9836 ;;		Nothing
  9837 ;; This function is called by:
  9838 ;;		_TMR4_Initialize
  9839 ;;		_TMR4_ISR
  9840 ;; This function uses a non-reentrant model
  9841 ;;
  9842                           
  9843                           
  9844                           ;psect for function _TMR4_DefaultInterruptHandler
  9845  0003                     _TMR4_DefaultInterruptHandler:	
  9846  0003                     i1l250:	
  9847                           ;incstack = 0
  9848                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  9849                           
  9850  0003  0008               	return
  9851  0004                     __end_of_TMR4_DefaultInterruptHandler:	
  9852                           
  9853                           	psect	text44
  9854  0AE2                     __ptext44:	
  9855 ;; *************** function _send_data *****************
  9856 ;; Defined at:
  9857 ;;		line 70 in file "main.c"
  9858 ;; Parameters:    Size  Location     Type
  9859 ;;		None
  9860 ;; Auto vars:     Size  Location     Type
  9861 ;;  i               2    2[COMMON] int 
  9862 ;; Return value:  Size  Location     Type
  9863 ;;                  1    wreg      void 
  9864 ;; Registers used:
  9865 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9866 ;; Tracked objects:
  9867 ;;		On entry : 0/0
  9868 ;;		On exit  : 0/0
  9869 ;;		Unchanged: 0/0
  9870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9871 ;;      Params:         0       0       0       0       0       0
  9872 ;;      Locals:         2       0       0       0       0       0
  9873 ;;      Temps:          1       0       0       0       0       0
  9874 ;;      Totals:         3       0       0       0       0       0
  9875 ;;Total ram usage:        3 bytes
  9876 ;; Hardware stack levels used:    1
  9877 ;; Hardware stack levels required when called:    1
  9878 ;; This function calls:
  9879 ;;		_EUSART_Write
  9880 ;;		_EUSART_is_tx_ready
  9881 ;; This function is called by:
  9882 ;;		_main
  9883 ;;		_TMR4_ISR
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887                           
  9888                           ;psect for function _send_data
  9889  0AE2                     _send_data:	
  9890  0AE2                     i1l3161:	
  9891                           ;incstack = 0
  9892                           ; Regs used in _send_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9893                           
  9894                           
  9895                           ;main.c: 72:         aux_tempo++;
  9896  0AE2  3001               	movlw	1
  9897  0AE3  0021               	movlb	1	; select bank1
  9898  0AE4  07D6               	addwf	_aux_tempo^(0+128),f
  9899  0AE5  3000               	movlw	0
  9900  0AE6  3DD7               	addwfc	(_aux_tempo+1)^(0+128),f
  9901  0AE7                     i1l3163:	
  9902                           
  9903                           ;main.c: 73:         if(aux_tempo == 14)
  9904  0AE7  300E               	movlw	14
  9905  0AE8  0656               	xorwf	_aux_tempo^(0+128),w
  9906  0AE9  0457               	iorwf	(_aux_tempo+1)^(0+128),w
  9907  0AEA  1D03               	btfss	3,2
  9908  0AEB  2AED               	goto	u284_21
  9909  0AEC  2AEE               	goto	u284_20
  9910  0AED                     u284_21:	
  9911  0AED  2B16               	goto	i1l581
  9912  0AEE                     u284_20:	
  9913  0AEE                     i1l3165:	
  9914                           
  9915                           ;main.c: 74:         {;main.c: 75:             int i=0;
  9916  0AEE  01F9               	clrf	send_data@i
  9917  0AEF  01FA               	clrf	send_data@i+1
  9918                           
  9919                           ;main.c: 76:             while(i<5)
  9920  0AF0  2B06               	goto	i1l3173
  9921  0AF1                     i1l3167:	
  9922                           
  9923                           ;main.c: 77:             {;main.c: 78:                 if(EUSART_is_tx_ready())
  9924  0AF1  3189  212F  318A   	fcall	_EUSART_is_tx_ready
  9925  0AF4  3A00               	xorlw	0
  9926  0AF5  1903               	skipnz
  9927  0AF6  2AF8               	goto	u285_21
  9928  0AF7  2AF9               	goto	u285_20
  9929  0AF8                     u285_21:	
  9930  0AF8  2B06               	goto	i1l3173
  9931  0AF9                     u285_20:	
  9932  0AF9                     i1l3169:	
  9933                           
  9934                           ;main.c: 79:                     {;main.c: 80:                         EUSART_Write(byte
      +                          [i]);
  9935  0AF9  0879               	movf	send_data@i,w
  9936  0AFA  3E30               	addlw	(low (_byte| (0+256)))& (0+255)
  9937  0AFB  0086               	movwf	6
  9938  0AFC  3001               	movlw	1	; select bank2/3
  9939  0AFD  0087               	movwf	7
  9940  0AFE  0801               	movf	1,w
  9941  0AFF  3188  20C8  318A   	fcall	_EUSART_Write
  9942  0B02                     i1l3171:	
  9943                           
  9944                           ;main.c: 81:                         i++;
  9945  0B02  3001               	movlw	1
  9946  0B03  07F9               	addwf	send_data@i,f
  9947  0B04  3000               	movlw	0
  9948  0B05  3DFA               	addwfc	send_data@i+1,f
  9949  0B06                     i1l3173:	
  9950                           
  9951                           ;main.c: 76:             while(i<5)
  9952  0B06  087A               	movf	send_data@i+1,w
  9953  0B07  3A80               	xorlw	128
  9954  0B08  00F8               	movwf	??_send_data
  9955  0B09  3080               	movlw	128
  9956  0B0A  0278               	subwf	??_send_data,w
  9957  0B0B  1D03               	skipz
  9958  0B0C  2B0F               	goto	u286_25
  9959  0B0D  3005               	movlw	5
  9960  0B0E  0279               	subwf	send_data@i,w
  9961  0B0F                     u286_25:	
  9962  0B0F  1C03               	skipc
  9963  0B10  2B12               	goto	u286_21
  9964  0B11  2B13               	goto	u286_20
  9965  0B12                     u286_21:	
  9966  0B12  2AF1               	goto	i1l3167
  9967  0B13                     u286_20:	
  9968  0B13                     i1l3175:	
  9969                           
  9970                           ;main.c: 85:             aux_tempo =0;
  9971  0B13  0021               	movlb	1	; select bank1
  9972  0B14  01D6               	clrf	_aux_tempo^(0+128)
  9973  0B15  01D7               	clrf	(_aux_tempo+1)^(0+128)
  9974  0B16                     i1l581:	
  9975  0B16  0008               	return
  9976  0B17                     __end_of_send_data:	
  9977                           
  9978                           	psect	text45
  9979  092F                     __ptext45:	
  9980 ;; *************** function _EUSART_is_tx_ready *****************
  9981 ;; Defined at:
  9982 ;;		line 94 in file "mcc_generated_files/eusart.c"
  9983 ;; Parameters:    Size  Location     Type
  9984 ;;		None
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;		None
  9987 ;; Return value:  Size  Location     Type
  9988 ;;                  1    wreg      _Bool 
  9989 ;; Registers used:
  9990 ;;		wreg, status,2
  9991 ;; Tracked objects:
  9992 ;;		On entry : 0/0
  9993 ;;		On exit  : 0/0
  9994 ;;		Unchanged: 0/0
  9995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9996 ;;      Params:         0       0       0       0       0       0
  9997 ;;      Locals:         1       0       0       0       0       0
  9998 ;;      Temps:          0       0       0       0       0       0
  9999 ;;      Totals:         1       0       0       0       0       0
 10000 ;;Total ram usage:        1 bytes
 10001 ;; Hardware stack levels used:    1
 10002 ;; This function calls:
 10003 ;;		Nothing
 10004 ;; This function is called by:
 10005 ;;		_send_data
 10006 ;; This function uses a non-reentrant model
 10007 ;;
 10008                           
 10009                           
 10010                           ;psect for function _EUSART_is_tx_ready
 10011  092F                     _EUSART_is_tx_ready:	
 10012  092F                     i1l2931:	
 10013                           ;incstack = 0
 10014                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
 10015                           
 10016                           
 10017                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
 10018  092F  01F7               	clrf	_EUSART_is_tx_ready$167
 10019  0930                     i1l2933:	
 10020  0930  0020               	movlb	0	; select bank0
 10021  0931  1E11               	btfss	17,4	;volatile
 10022  0932  2934               	goto	u270_21
 10023  0933  2935               	goto	u270_20
 10024  0934                     u270_21:	
 10025  0934  293C               	goto	i1l2939
 10026  0935                     u270_20:	
 10027  0935                     i1l2935:	
 10028  0935  0023               	movlb	3	; select bank3
 10029  0936  1E9E               	btfss	30,5	;volatile
 10030  0937  2939               	goto	u271_21
 10031  0938  293A               	goto	u271_20
 10032  0939                     u271_21:	
 10033  0939  293C               	goto	i1l2939
 10034  093A                     u271_20:	
 10035  093A                     i1l2937:	
 10036  093A  01F7               	clrf	_EUSART_is_tx_ready$167
 10037  093B  0AF7               	incf	_EUSART_is_tx_ready$167,f
 10038  093C                     i1l2939:	
 10039  093C  0877               	movf	_EUSART_is_tx_ready$167,w
 10040  093D                     i1l48:	
 10041  093D  0008               	return
 10042  093E                     __end_of_EUSART_is_tx_ready:	
 10043                           
 10044                           	psect	text46
 10045  08C8                     __ptext46:	
 10046 ;; *************** function _EUSART_Write *****************
 10047 ;; Defined at:
 10048 ;;		line 132 in file "mcc_generated_files/eusart.c"
 10049 ;; Parameters:    Size  Location     Type
 10050 ;;  txData          1    wreg     unsigned char 
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;  txData          1    0[COMMON] unsigned char 
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  1    wreg      void 
 10055 ;; Registers used:
 10056 ;;		wreg
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 0/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10062 ;;      Params:         0       0       0       0       0       0
 10063 ;;      Locals:         1       0       0       0       0       0
 10064 ;;      Temps:          0       0       0       0       0       0
 10065 ;;      Totals:         1       0       0       0       0       0
 10066 ;;Total ram usage:        1 bytes
 10067 ;; Hardware stack levels used:    1
 10068 ;; This function calls:
 10069 ;;		Nothing
 10070 ;; This function is called by:
 10071 ;;		_send_data
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075                           
 10076                           ;psect for function _EUSART_Write
 10077  08C8                     _EUSART_Write:	
 10078                           
 10079                           ;incstack = 0
 10080                           ; Regs used in _EUSART_Write: [wreg]
 10081                           ;EUSART_Write@txData stored from wreg
 10082  08C8  00F7               	movwf	EUSART_Write@txData
 10083  08C9                     i1l2943:	
 10084  08C9                     i1l67:	
 10085                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
 10086                           
 10087                           
 10088                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
 10089  08C9  0020               	movlb	0	; select bank0
 10090  08CA  1E11               	btfss	17,4	;volatile
 10091  08CB  28CD               	goto	u272_21
 10092  08CC  28CE               	goto	u272_20
 10093  08CD                     u272_21:	
 10094  08CD  28C9               	goto	i1l67
 10095  08CE                     u272_20:	
 10096  08CE                     i1l2945:	
 10097                           
 10098                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
 10099  08CE  0877               	movf	EUSART_Write@txData,w
 10100  08CF  0023               	movlb	3	; select bank3
 10101  08D0  009A               	movwf	26	;volatile
 10102  08D1                     i1l70:	
 10103  08D1  0008               	return
 10104  08D2                     __end_of_EUSART_Write:	
 10105                           
 10106                           	psect	text47
 10107  0A11                     __ptext47:	
 10108 ;; *************** function _PIN_MANAGER_IOC *****************
 10109 ;; Defined at:
 10110 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;		None
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;		None
 10115 ;; Return value:  Size  Location     Type
 10116 ;;                  1    wreg      void 
 10117 ;; Registers used:
 10118 ;;		wreg, status,2, status,0, pclath, cstack
 10119 ;; Tracked objects:
 10120 ;;		On entry : 0/0
 10121 ;;		On exit  : 0/0
 10122 ;;		Unchanged: 0/0
 10123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10124 ;;      Params:         0       0       0       0       0       0
 10125 ;;      Locals:         0       0       0       0       0       0
 10126 ;;      Temps:          0       0       0       0       0       0
 10127 ;;      Totals:         0       0       0       0       0       0
 10128 ;;Total ram usage:        0 bytes
 10129 ;; Hardware stack levels used:    1
 10130 ;; Hardware stack levels required when called:    2
 10131 ;; This function calls:
 10132 ;;		_IOCBF0_ISR
 10133 ;;		_IOCBF3_ISR
 10134 ;;		_IOCBF4_ISR
 10135 ;;		_IOCBF5_ISR
 10136 ;; This function is called by:
 10137 ;;		_INTERRUPT_InterruptManager
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           
 10142                           ;psect for function _PIN_MANAGER_IOC
 10143  0A11                     _PIN_MANAGER_IOC:	
 10144  0A11                     i1l3427:	
 10145                           ;incstack = 0
 10146                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 10147                           
 10148                           
 10149                           ;mcc_generated_files/pin_manager.c: 138:     if(IOCBFbits.IOCBF0 == 1)
 10150  0A11  0027               	movlb	7	; select bank7
 10151  0A12  1C16               	btfss	22,0	;volatile
 10152  0A13  2A15               	goto	u340_21
 10153  0A14  2A16               	goto	u340_20
 10154  0A15                     u340_21:	
 10155  0A15  2A19               	goto	i1l3431
 10156  0A16                     u340_20:	
 10157  0A16                     i1l3429:	
 10158                           
 10159                           ;mcc_generated_files/pin_manager.c: 139:     {;mcc_generated_files/pin_manager.c: 140:  
      +                                 IOCBF0_ISR();
 10160  0A16  3188  20F3  318A   	fcall	_IOCBF0_ISR
 10161  0A19                     i1l3431:	
 10162                           
 10163                           ;mcc_generated_files/pin_manager.c: 143:     if(IOCBFbits.IOCBF3 == 1)
 10164  0A19  0027               	movlb	7	; select bank7
 10165  0A1A  1D96               	btfss	22,3	;volatile
 10166  0A1B  2A1D               	goto	u341_21
 10167  0A1C  2A1E               	goto	u341_20
 10168  0A1D                     u341_21:	
 10169  0A1D  2A21               	goto	i1l3435
 10170  0A1E                     u341_20:	
 10171  0A1E                     i1l3433:	
 10172                           
 10173                           ;mcc_generated_files/pin_manager.c: 144:     {;mcc_generated_files/pin_manager.c: 145:  
      +                                 IOCBF3_ISR();
 10174  0A1E  3189  2102  318A   	fcall	_IOCBF3_ISR
 10175  0A21                     i1l3435:	
 10176                           
 10177                           ;mcc_generated_files/pin_manager.c: 148:     if(IOCBFbits.IOCBF4 == 1)
 10178  0A21  0027               	movlb	7	; select bank7
 10179  0A22  1E16               	btfss	22,4	;volatile
 10180  0A23  2A25               	goto	u342_21
 10181  0A24  2A26               	goto	u342_20
 10182  0A25                     u342_21:	
 10183  0A25  2A29               	goto	i1l3439
 10184  0A26                     u342_20:	
 10185  0A26                     i1l3437:	
 10186                           
 10187                           ;mcc_generated_files/pin_manager.c: 149:     {;mcc_generated_files/pin_manager.c: 150:  
      +                                 IOCBF4_ISR();
 10188  0A26  3189  2111  318A   	fcall	_IOCBF4_ISR
 10189  0A29                     i1l3439:	
 10190                           
 10191                           ;mcc_generated_files/pin_manager.c: 153:     if(IOCBFbits.IOCBF5 == 1)
 10192  0A29  0027               	movlb	7	; select bank7
 10193  0A2A  1E96               	btfss	22,5	;volatile
 10194  0A2B  2A2D               	goto	u343_21
 10195  0A2C  2A2E               	goto	u343_20
 10196  0A2D                     u343_21:	
 10197  0A2D  2A31               	goto	i1l421
 10198  0A2E                     u343_20:	
 10199  0A2E                     i1l3441:	
 10200                           
 10201                           ;mcc_generated_files/pin_manager.c: 154:     {;mcc_generated_files/pin_manager.c: 155:  
      +                                 IOCBF5_ISR();
 10202  0A2E  3189  2120  318A   	fcall	_IOCBF5_ISR
 10203  0A31                     i1l421:	
 10204  0A31  0008               	return
 10205  0A32                     __end_of_PIN_MANAGER_IOC:	
 10206                           
 10207                           	psect	text48
 10208  0920                     __ptext48:	
 10209 ;; *************** function _IOCBF5_ISR *****************
 10210 ;; Defined at:
 10211 ;;		line 252 in file "mcc_generated_files/pin_manager.c"
 10212 ;; Parameters:    Size  Location     Type
 10213 ;;		None
 10214 ;; Auto vars:     Size  Location     Type
 10215 ;;		None
 10216 ;; Return value:  Size  Location     Type
 10217 ;;                  1    wreg      void 
 10218 ;; Registers used:
 10219 ;;		wreg, status,2, status,0, pclath, cstack
 10220 ;; Tracked objects:
 10221 ;;		On entry : 0/0
 10222 ;;		On exit  : 0/0
 10223 ;;		Unchanged: 0/0
 10224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10225 ;;      Params:         0       0       0       0       0       0
 10226 ;;      Locals:         0       0       0       0       0       0
 10227 ;;      Temps:          0       0       0       0       0       0
 10228 ;;      Totals:         0       0       0       0       0       0
 10229 ;;Total ram usage:        0 bytes
 10230 ;; Hardware stack levels used:    1
 10231 ;; Hardware stack levels required when called:    1
 10232 ;; This function calls:
 10233 ;;		Absolute function
 10234 ;;		_IOCBF5_DefaultInterruptHandler
 10235 ;;		_sensor4
 10236 ;; This function is called by:
 10237 ;;		_PIN_MANAGER_IOC
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241                           
 10242                           ;psect for function _IOCBF5_ISR
 10243  0920                     _IOCBF5_ISR:	
 10244  0920                     i1l3155:	
 10245                           ;incstack = 0
 10246                           ; Regs used in _IOCBF5_ISR: [wreg+status,2+status,0+pclath+cstack]
 10247                           
 10248                           
 10249                           ;mcc_generated_files/pin_manager.c: 257:     if(IOCBF5_InterruptHandler)
 10250  0920  0021               	movlb	1	; select bank1
 10251  0921  0863               	movf	_IOCBF5_InterruptHandler^(0+128),w
 10252  0922  0464               	iorwf	(_IOCBF5_InterruptHandler+1)^(0+128),w
 10253  0923  1903               	btfsc	3,2
 10254  0924  2926               	goto	u283_21
 10255  0925  2927               	goto	u283_20
 10256  0926                     u283_21:	
 10257  0926  292C               	goto	i1l3159
 10258  0927                     u283_20:	
 10259  0927                     i1l3157:	
 10260                           
 10261                           ;mcc_generated_files/pin_manager.c: 258:     {;mcc_generated_files/pin_manager.c: 259:  
      +                                 IOCBF5_InterruptHandler();
 10262  0927  0864               	movf	(_IOCBF5_InterruptHandler+1)^(0+128),w
 10263  0928  008A               	movwf	10
 10264  0929  0863               	movf	_IOCBF5_InterruptHandler^(0+128),w
 10265  092A  000A               	callw
 10266  092B  3189               	pagesel	$
 10267  092C                     i1l3159:	
 10268                           
 10269                           ;mcc_generated_files/pin_manager.c: 261:     IOCBFbits.IOCBF5 = 0;
 10270  092C  0027               	movlb	7	; select bank7
 10271  092D  1296               	bcf	22,5	;volatile
 10272  092E                     i1l455:	
 10273  092E  0008               	return
 10274  092F                     __end_of_IOCBF5_ISR:	
 10275                           
 10276                           	psect	text49
 10277  0002                     __ptext49:	
 10278 ;; *************** function _IOCBF5_DefaultInterruptHandler *****************
 10279 ;; Defined at:
 10280 ;;		line 274 in file "mcc_generated_files/pin_manager.c"
 10281 ;; Parameters:    Size  Location     Type
 10282 ;;		None
 10283 ;; Auto vars:     Size  Location     Type
 10284 ;;		None
 10285 ;; Return value:  Size  Location     Type
 10286 ;;                  1    wreg      void 
 10287 ;; Registers used:
 10288 ;;		None
 10289 ;; Tracked objects:
 10290 ;;		On entry : 0/0
 10291 ;;		On exit  : 0/0
 10292 ;;		Unchanged: 0/0
 10293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10294 ;;      Params:         0       0       0       0       0       0
 10295 ;;      Locals:         0       0       0       0       0       0
 10296 ;;      Temps:          0       0       0       0       0       0
 10297 ;;      Totals:         0       0       0       0       0       0
 10298 ;;Total ram usage:        0 bytes
 10299 ;; Hardware stack levels used:    1
 10300 ;; This function calls:
 10301 ;;		Nothing
 10302 ;; This function is called by:
 10303 ;;		_PIN_MANAGER_Initialize
 10304 ;;		_IOCBF5_ISR
 10305 ;; This function uses a non-reentrant model
 10306 ;;
 10307                           
 10308                           
 10309                           ;psect for function _IOCBF5_DefaultInterruptHandler
 10310  0002                     _IOCBF5_DefaultInterruptHandler:	
 10311  0002                     i1l461:	
 10312                           ;incstack = 0
 10313                           ; Regs used in _IOCBF5_DefaultInterruptHandler: []
 10314                           
 10315  0002  0008               	return
 10316  0003                     __end_of_IOCBF5_DefaultInterruptHandler:	
 10317                           
 10318                           	psect	text50
 10319  08E8                     __ptext50:	
 10320 ;; *************** function _sensor4 *****************
 10321 ;; Defined at:
 10322 ;;		line 107 in file "main.c"
 10323 ;; Parameters:    Size  Location     Type
 10324 ;;		None
 10325 ;; Auto vars:     Size  Location     Type
 10326 ;;		None
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  1    wreg      void 
 10329 ;; Registers used:
 10330 ;;		wreg
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10336 ;;      Params:         0       0       0       0       0       0
 10337 ;;      Locals:         0       0       0       0       0       0
 10338 ;;      Temps:          1       0       0       0       0       0
 10339 ;;      Totals:         1       0       0       0       0       0
 10340 ;;Total ram usage:        1 bytes
 10341 ;; Hardware stack levels used:    1
 10342 ;; This function calls:
 10343 ;;		Nothing
 10344 ;; This function is called by:
 10345 ;;		_main
 10346 ;;		_IOCBF5_ISR
 10347 ;; This function uses a non-reentrant model
 10348 ;;
 10349                           
 10350                           
 10351                           ;psect for function _sensor4
 10352  08E8                     _sensor4:	
 10353  08E8                     i1l2981:	
 10354                           ;incstack = 0
 10355                           ; Regs used in _sensor4: [wreg]
 10356                           
 10357                           
 10358                           ;main.c: 109:         and_ating=4;
 10359  08E8  3004               	movlw	4
 10360  08E9  00F7               	movwf	??_sensor4
 10361  08EA  0877               	movf	??_sensor4,w
 10362  08EB  0020               	movlb	0	; select bank0
 10363  08EC  00EF               	movwf	_and_ating
 10364                           
 10365                           ;main.c: 110:         and_ating2=3;
 10366  08ED  3003               	movlw	3
 10367  08EE  0021               	movlb	1	; select bank1
 10368  08EF  00C8               	movwf	_and_ating2^(0+128)
 10369  08F0  3000               	movlw	0
 10370  08F1  00C9               	movwf	(_and_ating2^(0+128)+1)
 10371  08F2                     i1l593:	
 10372  08F2  0008               	return
 10373  08F3                     __end_of_sensor4:	
 10374                           
 10375                           	psect	text51
 10376  0911                     __ptext51:	
 10377 ;; *************** function _IOCBF4_ISR *****************
 10378 ;; Defined at:
 10379 ;;		line 222 in file "mcc_generated_files/pin_manager.c"
 10380 ;; Parameters:    Size  Location     Type
 10381 ;;		None
 10382 ;; Auto vars:     Size  Location     Type
 10383 ;;		None
 10384 ;; Return value:  Size  Location     Type
 10385 ;;                  1    wreg      void 
 10386 ;; Registers used:
 10387 ;;		wreg, status,2, status,0, pclath, cstack
 10388 ;; Tracked objects:
 10389 ;;		On entry : 0/0
 10390 ;;		On exit  : 0/0
 10391 ;;		Unchanged: 0/0
 10392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10393 ;;      Params:         0       0       0       0       0       0
 10394 ;;      Locals:         0       0       0       0       0       0
 10395 ;;      Temps:          0       0       0       0       0       0
 10396 ;;      Totals:         0       0       0       0       0       0
 10397 ;;Total ram usage:        0 bytes
 10398 ;; Hardware stack levels used:    1
 10399 ;; Hardware stack levels required when called:    1
 10400 ;; This function calls:
 10401 ;;		Absolute function
 10402 ;;		_IOCBF4_DefaultInterruptHandler
 10403 ;;		_sensor3
 10404 ;; This function is called by:
 10405 ;;		_PIN_MANAGER_IOC
 10406 ;; This function uses a non-reentrant model
 10407 ;;
 10408                           
 10409                           
 10410                           ;psect for function _IOCBF4_ISR
 10411  0911                     _IOCBF4_ISR:	
 10412  0911                     i1l3149:	
 10413                           ;incstack = 0
 10414                           ; Regs used in _IOCBF4_ISR: [wreg+status,2+status,0+pclath+cstack]
 10415                           
 10416                           
 10417                           ;mcc_generated_files/pin_manager.c: 227:     if(IOCBF4_InterruptHandler)
 10418  0911  0021               	movlb	1	; select bank1
 10419  0912  0865               	movf	_IOCBF4_InterruptHandler^(0+128),w
 10420  0913  0466               	iorwf	(_IOCBF4_InterruptHandler+1)^(0+128),w
 10421  0914  1903               	btfsc	3,2
 10422  0915  2917               	goto	u282_21
 10423  0916  2918               	goto	u282_20
 10424  0917                     u282_21:	
 10425  0917  291D               	goto	i1l3153
 10426  0918                     u282_20:	
 10427  0918                     i1l3151:	
 10428                           
 10429                           ;mcc_generated_files/pin_manager.c: 228:     {;mcc_generated_files/pin_manager.c: 229:  
      +                                 IOCBF4_InterruptHandler();
 10430  0918  0866               	movf	(_IOCBF4_InterruptHandler+1)^(0+128),w
 10431  0919  008A               	movwf	10
 10432  091A  0865               	movf	_IOCBF4_InterruptHandler^(0+128),w
 10433  091B  000A               	callw
 10434  091C  3189               	pagesel	$
 10435  091D                     i1l3153:	
 10436                           
 10437                           ;mcc_generated_files/pin_manager.c: 231:     IOCBFbits.IOCBF4 = 0;
 10438  091D  0027               	movlb	7	; select bank7
 10439  091E  1216               	bcf	22,4	;volatile
 10440  091F                     i1l445:	
 10441  091F  0008               	return
 10442  0920                     __end_of_IOCBF4_ISR:	
 10443                           
 10444                           	psect	text52
 10445  0845                     __ptext52:	
 10446 ;; *************** function _IOCBF4_DefaultInterruptHandler *****************
 10447 ;; Defined at:
 10448 ;;		line 244 in file "mcc_generated_files/pin_manager.c"
 10449 ;; Parameters:    Size  Location     Type
 10450 ;;		None
 10451 ;; Auto vars:     Size  Location     Type
 10452 ;;		None
 10453 ;; Return value:  Size  Location     Type
 10454 ;;                  1    wreg      void 
 10455 ;; Registers used:
 10456 ;;		None
 10457 ;; Tracked objects:
 10458 ;;		On entry : 0/0
 10459 ;;		On exit  : 0/0
 10460 ;;		Unchanged: 0/0
 10461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10462 ;;      Params:         0       0       0       0       0       0
 10463 ;;      Locals:         0       0       0       0       0       0
 10464 ;;      Temps:          0       0       0       0       0       0
 10465 ;;      Totals:         0       0       0       0       0       0
 10466 ;;Total ram usage:        0 bytes
 10467 ;; Hardware stack levels used:    1
 10468 ;; This function calls:
 10469 ;;		Nothing
 10470 ;; This function is called by:
 10471 ;;		_PIN_MANAGER_Initialize
 10472 ;;		_IOCBF4_ISR
 10473 ;; This function uses a non-reentrant model
 10474 ;;
 10475                           
 10476                           
 10477                           ;psect for function _IOCBF4_DefaultInterruptHandler
 10478  0845                     _IOCBF4_DefaultInterruptHandler:	
 10479  0845                     i1l451:	
 10480                           ;incstack = 0
 10481                           ; Regs used in _IOCBF4_DefaultInterruptHandler: []
 10482                           
 10483  0845  0008               	return
 10484  0846                     __end_of_IOCBF4_DefaultInterruptHandler:	
 10485                           
 10486                           	psect	text53
 10487  08DD                     __ptext53:	
 10488 ;; *************** function _sensor3 *****************
 10489 ;; Defined at:
 10490 ;;		line 101 in file "main.c"
 10491 ;; Parameters:    Size  Location     Type
 10492 ;;		None
 10493 ;; Auto vars:     Size  Location     Type
 10494 ;;		None
 10495 ;; Return value:  Size  Location     Type
 10496 ;;                  1    wreg      void 
 10497 ;; Registers used:
 10498 ;;		wreg
 10499 ;; Tracked objects:
 10500 ;;		On entry : 0/0
 10501 ;;		On exit  : 0/0
 10502 ;;		Unchanged: 0/0
 10503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10504 ;;      Params:         0       0       0       0       0       0
 10505 ;;      Locals:         0       0       0       0       0       0
 10506 ;;      Temps:          1       0       0       0       0       0
 10507 ;;      Totals:         1       0       0       0       0       0
 10508 ;;Total ram usage:        1 bytes
 10509 ;; Hardware stack levels used:    1
 10510 ;; This function calls:
 10511 ;;		Nothing
 10512 ;; This function is called by:
 10513 ;;		_main
 10514 ;;		_IOCBF4_ISR
 10515 ;; This function uses a non-reentrant model
 10516 ;;
 10517                           
 10518                           
 10519                           ;psect for function _sensor3
 10520  08DD                     _sensor3:	
 10521  08DD                     i1l2979:	
 10522                           ;incstack = 0
 10523                           ; Regs used in _sensor3: [wreg]
 10524                           
 10525                           
 10526                           ;main.c: 103:         and_ating=3;
 10527  08DD  3003               	movlw	3
 10528  08DE  00F7               	movwf	??_sensor3
 10529  08DF  0877               	movf	??_sensor3,w
 10530  08E0  0020               	movlb	0	; select bank0
 10531  08E1  00EF               	movwf	_and_ating
 10532                           
 10533                           ;main.c: 104:         and_ating2=2;
 10534  08E2  3002               	movlw	2
 10535  08E3  0021               	movlb	1	; select bank1
 10536  08E4  00C8               	movwf	_and_ating2^(0+128)
 10537  08E5  3000               	movlw	0
 10538  08E6  00C9               	movwf	(_and_ating2^(0+128)+1)
 10539  08E7                     i1l590:	
 10540  08E7  0008               	return
 10541  08E8                     __end_of_sensor3:	
 10542                           
 10543                           	psect	text54
 10544  0902                     __ptext54:	
 10545 ;; *************** function _IOCBF3_ISR *****************
 10546 ;; Defined at:
 10547 ;;		line 192 in file "mcc_generated_files/pin_manager.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;		None
 10550 ;; Auto vars:     Size  Location     Type
 10551 ;;		None
 10552 ;; Return value:  Size  Location     Type
 10553 ;;                  1    wreg      void 
 10554 ;; Registers used:
 10555 ;;		wreg, status,2, status,0, pclath, cstack
 10556 ;; Tracked objects:
 10557 ;;		On entry : 0/0
 10558 ;;		On exit  : 0/0
 10559 ;;		Unchanged: 0/0
 10560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10561 ;;      Params:         0       0       0       0       0       0
 10562 ;;      Locals:         0       0       0       0       0       0
 10563 ;;      Temps:          0       0       0       0       0       0
 10564 ;;      Totals:         0       0       0       0       0       0
 10565 ;;Total ram usage:        0 bytes
 10566 ;; Hardware stack levels used:    1
 10567 ;; Hardware stack levels required when called:    1
 10568 ;; This function calls:
 10569 ;;		Absolute function
 10570 ;;		_IOCBF3_DefaultInterruptHandler
 10571 ;;		_sensor2
 10572 ;; This function is called by:
 10573 ;;		_PIN_MANAGER_IOC
 10574 ;; This function uses a non-reentrant model
 10575 ;;
 10576                           
 10577                           
 10578                           ;psect for function _IOCBF3_ISR
 10579  0902                     _IOCBF3_ISR:	
 10580  0902                     i1l3143:	
 10581                           ;incstack = 0
 10582                           ; Regs used in _IOCBF3_ISR: [wreg+status,2+status,0+pclath+cstack]
 10583                           
 10584                           
 10585                           ;mcc_generated_files/pin_manager.c: 197:     if(IOCBF3_InterruptHandler)
 10586  0902  0021               	movlb	1	; select bank1
 10587  0903  0867               	movf	_IOCBF3_InterruptHandler^(0+128),w
 10588  0904  0468               	iorwf	(_IOCBF3_InterruptHandler+1)^(0+128),w
 10589  0905  1903               	btfsc	3,2
 10590  0906  2908               	goto	u281_21
 10591  0907  2909               	goto	u281_20
 10592  0908                     u281_21:	
 10593  0908  290E               	goto	i1l3147
 10594  0909                     u281_20:	
 10595  0909                     i1l3145:	
 10596                           
 10597                           ;mcc_generated_files/pin_manager.c: 198:     {;mcc_generated_files/pin_manager.c: 199:  
      +                                 IOCBF3_InterruptHandler();
 10598  0909  0868               	movf	(_IOCBF3_InterruptHandler+1)^(0+128),w
 10599  090A  008A               	movwf	10
 10600  090B  0867               	movf	_IOCBF3_InterruptHandler^(0+128),w
 10601  090C  000A               	callw
 10602  090D  3189               	pagesel	$
 10603  090E                     i1l3147:	
 10604                           
 10605                           ;mcc_generated_files/pin_manager.c: 201:     IOCBFbits.IOCBF3 = 0;
 10606  090E  0027               	movlb	7	; select bank7
 10607  090F  1196               	bcf	22,3	;volatile
 10608  0910                     i1l435:	
 10609  0910  0008               	return
 10610  0911                     __end_of_IOCBF3_ISR:	
 10611                           
 10612                           	psect	text55
 10613  0844                     __ptext55:	
 10614 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
 10615 ;; Defined at:
 10616 ;;		line 214 in file "mcc_generated_files/pin_manager.c"
 10617 ;; Parameters:    Size  Location     Type
 10618 ;;		None
 10619 ;; Auto vars:     Size  Location     Type
 10620 ;;		None
 10621 ;; Return value:  Size  Location     Type
 10622 ;;                  1    wreg      void 
 10623 ;; Registers used:
 10624 ;;		None
 10625 ;; Tracked objects:
 10626 ;;		On entry : 0/0
 10627 ;;		On exit  : 0/0
 10628 ;;		Unchanged: 0/0
 10629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10630 ;;      Params:         0       0       0       0       0       0
 10631 ;;      Locals:         0       0       0       0       0       0
 10632 ;;      Temps:          0       0       0       0       0       0
 10633 ;;      Totals:         0       0       0       0       0       0
 10634 ;;Total ram usage:        0 bytes
 10635 ;; Hardware stack levels used:    1
 10636 ;; This function calls:
 10637 ;;		Nothing
 10638 ;; This function is called by:
 10639 ;;		_PIN_MANAGER_Initialize
 10640 ;;		_IOCBF3_ISR
 10641 ;; This function uses a non-reentrant model
 10642 ;;
 10643                           
 10644                           
 10645                           ;psect for function _IOCBF3_DefaultInterruptHandler
 10646  0844                     _IOCBF3_DefaultInterruptHandler:	
 10647  0844                     i1l441:	
 10648                           ;incstack = 0
 10649                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
 10650                           
 10651  0844  0008               	return
 10652  0845                     __end_of_IOCBF3_DefaultInterruptHandler:	
 10653                           
 10654                           	psect	text56
 10655  08D2                     __ptext56:	
 10656 ;; *************** function _sensor2 *****************
 10657 ;; Defined at:
 10658 ;;		line 95 in file "main.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;		None
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;		None
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  1    wreg      void 
 10665 ;; Registers used:
 10666 ;;		wreg
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10672 ;;      Params:         0       0       0       0       0       0
 10673 ;;      Locals:         0       0       0       0       0       0
 10674 ;;      Temps:          1       0       0       0       0       0
 10675 ;;      Totals:         1       0       0       0       0       0
 10676 ;;Total ram usage:        1 bytes
 10677 ;; Hardware stack levels used:    1
 10678 ;; This function calls:
 10679 ;;		Nothing
 10680 ;; This function is called by:
 10681 ;;		_main
 10682 ;;		_IOCBF3_ISR
 10683 ;; This function uses a non-reentrant model
 10684 ;;
 10685                           
 10686                           
 10687                           ;psect for function _sensor2
 10688  08D2                     _sensor2:	
 10689  08D2                     i1l2977:	
 10690                           ;incstack = 0
 10691                           ; Regs used in _sensor2: [wreg]
 10692                           
 10693                           
 10694                           ;main.c: 97:         and_ating=2;
 10695  08D2  3002               	movlw	2
 10696  08D3  00F7               	movwf	??_sensor2
 10697  08D4  0877               	movf	??_sensor2,w
 10698  08D5  0020               	movlb	0	; select bank0
 10699  08D6  00EF               	movwf	_and_ating
 10700                           
 10701                           ;main.c: 98:         and_ating2=1;
 10702  08D7  3001               	movlw	1
 10703  08D8  0021               	movlb	1	; select bank1
 10704  08D9  00C8               	movwf	_and_ating2^(0+128)
 10705  08DA  3000               	movlw	0
 10706  08DB  00C9               	movwf	(_and_ating2^(0+128)+1)
 10707  08DC                     i1l587:	
 10708  08DC  0008               	return
 10709  08DD                     __end_of_sensor2:	
 10710                           
 10711                           	psect	text57
 10712  08F3                     __ptext57:	
 10713 ;; *************** function _IOCBF0_ISR *****************
 10714 ;; Defined at:
 10715 ;;		line 162 in file "mcc_generated_files/pin_manager.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;		None
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;		None
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  1    wreg      void 
 10722 ;; Registers used:
 10723 ;;		wreg, status,2, status,0, pclath, cstack
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10729 ;;      Params:         0       0       0       0       0       0
 10730 ;;      Locals:         0       0       0       0       0       0
 10731 ;;      Temps:          0       0       0       0       0       0
 10732 ;;      Totals:         0       0       0       0       0       0
 10733 ;;Total ram usage:        0 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; Hardware stack levels required when called:    1
 10736 ;; This function calls:
 10737 ;;		Absolute function
 10738 ;;		_IOCBF0_DefaultInterruptHandler
 10739 ;;		_sensor1
 10740 ;; This function is called by:
 10741 ;;		_PIN_MANAGER_IOC
 10742 ;; This function uses a non-reentrant model
 10743 ;;
 10744                           
 10745                           
 10746                           ;psect for function _IOCBF0_ISR
 10747  08F3                     _IOCBF0_ISR:	
 10748  08F3                     i1l3137:	
 10749                           ;incstack = 0
 10750                           ; Regs used in _IOCBF0_ISR: [wreg+status,2+status,0+pclath+cstack]
 10751                           
 10752                           
 10753                           ;mcc_generated_files/pin_manager.c: 167:     if(IOCBF0_InterruptHandler)
 10754  08F3  0021               	movlb	1	; select bank1
 10755  08F4  0869               	movf	_IOCBF0_InterruptHandler^(0+128),w
 10756  08F5  046A               	iorwf	(_IOCBF0_InterruptHandler+1)^(0+128),w
 10757  08F6  1903               	btfsc	3,2
 10758  08F7  28F9               	goto	u280_21
 10759  08F8  28FA               	goto	u280_20
 10760  08F9                     u280_21:	
 10761  08F9  28FF               	goto	i1l3141
 10762  08FA                     u280_20:	
 10763  08FA                     i1l3139:	
 10764                           
 10765                           ;mcc_generated_files/pin_manager.c: 168:     {;mcc_generated_files/pin_manager.c: 169:  
      +                                 IOCBF0_InterruptHandler();
 10766  08FA  086A               	movf	(_IOCBF0_InterruptHandler+1)^(0+128),w
 10767  08FB  008A               	movwf	10
 10768  08FC  0869               	movf	_IOCBF0_InterruptHandler^(0+128),w
 10769  08FD  000A               	callw
 10770  08FE  3188               	pagesel	$
 10771  08FF                     i1l3141:	
 10772                           
 10773                           ;mcc_generated_files/pin_manager.c: 171:     IOCBFbits.IOCBF0 = 0;
 10774  08FF  0027               	movlb	7	; select bank7
 10775  0900  1016               	bcf	22,0	;volatile
 10776  0901                     i1l425:	
 10777  0901  0008               	return
 10778  0902                     __end_of_IOCBF0_ISR:	
 10779                           
 10780                           	psect	text58
 10781  0843                     __ptext58:	
 10782 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
 10783 ;; Defined at:
 10784 ;;		line 184 in file "mcc_generated_files/pin_manager.c"
 10785 ;; Parameters:    Size  Location     Type
 10786 ;;		None
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;		None
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  1    wreg      void 
 10791 ;; Registers used:
 10792 ;;		None
 10793 ;; Tracked objects:
 10794 ;;		On entry : 0/0
 10795 ;;		On exit  : 0/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10798 ;;      Params:         0       0       0       0       0       0
 10799 ;;      Locals:         0       0       0       0       0       0
 10800 ;;      Temps:          0       0       0       0       0       0
 10801 ;;      Totals:         0       0       0       0       0       0
 10802 ;;Total ram usage:        0 bytes
 10803 ;; Hardware stack levels used:    1
 10804 ;; This function calls:
 10805 ;;		Nothing
 10806 ;; This function is called by:
 10807 ;;		_PIN_MANAGER_Initialize
 10808 ;;		_IOCBF0_ISR
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812                           
 10813                           ;psect for function _IOCBF0_DefaultInterruptHandler
 10814  0843                     _IOCBF0_DefaultInterruptHandler:	
 10815  0843                     i1l431:	
 10816                           ;incstack = 0
 10817                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
 10818                           
 10819  0843  0008               	return
 10820  0844                     __end_of_IOCBF0_DefaultInterruptHandler:	
 10821                           
 10822                           	psect	text59
 10823  0859                     __ptext59:	
 10824 ;; *************** function _sensor1 *****************
 10825 ;; Defined at:
 10826 ;;		line 89 in file "main.c"
 10827 ;; Parameters:    Size  Location     Type
 10828 ;;		None
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;		None
 10831 ;; Return value:  Size  Location     Type
 10832 ;;                  1    wreg      void 
 10833 ;; Registers used:
 10834 ;;		status,2
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10840 ;;      Params:         0       0       0       0       0       0
 10841 ;;      Locals:         0       0       0       0       0       0
 10842 ;;      Temps:          0       0       0       0       0       0
 10843 ;;      Totals:         0       0       0       0       0       0
 10844 ;;Total ram usage:        0 bytes
 10845 ;; Hardware stack levels used:    1
 10846 ;; This function calls:
 10847 ;;		Nothing
 10848 ;; This function is called by:
 10849 ;;		_main
 10850 ;;		_IOCBF0_ISR
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854                           
 10855                           ;psect for function _sensor1
 10856  0859                     _sensor1:	
 10857  0859                     i1l2973:	
 10858                           ;incstack = 0
 10859                           ; Regs used in _sensor1: [status,2]
 10860                           
 10861                           
 10862                           ;main.c: 91:         and_ating=1;
 10863  0859  0020               	movlb	0	; select bank0
 10864  085A  01EF               	clrf	_and_ating
 10865  085B  0AEF               	incf	_and_ating,f
 10866  085C                     i1l2975:	
 10867                           
 10868                           ;main.c: 92:         and_ating2=0;
 10869  085C  0021               	movlb	1	; select bank1
 10870  085D  01C8               	clrf	_and_ating2^(0+128)
 10871  085E  01C9               	clrf	(_and_ating2+1)^(0+128)
 10872  085F                     i1l584:	
 10873  085F  0008               	return
 10874  0860                     __end_of_sensor1:	
 10875                           
 10876                           	psect	text60
 10877  09A3                     __ptext60:	
 10878 ;; *************** function _CCP4_CaptureISR *****************
 10879 ;; Defined at:
 10880 ;;		line 89 in file "mcc_generated_files/ccp4.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;		None
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;  module          2    5[COMMON] struct CCPR4Reg_tag
 10885 ;; Return value:  Size  Location     Type
 10886 ;;                  1    wreg      void 
 10887 ;; Registers used:
 10888 ;;		wreg, status,2, status,0, pclath, cstack
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10894 ;;      Params:         0       0       0       0       0       0
 10895 ;;      Locals:         2       0       0       0       0       0
 10896 ;;      Temps:          1       0       0       0       0       0
 10897 ;;      Totals:         3       0       0       0       0       0
 10898 ;;Total ram usage:        3 bytes
 10899 ;; Hardware stack levels used:    1
 10900 ;; Hardware stack levels required when called:    2
 10901 ;; This function calls:
 10902 ;;		Absolute function
 10903 ;;		_CCP4_DefaultCallBack
 10904 ;;		_get_pulse
 10905 ;; This function is called by:
 10906 ;;		_INTERRUPT_InterruptManager
 10907 ;; This function uses a non-reentrant model
 10908 ;;
 10909                           
 10910                           
 10911                           ;psect for function _CCP4_CaptureISR
 10912  09A3                     _CCP4_CaptureISR:	
 10913  09A3                     i1l3443:	
 10914                           ;incstack = 0
 10915                           ; Regs used in _CCP4_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
 10916                           
 10917                           
 10918                           ;mcc_generated_files/ccp4.c: 91:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 94:     PIR3bits.CCP4IF = 0;
 10919  09A3  0020               	movlb	0	; select bank0
 10920  09A4  1293               	bcf	19,5	;volatile
 10921  09A5                     i1l3445:	
 10922                           
 10923                           ;mcc_generated_files/ccp4.c: 97:     module.ccpr4l = CCPR4L;
 10924  09A5  0026               	movlb	6	; select bank6
 10925  09A6  0818               	movf	24,w	;volatile
 10926  09A7  00FB               	movwf	??_CCP4_CaptureISR
 10927  09A8  087B               	movf	??_CCP4_CaptureISR,w
 10928  09A9  00FC               	movwf	CCP4_CaptureISR@module
 10929                           
 10930                           ;mcc_generated_files/ccp4.c: 98:     module.ccpr4h = CCPR4H;
 10931  09AA  0819               	movf	25,w	;volatile
 10932  09AB  00FB               	movwf	??_CCP4_CaptureISR
 10933  09AC  087B               	movf	??_CCP4_CaptureISR,w
 10934  09AD  00FD               	movwf	CCP4_CaptureISR@module+1
 10935  09AE                     i1l3447:	
 10936                           
 10937                           ;mcc_generated_files/ccp4.c: 101:     CCP4_CallBack(module.ccpr4_16Bit);
 10938  09AE  087D               	movf	CCP4_CaptureISR@module+1,w
 10939  09AF  00FA               	movwf	get_pulse@capturedValue+1
 10940  09B0  087C               	movf	CCP4_CaptureISR@module,w
 10941  09B1  00F9               	movwf	get_pulse@capturedValue
 10942  09B2  0022               	movlb	2	; select bank2
 10943  09B3  0821               	movf	(_CCP4_CallBack+1)^(0+256),w
 10944  09B4  008A               	movwf	10
 10945  09B5  0820               	movf	_CCP4_CallBack^(0+256),w
 10946  09B6  000A               	callw
 10947  09B7  3189               	pagesel	$
 10948  09B8                     i1l346:	
 10949  09B8  0008               	return
 10950  09B9                     __end_of_CCP4_CaptureISR:	
 10951                           
 10952                           	psect	text61
 10953  0842                     __ptext61:	
 10954 ;; *************** function _CCP4_DefaultCallBack *****************
 10955 ;; Defined at:
 10956 ;;		line 60 in file "mcc_generated_files/ccp4.c"
 10957 ;; Parameters:    Size  Location     Type
 10958 ;;  capturedValu    2    2[COMMON] unsigned short 
 10959 ;; Auto vars:     Size  Location     Type
 10960 ;;		None
 10961 ;; Return value:  Size  Location     Type
 10962 ;;                  1    wreg      void 
 10963 ;; Registers used:
 10964 ;;		None
 10965 ;; Tracked objects:
 10966 ;;		On entry : 0/0
 10967 ;;		On exit  : 0/0
 10968 ;;		Unchanged: 0/0
 10969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10970 ;;      Params:         2       0       0       0       0       0
 10971 ;;      Locals:         0       0       0       0       0       0
 10972 ;;      Temps:          0       0       0       0       0       0
 10973 ;;      Totals:         2       0       0       0       0       0
 10974 ;;Total ram usage:        2 bytes
 10975 ;; Hardware stack levels used:    1
 10976 ;; This function calls:
 10977 ;;		Nothing
 10978 ;; This function is called by:
 10979 ;;		_CCP4_Initialize
 10980 ;;		_CCP4_CaptureISR
 10981 ;; This function uses a non-reentrant model
 10982 ;;
 10983                           
 10984                           
 10985                           ;psect for function _CCP4_DefaultCallBack
 10986  0842                     _CCP4_DefaultCallBack:	
 10987  0842                     i1l340:	
 10988                           ;incstack = 0
 10989                           ; Regs used in _CCP4_DefaultCallBack: []
 10990                           
 10991  0842  0008               	return
 10992  0843                     __end_of_CCP4_DefaultCallBack:	
 10993                           
 10994                           	psect	text62
 10995  0ABD                     __ptext62:	
 10996 ;; *************** function _get_pulse *****************
 10997 ;; Defined at:
 10998 ;;		line 113 in file "main.c"
 10999 ;; Parameters:    Size  Location     Type
 11000 ;;  capturedValu    2    2[COMMON] unsigned short 
 11001 ;; Auto vars:     Size  Location     Type
 11002 ;;		None
 11003 ;; Return value:  Size  Location     Type
 11004 ;;                  1    wreg      void 
 11005 ;; Registers used:
 11006 ;;		wreg, status,2, status,0, pclath, cstack
 11007 ;; Tracked objects:
 11008 ;;		On entry : 0/0
 11009 ;;		On exit  : 0/0
 11010 ;;		Unchanged: 0/0
 11011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11012 ;;      Params:         2       0       0       0       0       0
 11013 ;;      Locals:         0       0       0       0       0       0
 11014 ;;      Temps:          0       0       0       0       0       0
 11015 ;;      Totals:         2       0       0       0       0       0
 11016 ;;Total ram usage:        2 bytes
 11017 ;; Hardware stack levels used:    1
 11018 ;; Hardware stack levels required when called:    1
 11019 ;; This function calls:
 11020 ;;		_TMR1_WriteTimer
 11021 ;; This function is called by:
 11022 ;;		_main
 11023 ;;		_CCP4_CaptureISR
 11024 ;; This function uses a non-reentrant model
 11025 ;;
 11026                           
 11027                           
 11028                           ;psect for function _get_pulse
 11029  0ABD                     _get_pulse:	
 11030  0ABD                     i1l3177:	
 11031                           ;incstack = 0
 11032                           ; Regs used in _get_pulse: [wreg+status,2+status,0+pclath+cstack]
 11033                           
 11034                           
 11035                           ;main.c: 113: void get_pulse(uint16_t capturedValue);main.c: 114:     {;main.c: 115:    
      +                               TMR1_WriteTimer(0);
 11036  0ABD  3000               	movlw	0
 11037  0ABE  00F7               	movwf	TMR1_WriteTimer@timerVal
 11038  0ABF  00F8               	movwf	TMR1_WriteTimer@timerVal+1
 11039  0AC0  3189  216C  318A   	fcall	_TMR1_WriteTimer
 11040  0AC3                     i1l3179:	
 11041                           
 11042                           ;main.c: 116:         ccp_value = capturedValue;
 11043  0AC3  087A               	movf	get_pulse@capturedValue+1,w
 11044  0AC4  0021               	movlb	1	; select bank1
 11045  0AC5  00E0               	movwf	(_ccp_value+1)^(0+128)
 11046  0AC6  0879               	movf	get_pulse@capturedValue,w
 11047  0AC7  00DF               	movwf	_ccp_value^(0+128)
 11048  0AC8                     i1l3181:	
 11049                           
 11050                           ;main.c: 117:         if(sentido == 1){
 11051  0AC8  0358               	decf	_sentido^(0+128),w
 11052  0AC9  0459               	iorwf	(_sentido+1)^(0+128),w
 11053  0ACA  1D03               	btfss	3,2
 11054  0ACB  2ACD               	goto	u287_21
 11055  0ACC  2ACE               	goto	u287_20
 11056  0ACD                     u287_21:	
 11057  0ACD  2AD3               	goto	i1l3185
 11058  0ACE                     u287_20:	
 11059  0ACE                     i1l3183:	
 11060                           
 11061                           ;main.c: 118:             pulses++;
 11062  0ACE  3001               	movlw	1
 11063  0ACF  07E1               	addwf	_pulses^(0+128),f
 11064  0AD0  3000               	movlw	0
 11065  0AD1  3DE2               	addwfc	(_pulses+1)^(0+128),f
 11066                           
 11067                           ;main.c: 119:         }else if(sentido == 0 && pulses >= 0){
 11068  0AD2  2AE1               	goto	i1l599
 11069  0AD3                     i1l3185:	
 11070  0AD3  0858               	movf	_sentido^(0+128),w
 11071  0AD4  0459               	iorwf	(_sentido+1)^(0+128),w
 11072  0AD5  1D03               	btfss	3,2
 11073  0AD6  2AD8               	goto	u288_21
 11074  0AD7  2AD9               	goto	u288_20
 11075  0AD8                     u288_21:	
 11076  0AD8  2AE1               	goto	i1l599
 11077  0AD9                     u288_20:	
 11078  0AD9                     i1l3187:	
 11079  0AD9  1BE2               	btfsc	(_pulses+1)^(0+128),7
 11080  0ADA  2ADC               	goto	u289_21
 11081  0ADB  2ADD               	goto	u289_20
 11082  0ADC                     u289_21:	
 11083  0ADC  2AE1               	goto	i1l599
 11084  0ADD                     u289_20:	
 11085  0ADD                     i1l3189:	
 11086                           
 11087                           ;main.c: 120:             pulses--;
 11088  0ADD  30FF               	movlw	255
 11089  0ADE  07E1               	addwf	_pulses^(0+128),f
 11090  0ADF  30FF               	movlw	255
 11091  0AE0  3DE2               	addwfc	(_pulses+1)^(0+128),f
 11092  0AE1                     i1l599:	
 11093  0AE1  0008               	return
 11094  0AE2                     __end_of_get_pulse:	
 11095                           
 11096                           	psect	text63
 11097  096C                     __ptext63:	
 11098 ;; *************** function _TMR1_WriteTimer *****************
 11099 ;; Defined at:
 11100 ;;		line 113 in file "mcc_generated_files/tmr1.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;  timerVal        2    0[COMMON] unsigned short 
 11103 ;; Auto vars:     Size  Location     Type
 11104 ;;		None
 11105 ;; Return value:  Size  Location     Type
 11106 ;;                  1    wreg      void 
 11107 ;; Registers used:
 11108 ;;		wreg, status,2
 11109 ;; Tracked objects:
 11110 ;;		On entry : 0/0
 11111 ;;		On exit  : 0/0
 11112 ;;		Unchanged: 0/0
 11113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11114 ;;      Params:         2       0       0       0       0       0
 11115 ;;      Locals:         0       0       0       0       0       0
 11116 ;;      Temps:          0       0       0       0       0       0
 11117 ;;      Totals:         2       0       0       0       0       0
 11118 ;;Total ram usage:        2 bytes
 11119 ;; Hardware stack levels used:    1
 11120 ;; This function calls:
 11121 ;;		Nothing
 11122 ;; This function is called by:
 11123 ;;		_get_pulse
 11124 ;;		_TMR1_Reload
 11125 ;; This function uses a non-reentrant model
 11126 ;;
 11127                           
 11128                           
 11129                           ;psect for function _TMR1_WriteTimer
 11130  096C                     _TMR1_WriteTimer:	
 11131  096C                     i1l2947:	
 11132                           ;incstack = 0
 11133                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 11134                           
 11135                           
 11136                           ;mcc_generated_files/tmr1.c: 113: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 114: {;mcc_generated_files/tmr1.c: 115:     if (T1CONbits.nT1SYNC == 1)
 11137  096C  0020               	movlb	0	; select bank0
 11138  096D  1D18               	btfss	24,2	;volatile
 11139  096E  2970               	goto	u273_21
 11140  096F  2971               	goto	u273_20
 11141  0970                     u273_21:	
 11142  0970  2978               	goto	i1l2957
 11143  0971                     u273_20:	
 11144  0971                     i1l2949:	
 11145                           
 11146                           ;mcc_generated_files/tmr1.c: 116:     {;mcc_generated_files/tmr1.c: 118:         T1CONbi
      +                          ts.TMR1ON = 0;
 11147  0971  1018               	bcf	24,0	;volatile
 11148  0972                     i1l2951:	
 11149                           
 11150                           ;mcc_generated_files/tmr1.c: 121:         TMR1H = (timerVal >> 8);
 11151  0972  0878               	movf	TMR1_WriteTimer@timerVal+1,w
 11152  0973  0097               	movwf	23	;volatile
 11153  0974                     i1l2953:	
 11154                           
 11155                           ;mcc_generated_files/tmr1.c: 122:         TMR1L = timerVal;
 11156  0974  0877               	movf	TMR1_WriteTimer@timerVal,w
 11157  0975  0096               	movwf	22	;volatile
 11158  0976                     i1l2955:	
 11159                           
 11160                           ;mcc_generated_files/tmr1.c: 125:         T1CONbits.TMR1ON =1;
 11161  0976  1418               	bsf	24,0	;volatile
 11162                           
 11163                           ;mcc_generated_files/tmr1.c: 126:     }
 11164  0977  297C               	goto	i1l160
 11165  0978                     i1l2957:	
 11166                           
 11167                           ;mcc_generated_files/tmr1.c: 128:     {;mcc_generated_files/tmr1.c: 130:         TMR1H =
      +                           (timerVal >> 8);
 11168  0978  0878               	movf	TMR1_WriteTimer@timerVal+1,w
 11169  0979  0097               	movwf	23	;volatile
 11170  097A                     i1l2959:	
 11171                           
 11172                           ;mcc_generated_files/tmr1.c: 131:         TMR1L = timerVal;
 11173  097A  0877               	movf	TMR1_WriteTimer@timerVal,w
 11174  097B  0096               	movwf	22	;volatile
 11175  097C                     i1l160:	
 11176  097C  0008               	return
 11177  097D                     __end_of_TMR1_WriteTimer:	
 11178  007E                     btemp	set	126	;btemp
 11179  007E                     int$flags	set	126
 11180  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         80
    Persistent  60
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     79      80
    BANK1            80      0      79
    BANK2            80      0      21
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    IOCBF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor4(), IOCBF5_DefaultInterruptHandler(), 

    IOCBF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor4(), IOCBF5_DefaultInterruptHandler(), Absolute function(), 

    IOCBF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor3(), IOCBF4_DefaultInterruptHandler(), 

    IOCBF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor3(), IOCBF4_DefaultInterruptHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor2(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor2(), IOCBF3_DefaultInterruptHandler(), Absolute function(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor1(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor1(), IOCBF0_DefaultInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> get_pulse(), CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> get_pulse(), CCP4_DefaultCallBack(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> send_data(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> send_data(), Absolute function(), TMR4_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP4_CaptureISR
    _TMR4_ISR->_send_data
    _send_data->_EUSART_Write
    _send_data->_EUSART_is_tx_ready
    _IOCBF5_ISR->_sensor4
    _IOCBF4_ISR->_sensor3
    _IOCBF3_ISR->_sensor2
    _CCP4_CaptureISR->_CCP4_DefaultCallBack
    _CCP4_CaptureISR->_get_pulse
    _get_pulse->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_comunicacao
    _gerenciamento->_col_down
    _gerenciamento->_col_up
    _col_up->_controle
    _col_down->_controle
    _controle->___flmul
    _update->_max_down
    _update->_min_up
    _comunicacao->___fldiv
    ___xxtofl->_ADC_GetConversion
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF5_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   31842
                   _CCP4_SetCallBack
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                        _comunicacao
                           _controle
                      _gerenciamento
 ---------------------------------------------------------------------------------
 (1) _gerenciamento                                        0     0      0   16940
                                _abs
                           _col_down
                             _col_up
                             _update
 ---------------------------------------------------------------------------------
 (2) _col_up                                               2     2      0    7414
                                             62 BANK0      2     2      0
                                _abs
                           _controle
                             _min_up
 ---------------------------------------------------------------------------------
 (2) _col_down                                             2     2      0    7370
                                             62 BANK0      2     2      0
                                _abs
                           _controle
                           _max_down
 ---------------------------------------------------------------------------------
 (3) _controle                                            18    18      0    6656
                                             44 BANK0     18    18      0
                  _ADC_GetConversion
                 _PWM3_LoadDutyValue
                            ___flmul
                             ___wmul
                           ___xxtofl
                             _update
 ---------------------------------------------------------------------------------
 (2) _update                                              10    10      0    1710
                                              5 BANK0     10    10      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                           _max_down
                             _min_up
 ---------------------------------------------------------------------------------
 (3) _min_up                                               5     5      0     312
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _max_down                                             5     5      0     268
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   4     2      2     500
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     446
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _comunicacao                                          9     9      0    5351
                                             70 BANK0      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     626
                                              4 BANK0     14    10      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    2873
                                             18 BANK0     26    18      8
                  _ADC_GetConversion (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             44 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1629
                     _ADC_Initialize
                    _CCP4_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     844
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF5_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF4_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     211
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     454
                    _CCP4_CaptureISR
                    _PIN_MANAGER_IOC
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR4_ISR                                             0     0      0      92
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                          _send_data *
 ---------------------------------------------------------------------------------
 (8) _send_data                                            3     3      0      92
                                              1 COMMON     3     3      0
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (9) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCBF0_ISR
                         _IOCBF3_ISR
                         _IOCBF4_ISR
                         _IOCBF5_ISR
 ---------------------------------------------------------------------------------
 (8) _IOCBF5_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF5_DefaultInterruptHandler *
                            _sensor4 *
 ---------------------------------------------------------------------------------
 (9) _sensor4                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _IOCBF5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _IOCBF4_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF4_DefaultInterruptHandler *
                            _sensor3 *
 ---------------------------------------------------------------------------------
 (9) _sensor3                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _IOCBF4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _IOCBF3_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                            _sensor2 *
 ---------------------------------------------------------------------------------
 (9) _sensor2                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _IOCBF0_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF0_DefaultInterruptHandler *
                            _sensor1 *
 ---------------------------------------------------------------------------------
 (9) _sensor1                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CCP4_CaptureISR                                      3     3      0     362
                                              4 COMMON     3     3      0
                   Absolute function *
               _CCP4_DefaultCallBack *
                          _get_pulse *
 ---------------------------------------------------------------------------------
 (8) _get_pulse                                            2     0      2     315
                                              2 COMMON     2     0      2
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _CCP4_DefaultCallBack                                 2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP4_SetCallBack
   _IOCBF0_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _IOCBF4_SetInterruptHandler
   _IOCBF5_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
       _IOCBF4_SetInterruptHandler
       _IOCBF5_SetInterruptHandler
     _PWM3_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _WDT_Initialize
   _TMR4_SetInterruptHandler
   _comunicacao
     ___fldiv
       ___flmul (ARG)
         _ADC_GetConversion (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_GetConversion (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
     ___flmul
       _ADC_GetConversion (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
     ___fltol
     ___xxtofl
       _ADC_GetConversion (ARG)
   _controle
     _ADC_GetConversion
     _PWM3_LoadDutyValue
     ___flmul
       _ADC_GetConversion (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
     ___wmul
     ___xxtofl
       _ADC_GetConversion (ARG)
     _update
       _EUSART_Read
       _EUSART_is_rx_ready
       _max_down
       _min_up
   _gerenciamento
     _abs
     _col_down
       _abs
       _controle
         _ADC_GetConversion
         _PWM3_LoadDutyValue
         ___flmul
           _ADC_GetConversion (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_GetConversion (ARG)
         ___wmul
         ___xxtofl
           _ADC_GetConversion (ARG)
         _update
           _EUSART_Read
           _EUSART_is_rx_ready
           _max_down
           _min_up
       _max_down
     _col_up
       _abs
       _controle
         _ADC_GetConversion
         _PWM3_LoadDutyValue
         ___flmul
           _ADC_GetConversion (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_GetConversion (ARG)
         ___wmul
         ___xxtofl
           _ADC_GetConversion (ARG)
         _update
           _EUSART_Read
           _EUSART_is_rx_ready
           _max_down
           _min_up
       _min_up
     _update
       _EUSART_Read
       _EUSART_is_rx_ready
       _max_down
       _min_up

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     Absolute function(Fake) *
     _CCP4_DefaultCallBack *
     _get_pulse *
       _TMR1_WriteTimer
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       Absolute function(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       _sensor1 *
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _sensor2 *
     _IOCBF4_ISR
       Absolute function(Fake) *
       _IOCBF4_DefaultInterruptHandler *
       _sensor3 *
     _IOCBF5_ISR
       Absolute function(Fake) *
       _IOCBF5_DefaultInterruptHandler *
       _sensor4 *
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *
     _send_data *
       _EUSART_Write
       _EUSART_is_tx_ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C2       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      15      10       26.3%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C2      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec 13 14:01:31 2020

                              _CCP4_Initialize 097D                                   ___fldiv@aexp 0065  
                                 ___fldiv@bexp 0064               ??_IOCBF3_DefaultInterruptHandler 0077  
              ?_IOCBF3_DefaultInterruptHandler 0077                                   ___fldiv@sign 005D  
                                  __CFG_CP$OFF 0000                                             l43 0A98  
                                           l51 0852                                             l60 094D  
                                           l64 095B                                             l82 0891  
                                           l85 089A                                             l88 0888  
                       __end_of_FVR_Initialize 084A                            ___wmul@multiplicand 0022  
                                  _state_motor 00DE                            __Umul8_16@word_mpld 0026  
                                  __CFG_LVP$ON 0000                                            l121 0A74  
                                          l124 0866                                            l127 084D  
                                          l320 0849                                            l225 09A2  
                                          l146 096B                                            l414 0B9B  
                                          l343 098E                                            l247 07FF  
                                          l185 0876                                            l610 0FFF  
                                          l282 0A47                                            l267 086E  
                                          l428 08A3                                            l604 0B4C  
                                          l349 087F                                            l285 0A52  
                                          l438 08AC                                            l710 0480  
                                          l448 08B5                                            l472 08C7  
                                          l624 0774                                            l458 08BE  
                                          l475 09F0                                            l643 07B9  
                                          l636 0C0D                                            l654 0CC7  
                                          l663 0E9D                                            l647 07F6  
                                          l681 0E5F                                            l674 0DDC  
                                          l658 0D04                                            l667 0F02  
                                          l860 09FC                                            l669 0F2C  
                                          l862 0A10                                            l678 0E2B  
                                          l697 03A0                                            _PR2 001B  
                                          _PR4 0416                                   __CFG_CPD$OFF 0000  
                                          _I_m 012C                                _timer1ReloadVal 00ED  
                                          _abs 09B9                 ?_EUSART_SetFramingErrorHandler 0020  
                              _TMR2_Initialize 086F                 CCP4_SetCallBack@customCallBack 0020  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 ?_comunicacao 0077                                   __CFG_IESO$ON 0000  
                             _CCP4_SetCallBack 0877                                   ___flmul@aexp 0044  
                                 ___flmul@bexp 0045             __end_of_IOCBF4_SetInterruptHandler 08B6  
                   _IOCBF4_SetInterruptHandler 08AD                                   ___flmul@sign 003F  
                                 ___flmul@temp 004A                                   ___flmul@prod 0046  
                      __end_of_CCP4_CaptureISR 09B9                                   ?_EUSART_Read 0077  
                                 ___fltol@exp1 002A                                           ?_abs 0020  
                                         l1061 0C6D                                           l1301 0D63  
                                         l1054 0C82                                           l1064 0C82  
                                         l1241 062B                                           l1233 05B6  
                                         l1217 04D8                                           l1321 0AAC  
                                         l1314 09D4                                           l1219 0634  
                                         l1323 0ABC                                           l1308 0D7D  
                                         l1309 0D89                                           l1317 09D4  
                                         l1238 0602                                           l1239 061C  
                                         l1263 0223                                           l1257 02A7  
                                         l3043 09B9                                           l3301 04B2  
                                         l1269 029B                                           l3045 09C7  
                                         l3311 04C5                                           l3303 04B6  
                                         l1295 0D28                                           l2511 0EB4  
                                         l3401 05F5                                           l3321 04EC  
                                         l3313 04CD                                           l3305 04BA  
                                         l1297 0DB1                                           l2513 0ECA  
                                         l2505 0E67                                           l3411 0625  
                                         l3403 0610                                           l3323 04F0  
                                         l3315 04CE                                           l3307 04BB  
                                         l3251 0C36                                           l3243 0C0E  
                                         l2531 0F1B                                           l2515 0ED3  
                                         l2507 0E7E                                           l3413 0627  
                                         l3405 0613                                           l3341 052F  
                                         l3333 0507                                           l3309 04C0  
                                         l3317 04D0                                           l3253 0C37  
                                         l3245 0C1A                                           l2541 0DD3  
                                         l2533 0F1F                                           l2525 0EE8  
                                         l2517 0ED8                                           l2509 0E94  
                                         l3407 061B                                           l3351 0549  
                                         l3343 0531                                           l3335 0517  
                                         l3319 04E0                                           l3327 04F9  
                                         l3255 0C3F                                           l2543 0DF3  
                                         l2535 0DB2                                           l2527 0EFB  
                                         l2519 0EE5                                           l3409 0621  
                                         l3345 0536                                           l3353 0550  
                                         l3361 056F                                           l3337 051F  
                                         l3329 04FE                                           l3281 0487  
                                         l2801 0135                                           l3273 0C64  
                                         l3265 0C4D                                           l3257 0C41  
                                         l3249 0C23                                           l2561 0E44  
                                         l2545 0DFC                                           l2529 0F14  
                                         l3601 035F                                           l3371 058A  
                                         l3363 0575                                           l3355 0562  
                                         l3347 0544                                           l3339 0527  
                                         l3291 049A                                           l3283 048B  
                                         l2571 0A9D                                           l2811 0171  
                                         l2803 0142                                           l3275 0C72  
                                         l3259 0C45                                           l3267 0C5D  
                                         l3451 0F9B                                           l2563 0E48  
                                         l2555 0E11                                           l2547 0E01  
                                         l2539 0DBC                                           l3611 039C  
                                         l3603 0379                                           l3701 08A4  
                                         l3381 059B                                           l3373 058B  
                                         l3365 057D                                           l3357 0563  
                                         l3349 0548                                           l3293 04A2  
                                         l3285 048F                                           l2573 0AA4  
                                         l2821 01C2                                           l2813 0178  
                                         l2805 0149                                           l2741 0051  
                                         l3277 0C77                                           l2901 0D54  
                                         l3453 0FA3                                           l3541 095A  
                                         l3533 094D                                           l2565 0E55  
                                         l2557 0E24                                           l2549 0E0E  
                                         l3621 03B7                                           l3613 03B2  
                                         l3605 0383                                           l3703 08AD  
                                         l3391 05C0                                           l3383 059F  
                                         l3375 0592                                           l3367 057F  
                                         l3359 056B                                           l3295 04A3  
                                         l3287 0490                                           l3279 0481  
                                         l2575 0AA8                                           l2831 01F7  
                                         l2823 01D9                                           l2815 018C  
                                         l2807 0156                                           l2751 0065  
                                         l2743 0057                                           l2911 0D81  
                                         l2903 0D5C                                           l3455 0FB7  
                                         l2591 0A4B                                           l2583 0A34  
                                         l3535 0952                                           l2567 0E5B  
                                         l2559 0E3D                                           l3631 03E3  
                                         l3623 03BD                                           l3615 03B2  
                                         l3607 0388                                           l3551 02C8  
                                         l3711 06AD                                           l3705 08B6  
                                         l3801 0B73                                           l3393 05C8  
                                         l3385 05B3                                           l3369 0586  
                                         l3377 0596                                           l3289 0495  
                                         l3297 04A5                                           l2577 0AB3  
                                         l2569 0A9B                                           l2841 0208  
                                         l2833 01F8                                           l2825 01E0  
                                         l2817 0199                                           l2809 015D  
                                         l2761 0081                                           l2753 006A  
                                         l2745 005B                                           l2921 0DA9  
                                         l2913 0D8B                                           l2905 0D6A  
                                         l3457 0FCB                                           l3449 0F2D  
                                         l2585 0A40                                           l3537 0953  
                                         l3529 084E                                           l2497 0E60  
                                         l3641 03F0                                           l3633 03E8  
                                         l3625 03C2                                           l3609 0395  
                                         l3553 02D1                                           l3545 02A8  
                                         l3721 06D4                                           l3713 06B2  
                                         l3811 0B78                                           l3803 0B74  
                                         l3395 05CC                                           l3379 059A  
                                         l3299 04AD                                           l2579 0AB8  
                                         l2851 022D                                           l2843 020C  
                                         l2835 01FF                                           l2827 01EC  
                                         l2819 01AD                                           l2771 0094  
                                         l2763 0085                                           l2755 0072  
                                         l2747 005F                                           l2915 0D9F  
                                         l2907 0D73                                           l3459 0FE5  
                                         l2587 0A41                                           l2595 09D5  
                                         l3539 0958                                           l2499 0E64  
                                         l3651 041C                                           l3643 03F6  
                                         l3635 03EC                                           l3627 03C8  
                                         l3571 0306                                           l3563 02E7  
                                         l3555 02E2                                           l3547 02B0  
                                         l3731 06EB                                           l3723 06D6  
                                         l3715 06B6                                           l3707 0635  
                                         l3821 0B92                                           l3813 0B79  
                                         l3805 0B75                                           l3397 05E4  
                                         l3389 05BB                                           l2861 0262  
                                         l2853 0235                                           l2845 0220  
                                         l2829 01F3                                           l2837 0203  
                                         l2781 00B0                                           l2773 009C  
                                         l2765 0089                                           l2757 0074  
                                         l2749 0060                                           l2917 0DA4  
                                         l2909 0D77                                           l2589 0A45  
                                         l3653 0421                                           l3645 03FB  
                                         l3629 03D6                                           l3573 0313  
                                         l3565 02ED                                           l3557 02E2  
                                         l3549 02B7                                           l3741 0714  
                                         l3733 06F4                                           l3717 06BA  
                                         l3709 06AD                                           l3901 07A8  
                                         l3823 0B9A                                           l3815 0B7A  
                                         l3807 0B76                                           l3831 084A  
                                         l3399 05E8                                           l2871 0292  
                                         l2863 026C                                           l2855 0239  
                                         l2839 0207                                           l2791 00ED  
                                         l2775 009E                                           l2767 008A  
                                         l2759 007C                                           l2919 0DA8  
                                         l3671 046D                                           l3663 042D  
                                         l3647 0401                                           l3655 0425  
                                         l3591 033F                                           l3583 0320  
                                         l3575 0318                                           l3567 02F2  
                                         l3743 071C                                           l3735 06FC  
                                         l3719 06CE                                           l3911 07E1  
                                         l3903 07AB                                           l3841 0982  
                                         l3833 0846                                           l3825 0860  
                                         l3817 0B82                                           l3809 0B77  
                                         l2873 0296                                           l2865 027A  
                                         l2857 0251                                           l2849 0228  
                                         l2793 00FA                                           l2785 00B9  
                                         l2777 00A6                                           l2769 008F  
                                         l2881 0D07                                           l3681 0A01  
                                         l3673 047A                                           l3665 0448  
                                         l3657 042A                                           l3649 040F  
                                         l3593 034C                                           l3585 0326  
                                         l3577 031C                                           l3569 02F8  
                                         l3761 075D                                           l3753 0734  
                                         l3745 0721                                           l3737 0701  
                                         l3729 06D8                                           l3921 0CA6  
                                         l3913 07E4                                           l3905 07BB  
                                         l3851 086B                                           l3843 098A  
                                         l3835 097D                                           l3691 0892  
                                         l3771 0A7F                                           l3827 0863  
                                         l3819 0B8A                                           l2875 0297  
                                         l2867 0283                                           l2859 0255  
                                         l2795 0114                                           l2787 00C6  
                                         l2779 00AB                                           l2883 0D0C  
                                         l3683 0A06                                           l3675 09F1  
                                         l3667 045E                                           l3595 0351  
                                         l3587 032B                                           l3763 076A  
                                         l3755 0747                                           l3747 072F  
                                         l3739 070E                                           l3931 0CC9  
                                         l3923 0CA8                                           l3915 0C83  
                                         l3907 07C9                                           l3845 098C  
                                         l3837 0980                                           l3693 0880  
                                         l3773 0A87                                           l3829 0864  
                                         l3781 0B5B                                           l3861 0997  
                                         l3853 098F                                           l3941 0A53  
                                         l2877 029F                                           l2869 0285  
                                         l2797 0121                                           l2789 00D3  
                                         l2893 0D39                                           l2885 0D10  
                                         l3685 0A0C                                           l3677 09F4  
                                         l3669 0468                                           l3589 0331  
                                         l3597 0355                                           l3765 076D  
                                         l3757 0750                                           l3933 0CD7  
                                         l3925 0CB4                                           l3917 0C84  
                                         l3909 07CC                                           l3847 0867  
                                         l3839 0981                                           l3775 0A8F  
                                         l3767 0A75                                           l3791 0B6D  
                                         l3783 0B5E                                           l3871 08C4  
                                         l3695 07F7                                           l3863 099F  
                                         l3855 0992                                           l2799 012E  
                                         l2895 0D3E                                           l2887 0D20  
                                         l3679 09F8                                           l3759 0758  
                                         l3935 0CDA                                           l3927 0CB6  
                                         l3919 0C98                                           l3951 0BB2  
                                         l3943 0B9C                                           l3849 086A  
                                         l3697 0877                                           l3689 0889  
                                         l3777 0A97                                           l3769 0A7E  
                                         l3793 0B6F                                           l3785 0B60  
                                         l3865 08BF                                           l3881 095C  
                                         l3873 086F                                           l3857 0993  
                                         l2897 0D49                                           l2889 0D30  
                                         l3937 0CEF                                           l3929 0CB9  
                                         l3961 0BCC                                           l3953 0BB8  
                                         l3945 0B9F                                           l3699 089B  
                                         l3795 0B70                                           l3787 0B63  
                                         l3779 0B58                                           l3867 08C2  
                                         l3883 0960                                           l3875 0872  
                                         l3859 0995                                           l2899 0D50  
                                         l3939 0CF2                                           l3891 0776  
                                         l3971 0BE6                                           l3963 0BD2  
                                         l3947 0BA6                                           l3955 0BBE  
                                         l3797 0B71                                           l3789 0B68  
                                         l3869 08C3                                           l3885 0961  
                                         l3877 0873                                           l3893 078A  
                                         l3981 0C0B                                           l3973 0BEA  
                                         l3965 0BD8                                           l3957 0BC2  
                                         l3949 0BAC                                           l3799 0B72  
                                         l3887 0968                                           l3879 0874  
                                         l3895 0798                                           l3975 0BEE  
                                         l3967 0BDE                                           l3959 0BC6  
                                         l3991 0B52                                           l3983 0B17  
                                         l3897 079A                                           l3889 0775  
                                         l3977 0C01                                           l3969 0BE4  
                                         l3985 0B1A                                           l3899 07A6  
                                         l3979 0C08                                           l3987 0B1B  
                                         l3989 0B4F                                           u2010 0AB8  
                                         u2011 0AB7                                           u2020 0A4B  
                                         u2005 0AAD                                           u2021 0A4A  
                                         u3000 0C1A                                           u3001 0C19  
                                         u3010 0C30                                           u2035 09E6  
                                         u3100 048F                                           u2300 005F  
                                         u3020 0C45                                           u3101 048E  
                                         u2301 005E                                           u3021 0C44  
                                         _LATA 010C                                           u3110 0495  
                                         u2310 0065                                           u3030 0C4C  
                                         _LATB 010D                                           u3111 0494  
                                         u2311 0064                                           u3031 0C4B  
                                         u3015 0C2C                                           u3120 049A  
                                         u2400 01B8                                           u2320 006A  
                                         u4000 0CA6                                           u3121 0499  
                                         u2321 0069                                           u4001 0CA5  
                                         u3210 0548                                           u3130 04BA  
                                         u2410 01CF                                           u2330 0089  
                                         u3050 0C5C                                           u4010 0CB4  
                                         u3211 0547                                           u3131 04B9  
                                         u2331 0088                                           u3051 0C5B  
                                         u4011 0CB3                                           u3300 059F  
                                         u3140 04C0                                           u2500 022D  
                                         u2340 008F                                           u3060 0C63  
                                         u4020 0CC7                                           u4100 0BCC  
                                         u3301 059E                                           u3205 053E  
                                         u3141 04BF                                           u2501 022C  
                                         u2405 01B4                                           u2341 008E  
                                         u3061 0C62                                           u3045 0C4E  
                                         u4021 0CC6                                           u4005 0CA2  
                                         u4101 0BCB                                           u3310 05B3  
                                         u3230 0562                                           u3150 04C5  
                                         u2510 0239                                           u2350 0094  
                                         u4030 0CD7                                           u4110 0BD2  
                                         u3311 05B2                                           u3231 0561  
                                         u3151 04C4                                           u2511 0238  
                                         u2415 01CB                                           u2351 0093  
                                         u4031 0CD6                                           u4015 0CB0  
                                         u4111 0BD1                                           u3320 05BA  
                                         u3240 0575                                           u3160 04E0  
                                         u2520 0247                                           u2440 01F7  
                                         u2360 00AB                                           u3080 0C72  
                                         u2600 0D4F                                           u4040 0D04  
                                         u4120 0BD8                                           u3321 05B9  
                                         u3241 0574                                           u3225 054A  
                                         u3161 04DF                                           u2441 01F6  
                                         u2425 01DA                                           u2361 00AA  
                                         u3081 0C71                                           u2601 0D4E  
                                         u4041 0D03                                           u4025 0CC3  
                                         u4121 0BD7                                           u3330 05C0  
                                         u3250 057D                                           u3170 04FE  
                                         u2530 0262                                           u2370 00B0  
                                         u3090 0C77                                           u4130 0BDE  
                                         u4050 0BA6                                           u3331 05BF  
                                         u3251 057C                                           u3235 055E  
                                         u3171 04FD                                           u2531 0261  
                                         u2435 01ED                                           u2371 00AF  
                                         u3091 0C76                                           u3075 0C65  
                                         u4035 0CD3                                           u4131 0BDD  
                                         u4051 0BA5                                           u3340 05CC  
                                         u3180 0536                                           u2540 027A  
                                         u2460 0207                                           u2620 0D69  
                                         u1900 0F14                                           u4140 0BE4  
                                         u4060 0BAC                                           u3341 05CB  
                                         u3181 0535                                           u2541 0279  
                                         u2525 0243                                           u2461 0206  
                                         u2621 0D68                                           u1901 0F13  
                                         u4045 0D00                                           u4141 0BE3  
                                         u4061 0BAB                                           u3350 05DA  
                                         u3270 058A                                           u2550 0296  
                                         u2470 020C                                           u1910 0F2C  
                                         u4150 0C08                                           u4070 0BB2  
                                         u3271 0589                                           u2551 0295  
                                         u2535 025E                                           u2471 020B  
                                         u2455 01F9                                           u2615 0D5D  
                                         u1911 0F2B                                           u4151 0C07  
                                         u4071 0BB1                                           u3360 05F5  
                                         u2480 0220                                           u2640 0D77  
                                         u2560 0D0C                                           u1920 0DD3  
                                         u1840 0E7E                                           u4080 0BB8  
                                         u3361 05F4                                           u3265 0580  
                                         u2545 0276                                           u2481 021F  
                                         u2385 012F                                           u2641 0D76  
                                         u2561 0D0B                                           u1921 0DD2  
                                         u1905 0F10                                           u1841 0E7D  
                                         u4081 0BB7                                           u3370 0610  
                                         u3290 059A                                           u2490 0227  
                                         u2650 0D7D                                           u2570 0D10  
                                         u1930 0DF3                                           u1850 0E94  
                                         u4090 0BBE                                           u3371 060F  
                                         u3355 05D6                                           u3291 0599  
                                         u3195 0537                                           u2491 0226  
                                         u2395 015E                                           u2651 0D7C  
                                         u2635 0D6D                                           u2571 0D0F  
                                         u1931 0DF2                                           u1915 0F28  
                                         u1851 0E93                                           u4091 0BBD  
                                         u3380 0625                                           u2660 0D81  
                                         u2580 0D30                                           u3620 0952  
                                         u1940 0E0E                                           u1860 0EB4  
                                         u3700 0326                                           u3381 0624  
                                         u3365 05F1                                           u3285 058C  
                                         u2661 0D80                                           u2581 0D2F  
                                         u3621 0951                                           u1941 0E0D  
                                         u1925 0DCF                                           u1861 0EB3  
                                         u1845 0E7A                                           u3701 0325  
                                         u2670 0D95                                           u3630 0958  
                                         u1950 0E24                                           u1870 0ECA  
                                         u3710 033F                                           u3375 060C  
                                         u4167 0A42                                           u3631 0957  
                                         u1951 0E23                                           u1935 0DEF  
                                         u1871 0EC9                                           u1855 0E90  
                                         u3711 033E                                           u2680 0DA4  
                                         u1960 0E3D                                           u1880 0EE5  
                                         u3800 03F6                                           u3720 0355  
                                         u3640 02B0                                           u2681 0DA3  
                                         u1961 0E3C                                           u1945 0E0A  
                                         u1881 0EE4                                           u1865 0EB0  
                                         u3801 03F5                                           u3721 0354  
                                         u3641 02AF                                           u2690 0DA8  
                                         u1970 0E55                                           u1890 0EFB  
                                         u3810 040F                                           u3730 0379  
                                         u2691 0DA7                                           u2675 0D91  
                                         u2595 0D43                                           u1971 0E54  
                                         u1955 0E20                                           u1891 0EFA  
                                         u1875 0EC6                                           u3811 040E  
                                         u3731 0378                                           u3715 033B  
                                         u1980 0E5B                                           u3820 0425  
                                         u3740 0395                                           u3660 02E2  
                                         u3900 06EB                                           u1981 0E5A  
                                         u1965 0E39                                           u1885 0EE1  
                                         u3821 0424                                           u3741 0394  
                                         u3661 02E1                                           u3901 06EA  
                                         u1990 0AA8                                           u2790 09C7  
                                         u3830 0448                                           u3750 039C  
                                         u3670 02ED                                           u3910 070E  
                       get_pulse@capturedValue 0079                                           u1991 0AA7  
                                         u2791 09C6                                           u1975 0E51  
                                         u1895 0EF7                                           u3831 0447  
                                         u3815 040B                                           u3751 039B  
                                         u3735 0375                                           u3671 02EC  
                                         u3655 02BA                                           u3911 070D  
                                         u3840 045E                                           u3760 03B2  
                                         u3680 0306                                           u3920 072F  
                                         u3841 045D                                           u3761 03B1  
                                         u3745 0391                                           u3681 0305  
                                         u3665 02DE                                           u3921 072E  
                                         u3905 06E7                                           u3850 047A  
                                         u3770 03BD                                           u3690 031C  
                                         u3930 0747                                           u2795 09C3  
                                         u3851 0479                                           u3835 0444  
                                         u3771 03BC                                           u3691 031B  
                                         u3931 0746                                           u3915 070A  
                                         u3860 09F8                                           u3780 03D6  
                                         u3940 076A                                           u3861 09F7  
                                         u3845 045A                                           u3781 03D5  
                                         u3765 03AE                                           u3685 0302  
                                         u3941 0769                                           u3925 072B  
                                         i1l70 08D1                                           u3790 03EC  
                                         u3950 0798                                           u3855 0476  
                                         u3791 03EB                                           u3935 0743  
                                         u3951 0797                                           i1l48 093D  
                                         u3960 07A6                                           u3785 03D2  
                                         u3945 0766                                           u3961 07A5  
                                         u3890 0A0C                                           u3970 07B9  
                                         i1l67 08C9                                           u3891 0A0B  
                                         u3875 09FD                                           u3971 07B8  
                                         u3955 0794                                           u3980 07C9  
                                         u3885 0A02                                           u3981 07C8  
                                         u3965 07A2                                           u3990 07F6  
                                         u3991 07F5                                           u3975 07B5  
                                         u3985 07C5                                           u3995 07F2  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _WPUA 020C                                           _WPUB 020D  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         abs@a 0020                                           _main 0B17  
                                         _byte 0130                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                           start 0034  
                              ___fldiv@new_exp 005E                                  __CFG_MCLRE$ON 0000  
                   ??_TMR4_SetInterruptHandler 0022                                          ??_abs 0022  
                             comunicacao@speed 0067                                ?_FVR_Initialize 0077  
                                ?_EUSART_Write 0077                 __size_of_OSCILLATOR_Initialize 0007  
                          __size_of_IOCBF0_ISR 000F                            __size_of_IOCBF3_ISR 000F  
                __end_of_OSCILLATOR_Initialize 0867                            __size_of_IOCBF4_ISR 000F  
                          __size_of_IOCBF5_ISR 000F                                  ___fltol@sign1 0029  
                                        ?_main 0077                                __end_of___fldiv 0635  
                                __CFG_WDTE$OFF 0000                         ??_CCP4_DefaultCallBack 007B  
                              __end_of___flmul 02A8                                __end_of___fltol 0C83  
                                        _T1CON 0018                                          _T2CON 001C  
                                        _T4CON 0417                                          i1l160 097C  
                                        i1l312 0032                                          i1l313 0032  
                                        i1l305 0012                                          i1l250 0003  
                                        i1l340 0842                                          i1l244 094C  
                                        i1l308 0024                                          i1l421 0A31  
                                        i1l431 0843                                          i1l425 0901  
                                        i1l441 0844                                          i1l346 09B8  
                                        i1l435 0910                                          i1l451 0845  
                                        i1l445 091F                                          i1l461 0002  
                                        i1l455 092E                                          i1l581 0B16  
                                        i1l590 08E7                                          i1l584 085F  
                                        i1l593 08F2                                          i1l587 08DC  
                                        i1l599 0AE1                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                 update@i_1261 0029                                   update@i_1262 002D  
                                        _TXSTA 019E                                _TMR4_Initialize 098F  
                             __end_of_TMR4_ISR 094D                                          _andar 00D2  
                      __end_of_PIN_MANAGER_IOC 0A32                                 _WDT_Initialize 084A  
                      __end_of_PWM3_Initialize 08C8                        __end_of_TMR1_Initialize 096C  
                                        pclath 000A                                __end_of_sensor1 0860  
                              __end_of_sensor2 08DD                                __end_of_sensor3 08E8  
                              __end_of_sensor4 08F3                                          status 0003  
                      __end_of_CCP4_Initialize 098F                                          wtemp0 007E  
                              _TMR1_WriteTimer 096C                                ??_gerenciamento 0060  
                              __initialization 0036                                   __end_of_main 0B58  
                               ??_EUSART_Write 0077                        __end_of_TMR2_Initialize 0877  
                  ?_INTERRUPT_InterruptManager 0077                                         ??_main 006F  
                               __CFG_PLLEN$OFF 0000                        _IOCBF0_InterruptHandler 00E9  
                       __end_of_WDT_Initialize 084E                               ?_CCP4_CaptureISR 0077  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0124  
                 ??_IOCBF5_SetInterruptHandler 0022                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR3H 0312  
                                       _CCPR4H 0319                                         _CCPR3L 0311  
                                       _CCPR4L 0318                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 0853  
                                       _BORCON 0116                                         _T1GCON 0019  
                      TMR1_WriteTimer@timerVal 0077                                         i1l3141 08FF  
                                       i1l3143 0902                                         i1l3151 0918  
                                       i1l3137 08F3                                         i1l3145 0909  
                                       i1l3153 091D                                         i1l3161 0AE2  
                                       i1l3139 08FA                                         i1l3147 090E  
                                       i1l3155 0920                                         i1l3171 0B02  
                                       i1l3163 0AE7                                         i1l3181 0AC8  
                                       i1l3149 0911                                         i1l3157 0927  
                                       i1l3173 0B06                                         i1l3165 0AEE  
                                       i1l3421 093E                                         i1l3183 0ACE  
                                       i1l3159 092C                                         i1l3431 0A19  
                                       i1l3175 0B13                                         i1l3167 0AF1  
                                       i1l3423 0940                                         i1l3511 001B  
                                       i1l3503 0006                                         i1l3185 0AD3  
                                       i1l3177 0ABD                                         i1l3441 0A2E  
                                       i1l3433 0A1E                                         i1l3169 0AF9  
                                       i1l3425 0947                                         i1l3513 0020  
                                       i1l3505 000A                                         i1l3187 0AD9  
                                       i1l3179 0AC3                                         i1l3443 09A3  
                                       i1l3435 0A21                                         i1l3427 0A11  
                                       i1l3515 0029                                         i1l3507 000E  
                                       i1l3189 0ADD                                         i1l3445 09A5  
                                       i1l3437 0A26                                         i1l3429 0A16  
                                       i1l3517 002E                                         i1l3509 0016  
                                       i1l3447 09AE                                         i1l3439 0A29  
                                       i1l2931 092F                                         i1l2933 0930  
                                       i1l2951 0972                                         i1l2943 08C9  
                                       i1l2935 0935                                         i1l2953 0974  
                                       i1l2945 08CE                                         i1l2937 093A  
                                       i1l2955 0976                                         i1l2947 096C  
                                       i1l2939 093C                                         i1l2949 0971  
                                       i1l2957 0978                                         i1l2973 0859  
                                       i1l2981 08E8                                         i1l2959 097A  
                                       i1l2975 085C                                         i1l2977 08D2  
                                       i1l2979 08DD                                         _FVRCON 0117  
                                       u340_20 0A16                                         u340_21 0A15  
                   __end_of_EUSART_is_tx_ready 093E                                         u341_20 0A1E  
                                       u341_21 0A1D                                         u342_20 0A26  
                                       u270_20 0935                                         u342_21 0A25  
                                       u270_21 0934                                         u343_20 0A2E  
                                       u271_20 093A                                         u343_21 0A2D  
                                       u271_21 0939                                         u280_20 08FA  
                                       u272_20 08CE                                         u360_20 0029  
                                       u280_21 08F9                                         u272_21 08CD  
                                       u360_21 0028                                         u273_20 0971  
                                       u281_20 0909                                         u361_20 002E  
                                       u273_21 0970                                         u281_21 0908  
                                       u361_21 002D                                         u282_20 0918  
                                       u282_21 0917                                         u283_20 0927  
                                       u339_20 0947                                         u355_20 000A  
                                       u283_21 0926                                         u339_21 0946  
                                       u355_21 0009                                         u284_20 0AEE  
                                       u356_20 000E                                         u284_21 0AED  
                                       u356_21 000D                                         u285_20 0AF9  
                                       u357_20 0016                                         u285_21 0AF8  
                                       u357_21 0015                                _max_origem_down 0072  
                                       u286_20 0B13                                         u358_20 001B  
                                       u286_21 0B12                                         u358_21 001A  
                                       u286_25 0B0F                                         u287_20 0ACE  
                                       u359_20 0020                                         u287_21 0ACD  
                                       u359_21 001F                                         u288_20 0AD9  
                                       u288_21 0AD8                                         u289_20 0ADD  
                                       u289_21 0ADC                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                               __end_of___xxtofl 0DB2  
                               __CFG_PWRTE$OFF 0000                               __end_of_col_down 0D05  
                                 _CCPTMRS0bits 029E                    __size_of_PWM3_LoadDutyValue 001C  
                                       ___wmul 09F1                                      ??___fldiv 0054  
                               __CFG_STVREN$ON 0000                                      ??___flmul 003A  
                             __end_of_controle 0775                                      ??___fltol 0024  
                                       _col_up 0775                               __end_of_max_down 0E60  
                      __end_of_TMR4_Initialize 09A3                                         _min_up 0E60  
                                _CCP4_CallBack 0120                                         _update 02A8  
                                       _pulses 00E1            __size_of_IOCBF5_SetInterruptHandler 0009  
         __end_of_TMR4_DefaultInterruptHandler 0004          __size_of_TMR4_DefaultInterruptHandler 0001  
                 _TMR4_DefaultInterruptHandler 0003                             __size_of__Umul8_16 0024  
                              ?_WDT_Initialize 0077                                      ??_sensor1 0077  
                                    ??_sensor2 0077                                      ??_sensor3 0077  
                                    ??_sensor4 0077                       ADC_GetConversion@channel 0023  
   IOCBF5_SetInterruptHandler@InterruptHandler 0020     IOCBF4_SetInterruptHandler@InterruptHandler 0020  
   IOCBF3_SetInterruptHandler@InterruptHandler 0020     IOCBF0_SetInterruptHandler@InterruptHandler 0020  
     TMR4_SetInterruptHandler@InterruptHandler 0020                               ?_PIN_MANAGER_IOC 0077  
                         __size_of_comunicacao 00D3                        __end_of_TMR1_WriteTimer 097D  
                                 ??_IOCBF0_ISR 0077                                   ??_IOCBF3_ISR 0078  
                                 ??_IOCBF4_ISR 0078                                   ??_IOCBF5_ISR 0078  
                             ?_TMR1_Initialize 0077                               ?_PWM3_Initialize 0077  
                                 ___xxtofl@arg 002E                           __size_of_EUSART_Read 000F  
                                 ___xxtofl@exp 002D                              _SYSTEM_Initialize 0A53  
                                 ___xxtofl@val 0024                        __end_of__initialization 004D  
                             ?_CCP4_Initialize 0077                             ?_SYSTEM_Initialize 0077  
                                   ___fltol@f1 0020                       __end_of_CCP4_SetCallBack 0880  
                               __pcstackCOMMON 0077                            ??_SYSTEM_Initialize 0022  
                                    ?_TMR4_ISR 0077         __end_of_IOCBF0_DefaultInterruptHandler 0844  
      __size_of_IOCBF0_DefaultInterruptHandler 0001                 _IOCBF0_DefaultInterruptHandler 0843  
                             ?_TMR2_Initialize 0077                             __end_of_IOCBF0_ISR 0902  
                           __end_of_IOCBF3_ISR 0911                             __end_of_IOCBF4_ISR 0920  
                           __end_of_IOCBF5_ISR 092F                                 _OPTION_REGbits 0095  
                ?_TMR4_DefaultInterruptHandler 0077                ??_EUSART_SetOverrunErrorHandler 0022  
       __end_of_IOCBF3_DefaultInterruptHandler 0845        __size_of_IOCBF3_DefaultInterruptHandler 0001  
               _IOCBF3_DefaultInterruptHandler 0844                    ?_IOCBF4_SetInterruptHandler 0020  
                           __size_of_get_pulse 0025                      __end_of_SYSTEM_Initialize 0A75  
                                   __pbssBANK0 006F                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0130                           __end_of_EUSART_Write 08D2  
                                   _and_ating2 00C8                                     _and_origem 00DA  
                        _TMR4_InterruptHandler 00EB                              __end_of__Umul8_16 0ABD  
                             ??_FVR_Initialize 0020                                     __pmaintext 0B17  
                                _min_fila_down 00CC                                        ?___wmul 0020  
                                   ??_TMR4_ISR 007B                                     __pintentry 0004  
                                      ?_col_up 0077                             __size_of_send_data 0035  
                                      _CCP3CON 0313                                        _CCP4CON 031A  
                                      _BAUDCON 019F                                        ?_min_up 0077  
                             ?_TMR4_Initialize 0077               ??_IOCBF4_DefaultInterruptHandler 0077  
              ?_IOCBF4_DefaultInterruptHandler 0077                                        _APFCON0 011D  
                                      _APFCON1 011E                                        ?_update 0077  
                      __size_of_ADC_Initialize 0008                                      ?___xxtofl 0024  
           __end_of_IOCBF5_SetInterruptHandler 08BF                     _IOCBF5_SetInterruptHandler 08B6  
                                      _OSCTUNE 0098                                      ?_col_down 0077  
                     ??_EUSART_SetErrorHandler 0022                               ?_TMR1_WriteTimer 0077  
                                    ?_controle 0077                                      ?_max_down 0077  
                        controle@max_dutyValue 0058                           _ADC_InterruptHandler 00DC  
                                _min_origem_up 0070                              __end_of_get_pulse 0AE2  
                                      ___fldiv 0481                                        ___flmul 0051  
                                      ___fltol 0C0E                                __size_of___wmul 0020  
                              __size_of_col_up 0082                                        _and_dst 0074  
                              __size_of_min_up 00CD                                        __ptext1 0B9C  
                                      __ptext2 0775                                        __ptext3 0C83  
                                      __ptext4 0635                                        __ptext5 02A8  
                                      __ptext6 0E60                                        __ptext7 0DB2  
                                      __ptext8 084E                                        __ptext9 094D  
                                      _fila_up 00BE                                __size_of_update 01D9  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 0860  
                                    _T2CONbits 001C                                   __size_of_abs 001C  
                                   ??___xxtofl 0028                  __size_of_CCP4_DefaultCallBack 0001  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 0022  
            __size_of_TMR4_SetInterruptHandler 0009                                      _IOCBFbits 0396  
                    ?_TMR4_SetInterruptHandler 0020                                      _IOCBNbits 0395  
                                      _sensor1 0859                                        _sensor2 08D2  
                                      _sensor3 08DD                                        _sensor4 08E8  
                                      _temp_mt 0128                                        _sentido 00D8  
                                    _IOCBPbits 0394                                     ??_col_down 005E  
                   __size_of_SYSTEM_Initialize 0022                                        clrloop0 0854  
                         end_of_initialization 004D                              __end_of_send_data 0B17  
               ??_TMR4_DefaultInterruptHandler 0077                                     ??_controle 004C  
        __end_of_EUSART_SetOverrunErrorHandler 089B         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 0892                                     ??_max_down 0020  
                                      min_up@i 0023                              _EUSART_Initialize 0A75  
                        __end_of_gerenciamento 0C0E                             ?_EUSART_Initialize 0077  
                                    _RCSTAbits 019D                                  controle@count 005C  
                           _EUSART_is_rx_ready 084E                                        update@i 002B  
                                controle@route 0052                             _EUSART_is_tx_ready 092F  
                          ??_EUSART_Initialize 0022                               ??_WDT_Initialize 0020  
                          ?_EUSART_is_rx_ready 0077                            ?_EUSART_is_tx_ready 0077  
                        controle@min_dutyValue 0056                               __CFG_FOSC$INTOSC 0000  
                                ___xxtofl@sign 002C                          __size_of_EUSART_Write 000A  
                                  ___fldiv@grs 0060                                    ___fldiv@rem 0059  
                 ??_IOCBF0_SetInterruptHandler 0022                   ??_IOCBF3_SetInterruptHandler 0022  
              __size_of_EUSART_SetErrorHandler 0009                                    ___flmul@grs 0040  
                    __end_of_EUSART_Initialize 0A99                           ??_EUSART_is_rx_ready 0020  
                         ??_EUSART_is_tx_ready 0077                                      _TXSTAbits 019E  
                     __size_of_CCP4_CaptureISR 0016              CCP4_DefaultCallBack@capturedValue 0079  
                   __end_of_PWM3_LoadDutyValue 09F1                              controle@dutyValue 005A  
                            ?_CCP4_SetCallBack 0020                             ??_CCP4_SetCallBack 0022  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 0A11  
                                 _EUSART_Write 08C8                                 __end_of_col_up 07F7  
                            __size_of_TMR4_ISR 000F                                 _ADC_Initialize 0867  
          __size_of_IOCBF0_SetInterruptHandler 0009            __size_of_IOCBF3_SetInterruptHandler 0009  
                       ?_OSCILLATOR_Initialize 0077                                 __end_of_min_up 0F2D  
                               __end_of_update 0481                                  ??_comunicacao 0066  
                          start_initialization 0036                __size_of_PIN_MANAGER_Initialize 0044  
                                  __end_of_abs 09D5                                  ??_EUSART_Read 0020  
                       _EUSART_is_tx_ready$167 0077                       __size_of_PIN_MANAGER_IOC 0021  
               ?_EUSART_SetOverrunErrorHandler 0020                       __size_of_PWM3_Initialize 0009  
                     __size_of_TMR1_Initialize 0010                     _EUSART_FramingErrorHandler 0126  
                                     ??___wmul 0024                         _EUSART_SetErrorHandler 0880  
                     __size_of_CCP4_Initialize 0012                         __end_of_ADC_Initialize 086F  
                                    __Umul8_16 0A99                                       ??_col_up 005E  
                                     ??_min_up 0020                                       ??_update 0025  
                        CCP4_CaptureISR@module 007C                                      ___fldiv@a 004C  
                                    ___fldiv@b 0050                                      ___flmul@a 0036  
                                    ___flmul@b 0032                                    __pbssCOMMON 0070  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                     __size_of_TMR2_Initialize 0008                    ?_IOCBF5_SetInterruptHandler 0020  
                            __size_of___xxtofl 00AD                            comunicacao@position 006B  
       __end_of_IOCBF4_DefaultInterruptHandler 0846        __size_of_IOCBF4_DefaultInterruptHandler 0001  
               _IOCBF4_DefaultInterruptHandler 0845                            __end_of_comunicacao 1000  
                            __size_of_col_down 0082                     __size_of_EUSART_Initialize 0024  
                          __end_of_EUSART_Read 095C                              __size_of_controle 0140  
                                    __pnvBANK1 00E3                                      __pnvBANK2 0120  
                                    _and_ating 006F                                      _ccp_value 00DF  
                            __size_of_max_down 00AE                        _IOCBF3_InterruptHandler 00E7  
                       _PIN_MANAGER_Initialize 0B58               __end_of_TMR4_SetInterruptHandler 0800  
                                     ?___fldiv 004C                              ??_CCP4_CaptureISR 007B  
                                     ?___flmul 0032                                       ?___fltol 0020  
                                   ?__Umul8_16 0020                                      _fila_down 00B4  
                              ?_ADC_Initialize 0077                   ??_INTERRUPT_InterruptManager 007E  
                                   send_data@i 0079                                      _distancia 00D0  
                                    _get_pulse 0ABD               ??_IOCBF5_DefaultInterruptHandler 0077  
              ?_IOCBF5_DefaultInterruptHandler 0077                                      _aux_tempo 00D6  
           __end_of_IOCBF0_SetInterruptHandler 08A4                     _IOCBF0_SetInterruptHandler 089B  
           __end_of_IOCBF3_SetInterruptHandler 08AD                     _IOCBF3_SetInterruptHandler 08A4  
                                     ?_sensor1 0077                                       ?_sensor2 0077  
                                     ?_sensor3 0077                                       ?_sensor4 0077  
                     __size_of_TMR4_Initialize 0014                                 ___wmul@product 0024  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0020  
                                    clear_ram0 0853                   __end_of_CCP4_DefaultCallBack 0843  
                                    _send_data 0AE2                                       _PIE3bits 0093  
                            _eusartRxLastError 0076                       __size_of_TMR1_WriteTimer 0011  
          __size_of_INTERRUPT_InterruptManager 0030                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0022                                       _PIR3bits 0013  
                                    _origem_up 00A0              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR4_ISR 093E                              ??_PIN_MANAGER_IOC 0078  
                            ??_TMR1_Initialize 0020                              ??_PWM3_Initialize 0020  
                                   ?_get_pulse 0079                                     _ADCON0bits 009D  
                                    _out_value 00CA                              ___wmul@multiplier 0020  
                      __size_of_FVR_Initialize 0004                              ??_CCP4_Initialize 0022  
                                  _comunicacao 0F2D                                    _EUSART_Read 094D  
                                    controle@a 0054                              ??_TMR2_Initialize 0020  
                                   ?_send_data 0077                                      max_down@i 0023  
                            _ADC_GetConversion 0A32                        ??_OSCILLATOR_Initialize 0020  
                                  ??__Umul8_16 0022                            _EUSART_ErrorHandler 0122  
                           ?_ADC_GetConversion 0020                                    _max_fila_up 00CE  
                             __size_of___fldiv 01B4                               __size_of___flmul 0257  
                             __size_of___fltol 0075                       _TMR4_SetInterruptHandler 07F7  
                           _PWM3_LoadDutyValue 09D5                            ??_ADC_GetConversion 0022  
                      _IOCBF4_InterruptHandler 00E5                                       ___xxtofl 0D05  
                    __size_of_CCP4_SetCallBack 0009                                       __ptext10 09F1  
                                     __ptext11 09D5                                       __ptext20 0A53  
                                     __ptext12 0A32                                       __ptext21 084A  
                                     __ptext13 09B9                                     _T1GCONbits 0019  
                                     __ptext30 08A4                                       __ptext22 098F  
                                     __ptext14 0F2D                                       __ptext31 089B  
                                     __ptext23 07F7                                       __ptext15 0D05  
                                     __ptext40 0867                                       __ptext32 0860  
                                     __ptext24 086F                                       __ptext16 0C0E  
                                     __ptext33 0846                                       __ptext25 095C  
                                     __ptext17 0051                                       __ptext50 08E8  
                                     __ptext42 093E                                       __ptext34 0A75  
                                     __ptext26 08BF                                       __ptext18 0A99  
                                     __ptext51 0911                                       __ptext43 0003  
                                     __ptext35 0892                                       __ptext27 0B58  
                                     __ptext19 0481                                       __ptext60 09A3  
                                     __ptext52 0845                                       __ptext44 0AE2  
                                     __ptext36 0889                                       __ptext28 08B6  
                                     __ptext61 0842                                       __ptext53 08DD  
                                     __ptext45 092F                                       __ptext37 0880  
                                     __ptext29 08AD                                       __ptext62 0ABD  
                                     __ptext54 0902                                       __ptext46 08C8  
                                     __ptext38 097D                                       __ptext63 096C  
                                     __ptext55 0844                                       __ptext47 0A11  
                                     __ptext39 0877                                       __ptext56 08D2  
                                     __ptext48 0920                                       __ptext57 08F3  
                                     __ptext49 0002                                       __ptext58 0843  
                          ?_PWM3_LoadDutyValue 0020                                       __ptext59 0859  
                       __size_of_gerenciamento 0072                               __size_of_sensor1 0007  
                             __size_of_sensor2 000B                               __size_of_sensor3 000B  
                             __size_of_sensor4 000B                                       _col_down 0C83  
                 ??_IOCBF4_SetInterruptHandler 0022                                     _IOCBF0_ISR 08F3  
                                   _IOCBF3_ISR 0902                                     _IOCBF4_ISR 0911  
                                   _IOCBF5_ISR 0920                                       _controle 0635  
                                     _max_down 0DB2                              ??_TMR4_Initialize 0022  
                  __size_of_EUSART_is_rx_ready 0005                                  __size_of_main 0041  
                  __size_of_EUSART_is_tx_ready 000F                      __end_of_ADC_GetConversion 0A53  
                      ?_EUSART_SetErrorHandler 0020                                       _sentido2 00D4  
EUSART_SetOverrunErrorHandler@interruptHandler 0020                           ??_PWM3_LoadDutyValue 0022  
                                     int$flags 007E                                controle@destiny 0050  
           __end_of_INTERRUPT_InterruptManager 0034                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0892         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 0889                              ??_TMR1_WriteTimer 0079  
                                  ??_get_pulse 007B            __size_of_IOCBF4_SetInterruptHandler 0009  
                                    update@aux 0028                                     _INTCONbits 000B  
                         _CCP4_DefaultCallBack 0842                                     _FVRCONbits 0117  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                              _CCP4_CaptureISR 09A3                        ?_PIN_MANAGER_Initialize 0077  
               __end_of_EUSART_SetErrorHandler 0889                              __CFG_CLKOUTEN$OFF 0000  
                                  ??_send_data 0078                               ??_ADC_Initialize 0020  
                                _gerenciamento 0B9C                                    _origem_down 00AA  
EUSART_SetFramingErrorHandler@interruptHandler 0020                    PWM3_LoadDutyValue@dutyValue 0020  
                               _FVR_Initialize 0846                         __Umul8_16@multiplicand 0020  
                        ?_CCP4_DefaultCallBack 0079                    ?_IOCBF0_SetInterruptHandler 0020  
                  ?_IOCBF3_SetInterruptHandler 0020                                    ?_IOCBF0_ISR 0077  
                           EUSART_Write@txData 0077                                    ?_IOCBF3_ISR 0077  
                                  ?_IOCBF4_ISR 0077                                    ?_IOCBF5_ISR 0077  
               __end_of_PIN_MANAGER_Initialize 0B9C               ??_IOCBF0_DefaultInterruptHandler 0077  
              ?_IOCBF0_DefaultInterruptHandler 0077         __end_of_IOCBF5_DefaultInterruptHandler 0003  
      __size_of_IOCBF5_DefaultInterruptHandler 0001                 _IOCBF5_DefaultInterruptHandler 0002  
                              _PIN_MANAGER_IOC 0A11                           __Umul8_16@multiplier 0028  
                   __size_of_ADC_GetConversion 0021                        _IOCBF5_InterruptHandler 00E3  
                              _TMR1_Initialize 095C                                _PWM3_Initialize 08BF  
                            __Umul8_16@product 0024                                 ?_gerenciamento 0077  
