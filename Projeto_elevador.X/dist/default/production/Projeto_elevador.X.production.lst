

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec 13 14:21:13 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     5                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	dabs	1,0x7E,2
    79  0000                     
    80                           ; Version 2.10
    81                           ; Generated 31/07/2019 GMT
    82                           ; 
    83                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC16F1827 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  008C                     	;# 
   144  008D                     	;# 
   145  0091                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0095                     	;# 
   150  0096                     	;# 
   151  0097                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009A                     	;# 
   155  009B                     	;# 
   156  009B                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  0111                     	;# 
   163  0112                     	;# 
   164  0113                     	;# 
   165  0114                     	;# 
   166  0115                     	;# 
   167  0116                     	;# 
   168  0117                     	;# 
   169  0118                     	;# 
   170  0119                     	;# 
   171  011A                     	;# 
   172  011B                     	;# 
   173  011D                     	;# 
   174  011E                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  0191                     	;# 
   178  0191                     	;# 
   179  0192                     	;# 
   180  0193                     	;# 
   181  0193                     	;# 
   182  0193                     	;# 
   183  0194                     	;# 
   184  0195                     	;# 
   185  0196                     	;# 
   186  0199                     	;# 
   187  019A                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019B                     	;# 
   192  019C                     	;# 
   193  019C                     	;# 
   194  019D                     	;# 
   195  019E                     	;# 
   196  019F                     	;# 
   197  020C                     	;# 
   198  020D                     	;# 
   199  0211                     	;# 
   200  0211                     	;# 
   201  0212                     	;# 
   202  0212                     	;# 
   203  0213                     	;# 
   204  0213                     	;# 
   205  0214                     	;# 
   206  0214                     	;# 
   207  0215                     	;# 
   208  0215                     	;# 
   209  0215                     	;# 
   210  0216                     	;# 
   211  0216                     	;# 
   212  0217                     	;# 
   213  0217                     	;# 
   214  0219                     	;# 
   215  021A                     	;# 
   216  021B                     	;# 
   217  021C                     	;# 
   218  021D                     	;# 
   219  021E                     	;# 
   220  021F                     	;# 
   221  0291                     	;# 
   222  0291                     	;# 
   223  0292                     	;# 
   224  0293                     	;# 
   225  0294                     	;# 
   226  0295                     	;# 
   227  0295                     	;# 
   228  0296                     	;# 
   229  0298                     	;# 
   230  0298                     	;# 
   231  0299                     	;# 
   232  029A                     	;# 
   233  029B                     	;# 
   234  029C                     	;# 
   235  029C                     	;# 
   236  029D                     	;# 
   237  029E                     	;# 
   238  029E                     	;# 
   239  0311                     	;# 
   240  0311                     	;# 
   241  0312                     	;# 
   242  0313                     	;# 
   243  0318                     	;# 
   244  0318                     	;# 
   245  0319                     	;# 
   246  031A                     	;# 
   247  0394                     	;# 
   248  0395                     	;# 
   249  0396                     	;# 
   250  039A                     	;# 
   251  039C                     	;# 
   252  039D                     	;# 
   253  039E                     	;# 
   254  039F                     	;# 
   255  0415                     	;# 
   256  0416                     	;# 
   257  0417                     	;# 
   258  041C                     	;# 
   259  041D                     	;# 
   260  041E                     	;# 
   261  0FE4                     	;# 
   262  0FE5                     	;# 
   263  0FE6                     	;# 
   264  0FE7                     	;# 
   265  0FE8                     	;# 
   266  0FE9                     	;# 
   267  0FEA                     	;# 
   268  0FEB                     	;# 
   269  0FED                     	;# 
   270  0FEE                     	;# 
   271  0FEF                     	;# 
   272  0000                     	;# 
   273  0001                     	;# 
   274  0002                     	;# 
   275  0003                     	;# 
   276  0004                     	;# 
   277  0005                     	;# 
   278  0006                     	;# 
   279  0007                     	;# 
   280  0008                     	;# 
   281  0009                     	;# 
   282  000A                     	;# 
   283  000B                     	;# 
   284  000C                     	;# 
   285  000D                     	;# 
   286  0011                     	;# 
   287  0012                     	;# 
   288  0013                     	;# 
   289  0014                     	;# 
   290  0015                     	;# 
   291  0016                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  001A                     	;# 
   297  001B                     	;# 
   298  001C                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  0091                     	;# 
   304  0092                     	;# 
   305  0093                     	;# 
   306  0094                     	;# 
   307  0095                     	;# 
   308  0096                     	;# 
   309  0097                     	;# 
   310  0098                     	;# 
   311  0099                     	;# 
   312  009A                     	;# 
   313  009B                     	;# 
   314  009B                     	;# 
   315  009C                     	;# 
   316  009D                     	;# 
   317  009E                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  0111                     	;# 
   321  0112                     	;# 
   322  0113                     	;# 
   323  0114                     	;# 
   324  0115                     	;# 
   325  0116                     	;# 
   326  0117                     	;# 
   327  0118                     	;# 
   328  0119                     	;# 
   329  011A                     	;# 
   330  011B                     	;# 
   331  011D                     	;# 
   332  011E                     	;# 
   333  018C                     	;# 
   334  018D                     	;# 
   335  0191                     	;# 
   336  0191                     	;# 
   337  0192                     	;# 
   338  0193                     	;# 
   339  0193                     	;# 
   340  0193                     	;# 
   341  0194                     	;# 
   342  0195                     	;# 
   343  0196                     	;# 
   344  0199                     	;# 
   345  019A                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019B                     	;# 
   350  019C                     	;# 
   351  019C                     	;# 
   352  019D                     	;# 
   353  019E                     	;# 
   354  019F                     	;# 
   355  020C                     	;# 
   356  020D                     	;# 
   357  0211                     	;# 
   358  0211                     	;# 
   359  0212                     	;# 
   360  0212                     	;# 
   361  0213                     	;# 
   362  0213                     	;# 
   363  0214                     	;# 
   364  0214                     	;# 
   365  0215                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0216                     	;# 
   369  0216                     	;# 
   370  0217                     	;# 
   371  0217                     	;# 
   372  0219                     	;# 
   373  021A                     	;# 
   374  021B                     	;# 
   375  021C                     	;# 
   376  021D                     	;# 
   377  021E                     	;# 
   378  021F                     	;# 
   379  0291                     	;# 
   380  0291                     	;# 
   381  0292                     	;# 
   382  0293                     	;# 
   383  0294                     	;# 
   384  0295                     	;# 
   385  0295                     	;# 
   386  0296                     	;# 
   387  0298                     	;# 
   388  0298                     	;# 
   389  0299                     	;# 
   390  029A                     	;# 
   391  029B                     	;# 
   392  029C                     	;# 
   393  029C                     	;# 
   394  029D                     	;# 
   395  029E                     	;# 
   396  029E                     	;# 
   397  0311                     	;# 
   398  0311                     	;# 
   399  0312                     	;# 
   400  0313                     	;# 
   401  0318                     	;# 
   402  0318                     	;# 
   403  0319                     	;# 
   404  031A                     	;# 
   405  0394                     	;# 
   406  0395                     	;# 
   407  0396                     	;# 
   408  039A                     	;# 
   409  039C                     	;# 
   410  039D                     	;# 
   411  039E                     	;# 
   412  039F                     	;# 
   413  0415                     	;# 
   414  0416                     	;# 
   415  0417                     	;# 
   416  041C                     	;# 
   417  041D                     	;# 
   418  041E                     	;# 
   419  0FE4                     	;# 
   420  0FE5                     	;# 
   421  0FE6                     	;# 
   422  0FE7                     	;# 
   423  0FE8                     	;# 
   424  0FE9                     	;# 
   425  0FEA                     	;# 
   426  0FEB                     	;# 
   427  0FED                     	;# 
   428  0FEE                     	;# 
   429  0FEF                     	;# 
   430  0000                     	;# 
   431  0001                     	;# 
   432  0002                     	;# 
   433  0003                     	;# 
   434  0004                     	;# 
   435  0005                     	;# 
   436  0006                     	;# 
   437  0007                     	;# 
   438  0008                     	;# 
   439  0009                     	;# 
   440  000A                     	;# 
   441  000B                     	;# 
   442  000C                     	;# 
   443  000D                     	;# 
   444  0011                     	;# 
   445  0012                     	;# 
   446  0013                     	;# 
   447  0014                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0016                     	;# 
   451  0017                     	;# 
   452  0018                     	;# 
   453  0019                     	;# 
   454  001A                     	;# 
   455  001B                     	;# 
   456  001C                     	;# 
   457  001E                     	;# 
   458  001F                     	;# 
   459  008C                     	;# 
   460  008D                     	;# 
   461  0091                     	;# 
   462  0092                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0095                     	;# 
   466  0096                     	;# 
   467  0097                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009A                     	;# 
   471  009B                     	;# 
   472  009B                     	;# 
   473  009C                     	;# 
   474  009D                     	;# 
   475  009E                     	;# 
   476  010C                     	;# 
   477  010D                     	;# 
   478  0111                     	;# 
   479  0112                     	;# 
   480  0113                     	;# 
   481  0114                     	;# 
   482  0115                     	;# 
   483  0116                     	;# 
   484  0117                     	;# 
   485  0118                     	;# 
   486  0119                     	;# 
   487  011A                     	;# 
   488  011B                     	;# 
   489  011D                     	;# 
   490  011E                     	;# 
   491  018C                     	;# 
   492  018D                     	;# 
   493  0191                     	;# 
   494  0191                     	;# 
   495  0192                     	;# 
   496  0193                     	;# 
   497  0193                     	;# 
   498  0193                     	;# 
   499  0194                     	;# 
   500  0195                     	;# 
   501  0196                     	;# 
   502  0199                     	;# 
   503  019A                     	;# 
   504  019B                     	;# 
   505  019B                     	;# 
   506  019B                     	;# 
   507  019B                     	;# 
   508  019C                     	;# 
   509  019C                     	;# 
   510  019D                     	;# 
   511  019E                     	;# 
   512  019F                     	;# 
   513  020C                     	;# 
   514  020D                     	;# 
   515  0211                     	;# 
   516  0211                     	;# 
   517  0212                     	;# 
   518  0212                     	;# 
   519  0213                     	;# 
   520  0213                     	;# 
   521  0214                     	;# 
   522  0214                     	;# 
   523  0215                     	;# 
   524  0215                     	;# 
   525  0215                     	;# 
   526  0216                     	;# 
   527  0216                     	;# 
   528  0217                     	;# 
   529  0217                     	;# 
   530  0219                     	;# 
   531  021A                     	;# 
   532  021B                     	;# 
   533  021C                     	;# 
   534  021D                     	;# 
   535  021E                     	;# 
   536  021F                     	;# 
   537  0291                     	;# 
   538  0291                     	;# 
   539  0292                     	;# 
   540  0293                     	;# 
   541  0294                     	;# 
   542  0295                     	;# 
   543  0295                     	;# 
   544  0296                     	;# 
   545  0298                     	;# 
   546  0298                     	;# 
   547  0299                     	;# 
   548  029A                     	;# 
   549  029B                     	;# 
   550  029C                     	;# 
   551  029C                     	;# 
   552  029D                     	;# 
   553  029E                     	;# 
   554  029E                     	;# 
   555  0311                     	;# 
   556  0311                     	;# 
   557  0312                     	;# 
   558  0313                     	;# 
   559  0318                     	;# 
   560  0318                     	;# 
   561  0319                     	;# 
   562  031A                     	;# 
   563  0394                     	;# 
   564  0395                     	;# 
   565  0396                     	;# 
   566  039A                     	;# 
   567  039C                     	;# 
   568  039D                     	;# 
   569  039E                     	;# 
   570  039F                     	;# 
   571  0415                     	;# 
   572  0416                     	;# 
   573  0417                     	;# 
   574  041C                     	;# 
   575  041D                     	;# 
   576  041E                     	;# 
   577  0FE4                     	;# 
   578  0FE5                     	;# 
   579  0FE6                     	;# 
   580  0FE7                     	;# 
   581  0FE8                     	;# 
   582  0FE9                     	;# 
   583  0FEA                     	;# 
   584  0FEB                     	;# 
   585  0FED                     	;# 
   586  0FEE                     	;# 
   587  0FEF                     	;# 
   588  0000                     	;# 
   589  0001                     	;# 
   590  0002                     	;# 
   591  0003                     	;# 
   592  0004                     	;# 
   593  0005                     	;# 
   594  0006                     	;# 
   595  0007                     	;# 
   596  0008                     	;# 
   597  0009                     	;# 
   598  000A                     	;# 
   599  000B                     	;# 
   600  000C                     	;# 
   601  000D                     	;# 
   602  0011                     	;# 
   603  0012                     	;# 
   604  0013                     	;# 
   605  0014                     	;# 
   606  0015                     	;# 
   607  0016                     	;# 
   608  0016                     	;# 
   609  0017                     	;# 
   610  0018                     	;# 
   611  0019                     	;# 
   612  001A                     	;# 
   613  001B                     	;# 
   614  001C                     	;# 
   615  001E                     	;# 
   616  001F                     	;# 
   617  008C                     	;# 
   618  008D                     	;# 
   619  0091                     	;# 
   620  0092                     	;# 
   621  0093                     	;# 
   622  0094                     	;# 
   623  0095                     	;# 
   624  0096                     	;# 
   625  0097                     	;# 
   626  0098                     	;# 
   627  0099                     	;# 
   628  009A                     	;# 
   629  009B                     	;# 
   630  009B                     	;# 
   631  009C                     	;# 
   632  009D                     	;# 
   633  009E                     	;# 
   634  010C                     	;# 
   635  010D                     	;# 
   636  0111                     	;# 
   637  0112                     	;# 
   638  0113                     	;# 
   639  0114                     	;# 
   640  0115                     	;# 
   641  0116                     	;# 
   642  0117                     	;# 
   643  0118                     	;# 
   644  0119                     	;# 
   645  011A                     	;# 
   646  011B                     	;# 
   647  011D                     	;# 
   648  011E                     	;# 
   649  018C                     	;# 
   650  018D                     	;# 
   651  0191                     	;# 
   652  0191                     	;# 
   653  0192                     	;# 
   654  0193                     	;# 
   655  0193                     	;# 
   656  0193                     	;# 
   657  0194                     	;# 
   658  0195                     	;# 
   659  0196                     	;# 
   660  0199                     	;# 
   661  019A                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019B                     	;# 
   665  019B                     	;# 
   666  019C                     	;# 
   667  019C                     	;# 
   668  019D                     	;# 
   669  019E                     	;# 
   670  019F                     	;# 
   671  020C                     	;# 
   672  020D                     	;# 
   673  0211                     	;# 
   674  0211                     	;# 
   675  0212                     	;# 
   676  0212                     	;# 
   677  0213                     	;# 
   678  0213                     	;# 
   679  0214                     	;# 
   680  0214                     	;# 
   681  0215                     	;# 
   682  0215                     	;# 
   683  0215                     	;# 
   684  0216                     	;# 
   685  0216                     	;# 
   686  0217                     	;# 
   687  0217                     	;# 
   688  0219                     	;# 
   689  021A                     	;# 
   690  021B                     	;# 
   691  021C                     	;# 
   692  021D                     	;# 
   693  021E                     	;# 
   694  021F                     	;# 
   695  0291                     	;# 
   696  0291                     	;# 
   697  0292                     	;# 
   698  0293                     	;# 
   699  0294                     	;# 
   700  0295                     	;# 
   701  0295                     	;# 
   702  0296                     	;# 
   703  0298                     	;# 
   704  0298                     	;# 
   705  0299                     	;# 
   706  029A                     	;# 
   707  029B                     	;# 
   708  029C                     	;# 
   709  029C                     	;# 
   710  029D                     	;# 
   711  029E                     	;# 
   712  029E                     	;# 
   713  0311                     	;# 
   714  0311                     	;# 
   715  0312                     	;# 
   716  0313                     	;# 
   717  0318                     	;# 
   718  0318                     	;# 
   719  0319                     	;# 
   720  031A                     	;# 
   721  0394                     	;# 
   722  0395                     	;# 
   723  0396                     	;# 
   724  039A                     	;# 
   725  039C                     	;# 
   726  039D                     	;# 
   727  039E                     	;# 
   728  039F                     	;# 
   729  0415                     	;# 
   730  0416                     	;# 
   731  0417                     	;# 
   732  041C                     	;# 
   733  041D                     	;# 
   734  041E                     	;# 
   735  0FE4                     	;# 
   736  0FE5                     	;# 
   737  0FE6                     	;# 
   738  0FE7                     	;# 
   739  0FE8                     	;# 
   740  0FE9                     	;# 
   741  0FEA                     	;# 
   742  0FEB                     	;# 
   743  0FED                     	;# 
   744  0FEE                     	;# 
   745  0FEF                     	;# 
   746  0000                     	;# 
   747  0001                     	;# 
   748  0002                     	;# 
   749  0003                     	;# 
   750  0004                     	;# 
   751  0005                     	;# 
   752  0006                     	;# 
   753  0007                     	;# 
   754  0008                     	;# 
   755  0009                     	;# 
   756  000A                     	;# 
   757  000B                     	;# 
   758  000C                     	;# 
   759  000D                     	;# 
   760  0011                     	;# 
   761  0012                     	;# 
   762  0013                     	;# 
   763  0014                     	;# 
   764  0015                     	;# 
   765  0016                     	;# 
   766  0016                     	;# 
   767  0017                     	;# 
   768  0018                     	;# 
   769  0019                     	;# 
   770  001A                     	;# 
   771  001B                     	;# 
   772  001C                     	;# 
   773  001E                     	;# 
   774  001F                     	;# 
   775  008C                     	;# 
   776  008D                     	;# 
   777  0091                     	;# 
   778  0092                     	;# 
   779  0093                     	;# 
   780  0094                     	;# 
   781  0095                     	;# 
   782  0096                     	;# 
   783  0097                     	;# 
   784  0098                     	;# 
   785  0099                     	;# 
   786  009A                     	;# 
   787  009B                     	;# 
   788  009B                     	;# 
   789  009C                     	;# 
   790  009D                     	;# 
   791  009E                     	;# 
   792  010C                     	;# 
   793  010D                     	;# 
   794  0111                     	;# 
   795  0112                     	;# 
   796  0113                     	;# 
   797  0114                     	;# 
   798  0115                     	;# 
   799  0116                     	;# 
   800  0117                     	;# 
   801  0118                     	;# 
   802  0119                     	;# 
   803  011A                     	;# 
   804  011B                     	;# 
   805  011D                     	;# 
   806  011E                     	;# 
   807  018C                     	;# 
   808  018D                     	;# 
   809  0191                     	;# 
   810  0191                     	;# 
   811  0192                     	;# 
   812  0193                     	;# 
   813  0193                     	;# 
   814  0193                     	;# 
   815  0194                     	;# 
   816  0195                     	;# 
   817  0196                     	;# 
   818  0199                     	;# 
   819  019A                     	;# 
   820  019B                     	;# 
   821  019B                     	;# 
   822  019B                     	;# 
   823  019B                     	;# 
   824  019C                     	;# 
   825  019C                     	;# 
   826  019D                     	;# 
   827  019E                     	;# 
   828  019F                     	;# 
   829  020C                     	;# 
   830  020D                     	;# 
   831  0211                     	;# 
   832  0211                     	;# 
   833  0212                     	;# 
   834  0212                     	;# 
   835  0213                     	;# 
   836  0213                     	;# 
   837  0214                     	;# 
   838  0214                     	;# 
   839  0215                     	;# 
   840  0215                     	;# 
   841  0215                     	;# 
   842  0216                     	;# 
   843  0216                     	;# 
   844  0217                     	;# 
   845  0217                     	;# 
   846  0219                     	;# 
   847  021A                     	;# 
   848  021B                     	;# 
   849  021C                     	;# 
   850  021D                     	;# 
   851  021E                     	;# 
   852  021F                     	;# 
   853  0291                     	;# 
   854  0291                     	;# 
   855  0292                     	;# 
   856  0293                     	;# 
   857  0294                     	;# 
   858  0295                     	;# 
   859  0295                     	;# 
   860  0296                     	;# 
   861  0298                     	;# 
   862  0298                     	;# 
   863  0299                     	;# 
   864  029A                     	;# 
   865  029B                     	;# 
   866  029C                     	;# 
   867  029C                     	;# 
   868  029D                     	;# 
   869  029E                     	;# 
   870  029E                     	;# 
   871  0311                     	;# 
   872  0311                     	;# 
   873  0312                     	;# 
   874  0313                     	;# 
   875  0318                     	;# 
   876  0318                     	;# 
   877  0319                     	;# 
   878  031A                     	;# 
   879  0394                     	;# 
   880  0395                     	;# 
   881  0396                     	;# 
   882  039A                     	;# 
   883  039C                     	;# 
   884  039D                     	;# 
   885  039E                     	;# 
   886  039F                     	;# 
   887  0415                     	;# 
   888  0416                     	;# 
   889  0417                     	;# 
   890  041C                     	;# 
   891  041D                     	;# 
   892  041E                     	;# 
   893  0FE4                     	;# 
   894  0FE5                     	;# 
   895  0FE6                     	;# 
   896  0FE7                     	;# 
   897  0FE8                     	;# 
   898  0FE9                     	;# 
   899  0FEA                     	;# 
   900  0FEB                     	;# 
   901  0FED                     	;# 
   902  0FEE                     	;# 
   903  0FEF                     	;# 
   904  0000                     	;# 
   905  0001                     	;# 
   906  0002                     	;# 
   907  0003                     	;# 
   908  0004                     	;# 
   909  0005                     	;# 
   910  0006                     	;# 
   911  0007                     	;# 
   912  0008                     	;# 
   913  0009                     	;# 
   914  000A                     	;# 
   915  000B                     	;# 
   916  000C                     	;# 
   917  000D                     	;# 
   918  0011                     	;# 
   919  0012                     	;# 
   920  0013                     	;# 
   921  0014                     	;# 
   922  0015                     	;# 
   923  0016                     	;# 
   924  0016                     	;# 
   925  0017                     	;# 
   926  0018                     	;# 
   927  0019                     	;# 
   928  001A                     	;# 
   929  001B                     	;# 
   930  001C                     	;# 
   931  001E                     	;# 
   932  001F                     	;# 
   933  008C                     	;# 
   934  008D                     	;# 
   935  0091                     	;# 
   936  0092                     	;# 
   937  0093                     	;# 
   938  0094                     	;# 
   939  0095                     	;# 
   940  0096                     	;# 
   941  0097                     	;# 
   942  0098                     	;# 
   943  0099                     	;# 
   944  009A                     	;# 
   945  009B                     	;# 
   946  009B                     	;# 
   947  009C                     	;# 
   948  009D                     	;# 
   949  009E                     	;# 
   950  010C                     	;# 
   951  010D                     	;# 
   952  0111                     	;# 
   953  0112                     	;# 
   954  0113                     	;# 
   955  0114                     	;# 
   956  0115                     	;# 
   957  0116                     	;# 
   958  0117                     	;# 
   959  0118                     	;# 
   960  0119                     	;# 
   961  011A                     	;# 
   962  011B                     	;# 
   963  011D                     	;# 
   964  011E                     	;# 
   965  018C                     	;# 
   966  018D                     	;# 
   967  0191                     	;# 
   968  0191                     	;# 
   969  0192                     	;# 
   970  0193                     	;# 
   971  0193                     	;# 
   972  0193                     	;# 
   973  0194                     	;# 
   974  0195                     	;# 
   975  0196                     	;# 
   976  0199                     	;# 
   977  019A                     	;# 
   978  019B                     	;# 
   979  019B                     	;# 
   980  019B                     	;# 
   981  019B                     	;# 
   982  019C                     	;# 
   983  019C                     	;# 
   984  019D                     	;# 
   985  019E                     	;# 
   986  019F                     	;# 
   987  020C                     	;# 
   988  020D                     	;# 
   989  0211                     	;# 
   990  0211                     	;# 
   991  0212                     	;# 
   992  0212                     	;# 
   993  0213                     	;# 
   994  0213                     	;# 
   995  0214                     	;# 
   996  0214                     	;# 
   997  0215                     	;# 
   998  0215                     	;# 
   999  0215                     	;# 
  1000  0216                     	;# 
  1001  0216                     	;# 
  1002  0217                     	;# 
  1003  0217                     	;# 
  1004  0219                     	;# 
  1005  021A                     	;# 
  1006  021B                     	;# 
  1007  021C                     	;# 
  1008  021D                     	;# 
  1009  021E                     	;# 
  1010  021F                     	;# 
  1011  0291                     	;# 
  1012  0291                     	;# 
  1013  0292                     	;# 
  1014  0293                     	;# 
  1015  0294                     	;# 
  1016  0295                     	;# 
  1017  0295                     	;# 
  1018  0296                     	;# 
  1019  0298                     	;# 
  1020  0298                     	;# 
  1021  0299                     	;# 
  1022  029A                     	;# 
  1023  029B                     	;# 
  1024  029C                     	;# 
  1025  029C                     	;# 
  1026  029D                     	;# 
  1027  029E                     	;# 
  1028  029E                     	;# 
  1029  0311                     	;# 
  1030  0311                     	;# 
  1031  0312                     	;# 
  1032  0313                     	;# 
  1033  0318                     	;# 
  1034  0318                     	;# 
  1035  0319                     	;# 
  1036  031A                     	;# 
  1037  0394                     	;# 
  1038  0395                     	;# 
  1039  0396                     	;# 
  1040  039A                     	;# 
  1041  039C                     	;# 
  1042  039D                     	;# 
  1043  039E                     	;# 
  1044  039F                     	;# 
  1045  0415                     	;# 
  1046  0416                     	;# 
  1047  0417                     	;# 
  1048  041C                     	;# 
  1049  041D                     	;# 
  1050  041E                     	;# 
  1051  0FE4                     	;# 
  1052  0FE5                     	;# 
  1053  0FE6                     	;# 
  1054  0FE7                     	;# 
  1055  0FE8                     	;# 
  1056  0FE9                     	;# 
  1057  0FEA                     	;# 
  1058  0FEB                     	;# 
  1059  0FED                     	;# 
  1060  0FEE                     	;# 
  1061  0FEF                     	;# 
  1062  0000                     	;# 
  1063  0001                     	;# 
  1064  0002                     	;# 
  1065  0003                     	;# 
  1066  0004                     	;# 
  1067  0005                     	;# 
  1068  0006                     	;# 
  1069  0007                     	;# 
  1070  0008                     	;# 
  1071  0009                     	;# 
  1072  000A                     	;# 
  1073  000B                     	;# 
  1074  000C                     	;# 
  1075  000D                     	;# 
  1076  0011                     	;# 
  1077  0012                     	;# 
  1078  0013                     	;# 
  1079  0014                     	;# 
  1080  0015                     	;# 
  1081  0016                     	;# 
  1082  0016                     	;# 
  1083  0017                     	;# 
  1084  0018                     	;# 
  1085  0019                     	;# 
  1086  001A                     	;# 
  1087  001B                     	;# 
  1088  001C                     	;# 
  1089  001E                     	;# 
  1090  001F                     	;# 
  1091  008C                     	;# 
  1092  008D                     	;# 
  1093  0091                     	;# 
  1094  0092                     	;# 
  1095  0093                     	;# 
  1096  0094                     	;# 
  1097  0095                     	;# 
  1098  0096                     	;# 
  1099  0097                     	;# 
  1100  0098                     	;# 
  1101  0099                     	;# 
  1102  009A                     	;# 
  1103  009B                     	;# 
  1104  009B                     	;# 
  1105  009C                     	;# 
  1106  009D                     	;# 
  1107  009E                     	;# 
  1108  010C                     	;# 
  1109  010D                     	;# 
  1110  0111                     	;# 
  1111  0112                     	;# 
  1112  0113                     	;# 
  1113  0114                     	;# 
  1114  0115                     	;# 
  1115  0116                     	;# 
  1116  0117                     	;# 
  1117  0118                     	;# 
  1118  0119                     	;# 
  1119  011A                     	;# 
  1120  011B                     	;# 
  1121  011D                     	;# 
  1122  011E                     	;# 
  1123  018C                     	;# 
  1124  018D                     	;# 
  1125  0191                     	;# 
  1126  0191                     	;# 
  1127  0192                     	;# 
  1128  0193                     	;# 
  1129  0193                     	;# 
  1130  0193                     	;# 
  1131  0194                     	;# 
  1132  0195                     	;# 
  1133  0196                     	;# 
  1134  0199                     	;# 
  1135  019A                     	;# 
  1136  019B                     	;# 
  1137  019B                     	;# 
  1138  019B                     	;# 
  1139  019B                     	;# 
  1140  019C                     	;# 
  1141  019C                     	;# 
  1142  019D                     	;# 
  1143  019E                     	;# 
  1144  019F                     	;# 
  1145  020C                     	;# 
  1146  020D                     	;# 
  1147  0211                     	;# 
  1148  0211                     	;# 
  1149  0212                     	;# 
  1150  0212                     	;# 
  1151  0213                     	;# 
  1152  0213                     	;# 
  1153  0214                     	;# 
  1154  0214                     	;# 
  1155  0215                     	;# 
  1156  0215                     	;# 
  1157  0215                     	;# 
  1158  0216                     	;# 
  1159  0216                     	;# 
  1160  0217                     	;# 
  1161  0217                     	;# 
  1162  0219                     	;# 
  1163  021A                     	;# 
  1164  021B                     	;# 
  1165  021C                     	;# 
  1166  021D                     	;# 
  1167  021E                     	;# 
  1168  021F                     	;# 
  1169  0291                     	;# 
  1170  0291                     	;# 
  1171  0292                     	;# 
  1172  0293                     	;# 
  1173  0294                     	;# 
  1174  0295                     	;# 
  1175  0295                     	;# 
  1176  0296                     	;# 
  1177  0298                     	;# 
  1178  0298                     	;# 
  1179  0299                     	;# 
  1180  029A                     	;# 
  1181  029B                     	;# 
  1182  029C                     	;# 
  1183  029C                     	;# 
  1184  029D                     	;# 
  1185  029E                     	;# 
  1186  029E                     	;# 
  1187  0311                     	;# 
  1188  0311                     	;# 
  1189  0312                     	;# 
  1190  0313                     	;# 
  1191  0318                     	;# 
  1192  0318                     	;# 
  1193  0319                     	;# 
  1194  031A                     	;# 
  1195  0394                     	;# 
  1196  0395                     	;# 
  1197  0396                     	;# 
  1198  039A                     	;# 
  1199  039C                     	;# 
  1200  039D                     	;# 
  1201  039E                     	;# 
  1202  039F                     	;# 
  1203  0415                     	;# 
  1204  0416                     	;# 
  1205  0417                     	;# 
  1206  041C                     	;# 
  1207  041D                     	;# 
  1208  041E                     	;# 
  1209  0FE4                     	;# 
  1210  0FE5                     	;# 
  1211  0FE6                     	;# 
  1212  0FE7                     	;# 
  1213  0FE8                     	;# 
  1214  0FE9                     	;# 
  1215  0FEA                     	;# 
  1216  0FEB                     	;# 
  1217  0FED                     	;# 
  1218  0FEE                     	;# 
  1219  0FEF                     	;# 
  1220  0000                     	;# 
  1221  0001                     	;# 
  1222  0002                     	;# 
  1223  0003                     	;# 
  1224  0004                     	;# 
  1225  0005                     	;# 
  1226  0006                     	;# 
  1227  0007                     	;# 
  1228  0008                     	;# 
  1229  0009                     	;# 
  1230  000A                     	;# 
  1231  000B                     	;# 
  1232  000C                     	;# 
  1233  000D                     	;# 
  1234  0011                     	;# 
  1235  0012                     	;# 
  1236  0013                     	;# 
  1237  0014                     	;# 
  1238  0015                     	;# 
  1239  0016                     	;# 
  1240  0016                     	;# 
  1241  0017                     	;# 
  1242  0018                     	;# 
  1243  0019                     	;# 
  1244  001A                     	;# 
  1245  001B                     	;# 
  1246  001C                     	;# 
  1247  001E                     	;# 
  1248  001F                     	;# 
  1249  008C                     	;# 
  1250  008D                     	;# 
  1251  0091                     	;# 
  1252  0092                     	;# 
  1253  0093                     	;# 
  1254  0094                     	;# 
  1255  0095                     	;# 
  1256  0096                     	;# 
  1257  0097                     	;# 
  1258  0098                     	;# 
  1259  0099                     	;# 
  1260  009A                     	;# 
  1261  009B                     	;# 
  1262  009B                     	;# 
  1263  009C                     	;# 
  1264  009D                     	;# 
  1265  009E                     	;# 
  1266  010C                     	;# 
  1267  010D                     	;# 
  1268  0111                     	;# 
  1269  0112                     	;# 
  1270  0113                     	;# 
  1271  0114                     	;# 
  1272  0115                     	;# 
  1273  0116                     	;# 
  1274  0117                     	;# 
  1275  0118                     	;# 
  1276  0119                     	;# 
  1277  011A                     	;# 
  1278  011B                     	;# 
  1279  011D                     	;# 
  1280  011E                     	;# 
  1281  018C                     	;# 
  1282  018D                     	;# 
  1283  0191                     	;# 
  1284  0191                     	;# 
  1285  0192                     	;# 
  1286  0193                     	;# 
  1287  0193                     	;# 
  1288  0193                     	;# 
  1289  0194                     	;# 
  1290  0195                     	;# 
  1291  0196                     	;# 
  1292  0199                     	;# 
  1293  019A                     	;# 
  1294  019B                     	;# 
  1295  019B                     	;# 
  1296  019B                     	;# 
  1297  019B                     	;# 
  1298  019C                     	;# 
  1299  019C                     	;# 
  1300  019D                     	;# 
  1301  019E                     	;# 
  1302  019F                     	;# 
  1303  020C                     	;# 
  1304  020D                     	;# 
  1305  0211                     	;# 
  1306  0211                     	;# 
  1307  0212                     	;# 
  1308  0212                     	;# 
  1309  0213                     	;# 
  1310  0213                     	;# 
  1311  0214                     	;# 
  1312  0214                     	;# 
  1313  0215                     	;# 
  1314  0215                     	;# 
  1315  0215                     	;# 
  1316  0216                     	;# 
  1317  0216                     	;# 
  1318  0217                     	;# 
  1319  0217                     	;# 
  1320  0219                     	;# 
  1321  021A                     	;# 
  1322  021B                     	;# 
  1323  021C                     	;# 
  1324  021D                     	;# 
  1325  021E                     	;# 
  1326  021F                     	;# 
  1327  0291                     	;# 
  1328  0291                     	;# 
  1329  0292                     	;# 
  1330  0293                     	;# 
  1331  0294                     	;# 
  1332  0295                     	;# 
  1333  0295                     	;# 
  1334  0296                     	;# 
  1335  0298                     	;# 
  1336  0298                     	;# 
  1337  0299                     	;# 
  1338  029A                     	;# 
  1339  029B                     	;# 
  1340  029C                     	;# 
  1341  029C                     	;# 
  1342  029D                     	;# 
  1343  029E                     	;# 
  1344  029E                     	;# 
  1345  0311                     	;# 
  1346  0311                     	;# 
  1347  0312                     	;# 
  1348  0313                     	;# 
  1349  0318                     	;# 
  1350  0318                     	;# 
  1351  0319                     	;# 
  1352  031A                     	;# 
  1353  0394                     	;# 
  1354  0395                     	;# 
  1355  0396                     	;# 
  1356  039A                     	;# 
  1357  039C                     	;# 
  1358  039D                     	;# 
  1359  039E                     	;# 
  1360  039F                     	;# 
  1361  0415                     	;# 
  1362  0416                     	;# 
  1363  0417                     	;# 
  1364  041C                     	;# 
  1365  041D                     	;# 
  1366  041E                     	;# 
  1367  0FE4                     	;# 
  1368  0FE5                     	;# 
  1369  0FE6                     	;# 
  1370  0FE7                     	;# 
  1371  0FE8                     	;# 
  1372  0FE9                     	;# 
  1373  0FEA                     	;# 
  1374  0FEB                     	;# 
  1375  0FED                     	;# 
  1376  0FEE                     	;# 
  1377  0FEF                     	;# 
  1378  0000                     	;# 
  1379  0001                     	;# 
  1380  0002                     	;# 
  1381  0003                     	;# 
  1382  0004                     	;# 
  1383  0005                     	;# 
  1384  0006                     	;# 
  1385  0007                     	;# 
  1386  0008                     	;# 
  1387  0009                     	;# 
  1388  000A                     	;# 
  1389  000B                     	;# 
  1390  000C                     	;# 
  1391  000D                     	;# 
  1392  0011                     	;# 
  1393  0012                     	;# 
  1394  0013                     	;# 
  1395  0014                     	;# 
  1396  0015                     	;# 
  1397  0016                     	;# 
  1398  0016                     	;# 
  1399  0017                     	;# 
  1400  0018                     	;# 
  1401  0019                     	;# 
  1402  001A                     	;# 
  1403  001B                     	;# 
  1404  001C                     	;# 
  1405  001E                     	;# 
  1406  001F                     	;# 
  1407  008C                     	;# 
  1408  008D                     	;# 
  1409  0091                     	;# 
  1410  0092                     	;# 
  1411  0093                     	;# 
  1412  0094                     	;# 
  1413  0095                     	;# 
  1414  0096                     	;# 
  1415  0097                     	;# 
  1416  0098                     	;# 
  1417  0099                     	;# 
  1418  009A                     	;# 
  1419  009B                     	;# 
  1420  009B                     	;# 
  1421  009C                     	;# 
  1422  009D                     	;# 
  1423  009E                     	;# 
  1424  010C                     	;# 
  1425  010D                     	;# 
  1426  0111                     	;# 
  1427  0112                     	;# 
  1428  0113                     	;# 
  1429  0114                     	;# 
  1430  0115                     	;# 
  1431  0116                     	;# 
  1432  0117                     	;# 
  1433  0118                     	;# 
  1434  0119                     	;# 
  1435  011A                     	;# 
  1436  011B                     	;# 
  1437  011D                     	;# 
  1438  011E                     	;# 
  1439  018C                     	;# 
  1440  018D                     	;# 
  1441  0191                     	;# 
  1442  0191                     	;# 
  1443  0192                     	;# 
  1444  0193                     	;# 
  1445  0193                     	;# 
  1446  0193                     	;# 
  1447  0194                     	;# 
  1448  0195                     	;# 
  1449  0196                     	;# 
  1450  0199                     	;# 
  1451  019A                     	;# 
  1452  019B                     	;# 
  1453  019B                     	;# 
  1454  019B                     	;# 
  1455  019B                     	;# 
  1456  019C                     	;# 
  1457  019C                     	;# 
  1458  019D                     	;# 
  1459  019E                     	;# 
  1460  019F                     	;# 
  1461  020C                     	;# 
  1462  020D                     	;# 
  1463  0211                     	;# 
  1464  0211                     	;# 
  1465  0212                     	;# 
  1466  0212                     	;# 
  1467  0213                     	;# 
  1468  0213                     	;# 
  1469  0214                     	;# 
  1470  0214                     	;# 
  1471  0215                     	;# 
  1472  0215                     	;# 
  1473  0215                     	;# 
  1474  0216                     	;# 
  1475  0216                     	;# 
  1476  0217                     	;# 
  1477  0217                     	;# 
  1478  0219                     	;# 
  1479  021A                     	;# 
  1480  021B                     	;# 
  1481  021C                     	;# 
  1482  021D                     	;# 
  1483  021E                     	;# 
  1484  021F                     	;# 
  1485  0291                     	;# 
  1486  0291                     	;# 
  1487  0292                     	;# 
  1488  0293                     	;# 
  1489  0294                     	;# 
  1490  0295                     	;# 
  1491  0295                     	;# 
  1492  0296                     	;# 
  1493  0298                     	;# 
  1494  0298                     	;# 
  1495  0299                     	;# 
  1496  029A                     	;# 
  1497  029B                     	;# 
  1498  029C                     	;# 
  1499  029C                     	;# 
  1500  029D                     	;# 
  1501  029E                     	;# 
  1502  029E                     	;# 
  1503  0311                     	;# 
  1504  0311                     	;# 
  1505  0312                     	;# 
  1506  0313                     	;# 
  1507  0318                     	;# 
  1508  0318                     	;# 
  1509  0319                     	;# 
  1510  031A                     	;# 
  1511  0394                     	;# 
  1512  0395                     	;# 
  1513  0396                     	;# 
  1514  039A                     	;# 
  1515  039C                     	;# 
  1516  039D                     	;# 
  1517  039E                     	;# 
  1518  039F                     	;# 
  1519  0415                     	;# 
  1520  0416                     	;# 
  1521  0417                     	;# 
  1522  041C                     	;# 
  1523  041D                     	;# 
  1524  041E                     	;# 
  1525  0FE4                     	;# 
  1526  0FE5                     	;# 
  1527  0FE6                     	;# 
  1528  0FE7                     	;# 
  1529  0FE8                     	;# 
  1530  0FE9                     	;# 
  1531  0FEA                     	;# 
  1532  0FEB                     	;# 
  1533  0FED                     	;# 
  1534  0FEE                     	;# 
  1535  0FEF                     	;# 
  1536  0000                     	;# 
  1537  0001                     	;# 
  1538  0002                     	;# 
  1539  0003                     	;# 
  1540  0004                     	;# 
  1541  0005                     	;# 
  1542  0006                     	;# 
  1543  0007                     	;# 
  1544  0008                     	;# 
  1545  0009                     	;# 
  1546  000A                     	;# 
  1547  000B                     	;# 
  1548  000C                     	;# 
  1549  000D                     	;# 
  1550  0011                     	;# 
  1551  0012                     	;# 
  1552  0013                     	;# 
  1553  0014                     	;# 
  1554  0015                     	;# 
  1555  0016                     	;# 
  1556  0016                     	;# 
  1557  0017                     	;# 
  1558  0018                     	;# 
  1559  0019                     	;# 
  1560  001A                     	;# 
  1561  001B                     	;# 
  1562  001C                     	;# 
  1563  001E                     	;# 
  1564  001F                     	;# 
  1565  008C                     	;# 
  1566  008D                     	;# 
  1567  0091                     	;# 
  1568  0092                     	;# 
  1569  0093                     	;# 
  1570  0094                     	;# 
  1571  0095                     	;# 
  1572  0096                     	;# 
  1573  0097                     	;# 
  1574  0098                     	;# 
  1575  0099                     	;# 
  1576  009A                     	;# 
  1577  009B                     	;# 
  1578  009B                     	;# 
  1579  009C                     	;# 
  1580  009D                     	;# 
  1581  009E                     	;# 
  1582  010C                     	;# 
  1583  010D                     	;# 
  1584  0111                     	;# 
  1585  0112                     	;# 
  1586  0113                     	;# 
  1587  0114                     	;# 
  1588  0115                     	;# 
  1589  0116                     	;# 
  1590  0117                     	;# 
  1591  0118                     	;# 
  1592  0119                     	;# 
  1593  011A                     	;# 
  1594  011B                     	;# 
  1595  011D                     	;# 
  1596  011E                     	;# 
  1597  018C                     	;# 
  1598  018D                     	;# 
  1599  0191                     	;# 
  1600  0191                     	;# 
  1601  0192                     	;# 
  1602  0193                     	;# 
  1603  0193                     	;# 
  1604  0193                     	;# 
  1605  0194                     	;# 
  1606  0195                     	;# 
  1607  0196                     	;# 
  1608  0199                     	;# 
  1609  019A                     	;# 
  1610  019B                     	;# 
  1611  019B                     	;# 
  1612  019B                     	;# 
  1613  019B                     	;# 
  1614  019C                     	;# 
  1615  019C                     	;# 
  1616  019D                     	;# 
  1617  019E                     	;# 
  1618  019F                     	;# 
  1619  020C                     	;# 
  1620  020D                     	;# 
  1621  0211                     	;# 
  1622  0211                     	;# 
  1623  0212                     	;# 
  1624  0212                     	;# 
  1625  0213                     	;# 
  1626  0213                     	;# 
  1627  0214                     	;# 
  1628  0214                     	;# 
  1629  0215                     	;# 
  1630  0215                     	;# 
  1631  0215                     	;# 
  1632  0216                     	;# 
  1633  0216                     	;# 
  1634  0217                     	;# 
  1635  0217                     	;# 
  1636  0219                     	;# 
  1637  021A                     	;# 
  1638  021B                     	;# 
  1639  021C                     	;# 
  1640  021D                     	;# 
  1641  021E                     	;# 
  1642  021F                     	;# 
  1643  0291                     	;# 
  1644  0291                     	;# 
  1645  0292                     	;# 
  1646  0293                     	;# 
  1647  0294                     	;# 
  1648  0295                     	;# 
  1649  0295                     	;# 
  1650  0296                     	;# 
  1651  0298                     	;# 
  1652  0298                     	;# 
  1653  0299                     	;# 
  1654  029A                     	;# 
  1655  029B                     	;# 
  1656  029C                     	;# 
  1657  029C                     	;# 
  1658  029D                     	;# 
  1659  029E                     	;# 
  1660  029E                     	;# 
  1661  0311                     	;# 
  1662  0311                     	;# 
  1663  0312                     	;# 
  1664  0313                     	;# 
  1665  0318                     	;# 
  1666  0318                     	;# 
  1667  0319                     	;# 
  1668  031A                     	;# 
  1669  0394                     	;# 
  1670  0395                     	;# 
  1671  0396                     	;# 
  1672  039A                     	;# 
  1673  039C                     	;# 
  1674  039D                     	;# 
  1675  039E                     	;# 
  1676  039F                     	;# 
  1677  0415                     	;# 
  1678  0416                     	;# 
  1679  0417                     	;# 
  1680  041C                     	;# 
  1681  041D                     	;# 
  1682  041E                     	;# 
  1683  0FE4                     	;# 
  1684  0FE5                     	;# 
  1685  0FE6                     	;# 
  1686  0FE7                     	;# 
  1687  0FE8                     	;# 
  1688  0FE9                     	;# 
  1689  0FEA                     	;# 
  1690  0FEB                     	;# 
  1691  0FED                     	;# 
  1692  0FEE                     	;# 
  1693  0FEF                     	;# 
  1694  0000                     	;# 
  1695  0001                     	;# 
  1696  0002                     	;# 
  1697  0003                     	;# 
  1698  0004                     	;# 
  1699  0005                     	;# 
  1700  0006                     	;# 
  1701  0007                     	;# 
  1702  0008                     	;# 
  1703  0009                     	;# 
  1704  000A                     	;# 
  1705  000B                     	;# 
  1706  000C                     	;# 
  1707  000D                     	;# 
  1708  0011                     	;# 
  1709  0012                     	;# 
  1710  0013                     	;# 
  1711  0014                     	;# 
  1712  0015                     	;# 
  1713  0016                     	;# 
  1714  0016                     	;# 
  1715  0017                     	;# 
  1716  0018                     	;# 
  1717  0019                     	;# 
  1718  001A                     	;# 
  1719  001B                     	;# 
  1720  001C                     	;# 
  1721  001E                     	;# 
  1722  001F                     	;# 
  1723  008C                     	;# 
  1724  008D                     	;# 
  1725  0091                     	;# 
  1726  0092                     	;# 
  1727  0093                     	;# 
  1728  0094                     	;# 
  1729  0095                     	;# 
  1730  0096                     	;# 
  1731  0097                     	;# 
  1732  0098                     	;# 
  1733  0099                     	;# 
  1734  009A                     	;# 
  1735  009B                     	;# 
  1736  009B                     	;# 
  1737  009C                     	;# 
  1738  009D                     	;# 
  1739  009E                     	;# 
  1740  010C                     	;# 
  1741  010D                     	;# 
  1742  0111                     	;# 
  1743  0112                     	;# 
  1744  0113                     	;# 
  1745  0114                     	;# 
  1746  0115                     	;# 
  1747  0116                     	;# 
  1748  0117                     	;# 
  1749  0118                     	;# 
  1750  0119                     	;# 
  1751  011A                     	;# 
  1752  011B                     	;# 
  1753  011D                     	;# 
  1754  011E                     	;# 
  1755  018C                     	;# 
  1756  018D                     	;# 
  1757  0191                     	;# 
  1758  0191                     	;# 
  1759  0192                     	;# 
  1760  0193                     	;# 
  1761  0193                     	;# 
  1762  0193                     	;# 
  1763  0194                     	;# 
  1764  0195                     	;# 
  1765  0196                     	;# 
  1766  0199                     	;# 
  1767  019A                     	;# 
  1768  019B                     	;# 
  1769  019B                     	;# 
  1770  019B                     	;# 
  1771  019B                     	;# 
  1772  019C                     	;# 
  1773  019C                     	;# 
  1774  019D                     	;# 
  1775  019E                     	;# 
  1776  019F                     	;# 
  1777  020C                     	;# 
  1778  020D                     	;# 
  1779  0211                     	;# 
  1780  0211                     	;# 
  1781  0212                     	;# 
  1782  0212                     	;# 
  1783  0213                     	;# 
  1784  0213                     	;# 
  1785  0214                     	;# 
  1786  0214                     	;# 
  1787  0215                     	;# 
  1788  0215                     	;# 
  1789  0215                     	;# 
  1790  0216                     	;# 
  1791  0216                     	;# 
  1792  0217                     	;# 
  1793  0217                     	;# 
  1794  0219                     	;# 
  1795  021A                     	;# 
  1796  021B                     	;# 
  1797  021C                     	;# 
  1798  021D                     	;# 
  1799  021E                     	;# 
  1800  021F                     	;# 
  1801  0291                     	;# 
  1802  0291                     	;# 
  1803  0292                     	;# 
  1804  0293                     	;# 
  1805  0294                     	;# 
  1806  0295                     	;# 
  1807  0295                     	;# 
  1808  0296                     	;# 
  1809  0298                     	;# 
  1810  0298                     	;# 
  1811  0299                     	;# 
  1812  029A                     	;# 
  1813  029B                     	;# 
  1814  029C                     	;# 
  1815  029C                     	;# 
  1816  029D                     	;# 
  1817  029E                     	;# 
  1818  029E                     	;# 
  1819  0311                     	;# 
  1820  0311                     	;# 
  1821  0312                     	;# 
  1822  0313                     	;# 
  1823  0318                     	;# 
  1824  0318                     	;# 
  1825  0319                     	;# 
  1826  031A                     	;# 
  1827  0394                     	;# 
  1828  0395                     	;# 
  1829  0396                     	;# 
  1830  039A                     	;# 
  1831  039C                     	;# 
  1832  039D                     	;# 
  1833  039E                     	;# 
  1834  039F                     	;# 
  1835  0415                     	;# 
  1836  0416                     	;# 
  1837  0417                     	;# 
  1838  041C                     	;# 
  1839  041D                     	;# 
  1840  041E                     	;# 
  1841  0FE4                     	;# 
  1842  0FE5                     	;# 
  1843  0FE6                     	;# 
  1844  0FE7                     	;# 
  1845  0FE8                     	;# 
  1846  0FE9                     	;# 
  1847  0FEA                     	;# 
  1848  0FEB                     	;# 
  1849  0FED                     	;# 
  1850  0FEE                     	;# 
  1851  0FEF                     	;# 
  1852  0000                     	;# 
  1853  0001                     	;# 
  1854  0002                     	;# 
  1855  0003                     	;# 
  1856  0004                     	;# 
  1857  0005                     	;# 
  1858  0006                     	;# 
  1859  0007                     	;# 
  1860  0008                     	;# 
  1861  0009                     	;# 
  1862  000A                     	;# 
  1863  000B                     	;# 
  1864  000C                     	;# 
  1865  000D                     	;# 
  1866  0011                     	;# 
  1867  0012                     	;# 
  1868  0013                     	;# 
  1869  0014                     	;# 
  1870  0015                     	;# 
  1871  0016                     	;# 
  1872  0016                     	;# 
  1873  0017                     	;# 
  1874  0018                     	;# 
  1875  0019                     	;# 
  1876  001A                     	;# 
  1877  001B                     	;# 
  1878  001C                     	;# 
  1879  001E                     	;# 
  1880  001F                     	;# 
  1881  008C                     	;# 
  1882  008D                     	;# 
  1883  0091                     	;# 
  1884  0092                     	;# 
  1885  0093                     	;# 
  1886  0094                     	;# 
  1887  0095                     	;# 
  1888  0096                     	;# 
  1889  0097                     	;# 
  1890  0098                     	;# 
  1891  0099                     	;# 
  1892  009A                     	;# 
  1893  009B                     	;# 
  1894  009B                     	;# 
  1895  009C                     	;# 
  1896  009D                     	;# 
  1897  009E                     	;# 
  1898  010C                     	;# 
  1899  010D                     	;# 
  1900  0111                     	;# 
  1901  0112                     	;# 
  1902  0113                     	;# 
  1903  0114                     	;# 
  1904  0115                     	;# 
  1905  0116                     	;# 
  1906  0117                     	;# 
  1907  0118                     	;# 
  1908  0119                     	;# 
  1909  011A                     	;# 
  1910  011B                     	;# 
  1911  011D                     	;# 
  1912  011E                     	;# 
  1913  018C                     	;# 
  1914  018D                     	;# 
  1915  0191                     	;# 
  1916  0191                     	;# 
  1917  0192                     	;# 
  1918  0193                     	;# 
  1919  0193                     	;# 
  1920  0193                     	;# 
  1921  0194                     	;# 
  1922  0195                     	;# 
  1923  0196                     	;# 
  1924  0199                     	;# 
  1925  019A                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019C                     	;# 
  1931  019C                     	;# 
  1932  019D                     	;# 
  1933  019E                     	;# 
  1934  019F                     	;# 
  1935  020C                     	;# 
  1936  020D                     	;# 
  1937  0211                     	;# 
  1938  0211                     	;# 
  1939  0212                     	;# 
  1940  0212                     	;# 
  1941  0213                     	;# 
  1942  0213                     	;# 
  1943  0214                     	;# 
  1944  0214                     	;# 
  1945  0215                     	;# 
  1946  0215                     	;# 
  1947  0215                     	;# 
  1948  0216                     	;# 
  1949  0216                     	;# 
  1950  0217                     	;# 
  1951  0217                     	;# 
  1952  0219                     	;# 
  1953  021A                     	;# 
  1954  021B                     	;# 
  1955  021C                     	;# 
  1956  021D                     	;# 
  1957  021E                     	;# 
  1958  021F                     	;# 
  1959  0291                     	;# 
  1960  0291                     	;# 
  1961  0292                     	;# 
  1962  0293                     	;# 
  1963  0294                     	;# 
  1964  0295                     	;# 
  1965  0295                     	;# 
  1966  0296                     	;# 
  1967  0298                     	;# 
  1968  0298                     	;# 
  1969  0299                     	;# 
  1970  029A                     	;# 
  1971  029B                     	;# 
  1972  029C                     	;# 
  1973  029C                     	;# 
  1974  029D                     	;# 
  1975  029E                     	;# 
  1976  029E                     	;# 
  1977  0311                     	;# 
  1978  0311                     	;# 
  1979  0312                     	;# 
  1980  0313                     	;# 
  1981  0318                     	;# 
  1982  0318                     	;# 
  1983  0319                     	;# 
  1984  031A                     	;# 
  1985  0394                     	;# 
  1986  0395                     	;# 
  1987  0396                     	;# 
  1988  039A                     	;# 
  1989  039C                     	;# 
  1990  039D                     	;# 
  1991  039E                     	;# 
  1992  039F                     	;# 
  1993  0415                     	;# 
  1994  0416                     	;# 
  1995  0417                     	;# 
  1996  041C                     	;# 
  1997  041D                     	;# 
  1998  041E                     	;# 
  1999  0FE4                     	;# 
  2000  0FE5                     	;# 
  2001  0FE6                     	;# 
  2002  0FE7                     	;# 
  2003  0FE8                     	;# 
  2004  0FE9                     	;# 
  2005  0FEA                     	;# 
  2006  0FEB                     	;# 
  2007  0FED                     	;# 
  2008  0FEE                     	;# 
  2009  0FEF                     	;# 
  2010  0000                     	;# 
  2011  0001                     	;# 
  2012  0002                     	;# 
  2013  0003                     	;# 
  2014  0004                     	;# 
  2015  0005                     	;# 
  2016  0006                     	;# 
  2017  0007                     	;# 
  2018  0008                     	;# 
  2019  0009                     	;# 
  2020  000A                     	;# 
  2021  000B                     	;# 
  2022  000C                     	;# 
  2023  000D                     	;# 
  2024  0011                     	;# 
  2025  0012                     	;# 
  2026  0013                     	;# 
  2027  0014                     	;# 
  2028  0015                     	;# 
  2029  0016                     	;# 
  2030  0016                     	;# 
  2031  0017                     	;# 
  2032  0018                     	;# 
  2033  0019                     	;# 
  2034  001A                     	;# 
  2035  001B                     	;# 
  2036  001C                     	;# 
  2037  001E                     	;# 
  2038  001F                     	;# 
  2039  008C                     	;# 
  2040  008D                     	;# 
  2041  0091                     	;# 
  2042  0092                     	;# 
  2043  0093                     	;# 
  2044  0094                     	;# 
  2045  0095                     	;# 
  2046  0096                     	;# 
  2047  0097                     	;# 
  2048  0098                     	;# 
  2049  0099                     	;# 
  2050  009A                     	;# 
  2051  009B                     	;# 
  2052  009B                     	;# 
  2053  009C                     	;# 
  2054  009D                     	;# 
  2055  009E                     	;# 
  2056  010C                     	;# 
  2057  010D                     	;# 
  2058  0111                     	;# 
  2059  0112                     	;# 
  2060  0113                     	;# 
  2061  0114                     	;# 
  2062  0115                     	;# 
  2063  0116                     	;# 
  2064  0117                     	;# 
  2065  0118                     	;# 
  2066  0119                     	;# 
  2067  011A                     	;# 
  2068  011B                     	;# 
  2069  011D                     	;# 
  2070  011E                     	;# 
  2071  018C                     	;# 
  2072  018D                     	;# 
  2073  0191                     	;# 
  2074  0191                     	;# 
  2075  0192                     	;# 
  2076  0193                     	;# 
  2077  0193                     	;# 
  2078  0193                     	;# 
  2079  0194                     	;# 
  2080  0195                     	;# 
  2081  0196                     	;# 
  2082  0199                     	;# 
  2083  019A                     	;# 
  2084  019B                     	;# 
  2085  019B                     	;# 
  2086  019B                     	;# 
  2087  019B                     	;# 
  2088  019C                     	;# 
  2089  019C                     	;# 
  2090  019D                     	;# 
  2091  019E                     	;# 
  2092  019F                     	;# 
  2093  020C                     	;# 
  2094  020D                     	;# 
  2095  0211                     	;# 
  2096  0211                     	;# 
  2097  0212                     	;# 
  2098  0212                     	;# 
  2099  0213                     	;# 
  2100  0213                     	;# 
  2101  0214                     	;# 
  2102  0214                     	;# 
  2103  0215                     	;# 
  2104  0215                     	;# 
  2105  0215                     	;# 
  2106  0216                     	;# 
  2107  0216                     	;# 
  2108  0217                     	;# 
  2109  0217                     	;# 
  2110  0219                     	;# 
  2111  021A                     	;# 
  2112  021B                     	;# 
  2113  021C                     	;# 
  2114  021D                     	;# 
  2115  021E                     	;# 
  2116  021F                     	;# 
  2117  0291                     	;# 
  2118  0291                     	;# 
  2119  0292                     	;# 
  2120  0293                     	;# 
  2121  0294                     	;# 
  2122  0295                     	;# 
  2123  0295                     	;# 
  2124  0296                     	;# 
  2125  0298                     	;# 
  2126  0298                     	;# 
  2127  0299                     	;# 
  2128  029A                     	;# 
  2129  029B                     	;# 
  2130  029C                     	;# 
  2131  029C                     	;# 
  2132  029D                     	;# 
  2133  029E                     	;# 
  2134  029E                     	;# 
  2135  0311                     	;# 
  2136  0311                     	;# 
  2137  0312                     	;# 
  2138  0313                     	;# 
  2139  0318                     	;# 
  2140  0318                     	;# 
  2141  0319                     	;# 
  2142  031A                     	;# 
  2143  0394                     	;# 
  2144  0395                     	;# 
  2145  0396                     	;# 
  2146  039A                     	;# 
  2147  039C                     	;# 
  2148  039D                     	;# 
  2149  039E                     	;# 
  2150  039F                     	;# 
  2151  0415                     	;# 
  2152  0416                     	;# 
  2153  0417                     	;# 
  2154  041C                     	;# 
  2155  041D                     	;# 
  2156  041E                     	;# 
  2157  0FE4                     	;# 
  2158  0FE5                     	;# 
  2159  0FE6                     	;# 
  2160  0FE7                     	;# 
  2161  0FE8                     	;# 
  2162  0FE9                     	;# 
  2163  0FEA                     	;# 
  2164  0FEB                     	;# 
  2165  0FED                     	;# 
  2166  0FEE                     	;# 
  2167  0FEF                     	;# 
  2168                           
  2169 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2170  0000                     
  2171 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2172  0000                     
  2173 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2174  0000                     
  2175                           	psect	nvBANK1
  2176  00EB                     __pnvBANK1:	
  2177  00EB                     _TMR4_InterruptHandler:	
  2178  00EB                     	ds	2
  2179  00ED                     _timer1ReloadVal:	
  2180  00ED                     	ds	2
  2181                           
  2182                           	psect	nvBANK2
  2183  0120                     __pnvBANK2:	
  2184  0120                     _IOCBF5_InterruptHandler:	
  2185  0120                     	ds	2
  2186  0122                     _IOCBF4_InterruptHandler:	
  2187  0122                     	ds	2
  2188  0124                     _IOCBF3_InterruptHandler:	
  2189  0124                     	ds	2
  2190  0126                     _IOCBF0_InterruptHandler:	
  2191  0126                     	ds	2
  2192  0128                     _CCP4_CallBack:	
  2193  0128                     	ds	2
  2194  012A                     _EUSART_ErrorHandler:	
  2195  012A                     	ds	2
  2196  012C                     _EUSART_OverrunErrorHandler:	
  2197  012C                     	ds	2
  2198  012E                     _EUSART_FramingErrorHandler:	
  2199  012E                     	ds	2
  2200  000B                     _INTCONbits	set	11
  2201  0013                     _PIR3bits	set	19
  2202  001C                     _T2CONbits	set	28
  2203  001C                     _T2CON	set	28
  2204  001A                     _TMR2	set	26
  2205  001B                     _PR2	set	27
  2206  0019                     _T1GCONbits	set	25
  2207  0018                     _T1CONbits	set	24
  2208  0018                     _T1CON	set	24
  2209  0016                     _TMR1L	set	22
  2210  0017                     _TMR1H	set	23
  2211  0019                     _T1GCON	set	25
  2212  0011                     _PIR1bits	set	17
  2213  0095                     _OPTION_REGbits	set	149
  2214  008D                     _TRISB	set	141
  2215  008C                     _TRISA	set	140
  2216  009D                     _ADCON0bits	set	157
  2217  009D                     _ADCON0	set	157
  2218  009C                     _ADRESH	set	156
  2219  009B                     _ADRESL	set	155
  2220  009E                     _ADCON1	set	158
  2221  0093                     _PIE3bits	set	147
  2222  0097                     _WDTCON	set	151
  2223  0098                     _OSCTUNE	set	152
  2224  0099                     _OSCCON	set	153
  2225  010C                     _LATAbits	set	268
  2226  011E                     _APFCON1	set	286
  2227  011D                     _APFCON0	set	285
  2228  010D                     _LATB	set	269
  2229  010C                     _LATA	set	268
  2230  0117                     _FVRCONbits	set	279
  2231  0117                     _FVRCON	set	279
  2232  0116                     _BORCON	set	278
  2233  018C                     _ANSELA	set	396
  2234  018D                     _ANSELB	set	397
  2235  019A                     _TXREG	set	410
  2236  0199                     _RCREG	set	409
  2237  019D                     _RCSTAbits	set	413
  2238  019E                     _TXSTAbits	set	414
  2239  019C                     _SPBRGH	set	412
  2240  019B                     _SPBRGL	set	411
  2241  019E                     _TXSTA	set	414
  2242  019D                     _RCSTA	set	413
  2243  019F                     _BAUDCON	set	415
  2244  020C                     _WPUA	set	524
  2245  020D                     _WPUB	set	525
  2246  029E                     _CCPTMRS0bits	set	670
  2247  0312                     _CCPR3H	set	786
  2248  0311                     _CCPR3L	set	785
  2249  0313                     _CCP3CON	set	787
  2250  0319                     _CCPR4H	set	793
  2251  0318                     _CCPR4L	set	792
  2252  031A                     _CCP4CON	set	794
  2253  0394                     _IOCBPbits	set	916
  2254  0395                     _IOCBNbits	set	917
  2255  0396                     _IOCBFbits	set	918
  2256  0417                     _T4CONbits	set	1047
  2257  0417                     _T4CON	set	1047
  2258  0415                     _TMR4	set	1045
  2259  0416                     _PR4	set	1046
  2260                           
  2261                           ; #config settings
  2262  0000                     
  2263                           	psect	cinit
  2264  0036                     start_initialization:	
  2265  0036                     __initialization:	
  2266                           
  2267                           ; Clear objects allocated to COMMON
  2268  0036  01F0               	clrf	__pbssCOMMON& (0+127)
  2269  0037  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2270  0038  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2271  0039  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2272  003A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2273  003B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2274  003C  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  2275                           
  2276                           ; Clear objects allocated to BANK0
  2277  003D  0020               	movlb	0	; select bank0
  2278  003E  01EF               	clrf	__pbssBANK0& (0+127)
  2279                           
  2280                           ; Clear objects allocated to BANK1
  2281  003F  30A0               	movlw	low __pbssBANK1
  2282  0040  0084               	movwf	4
  2283  0041  3000               	movlw	high __pbssBANK1
  2284  0042  0085               	movwf	5
  2285  0043  304B               	movlw	75
  2286  0044  3188  2051  3180   	fcall	clear_ram0
  2287                           
  2288                           ; Clear objects allocated to BANK2
  2289  0047  0022               	movlb	2	; select bank2
  2290  0048  01B0               	clrf	__pbssBANK2& (0+127)
  2291  0049  01B1               	clrf	(__pbssBANK2+1)& (0+127)
  2292  004A  01B2               	clrf	(__pbssBANK2+2)& (0+127)
  2293  004B  01B3               	clrf	(__pbssBANK2+3)& (0+127)
  2294  004C  01B4               	clrf	(__pbssBANK2+4)& (0+127)
  2295  004D                     end_of_initialization:	
  2296                           ;End of C runtime variable initialization code
  2297                           
  2298  004D                     __end_of__initialization:	
  2299  004D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2300  004E  0020               	movlb	0
  2301  004F  318B  2B15         	ljmp	_main	;jump to C main() function
  2302                           
  2303                           	psect	bssCOMMON
  2304  0070                     __pbssCOMMON:	
  2305  0070                     _min_origem_up:	
  2306  0070                     	ds	2
  2307  0072                     _max_origem_down:	
  2308  0072                     	ds	2
  2309  0074                     _and_dst:	
  2310  0074                     	ds	2
  2311  0076                     _eusartRxLastError:	
  2312  0076                     	ds	1
  2313                           
  2314                           	psect	bssBANK0
  2315  006F                     __pbssBANK0:	
  2316  006F                     _and_ating:	
  2317  006F                     	ds	1
  2318                           
  2319                           	psect	bssBANK1
  2320  00A0                     __pbssBANK1:	
  2321  00A0                     _origem_up:	
  2322  00A0                     	ds	10
  2323  00AA                     _origem_down:	
  2324  00AA                     	ds	10
  2325  00B4                     _fila_down:	
  2326  00B4                     	ds	10
  2327  00BE                     _fila_up:	
  2328  00BE                     	ds	10
  2329  00C8                     _and_ating2:	
  2330  00C8                     	ds	2
  2331  00CA                     _out_value:	
  2332  00CA                     	ds	2
  2333  00CC                     _min_fila_down:	
  2334  00CC                     	ds	2
  2335  00CE                     _max_fila_up:	
  2336  00CE                     	ds	2
  2337  00D0                     _distancia:	
  2338  00D0                     	ds	2
  2339  00D2                     _andar:	
  2340  00D2                     	ds	2
  2341  00D4                     _sentido2:	
  2342  00D4                     	ds	2
  2343  00D6                     _aux_tempo:	
  2344  00D6                     	ds	2
  2345  00D8                     _sentido:	
  2346  00D8                     	ds	2
  2347  00DA                     _and_origem:	
  2348  00DA                     	ds	2
  2349  00DC                     _ADC_InterruptHandler:	
  2350  00DC                     	ds	2
  2351  00DE                     _state_motor:	
  2352  00DE                     	ds	1
  2353  00DF                     _temp_mt:	
  2354  00DF                     	ds	4
  2355  00E3                     _I_m:	
  2356  00E3                     	ds	4
  2357  00E7                     _ccp_value:	
  2358  00E7                     	ds	2
  2359  00E9                     _pulses:	
  2360  00E9                     	ds	2
  2361                           
  2362                           	psect	bssBANK2
  2363  0130                     __pbssBANK2:	
  2364  0130                     _byte:	
  2365  0130                     	ds	5
  2366                           
  2367                           	psect	clrtext
  2368  0851                     clear_ram0:	
  2369                           ;	Called with FSR0 containing the base address, and
  2370                           ;	WREG with the size to clear
  2371                           
  2372  0851  0064               	clrwdt	;clear the watchdog before getting into this loop
  2373  0852                     clrloop0:	
  2374  0852  0180               	clrf	0	;clear RAM location pointed to by FSR
  2375  0853  3101               	addfsr 0,1
  2376  0854  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2377  0855  2852               	goto	clrloop0	;have we reached the end yet?
  2378  0856  3400               	retlw	0	;all done for this memory range, return
  2379                           
  2380                           	psect	cstackCOMMON
  2381  0077                     __pcstackCOMMON:	
  2382  0077                     ?_PIN_MANAGER_Initialize:	
  2383  0077                     ?_OSCILLATOR_Initialize:	
  2384                           ; 1 bytes @ 0x0
  2385                           
  2386  0077                     ?_WDT_Initialize:	
  2387                           ; 1 bytes @ 0x0
  2388                           
  2389  0077                     ?_FVR_Initialize:	
  2390                           ; 1 bytes @ 0x0
  2391                           
  2392  0077                     ?_CCP4_Initialize:	
  2393                           ; 1 bytes @ 0x0
  2394                           
  2395  0077                     ?_ADC_Initialize:	
  2396                           ; 1 bytes @ 0x0
  2397                           
  2398  0077                     ?_TMR4_Initialize:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401  0077                     ?_PWM3_Initialize:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404  0077                     ?_TMR2_Initialize:	
  2405                           ; 1 bytes @ 0x0
  2406                           
  2407  0077                     ?_TMR1_Initialize:	
  2408                           ; 1 bytes @ 0x0
  2409                           
  2410  0077                     ?_TMR4_DefaultInterruptHandler:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413  0077                     ??_TMR4_DefaultInterruptHandler:	
  2414                           ; 1 bytes @ 0x0
  2415                           
  2416  0077                     ?_PIN_MANAGER_IOC:	
  2417                           ; 1 bytes @ 0x0
  2418                           
  2419  0077                     ?_CCP4_CaptureISR:	
  2420                           ; 1 bytes @ 0x0
  2421                           
  2422  0077                     ?_IOCBF0_DefaultInterruptHandler:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  0077                     ??_IOCBF0_DefaultInterruptHandler:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428  0077                     ?_IOCBF3_DefaultInterruptHandler:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431  0077                     ??_IOCBF3_DefaultInterruptHandler:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434  0077                     ?_IOCBF4_DefaultInterruptHandler:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  0077                     ??_IOCBF4_DefaultInterruptHandler:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0077                     ?_IOCBF5_DefaultInterruptHandler:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  0077                     ??_IOCBF5_DefaultInterruptHandler:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446  0077                     ?_IOCBF0_ISR:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449  0077                     ??_IOCBF0_ISR:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  0077                     ?_IOCBF3_ISR:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455  0077                     ?_IOCBF4_ISR:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458  0077                     ?_IOCBF5_ISR:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461  0077                     ?_comunicacao:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464  0077                     ?_gerenciamento:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  0077                     ?_update:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  0077                     ?_col_up:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473  0077                     ?_col_down:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476  0077                     ?_min_up:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479  0077                     ?_max_down:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482  0077                     ?_EUSART_Initialize:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485  0077                     ?_EUSART_is_tx_ready:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488  0077                     ??_EUSART_is_tx_ready:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491  0077                     ?_EUSART_is_rx_ready:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494  0077                     ?_EUSART_Read:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497  0077                     ?_EUSART_Write:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500  0077                     ??_EUSART_Write:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503  0077                     ?_SYSTEM_Initialize:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506  0077                     ?_TMR1_WriteTimer:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509  0077                     ?_TMR4_ISR:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512  0077                     ?_INTERRUPT_InterruptManager:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515  0077                     ?_send_data:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518  0077                     ?_sensor1:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521  0077                     ??_sensor1:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524  0077                     ?_sensor2:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527  0077                     ??_sensor2:	
  2528                           ; 1 bytes @ 0x0
  2529                           
  2530  0077                     ?_sensor3:	
  2531                           ; 1 bytes @ 0x0
  2532                           
  2533  0077                     ??_sensor3:	
  2534                           ; 1 bytes @ 0x0
  2535                           
  2536  0077                     ?_sensor4:	
  2537                           ; 1 bytes @ 0x0
  2538                           
  2539  0077                     ??_sensor4:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542  0077                     ?_main:	
  2543                           ; 1 bytes @ 0x0
  2544                           
  2545  0077                     ?_controle:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548  0077                     _EUSART_is_tx_ready$167:	
  2549                           ; 1 bytes @ 0x0
  2550                           
  2551  0077                     EUSART_Write@txData:	
  2552                           ; 1 bytes @ 0x0
  2553                           
  2554  0077                     TMR1_WriteTimer@timerVal:	
  2555                           ; 1 bytes @ 0x0
  2556                           
  2557                           
  2558                           ; 2 bytes @ 0x0
  2559  0077                     	ds	1
  2560  0078                     ??_PIN_MANAGER_IOC:	
  2561  0078                     ??_IOCBF3_ISR:	
  2562                           ; 1 bytes @ 0x1
  2563                           
  2564  0078                     ??_IOCBF4_ISR:	
  2565                           ; 1 bytes @ 0x1
  2566                           
  2567  0078                     ??_IOCBF5_ISR:	
  2568                           ; 1 bytes @ 0x1
  2569                           
  2570  0078                     ??_send_data:	
  2571                           ; 1 bytes @ 0x1
  2572                           
  2573                           
  2574                           ; 1 bytes @ 0x1
  2575  0078                     	ds	1
  2576  0079                     ??_TMR1_WriteTimer:	
  2577  0079                     ?_CCP4_DefaultCallBack:	
  2578                           ; 1 bytes @ 0x2
  2579                           
  2580  0079                     ?_get_pulse:	
  2581                           ; 1 bytes @ 0x2
  2582                           
  2583  0079                     CCP4_DefaultCallBack@capturedValue:	
  2584                           ; 1 bytes @ 0x2
  2585                           
  2586  0079                     send_data@i:	
  2587                           ; 2 bytes @ 0x2
  2588                           
  2589  0079                     get_pulse@capturedValue:	
  2590                           ; 2 bytes @ 0x2
  2591                           
  2592                           
  2593                           ; 2 bytes @ 0x2
  2594  0079                     	ds	2
  2595  007B                     ??_CCP4_CaptureISR:	
  2596  007B                     ??_TMR4_ISR:	
  2597                           ; 1 bytes @ 0x4
  2598                           
  2599  007B                     ??_CCP4_DefaultCallBack:	
  2600                           ; 1 bytes @ 0x4
  2601                           
  2602  007B                     ??_get_pulse:	
  2603                           ; 1 bytes @ 0x4
  2604                           
  2605                           
  2606                           ; 1 bytes @ 0x4
  2607  007B                     	ds	1
  2608  007C                     CCP4_CaptureISR@module:	
  2609                           
  2610                           ; 2 bytes @ 0x5
  2611  007C                     	ds	2
  2612  007E                     ??_INTERRUPT_InterruptManager:	
  2613                           
  2614                           	psect	cstackBANK0
  2615  0020                     __pcstackBANK0:	
  2616                           ; 1 bytes @ 0x7
  2617                           
  2618  0020                     ?_EUSART_SetFramingErrorHandler:	
  2619  0020                     ?_EUSART_SetOverrunErrorHandler:	
  2620                           ; 1 bytes @ 0x0
  2621                           
  2622  0020                     ?_EUSART_SetErrorHandler:	
  2623                           ; 1 bytes @ 0x0
  2624                           
  2625  0020                     ??_OSCILLATOR_Initialize:	
  2626                           ; 1 bytes @ 0x0
  2627                           
  2628  0020                     ??_WDT_Initialize:	
  2629                           ; 1 bytes @ 0x0
  2630                           
  2631  0020                     ??_FVR_Initialize:	
  2632                           ; 1 bytes @ 0x0
  2633                           
  2634  0020                     ??_ADC_Initialize:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637  0020                     ??_PWM3_Initialize:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640  0020                     ??_TMR2_Initialize:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643  0020                     ??_TMR1_Initialize:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646  0020                     ?_TMR4_SetInterruptHandler:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649  0020                     ?_CCP4_SetCallBack:	
  2650                           ; 1 bytes @ 0x0
  2651                           
  2652  0020                     ?_IOCBF0_SetInterruptHandler:	
  2653                           ; 1 bytes @ 0x0
  2654                           
  2655  0020                     ?_IOCBF3_SetInterruptHandler:	
  2656                           ; 1 bytes @ 0x0
  2657                           
  2658  0020                     ?_IOCBF4_SetInterruptHandler:	
  2659                           ; 1 bytes @ 0x0
  2660                           
  2661  0020                     ?_IOCBF5_SetInterruptHandler:	
  2662                           ; 1 bytes @ 0x0
  2663                           
  2664  0020                     ??_min_up:	
  2665                           ; 1 bytes @ 0x0
  2666                           
  2667  0020                     ??_max_down:	
  2668                           ; 1 bytes @ 0x0
  2669                           
  2670  0020                     ??_EUSART_is_rx_ready:	
  2671                           ; 1 bytes @ 0x0
  2672                           
  2673  0020                     ??_EUSART_Read:	
  2674                           ; 1 bytes @ 0x0
  2675                           
  2676  0020                     ?_PWM3_LoadDutyValue:	
  2677                           ; 1 bytes @ 0x0
  2678                           
  2679  0020                     ?_abs:	
  2680                           ; 1 bytes @ 0x0
  2681                           
  2682  0020                     ?__Umul8_16:	
  2683                           ; 2 bytes @ 0x0
  2684                           
  2685  0020                     ?_ADC_GetConversion:	
  2686                           ; 2 bytes @ 0x0
  2687                           
  2688  0020                     ?___wmul:	
  2689                           ; 2 bytes @ 0x0
  2690                           
  2691  0020                     ?___fltol:	
  2692                           ; 2 bytes @ 0x0
  2693                           
  2694  0020                     __Umul8_16@multiplicand:	
  2695                           ; 4 bytes @ 0x0
  2696                           
  2697  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2698                           ; 1 bytes @ 0x0
  2699                           
  2700  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2701                           ; 2 bytes @ 0x0
  2702                           
  2703  0020                     EUSART_SetErrorHandler@interruptHandler:	
  2704                           ; 2 bytes @ 0x0
  2705                           
  2706  0020                     TMR4_SetInterruptHandler@InterruptHandler:	
  2707                           ; 2 bytes @ 0x0
  2708                           
  2709  0020                     CCP4_SetCallBack@customCallBack:	
  2710                           ; 2 bytes @ 0x0
  2711                           
  2712  0020                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  2713                           ; 2 bytes @ 0x0
  2714                           
  2715  0020                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  2716                           ; 2 bytes @ 0x0
  2717                           
  2718  0020                     IOCBF4_SetInterruptHandler@InterruptHandler:	
  2719                           ; 2 bytes @ 0x0
  2720                           
  2721  0020                     IOCBF5_SetInterruptHandler@InterruptHandler:	
  2722                           ; 2 bytes @ 0x0
  2723                           
  2724  0020                     PWM3_LoadDutyValue@dutyValue:	
  2725                           ; 2 bytes @ 0x0
  2726                           
  2727  0020                     ___wmul@multiplier:	
  2728                           ; 2 bytes @ 0x0
  2729                           
  2730  0020                     abs@a:	
  2731                           ; 2 bytes @ 0x0
  2732                           
  2733  0020                     ___fltol@f1:	
  2734                           ; 2 bytes @ 0x0
  2735                           
  2736                           
  2737                           ; 4 bytes @ 0x0
  2738  0020                     	ds	2
  2739  0022                     ??_EUSART_SetFramingErrorHandler:	
  2740  0022                     ??_EUSART_SetOverrunErrorHandler:	
  2741                           ; 1 bytes @ 0x2
  2742                           
  2743  0022                     ??_EUSART_SetErrorHandler:	
  2744                           ; 1 bytes @ 0x2
  2745                           
  2746  0022                     ??_PIN_MANAGER_Initialize:	
  2747                           ; 1 bytes @ 0x2
  2748                           
  2749  0022                     ??_CCP4_Initialize:	
  2750                           ; 1 bytes @ 0x2
  2751                           
  2752  0022                     ??_TMR4_Initialize:	
  2753                           ; 1 bytes @ 0x2
  2754                           
  2755  0022                     ??_TMR4_SetInterruptHandler:	
  2756                           ; 1 bytes @ 0x2
  2757                           
  2758  0022                     ??_CCP4_SetCallBack:	
  2759                           ; 1 bytes @ 0x2
  2760                           
  2761  0022                     ??_IOCBF0_SetInterruptHandler:	
  2762                           ; 1 bytes @ 0x2
  2763                           
  2764  0022                     ??_IOCBF3_SetInterruptHandler:	
  2765                           ; 1 bytes @ 0x2
  2766                           
  2767  0022                     ??_IOCBF4_SetInterruptHandler:	
  2768                           ; 1 bytes @ 0x2
  2769                           
  2770  0022                     ??_IOCBF5_SetInterruptHandler:	
  2771                           ; 1 bytes @ 0x2
  2772                           
  2773  0022                     ??_abs:	
  2774                           ; 1 bytes @ 0x2
  2775                           
  2776  0022                     ??__Umul8_16:	
  2777                           ; 1 bytes @ 0x2
  2778                           
  2779  0022                     ??_EUSART_Initialize:	
  2780                           ; 1 bytes @ 0x2
  2781                           
  2782  0022                     ??_SYSTEM_Initialize:	
  2783                           ; 1 bytes @ 0x2
  2784                           
  2785  0022                     ??_ADC_GetConversion:	
  2786                           ; 1 bytes @ 0x2
  2787                           
  2788  0022                     ??_PWM3_LoadDutyValue:	
  2789                           ; 1 bytes @ 0x2
  2790                           
  2791  0022                     ___wmul@multiplicand:	
  2792                           ; 1 bytes @ 0x2
  2793                           
  2794                           
  2795                           ; 2 bytes @ 0x2
  2796  0022                     	ds	1
  2797  0023                     ADC_GetConversion@channel:	
  2798  0023                     min_up@i:	
  2799                           ; 1 bytes @ 0x3
  2800                           
  2801  0023                     max_down@i:	
  2802                           ; 2 bytes @ 0x3
  2803                           
  2804                           
  2805                           ; 2 bytes @ 0x3
  2806  0023                     	ds	1
  2807  0024                     ??___wmul:	
  2808  0024                     ??___fltol:	
  2809                           ; 1 bytes @ 0x4
  2810                           
  2811  0024                     ?___xxtofl:	
  2812                           ; 1 bytes @ 0x4
  2813                           
  2814  0024                     ___wmul@product:	
  2815                           ; 4 bytes @ 0x4
  2816                           
  2817  0024                     __Umul8_16@product:	
  2818                           ; 2 bytes @ 0x4
  2819                           
  2820  0024                     ___xxtofl@val:	
  2821                           ; 2 bytes @ 0x4
  2822                           
  2823                           
  2824                           ; 4 bytes @ 0x4
  2825  0024                     	ds	1
  2826  0025                     ??_update:	
  2827                           
  2828                           ; 1 bytes @ 0x5
  2829  0025                     	ds	1
  2830  0026                     __Umul8_16@word_mpld:	
  2831                           
  2832                           ; 2 bytes @ 0x6
  2833  0026                     	ds	2
  2834  0028                     ??___xxtofl:	
  2835  0028                     update@aux:	
  2836                           ; 1 bytes @ 0x8
  2837                           
  2838  0028                     __Umul8_16@multiplier:	
  2839                           ; 1 bytes @ 0x8
  2840                           
  2841                           
  2842                           ; 1 bytes @ 0x8
  2843  0028                     	ds	1
  2844  0029                     ___fltol@sign1:	
  2845  0029                     update@i_1258:	
  2846                           ; 1 bytes @ 0x9
  2847                           
  2848                           
  2849                           ; 2 bytes @ 0x9
  2850  0029                     	ds	1
  2851  002A                     ___fltol@exp1:	
  2852                           
  2853                           ; 1 bytes @ 0xA
  2854  002A                     	ds	1
  2855  002B                     update@i:	
  2856                           
  2857                           ; 2 bytes @ 0xB
  2858  002B                     	ds	1
  2859  002C                     ___xxtofl@sign:	
  2860                           
  2861                           ; 1 bytes @ 0xC
  2862  002C                     	ds	1
  2863  002D                     ___xxtofl@exp:	
  2864  002D                     update@i_1259:	
  2865                           ; 1 bytes @ 0xD
  2866                           
  2867                           
  2868                           ; 2 bytes @ 0xD
  2869  002D                     	ds	1
  2870  002E                     ___xxtofl@arg:	
  2871                           
  2872                           ; 4 bytes @ 0xE
  2873  002E                     	ds	4
  2874  0032                     ?___flmul:	
  2875  0032                     ___flmul@b:	
  2876                           ; 4 bytes @ 0x12
  2877                           
  2878                           
  2879                           ; 4 bytes @ 0x12
  2880  0032                     	ds	4
  2881  0036                     ___flmul@a:	
  2882                           
  2883                           ; 4 bytes @ 0x16
  2884  0036                     	ds	4
  2885  003A                     ??___flmul:	
  2886                           
  2887                           ; 1 bytes @ 0x1A
  2888  003A                     	ds	5
  2889  003F                     ___flmul@sign:	
  2890                           
  2891                           ; 1 bytes @ 0x1F
  2892  003F                     	ds	1
  2893  0040                     ___flmul@grs:	
  2894                           
  2895                           ; 4 bytes @ 0x20
  2896  0040                     	ds	4
  2897  0044                     ___flmul@aexp:	
  2898                           
  2899                           ; 1 bytes @ 0x24
  2900  0044                     	ds	1
  2901  0045                     ___flmul@bexp:	
  2902                           
  2903                           ; 1 bytes @ 0x25
  2904  0045                     	ds	1
  2905  0046                     ___flmul@prod:	
  2906                           
  2907                           ; 4 bytes @ 0x26
  2908  0046                     	ds	4
  2909  004A                     ___flmul@temp:	
  2910                           
  2911                           ; 2 bytes @ 0x2A
  2912  004A                     	ds	2
  2913  004C                     ??_controle:	
  2914  004C                     ?___fldiv:	
  2915                           ; 1 bytes @ 0x2C
  2916                           
  2917  004C                     ___fldiv@a:	
  2918                           ; 4 bytes @ 0x2C
  2919                           
  2920                           
  2921                           ; 4 bytes @ 0x2C
  2922  004C                     	ds	4
  2923  0050                     controle@destiny:	
  2924  0050                     ___fldiv@b:	
  2925                           ; 2 bytes @ 0x30
  2926                           
  2927                           
  2928                           ; 4 bytes @ 0x30
  2929  0050                     	ds	2
  2930  0052                     controle@route:	
  2931                           
  2932                           ; 2 bytes @ 0x32
  2933  0052                     	ds	2
  2934  0054                     ??___fldiv:	
  2935  0054                     controle@a:	
  2936                           ; 1 bytes @ 0x34
  2937                           
  2938                           
  2939                           ; 2 bytes @ 0x34
  2940  0054                     	ds	2
  2941  0056                     controle@min_dutyValue:	
  2942                           
  2943                           ; 2 bytes @ 0x36
  2944  0056                     	ds	2
  2945  0058                     controle@max_dutyValue:	
  2946                           
  2947                           ; 2 bytes @ 0x38
  2948  0058                     	ds	1
  2949  0059                     ___fldiv@rem:	
  2950                           
  2951                           ; 4 bytes @ 0x39
  2952  0059                     	ds	1
  2953  005A                     controle@dutyValue:	
  2954                           
  2955                           ; 2 bytes @ 0x3A
  2956  005A                     	ds	2
  2957  005C                     controle@count:	
  2958                           
  2959                           ; 2 bytes @ 0x3C
  2960  005C                     	ds	1
  2961  005D                     ___fldiv@sign:	
  2962                           
  2963                           ; 1 bytes @ 0x3D
  2964  005D                     	ds	1
  2965  005E                     ??_col_up:	
  2966  005E                     ??_col_down:	
  2967                           ; 1 bytes @ 0x3E
  2968                           
  2969  005E                     ___fldiv@new_exp:	
  2970                           ; 1 bytes @ 0x3E
  2971                           
  2972                           
  2973                           ; 2 bytes @ 0x3E
  2974  005E                     	ds	2
  2975  0060                     ??_gerenciamento:	
  2976  0060                     ___fldiv@grs:	
  2977                           ; 1 bytes @ 0x40
  2978                           
  2979                           
  2980                           ; 4 bytes @ 0x40
  2981  0060                     	ds	4
  2982  0064                     ___fldiv@bexp:	
  2983                           
  2984                           ; 1 bytes @ 0x44
  2985  0064                     	ds	1
  2986  0065                     ___fldiv@aexp:	
  2987                           
  2988                           ; 1 bytes @ 0x45
  2989  0065                     	ds	1
  2990  0066                     ??_comunicacao:	
  2991                           
  2992                           ; 1 bytes @ 0x46
  2993  0066                     	ds	1
  2994  0067                     comunicacao@speed:	
  2995                           
  2996                           ; 4 bytes @ 0x47
  2997  0067                     	ds	4
  2998  006B                     comunicacao@position:	
  2999                           
  3000                           ; 4 bytes @ 0x4B
  3001  006B                     	ds	4
  3002  006F                     ??_main:	
  3003                           
  3004                           	psect	maintext
  3005  0B15                     __pmaintext:	
  3006                           ; 1 bytes @ 0x4F
  3007 ;;
  3008 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3009 ;;
  3010 ;; *************** function _main *****************
  3011 ;; Defined at:
  3012 ;;		line 125 in file "main.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;		None
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : B1F/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3026 ;;      Params:         0       0       0       0       0       0
  3027 ;;      Locals:         0       0       0       0       0       0
  3028 ;;      Temps:          0       0       0       0       0       0
  3029 ;;      Totals:         0       0       0       0       0       0
  3030 ;;Total ram usage:        0 bytes
  3031 ;; Hardware stack levels required when called:    9
  3032 ;; This function calls:
  3033 ;;		_CCP4_SetCallBack
  3034 ;;		_IOCBF0_SetInterruptHandler
  3035 ;;		_IOCBF3_SetInterruptHandler
  3036 ;;		_IOCBF4_SetInterruptHandler
  3037 ;;		_IOCBF5_SetInterruptHandler
  3038 ;;		_SYSTEM_Initialize
  3039 ;;		_TMR4_SetInterruptHandler
  3040 ;;		_comunicacao
  3041 ;;		_gerenciamento
  3042 ;; This function is called by:
  3043 ;;		Startup code after reset
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           
  3048                           ;psect for function _main
  3049  0B15                     _main:	
  3050  0B15                     l3983:	
  3051                           ;incstack = 0
  3052                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3053                           
  3054                           
  3055                           ;main.c: 129:     SYSTEM_Initialize();
  3056  0B15  318A  2251  318B   	fcall	_SYSTEM_Initialize
  3057  0B18                     l3985:	
  3058                           
  3059                           ;main.c: 130:     (INTCONbits.GIE = 1);
  3060  0B18  178B               	bsf	11,7	;volatile
  3061  0B19                     l3987:	
  3062                           
  3063                           ;main.c: 131:     (INTCONbits.PEIE = 1);
  3064  0B19  170B               	bsf	11,6	;volatile
  3065                           
  3066                           ;main.c: 134:     TMR4_SetInterruptHandler(send_data);
  3067  0B1A  30E0               	movlw	low _send_data
  3068  0B1B  0020               	movlb	0	; select bank0
  3069  0B1C  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  3070  0B1D  300A               	movlw	high _send_data
  3071  0B1E  00A1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  3072  0B1F  3187  27F7  318B   	fcall	_TMR4_SetInterruptHandler
  3073                           
  3074                           ;main.c: 135:     IOCBF0_SetInterruptHandler(sensor1);
  3075  0B22  3057               	movlw	low _sensor1
  3076  0B23  0020               	movlb	0	; select bank0
  3077  0B24  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler
  3078  0B25  3008               	movlw	high _sensor1
  3079  0B26  00A1               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler+1
  3080  0B27  3188  2099  318B   	fcall	_IOCBF0_SetInterruptHandler
  3081                           
  3082                           ;main.c: 136:     IOCBF3_SetInterruptHandler(sensor2);
  3083  0B2A  30D0               	movlw	low _sensor2
  3084  0B2B  0020               	movlb	0	; select bank0
  3085  0B2C  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler
  3086  0B2D  3008               	movlw	high _sensor2
  3087  0B2E  00A1               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler+1
  3088  0B2F  3188  20A2  318B   	fcall	_IOCBF3_SetInterruptHandler
  3089                           
  3090                           ;main.c: 137:     IOCBF4_SetInterruptHandler(sensor3);
  3091  0B32  30DB               	movlw	low _sensor3
  3092  0B33  0020               	movlb	0	; select bank0
  3093  0B34  00A0               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
  3094  0B35  3008               	movlw	high _sensor3
  3095  0B36  00A1               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
  3096  0B37  3188  20AB  318B   	fcall	_IOCBF4_SetInterruptHandler
  3097                           
  3098                           ;main.c: 138:     IOCBF5_SetInterruptHandler(sensor4);
  3099  0B3A  30E6               	movlw	low _sensor4
  3100  0B3B  0020               	movlb	0	; select bank0
  3101  0B3C  00A0               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler
  3102  0B3D  3008               	movlw	high _sensor4
  3103  0B3E  00A1               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler+1
  3104  0B3F  3188  20B4  318B   	fcall	_IOCBF5_SetInterruptHandler
  3105                           
  3106                           ;main.c: 139:     CCP4_SetCallBack(get_pulse);
  3107  0B42  30BB               	movlw	low _get_pulse
  3108  0B43  0020               	movlb	0	; select bank0
  3109  0B44  00A0               	movwf	CCP4_SetCallBack@customCallBack
  3110  0B45  300A               	movlw	high _get_pulse
  3111  0B46  00A1               	movwf	CCP4_SetCallBack@customCallBack+1
  3112  0B47  3188  2075  318B   	fcall	_CCP4_SetCallBack
  3113  0B4A                     l602:	
  3114                           ;main.c: 147:     while (1)
  3115                           
  3116                           
  3117                           ;main.c: 148:     {;main.c: 149:        comunicacao ();
  3118  0B4A  318F  272B  318B   	fcall	_comunicacao
  3119  0B4D                     l3989:	
  3120                           
  3121                           ;main.c: 150:        gerenciamento();
  3122  0B4D  318C  240C  318B   	fcall	_gerenciamento
  3123  0B50  2B4A               	goto	l602
  3124  0B51  3180  2834         	ljmp	start
  3125  0B53                     __end_of_main:	
  3126                           
  3127                           	psect	text1
  3128  0C0C                     __ptext1:	
  3129 ;; *************** function _gerenciamento *****************
  3130 ;; Defined at:
  3131 ;;		line 228 in file "main.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3145 ;;      Params:         0       0       0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0       0
  3148 ;;      Totals:         0       0       0       0       0       0
  3149 ;;Total ram usage:        0 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    8
  3152 ;; This function calls:
  3153 ;;		_abs
  3154 ;;		_col_down
  3155 ;;		_col_up
  3156 ;;		_controle
  3157 ;;		_update
  3158 ;; This function is called by:
  3159 ;;		_main
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           
  3164                           ;psect for function _gerenciamento
  3165  0C0C                     _gerenciamento:	
  3166  0C0C                     l3941:	
  3167                           ;incstack = 0
  3168                           ; Regs used in _gerenciamento: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3169                           
  3170                           
  3171                           ;main.c: 230:     update();
  3172  0C0C  3182  22A8  318C   	fcall	_update
  3173  0C0F                     l3943:	
  3174                           
  3175                           ;main.c: 235:    if(fila_up[0]!=out_value||fila_up[1]!=out_value||fila_up[2]!=out_value|
      +                          |fila_up[3]!=out_value||fila_up[4]!=out_value)
  3176  0C0F  0021               	movlb	1	; select bank1
  3177  0C10  083E               	movf	_fila_up^(0+128),w
  3178  0C11  043F               	iorwf	(_fila_up+1)^(0+128),w
  3179  0C12  1D03               	btfss	3,2
  3180  0C13  2C15               	goto	u4051
  3181  0C14  2C16               	goto	u4050
  3182  0C15                     u4051:	
  3183  0C15  2C2E               	goto	l3953
  3184  0C16                     u4050:	
  3185  0C16                     l3945:	
  3186  0C16  0840               	movf	(_fila_up^(0+128)+2),w
  3187  0C17  0441               	iorwf	((_fila_up+1)^(0+128)+2),w
  3188  0C18  1D03               	btfss	3,2
  3189  0C19  2C1B               	goto	u4061
  3190  0C1A  2C1C               	goto	u4060
  3191  0C1B                     u4061:	
  3192  0C1B  2C2E               	goto	l3953
  3193  0C1C                     u4060:	
  3194  0C1C                     l3947:	
  3195  0C1C  0842               	movf	(_fila_up^(0+128)+4),w
  3196  0C1D  0443               	iorwf	((_fila_up+1)^(0+128)+4),w
  3197  0C1E  1D03               	btfss	3,2
  3198  0C1F  2C21               	goto	u4071
  3199  0C20  2C22               	goto	u4070
  3200  0C21                     u4071:	
  3201  0C21  2C2E               	goto	l3953
  3202  0C22                     u4070:	
  3203  0C22                     l3949:	
  3204  0C22  0844               	movf	(_fila_up^(0+128)+6),w
  3205  0C23  0445               	iorwf	((_fila_up+1)^(0+128)+6),w
  3206  0C24  1D03               	btfss	3,2
  3207  0C25  2C27               	goto	u4081
  3208  0C26  2C28               	goto	u4080
  3209  0C27                     u4081:	
  3210  0C27  2C2E               	goto	l3953
  3211  0C28                     u4080:	
  3212  0C28                     l3951:	
  3213  0C28  0846               	movf	(_fila_up^(0+128)+8),w
  3214  0C29  0447               	iorwf	((_fila_up+1)^(0+128)+8),w
  3215  0C2A  1903               	btfsc	3,2
  3216  0C2B  2C2D               	goto	u4091
  3217  0C2C  2C2E               	goto	u4090
  3218  0C2D                     u4091:	
  3219  0C2D  2C36               	goto	l3957
  3220  0C2E                     u4090:	
  3221  0C2E                     l3953:	
  3222                           
  3223                           ;main.c: 236:    {;main.c: 237:      sentido2=1;
  3224  0C2E  3001               	movlw	1
  3225  0C2F  00D4               	movwf	_sentido2^(0+128)
  3226  0C30  3000               	movlw	0
  3227  0C31  00D5               	movwf	(_sentido2^(0+128)+1)
  3228  0C32                     l3955:	
  3229                           
  3230                           ;main.c: 238:      col_up();
  3231  0C32  3187  2775  318C   	fcall	_col_up
  3232                           
  3233                           ;main.c: 239:    }
  3234  0C35  2C80               	goto	l634
  3235  0C36                     l3957:	
  3236  0C36  082A               	movf	_origem_down^(0+128),w
  3237  0C37  042B               	iorwf	(_origem_down+1)^(0+128),w
  3238  0C38  1D03               	btfss	3,2
  3239  0C39  2C3B               	goto	u4101
  3240  0C3A  2C3C               	goto	u4100
  3241  0C3B                     u4101:	
  3242  0C3B  2C54               	goto	l3967
  3243  0C3C                     u4100:	
  3244  0C3C                     l3959:	
  3245  0C3C  082C               	movf	(_origem_down^(0+128)+2),w
  3246  0C3D  042D               	iorwf	((_origem_down+1)^(0+128)+2),w
  3247  0C3E  1D03               	btfss	3,2
  3248  0C3F  2C41               	goto	u4111
  3249  0C40  2C42               	goto	u4110
  3250  0C41                     u4111:	
  3251  0C41  2C54               	goto	l3967
  3252  0C42                     u4110:	
  3253  0C42                     l3961:	
  3254  0C42  082E               	movf	(_origem_down^(0+128)+4),w
  3255  0C43  042F               	iorwf	((_origem_down+1)^(0+128)+4),w
  3256  0C44  1D03               	btfss	3,2
  3257  0C45  2C47               	goto	u4121
  3258  0C46  2C48               	goto	u4120
  3259  0C47                     u4121:	
  3260  0C47  2C54               	goto	l3967
  3261  0C48                     u4120:	
  3262  0C48                     l3963:	
  3263  0C48  0830               	movf	(_origem_down^(0+128)+6),w
  3264  0C49  0431               	iorwf	((_origem_down+1)^(0+128)+6),w
  3265  0C4A  1D03               	btfss	3,2
  3266  0C4B  2C4D               	goto	u4131
  3267  0C4C  2C4E               	goto	u4130
  3268  0C4D                     u4131:	
  3269  0C4D  2C54               	goto	l3967
  3270  0C4E                     u4130:	
  3271  0C4E                     l3965:	
  3272  0C4E  0832               	movf	(_origem_down^(0+128)+8),w
  3273  0C4F  0433               	iorwf	((_origem_down+1)^(0+128)+8),w
  3274  0C50  1903               	btfsc	3,2
  3275  0C51  2C53               	goto	u4141
  3276  0C52  2C54               	goto	u4140
  3277  0C53                     u4141:	
  3278  0C53  2C5A               	goto	l3971
  3279  0C54                     u4140:	
  3280  0C54                     l3967:	
  3281                           
  3282                           ;main.c: 243:    {;main.c: 244:      sentido2=0;
  3283  0C54  01D4               	clrf	_sentido2^(0+128)
  3284  0C55  01D5               	clrf	(_sentido2+1)^(0+128)
  3285  0C56                     l3969:	
  3286                           
  3287                           ;main.c: 245:      col_down();
  3288  0C56  318C  2481  318C   	fcall	_col_down
  3289                           
  3290                           ;main.c: 246:    }
  3291  0C59  2C80               	goto	l634
  3292  0C5A                     l3971:	
  3293                           
  3294                           ;main.c: 250:    {;main.c: 251:      sentido2=2;
  3295  0C5A  3002               	movlw	2
  3296  0C5B  00D4               	movwf	_sentido2^(0+128)
  3297  0C5C  3000               	movlw	0
  3298  0C5D  00D5               	movwf	(_sentido2^(0+128)+1)
  3299  0C5E                     l3973:	
  3300                           
  3301                           ;main.c: 252:      distancia=abs(and_ating-1);
  3302  0C5E  0020               	movlb	0	; select bank0
  3303  0C5F  086F               	movf	_and_ating,w
  3304  0C60  3EFF               	addlw	255
  3305  0C61  00A0               	movwf	abs@a
  3306  0C62  30FF               	movlw	255
  3307  0C63  1803               	skipnc
  3308  0C64  3000               	movlw	0
  3309  0C65  00A1               	movwf	abs@a+1
  3310  0C66  3189  21B7  318C   	fcall	_abs
  3311  0C69  0020               	movlb	0	; select bank0
  3312  0C6A  0821               	movf	?_abs+1,w
  3313  0C6B  0021               	movlb	1	; select bank1
  3314  0C6C  00D1               	movwf	(_distancia+1)^(0+128)
  3315  0C6D  0020               	movlb	0	; select bank0
  3316  0C6E  0820               	movf	?_abs,w
  3317  0C6F  0021               	movlb	1	; select bank1
  3318  0C70  00D0               	movwf	_distancia^(0+128)
  3319  0C71                     l3975:	
  3320                           
  3321                           ;main.c: 253:       if(and_ating > 1)
  3322  0C71  3002               	movlw	2
  3323  0C72  0020               	movlb	0	; select bank0
  3324  0C73  026F               	subwf	_and_ating,w
  3325  0C74  1C03               	skipc
  3326  0C75  2C77               	goto	u4151
  3327  0C76  2C78               	goto	u4150
  3328  0C77                     u4151:	
  3329  0C77  2C7D               	goto	l3981
  3330  0C78                     u4150:	
  3331  0C78                     l3977:	
  3332                           
  3333                           ;main.c: 254:          {;main.c: 255:           sentido = 0;
  3334  0C78  0021               	movlb	1	; select bank1
  3335  0C79  01D8               	clrf	_sentido^(0+128)
  3336  0C7A  01D9               	clrf	(_sentido+1)^(0+128)
  3337  0C7B                     l3979:	
  3338                           
  3339                           ;main.c: 256:            LATAbits.LATA2 = 0;
  3340  0C7B  0022               	movlb	2	; select bank2
  3341  0C7C  110C               	bcf	12,2	;volatile
  3342  0C7D                     l3981:	
  3343                           
  3344                           ;main.c: 258:      controle();
  3345  0C7D  3186  2635  318C   	fcall	_controle
  3346  0C80                     l634:	
  3347  0C80  0008               	return
  3348  0C81                     __end_of_gerenciamento:	
  3349                           
  3350                           	psect	text2
  3351  0775                     __ptext2:	
  3352 ;; *************** function _col_up *****************
  3353 ;; Defined at:
  3354 ;;		line 264 in file "main.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3368 ;;      Params:         0       0       0       0       0       0
  3369 ;;      Locals:         0       0       0       0       0       0
  3370 ;;      Temps:          0       2       0       0       0       0
  3371 ;;      Totals:         0       2       0       0       0       0
  3372 ;;Total ram usage:        2 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    7
  3375 ;; This function calls:
  3376 ;;		_abs
  3377 ;;		_controle
  3378 ;;		_min_up
  3379 ;; This function is called by:
  3380 ;;		_gerenciamento
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           
  3385                           ;psect for function _col_up
  3386  0775                     _col_up:	
  3387  0775                     l3887:	
  3388                           ;incstack = 0
  3389                           ; Regs used in _col_up: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3390                           
  3391                           
  3392                           ;main.c: 266:         while(and_ating!=min_origem_up)
  3393  0775  2FAB               	goto	l3901
  3394  0776                     l3889:	
  3395                           
  3396                           ;main.c: 267:         {;main.c: 268:             distancia=abs(and_ating-min_origem_up);
  3397  0776  086F               	movf	_and_ating,w
  3398  0777  00DE               	movwf	??_col_up
  3399  0778  0870               	movf	_min_origem_up,w
  3400  0779  025E               	subwf	??_col_up,w
  3401  077A  00A0               	movwf	abs@a
  3402  077B  0971               	comf	_min_origem_up+1,w
  3403  077C  1803               	skipnc
  3404  077D  0A89               	incf	9,f
  3405  077E  00A1               	movwf	abs@a+1
  3406  077F  3189  21B7  3187   	fcall	_abs
  3407  0782  0020               	movlb	0	; select bank0
  3408  0783  0821               	movf	?_abs+1,w
  3409  0784  0021               	movlb	1	; select bank1
  3410  0785  00D1               	movwf	(_distancia+1)^(0+128)
  3411  0786  0020               	movlb	0	; select bank0
  3412  0787  0820               	movf	?_abs,w
  3413  0788  0021               	movlb	1	; select bank1
  3414  0789  00D0               	movwf	_distancia^(0+128)
  3415  078A                     l3891:	
  3416                           
  3417                           ;main.c: 269:             if(and_ating>min_origem_up)
  3418  078A  0871               	movf	_min_origem_up+1,w
  3419  078B  3A80               	xorlw	128
  3420  078C  0020               	movlb	0	; select bank0
  3421  078D  00DE               	movwf	??_col_up
  3422  078E  3080               	movlw	128
  3423  078F  025E               	subwf	??_col_up,w
  3424  0790  1D03               	skipz
  3425  0791  2F94               	goto	u3955
  3426  0792  086F               	movf	_and_ating,w
  3427  0793  0270               	subwf	_min_origem_up,w
  3428  0794                     u3955:	
  3429  0794  1803               	skipnc
  3430  0795  2F97               	goto	u3951
  3431  0796  2F98               	goto	u3950
  3432  0797                     u3951:	
  3433  0797  2F9A               	goto	l3895
  3434  0798                     u3950:	
  3435  0798                     l3893:	
  3436                           
  3437                           ;main.c: 270:             {;main.c: 271:                 LATAbits.LATA2 = 0;
  3438  0798  0022               	movlb	2	; select bank2
  3439  0799  110C               	bcf	12,2	;volatile
  3440  079A                     l3895:	
  3441                           
  3442                           ;main.c: 273:             if(and_ating<min_origem_up)
  3443  079A  0871               	movf	_min_origem_up+1,w
  3444  079B  3A80               	xorlw	128
  3445  079C  3C80               	sublw	128
  3446  079D  1D03               	skipz
  3447  079E  2FA2               	goto	u3965
  3448  079F  0870               	movf	_min_origem_up,w
  3449  07A0  0020               	movlb	0	; select bank0
  3450  07A1  026F               	subwf	_and_ating,w
  3451  07A2                     u3965:	
  3452  07A2  1803               	skipnc
  3453  07A3  2FA5               	goto	u3961
  3454  07A4  2FA6               	goto	u3960
  3455  07A5                     u3961:	
  3456  07A5  2FA8               	goto	l3899
  3457  07A6                     u3960:	
  3458  07A6                     l3897:	
  3459                           
  3460                           ;main.c: 274:             {;main.c: 276:                 LATAbits.LATA2 = 1;
  3461  07A6  0022               	movlb	2	; select bank2
  3462  07A7  150C               	bsf	12,2	;volatile
  3463  07A8                     l3899:	
  3464                           
  3465                           ;main.c: 278:             controle();
  3466  07A8  3186  2635  3187   	fcall	_controle
  3467  07AB                     l3901:	
  3468                           
  3469                           ;main.c: 266:         while(and_ating!=min_origem_up)
  3470  07AB  0020               	movlb	0	; select bank0
  3471  07AC  086F               	movf	_and_ating,w
  3472  07AD  00DE               	movwf	??_col_up
  3473  07AE  01DF               	clrf	??_col_up+1
  3474  07AF  0871               	movf	_min_origem_up+1,w
  3475  07B0  065F               	xorwf	??_col_up+1,w
  3476  07B1  1D03               	skipz
  3477  07B2  2FB5               	goto	u3975
  3478  07B3  0870               	movf	_min_origem_up,w
  3479  07B4  065E               	xorwf	??_col_up,w
  3480  07B5                     u3975:	
  3481  07B5  1D03               	skipz
  3482  07B6  2FB8               	goto	u3971
  3483  07B7  2FB9               	goto	u3970
  3484  07B8                     u3971:	
  3485  07B8  2F76               	goto	l3889
  3486  07B9                     u3970:	
  3487  07B9                     l641:	
  3488                           
  3489                           ;main.c: 280:         LATAbits.LATA2 = 1;
  3490  07B9  0022               	movlb	2	; select bank2
  3491  07BA  150C               	bsf	12,2	;volatile
  3492  07BB                     l3903:	
  3493                           
  3494                           ;main.c: 282:         {;main.c: 283:             if(and_ating==min_origem_up)
  3495  07BB  0020               	movlb	0	; select bank0
  3496  07BC  086F               	movf	_and_ating,w
  3497  07BD  00DE               	movwf	??_col_up
  3498  07BE  01DF               	clrf	??_col_up+1
  3499  07BF  0871               	movf	_min_origem_up+1,w
  3500  07C0  065F               	xorwf	??_col_up+1,w
  3501  07C1  1D03               	skipz
  3502  07C2  2FC5               	goto	u3985
  3503  07C3  0870               	movf	_min_origem_up,w
  3504  07C4  065E               	xorwf	??_col_up,w
  3505  07C5                     u3985:	
  3506  07C5  1D03               	skipz
  3507  07C6  2FC8               	goto	u3981
  3508  07C7  2FC9               	goto	u3980
  3509  07C8                     u3981:	
  3510  07C8  2FE4               	goto	l3911
  3511  07C9                     u3980:	
  3512  07C9                     l3905:	
  3513                           
  3514                           ;main.c: 284:             {;main.c: 285:                 min_up();
  3515  07C9  318E  265E  3187   	fcall	_min_up
  3516  07CC                     l3907:	
  3517                           
  3518                           ;main.c: 286:                 distancia=abs(and_ating-min_origem_up);
  3519  07CC  0020               	movlb	0	; select bank0
  3520  07CD  086F               	movf	_and_ating,w
  3521  07CE  00DE               	movwf	??_col_up
  3522  07CF  0870               	movf	_min_origem_up,w
  3523  07D0  025E               	subwf	??_col_up,w
  3524  07D1  00A0               	movwf	abs@a
  3525  07D2  0971               	comf	_min_origem_up+1,w
  3526  07D3  1803               	skipnc
  3527  07D4  0A89               	incf	9,f
  3528  07D5  00A1               	movwf	abs@a+1
  3529  07D6  3189  21B7  3187   	fcall	_abs
  3530  07D9  0020               	movlb	0	; select bank0
  3531  07DA  0821               	movf	?_abs+1,w
  3532  07DB  0021               	movlb	1	; select bank1
  3533  07DC  00D1               	movwf	(_distancia+1)^(0+128)
  3534  07DD  0020               	movlb	0	; select bank0
  3535  07DE  0820               	movf	?_abs,w
  3536  07DF  0021               	movlb	1	; select bank1
  3537  07E0  00D0               	movwf	_distancia^(0+128)
  3538  07E1                     l3909:	
  3539                           
  3540                           ;main.c: 287:                 controle();
  3541  07E1  3186  2635  3187   	fcall	_controle
  3542  07E4                     l3911:	
  3543                           
  3544                           ;main.c: 289:         }while (and_ating!=max_fila_up);
  3545  07E4  0020               	movlb	0	; select bank0
  3546  07E5  086F               	movf	_and_ating,w
  3547  07E6  00DE               	movwf	??_col_up
  3548  07E7  01DF               	clrf	??_col_up+1
  3549  07E8  0021               	movlb	1	; select bank1
  3550  07E9  084F               	movf	(_max_fila_up+1)^(0+128),w
  3551  07EA  0020               	movlb	0	; select bank0
  3552  07EB  065F               	xorwf	??_col_up+1,w
  3553  07EC  1D03               	skipz
  3554  07ED  2FF2               	goto	u3995
  3555  07EE  0021               	movlb	1	; select bank1
  3556  07EF  084E               	movf	_max_fila_up^(0+128),w
  3557  07F0  0020               	movlb	0	; select bank0
  3558  07F1  065E               	xorwf	??_col_up,w
  3559  07F2                     u3995:	
  3560  07F2  1D03               	skipz
  3561  07F3  2FF5               	goto	u3991
  3562  07F4  2FF6               	goto	u3990
  3563  07F5                     u3991:	
  3564  07F5  2FBB               	goto	l3903
  3565  07F6                     u3990:	
  3566  07F6                     l645:	
  3567  07F6  0008               	return
  3568  07F7                     __end_of_col_up:	
  3569                           
  3570                           	psect	text3
  3571  0C81                     __ptext3:	
  3572 ;; *************** function _col_down *****************
  3573 ;; Defined at:
  3574 ;;		line 292 in file "main.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;		None
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3588 ;;      Params:         0       0       0       0       0       0
  3589 ;;      Locals:         0       0       0       0       0       0
  3590 ;;      Temps:          0       2       0       0       0       0
  3591 ;;      Totals:         0       2       0       0       0       0
  3592 ;;Total ram usage:        2 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    7
  3595 ;; This function calls:
  3596 ;;		_abs
  3597 ;;		_controle
  3598 ;;		_max_down
  3599 ;; This function is called by:
  3600 ;;		_gerenciamento
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           
  3605                           ;psect for function _col_down
  3606  0C81                     _col_down:	
  3607  0C81                     l3913:	
  3608                           ;incstack = 0
  3609                           ; Regs used in _col_down: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3610                           
  3611                           
  3612                           ;main.c: 294:         while(and_ating!=max_origem_down)
  3613  0C81  2CB7               	goto	l3927
  3614  0C82                     l3915:	
  3615                           
  3616                           ;main.c: 295:         {;main.c: 296:             distancia = abs(and_ating-max_origem_do
      +                          wn);
  3617  0C82  086F               	movf	_and_ating,w
  3618  0C83  00DE               	movwf	??_col_down
  3619  0C84  0872               	movf	_max_origem_down,w
  3620  0C85  025E               	subwf	??_col_down,w
  3621  0C86  00A0               	movwf	abs@a
  3622  0C87  0973               	comf	_max_origem_down+1,w
  3623  0C88  1803               	skipnc
  3624  0C89  0A89               	incf	9,f
  3625  0C8A  00A1               	movwf	abs@a+1
  3626  0C8B  3189  21B7  318C   	fcall	_abs
  3627  0C8E  0020               	movlb	0	; select bank0
  3628  0C8F  0821               	movf	?_abs+1,w
  3629  0C90  0021               	movlb	1	; select bank1
  3630  0C91  00D1               	movwf	(_distancia+1)^(0+128)
  3631  0C92  0020               	movlb	0	; select bank0
  3632  0C93  0820               	movf	?_abs,w
  3633  0C94  0021               	movlb	1	; select bank1
  3634  0C95  00D0               	movwf	_distancia^(0+128)
  3635  0C96                     l3917:	
  3636                           
  3637                           ;main.c: 297:             if(and_ating>max_origem_down)
  3638  0C96  0873               	movf	_max_origem_down+1,w
  3639  0C97  3A80               	xorlw	128
  3640  0C98  0020               	movlb	0	; select bank0
  3641  0C99  00DE               	movwf	??_col_down
  3642  0C9A  3080               	movlw	128
  3643  0C9B  025E               	subwf	??_col_down,w
  3644  0C9C  1D03               	skipz
  3645  0C9D  2CA0               	goto	u4005
  3646  0C9E  086F               	movf	_and_ating,w
  3647  0C9F  0272               	subwf	_max_origem_down,w
  3648  0CA0                     u4005:	
  3649  0CA0  1803               	skipnc
  3650  0CA1  2CA3               	goto	u4001
  3651  0CA2  2CA4               	goto	u4000
  3652  0CA3                     u4001:	
  3653  0CA3  2CA6               	goto	l3921
  3654  0CA4                     u4000:	
  3655  0CA4                     l3919:	
  3656                           
  3657                           ;main.c: 298:             {;main.c: 299:                 LATAbits.LATA2 = 0;
  3658  0CA4  0022               	movlb	2	; select bank2
  3659  0CA5  110C               	bcf	12,2	;volatile
  3660  0CA6                     l3921:	
  3661                           
  3662                           ;main.c: 301:             if(and_ating<max_origem_down)
  3663  0CA6  0873               	movf	_max_origem_down+1,w
  3664  0CA7  3A80               	xorlw	128
  3665  0CA8  3C80               	sublw	128
  3666  0CA9  1D03               	skipz
  3667  0CAA  2CAE               	goto	u4015
  3668  0CAB  0872               	movf	_max_origem_down,w
  3669  0CAC  0020               	movlb	0	; select bank0
  3670  0CAD  026F               	subwf	_and_ating,w
  3671  0CAE                     u4015:	
  3672  0CAE  1803               	skipnc
  3673  0CAF  2CB1               	goto	u4011
  3674  0CB0  2CB2               	goto	u4010
  3675  0CB1                     u4011:	
  3676  0CB1  2CB4               	goto	l3925
  3677  0CB2                     u4010:	
  3678  0CB2                     l3923:	
  3679                           
  3680                           ;main.c: 302:             {;main.c: 303:                 LATAbits.LATA2 = 1;
  3681  0CB2  0022               	movlb	2	; select bank2
  3682  0CB3  150C               	bsf	12,2	;volatile
  3683  0CB4                     l3925:	
  3684                           
  3685                           ;main.c: 305:             controle();
  3686  0CB4  3186  2635  318C   	fcall	_controle
  3687  0CB7                     l3927:	
  3688                           
  3689                           ;main.c: 294:         while(and_ating!=max_origem_down)
  3690  0CB7  0020               	movlb	0	; select bank0
  3691  0CB8  086F               	movf	_and_ating,w
  3692  0CB9  00DE               	movwf	??_col_down
  3693  0CBA  01DF               	clrf	??_col_down+1
  3694  0CBB  0873               	movf	_max_origem_down+1,w
  3695  0CBC  065F               	xorwf	??_col_down+1,w
  3696  0CBD  1D03               	skipz
  3697  0CBE  2CC1               	goto	u4025
  3698  0CBF  0872               	movf	_max_origem_down,w
  3699  0CC0  065E               	xorwf	??_col_down,w
  3700  0CC1                     u4025:	
  3701  0CC1  1D03               	skipz
  3702  0CC2  2CC4               	goto	u4021
  3703  0CC3  2CC5               	goto	u4020
  3704  0CC4                     u4021:	
  3705  0CC4  2C82               	goto	l3915
  3706  0CC5                     u4020:	
  3707  0CC5                     l652:	
  3708                           
  3709                           ;main.c: 307:         LATAbits.LATA2 = 0;
  3710  0CC5  0022               	movlb	2	; select bank2
  3711  0CC6  110C               	bcf	12,2	;volatile
  3712  0CC7                     l3929:	
  3713                           
  3714                           ;main.c: 309:         {;main.c: 310:             if(and_ating==max_origem_down)
  3715  0CC7  0020               	movlb	0	; select bank0
  3716  0CC8  086F               	movf	_and_ating,w
  3717  0CC9  00DE               	movwf	??_col_down
  3718  0CCA  01DF               	clrf	??_col_down+1
  3719  0CCB  0873               	movf	_max_origem_down+1,w
  3720  0CCC  065F               	xorwf	??_col_down+1,w
  3721  0CCD  1D03               	skipz
  3722  0CCE  2CD1               	goto	u4035
  3723  0CCF  0872               	movf	_max_origem_down,w
  3724  0CD0  065E               	xorwf	??_col_down,w
  3725  0CD1                     u4035:	
  3726  0CD1  1D03               	skipz
  3727  0CD2  2CD4               	goto	u4031
  3728  0CD3  2CD5               	goto	u4030
  3729  0CD4                     u4031:	
  3730  0CD4  2CF0               	goto	l3937
  3731  0CD5                     u4030:	
  3732  0CD5                     l3931:	
  3733                           
  3734                           ;main.c: 311:             {;main.c: 312:                 max_down();
  3735  0CD5  318D  25B0  318C   	fcall	_max_down
  3736  0CD8                     l3933:	
  3737                           
  3738                           ;main.c: 313:                 distancia=abs(and_ating-max_origem_down);
  3739  0CD8  0020               	movlb	0	; select bank0
  3740  0CD9  086F               	movf	_and_ating,w
  3741  0CDA  00DE               	movwf	??_col_down
  3742  0CDB  0872               	movf	_max_origem_down,w
  3743  0CDC  025E               	subwf	??_col_down,w
  3744  0CDD  00A0               	movwf	abs@a
  3745  0CDE  0973               	comf	_max_origem_down+1,w
  3746  0CDF  1803               	skipnc
  3747  0CE0  0A89               	incf	9,f
  3748  0CE1  00A1               	movwf	abs@a+1
  3749  0CE2  3189  21B7  318C   	fcall	_abs
  3750  0CE5  0020               	movlb	0	; select bank0
  3751  0CE6  0821               	movf	?_abs+1,w
  3752  0CE7  0021               	movlb	1	; select bank1
  3753  0CE8  00D1               	movwf	(_distancia+1)^(0+128)
  3754  0CE9  0020               	movlb	0	; select bank0
  3755  0CEA  0820               	movf	?_abs,w
  3756  0CEB  0021               	movlb	1	; select bank1
  3757  0CEC  00D0               	movwf	_distancia^(0+128)
  3758  0CED                     l3935:	
  3759                           
  3760                           ;main.c: 314:                 controle();
  3761  0CED  3186  2635  318C   	fcall	_controle
  3762  0CF0                     l3937:	
  3763                           
  3764                           ;main.c: 316:         }while(and_ating!=min_fila_down);
  3765  0CF0  0020               	movlb	0	; select bank0
  3766  0CF1  086F               	movf	_and_ating,w
  3767  0CF2  00DE               	movwf	??_col_down
  3768  0CF3  01DF               	clrf	??_col_down+1
  3769  0CF4  0021               	movlb	1	; select bank1
  3770  0CF5  084D               	movf	(_min_fila_down+1)^(0+128),w
  3771  0CF6  0020               	movlb	0	; select bank0
  3772  0CF7  065F               	xorwf	??_col_down+1,w
  3773  0CF8  1D03               	skipz
  3774  0CF9  2CFE               	goto	u4045
  3775  0CFA  0021               	movlb	1	; select bank1
  3776  0CFB  084C               	movf	_min_fila_down^(0+128),w
  3777  0CFC  0020               	movlb	0	; select bank0
  3778  0CFD  065E               	xorwf	??_col_down,w
  3779  0CFE                     u4045:	
  3780  0CFE  1D03               	skipz
  3781  0CFF  2D01               	goto	u4041
  3782  0D00  2D02               	goto	u4040
  3783  0D01                     u4041:	
  3784  0D01  2CC7               	goto	l3929
  3785  0D02                     u4040:	
  3786  0D02                     l656:	
  3787  0D02  0008               	return
  3788  0D03                     __end_of_col_down:	
  3789                           
  3790                           	psect	text4
  3791  0635                     __ptext4:	
  3792 ;; *************** function _controle *****************
  3793 ;; Defined at:
  3794 ;;		line 183 in file "main.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;		None
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  count           2   60[BANK0 ] int 
  3799 ;;  dutyValue       2   58[BANK0 ] int 
  3800 ;;  max_dutyValu    2   56[BANK0 ] int 
  3801 ;;  min_dutyValu    2   54[BANK0 ] int 
  3802 ;;  a               2   52[BANK0 ] int 
  3803 ;;  route           2   50[BANK0 ] int 
  3804 ;;  destiny         2   48[BANK0 ] int 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      void 
  3807 ;; Registers used:
  3808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3814 ;;      Params:         0       0       0       0       0       0
  3815 ;;      Locals:         0      14       0       0       0       0
  3816 ;;      Temps:          0       4       0       0       0       0
  3817 ;;      Totals:         0      18       0       0       0       0
  3818 ;;Total ram usage:       18 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    6
  3821 ;; This function calls:
  3822 ;;		_ADC_GetConversion
  3823 ;;		_PWM3_LoadDutyValue
  3824 ;;		___flmul
  3825 ;;		___wmul
  3826 ;;		___xxtofl
  3827 ;;		_update
  3828 ;; This function is called by:
  3829 ;;		_gerenciamento
  3830 ;;		_col_up
  3831 ;;		_col_down
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           
  3836                           ;psect for function _controle
  3837  0635                     _controle:	
  3838  0635                     l3705:	
  3839                           ;incstack = 0
  3840                           ; Regs used in _controle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3841                           
  3842                           
  3843                           ;main.c: 185:     I_m = 0.1*ADC_GetConversion(0);
  3844  0635  303D               	movlw	61
  3845  0636  0020               	movlb	0	; select bank0
  3846  0637  00B5               	movwf	___flmul@b+3
  3847  0638  30CC               	movlw	204
  3848  0639  00B4               	movwf	___flmul@b+2
  3849  063A  30CC               	movlw	204
  3850  063B  00B3               	movwf	___flmul@b+1
  3851  063C  30CD               	movlw	205
  3852  063D  00B2               	movwf	___flmul@b
  3853  063E  3000               	movlw	0
  3854  063F  318A  2230  3186   	fcall	_ADC_GetConversion
  3855  0642  0020               	movlb	0	; select bank0
  3856  0643  0820               	movf	?_ADC_GetConversion,w
  3857  0644  00CC               	movwf	??_controle
  3858  0645  0821               	movf	?_ADC_GetConversion+1,w
  3859  0646  00CD               	movwf	??_controle+1
  3860  0647  01CE               	clrf	??_controle+2
  3861  0648  01CF               	clrf	??_controle+3
  3862  0649  084F               	movf	??_controle+3,w
  3863  064A  00A7               	movwf	___xxtofl@val+3
  3864  064B  084E               	movf	??_controle+2,w
  3865  064C  00A6               	movwf	___xxtofl@val+2
  3866  064D  084D               	movf	??_controle+1,w
  3867  064E  00A5               	movwf	___xxtofl@val+1
  3868  064F  084C               	movf	??_controle,w
  3869  0650  00A4               	movwf	___xxtofl@val
  3870  0651  3000               	movlw	0
  3871  0652  318D  2503  3186   	fcall	___xxtofl
  3872  0655  0020               	movlb	0	; select bank0
  3873  0656  0827               	movf	?___xxtofl+3,w
  3874  0657  00B9               	movwf	___flmul@a+3
  3875  0658  0826               	movf	?___xxtofl+2,w
  3876  0659  00B8               	movwf	___flmul@a+2
  3877  065A  0825               	movf	?___xxtofl+1,w
  3878  065B  00B7               	movwf	___flmul@a+1
  3879  065C  0824               	movf	?___xxtofl,w
  3880  065D  00B6               	movwf	___flmul@a
  3881  065E  3180  2051  3186   	fcall	___flmul
  3882  0661  0020               	movlb	0	; select bank0
  3883  0662  0835               	movf	?___flmul+3,w
  3884  0663  0021               	movlb	1	; select bank1
  3885  0664  00E6               	movwf	(_I_m+3)^(0+128)
  3886  0665  0020               	movlb	0	; select bank0
  3887  0666  0834               	movf	?___flmul+2,w
  3888  0667  0021               	movlb	1	; select bank1
  3889  0668  00E5               	movwf	(_I_m+2)^(0+128)
  3890  0669  0020               	movlb	0	; select bank0
  3891  066A  0833               	movf	?___flmul+1,w
  3892  066B  0021               	movlb	1	; select bank1
  3893  066C  00E4               	movwf	(_I_m+1)^(0+128)
  3894  066D  0020               	movlb	0	; select bank0
  3895  066E  0832               	movf	?___flmul,w
  3896  066F  0021               	movlb	1	; select bank1
  3897  0670  00E3               	movwf	_I_m^(0+128)
  3898                           
  3899                           ;main.c: 186:     temp_mt = 0.3*ADC_GetConversion(1);
  3900  0671  303E               	movlw	62
  3901  0672  0020               	movlb	0	; select bank0
  3902  0673  00B5               	movwf	___flmul@b+3
  3903  0674  3099               	movlw	153
  3904  0675  00B4               	movwf	___flmul@b+2
  3905  0676  3099               	movlw	153
  3906  0677  00B3               	movwf	___flmul@b+1
  3907  0678  309A               	movlw	154
  3908  0679  00B2               	movwf	___flmul@b
  3909  067A  3001               	movlw	1
  3910  067B  318A  2230  3186   	fcall	_ADC_GetConversion
  3911  067E  0020               	movlb	0	; select bank0
  3912  067F  0820               	movf	?_ADC_GetConversion,w
  3913  0680  00CC               	movwf	??_controle
  3914  0681  0821               	movf	?_ADC_GetConversion+1,w
  3915  0682  00CD               	movwf	??_controle+1
  3916  0683  01CE               	clrf	??_controle+2
  3917  0684  01CF               	clrf	??_controle+3
  3918  0685  084F               	movf	??_controle+3,w
  3919  0686  00A7               	movwf	___xxtofl@val+3
  3920  0687  084E               	movf	??_controle+2,w
  3921  0688  00A6               	movwf	___xxtofl@val+2
  3922  0689  084D               	movf	??_controle+1,w
  3923  068A  00A5               	movwf	___xxtofl@val+1
  3924  068B  084C               	movf	??_controle,w
  3925  068C  00A4               	movwf	___xxtofl@val
  3926  068D  3000               	movlw	0
  3927  068E  318D  2503  3186   	fcall	___xxtofl
  3928  0691  0020               	movlb	0	; select bank0
  3929  0692  0827               	movf	?___xxtofl+3,w
  3930  0693  00B9               	movwf	___flmul@a+3
  3931  0694  0826               	movf	?___xxtofl+2,w
  3932  0695  00B8               	movwf	___flmul@a+2
  3933  0696  0825               	movf	?___xxtofl+1,w
  3934  0697  00B7               	movwf	___flmul@a+1
  3935  0698  0824               	movf	?___xxtofl,w
  3936  0699  00B6               	movwf	___flmul@a
  3937  069A  3180  2051  3186   	fcall	___flmul
  3938  069D  0020               	movlb	0	; select bank0
  3939  069E  0835               	movf	?___flmul+3,w
  3940  069F  0021               	movlb	1	; select bank1
  3941  06A0  00E2               	movwf	(_temp_mt+3)^(0+128)
  3942  06A1  0020               	movlb	0	; select bank0
  3943  06A2  0834               	movf	?___flmul+2,w
  3944  06A3  0021               	movlb	1	; select bank1
  3945  06A4  00E1               	movwf	(_temp_mt+2)^(0+128)
  3946  06A5  0020               	movlb	0	; select bank0
  3947  06A6  0833               	movf	?___flmul+1,w
  3948  06A7  0021               	movlb	1	; select bank1
  3949  06A8  00E0               	movwf	(_temp_mt+1)^(0+128)
  3950  06A9  0020               	movlb	0	; select bank0
  3951  06AA  0832               	movf	?___flmul,w
  3952  06AB  0021               	movlb	1	; select bank1
  3953  06AC  00DF               	movwf	_temp_mt^(0+128)
  3954  06AD                     l3707:	
  3955  06AD                     l3709:	
  3956                           
  3957                           ;main.c: 188:     int a = 52;
  3958  06AD  3034               	movlw	52
  3959  06AE  0020               	movlb	0	; select bank0
  3960  06AF  00D4               	movwf	controle@a
  3961  06B0  3000               	movlw	0
  3962  06B1  00D5               	movwf	controle@a+1
  3963  06B2                     l3711:	
  3964                           
  3965                           ;main.c: 189:     int max_dutyValue = 1023;
  3966  06B2  30FF               	movlw	255
  3967  06B3  00D8               	movwf	controle@max_dutyValue
  3968  06B4  3003               	movlw	3
  3969  06B5  00D9               	movwf	controle@max_dutyValue+1
  3970  06B6                     l3713:	
  3971                           
  3972                           ;main.c: 190:     int min_dutyValue = 256;
  3973  06B6  3000               	movlw	0
  3974  06B7  00D6               	movwf	controle@min_dutyValue
  3975  06B8  3001               	movlw	1
  3976  06B9  00D7               	movwf	controle@min_dutyValue+1
  3977  06BA                     l3715:	
  3978                           
  3979                           ;main.c: 191:     int destiny = distancia*60;
  3980  06BA  0021               	movlb	1	; select bank1
  3981  06BB  0851               	movf	(_distancia+1)^(0+128),w
  3982  06BC  0020               	movlb	0	; select bank0
  3983  06BD  00A1               	movwf	___wmul@multiplier+1
  3984  06BE  0021               	movlb	1	; select bank1
  3985  06BF  0850               	movf	_distancia^(0+128),w
  3986  06C0  0020               	movlb	0	; select bank0
  3987  06C1  00A0               	movwf	___wmul@multiplier
  3988  06C2  303C               	movlw	60
  3989  06C3  00A2               	movwf	___wmul@multiplicand
  3990  06C4  3000               	movlw	0
  3991  06C5  00A3               	movwf	___wmul@multiplicand+1
  3992  06C6  3189  21EF  3186   	fcall	___wmul
  3993  06C9  0020               	movlb	0	; select bank0
  3994  06CA  0821               	movf	?___wmul+1,w
  3995  06CB  00D1               	movwf	controle@destiny+1
  3996  06CC  0820               	movf	?___wmul,w
  3997  06CD  00D0               	movwf	controle@destiny
  3998  06CE                     l3717:	
  3999                           
  4000                           ;main.c: 192:     int route = destiny - 40;
  4001  06CE  0850               	movf	controle@destiny,w
  4002  06CF  3ED8               	addlw	216
  4003  06D0  00D2               	movwf	controle@route
  4004  06D1  30FF               	movlw	255
  4005  06D2  3D51               	addwfc	controle@destiny+1,w
  4006  06D3  00D3               	movwf	controle@route+1
  4007  06D4                     l3719:	
  4008                           
  4009                           ;main.c: 193:     int dutyValue = 0;
  4010  06D4  01DA               	clrf	controle@dutyValue
  4011  06D5  01DB               	clrf	controle@dutyValue+1
  4012  06D6                     l3721:	
  4013                           
  4014                           ;main.c: 196:     for(count = 0; count < 20; count++){
  4015  06D6  01DC               	clrf	controle@count
  4016  06D7  01DD               	clrf	controle@count+1
  4017  06D8                     l3727:	
  4018                           
  4019                           ;main.c: 198:         dutyValue+=a;
  4020  06D8  0020               	movlb	0	; select bank0
  4021  06D9  0854               	movf	controle@a,w
  4022  06DA  07DA               	addwf	controle@dutyValue,f
  4023  06DB  0855               	movf	controle@a+1,w
  4024  06DC  3DDB               	addwfc	controle@dutyValue+1,f
  4025                           
  4026                           ;main.c: 199:         if(dutyValue > max_dutyValue){
  4027  06DD  0859               	movf	controle@max_dutyValue+1,w
  4028  06DE  3A80               	xorlw	128
  4029  06DF  00CC               	movwf	??_controle
  4030  06E0  085B               	movf	controle@dutyValue+1,w
  4031  06E1  3A80               	xorlw	128
  4032  06E2  024C               	subwf	??_controle,w
  4033  06E3  1D03               	skipz
  4034  06E4  2EE7               	goto	u3905
  4035  06E5  085A               	movf	controle@dutyValue,w
  4036  06E6  0258               	subwf	controle@max_dutyValue,w
  4037  06E7                     u3905:	
  4038  06E7  1803               	skipnc
  4039  06E8  2EEA               	goto	u3901
  4040  06E9  2EEB               	goto	u3900
  4041  06EA                     u3901:	
  4042  06EA  2EF4               	goto	l3731
  4043  06EB                     u3900:	
  4044  06EB                     l3729:	
  4045                           
  4046                           ;main.c: 200:             PWM3_LoadDutyValue(max_dutyValue);
  4047  06EB  0020               	movlb	0	; select bank0
  4048  06EC  0859               	movf	controle@max_dutyValue+1,w
  4049  06ED  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4050  06EE  0858               	movf	controle@max_dutyValue,w
  4051  06EF  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4052  06F0  3189  21D3  3186   	fcall	_PWM3_LoadDutyValue
  4053                           
  4054                           ;main.c: 201:         }else{
  4055  06F3  2EFC               	goto	l3733
  4056  06F4                     l3731:	
  4057                           
  4058                           ;main.c: 202:             PWM3_LoadDutyValue(dutyValue);
  4059  06F4  0020               	movlb	0	; select bank0
  4060  06F5  085B               	movf	controle@dutyValue+1,w
  4061  06F6  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4062  06F7  085A               	movf	controle@dutyValue,w
  4063  06F8  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4064  06F9  3189  21D3  3186   	fcall	_PWM3_LoadDutyValue
  4065  06FC                     l3733:	
  4066                           
  4067                           ;main.c: 205:     }
  4068  06FC  3001               	movlw	1
  4069  06FD  0020               	movlb	0	; select bank0
  4070  06FE  07DC               	addwf	controle@count,f
  4071  06FF  3000               	movlw	0
  4072  0700  3DDD               	addwfc	controle@count+1,f
  4073  0701                     l3735:	
  4074  0701  085D               	movf	controle@count+1,w
  4075  0702  3A80               	xorlw	128
  4076  0703  00CC               	movwf	??_controle
  4077  0704  3080               	movlw	128
  4078  0705  024C               	subwf	??_controle,w
  4079  0706  1D03               	skipz
  4080  0707  2F0A               	goto	u3915
  4081  0708  3014               	movlw	20
  4082  0709  025C               	subwf	controle@count,w
  4083  070A                     u3915:	
  4084  070A  1C03               	skipc
  4085  070B  2F0D               	goto	u3911
  4086  070C  2F0E               	goto	u3910
  4087  070D                     u3911:	
  4088  070D  2ED8               	goto	l3727
  4089  070E                     u3910:	
  4090  070E                     l3737:	
  4091                           
  4092                           ;main.c: 206:     count = 0;
  4093  070E  0020               	movlb	0	; select bank0
  4094  070F  01DC               	clrf	controle@count
  4095  0710  01DD               	clrf	controle@count+1
  4096                           
  4097                           ;main.c: 207:     for(count = 0; count < route ; count++){
  4098  0711  01DC               	clrf	controle@count
  4099  0712  01DD               	clrf	controle@count+1
  4100  0713  2F21               	goto	l3743
  4101  0714                     l3739:	
  4102                           
  4103                           ;main.c: 209:         PWM3_LoadDutyValue(max_dutyValue);
  4104  0714  0020               	movlb	0	; select bank0
  4105  0715  0859               	movf	controle@max_dutyValue+1,w
  4106  0716  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4107  0717  0858               	movf	controle@max_dutyValue,w
  4108  0718  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4109  0719  3189  21D3  3186   	fcall	_PWM3_LoadDutyValue
  4110  071C                     l3741:	
  4111                           
  4112                           ;main.c: 210:     }
  4113  071C  3001               	movlw	1
  4114  071D  0020               	movlb	0	; select bank0
  4115  071E  07DC               	addwf	controle@count,f
  4116  071F  3000               	movlw	0
  4117  0720  3DDD               	addwfc	controle@count+1,f
  4118  0721                     l3743:	
  4119  0721  085D               	movf	controle@count+1,w
  4120  0722  3A80               	xorlw	128
  4121  0723  00CC               	movwf	??_controle
  4122  0724  0853               	movf	controle@route+1,w
  4123  0725  3A80               	xorlw	128
  4124  0726  024C               	subwf	??_controle,w
  4125  0727  1D03               	skipz
  4126  0728  2F2B               	goto	u3925
  4127  0729  0852               	movf	controle@route,w
  4128  072A  025C               	subwf	controle@count,w
  4129  072B                     u3925:	
  4130  072B  1C03               	skipc
  4131  072C  2F2E               	goto	u3921
  4132  072D  2F2F               	goto	u3920
  4133  072E                     u3921:	
  4134  072E  2F14               	goto	l3739
  4135  072F                     u3920:	
  4136  072F                     l3745:	
  4137                           
  4138                           ;main.c: 212:     count = 0;
  4139  072F  0020               	movlb	0	; select bank0
  4140  0730  01DC               	clrf	controle@count
  4141  0731  01DD               	clrf	controle@count+1
  4142                           
  4143                           ;main.c: 213:     for(count = 0; count < 20; count++){
  4144  0732  01DC               	clrf	controle@count
  4145  0733  01DD               	clrf	controle@count+1
  4146  0734                     l3751:	
  4147                           
  4148                           ;main.c: 215:         dutyValue-=a;
  4149  0734  0020               	movlb	0	; select bank0
  4150  0735  0854               	movf	controle@a,w
  4151  0736  02DA               	subwf	controle@dutyValue,f
  4152  0737  0855               	movf	controle@a+1,w
  4153  0738  3BDB               	subwfb	controle@dutyValue+1,f
  4154                           
  4155                           ;main.c: 216:         if(dutyValue < min_dutyValue){
  4156  0739  085B               	movf	controle@dutyValue+1,w
  4157  073A  3A80               	xorlw	128
  4158  073B  00CC               	movwf	??_controle
  4159  073C  0857               	movf	controle@min_dutyValue+1,w
  4160  073D  3A80               	xorlw	128
  4161  073E  024C               	subwf	??_controle,w
  4162  073F  1D03               	skipz
  4163  0740  2F43               	goto	u3935
  4164  0741  0856               	movf	controle@min_dutyValue,w
  4165  0742  025A               	subwf	controle@dutyValue,w
  4166  0743                     u3935:	
  4167  0743  1803               	skipnc
  4168  0744  2F46               	goto	u3931
  4169  0745  2F47               	goto	u3930
  4170  0746                     u3931:	
  4171  0746  2F50               	goto	l3755
  4172  0747                     u3930:	
  4173  0747                     l3753:	
  4174                           
  4175                           ;main.c: 217:             PWM3_LoadDutyValue(min_dutyValue);
  4176  0747  0020               	movlb	0	; select bank0
  4177  0748  0857               	movf	controle@min_dutyValue+1,w
  4178  0749  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4179  074A  0856               	movf	controle@min_dutyValue,w
  4180  074B  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4181  074C  3189  21D3  3186   	fcall	_PWM3_LoadDutyValue
  4182                           
  4183                           ;main.c: 218:         }else{
  4184  074F  2F58               	goto	l3757
  4185  0750                     l3755:	
  4186                           
  4187                           ;main.c: 219:         PWM3_LoadDutyValue(dutyValue);
  4188  0750  0020               	movlb	0	; select bank0
  4189  0751  085B               	movf	controle@dutyValue+1,w
  4190  0752  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4191  0753  085A               	movf	controle@dutyValue,w
  4192  0754  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4193  0755  3189  21D3  3186   	fcall	_PWM3_LoadDutyValue
  4194  0758                     l3757:	
  4195                           
  4196                           ;main.c: 221:     }
  4197  0758  3001               	movlw	1
  4198  0759  0020               	movlb	0	; select bank0
  4199  075A  07DC               	addwf	controle@count,f
  4200  075B  3000               	movlw	0
  4201  075C  3DDD               	addwfc	controle@count+1,f
  4202  075D                     l3759:	
  4203  075D  085D               	movf	controle@count+1,w
  4204  075E  3A80               	xorlw	128
  4205  075F  00CC               	movwf	??_controle
  4206  0760  3080               	movlw	128
  4207  0761  024C               	subwf	??_controle,w
  4208  0762  1D03               	skipz
  4209  0763  2F66               	goto	u3945
  4210  0764  3014               	movlw	20
  4211  0765  025C               	subwf	controle@count,w
  4212  0766                     u3945:	
  4213  0766  1C03               	skipc
  4214  0767  2F69               	goto	u3941
  4215  0768  2F6A               	goto	u3940
  4216  0769                     u3941:	
  4217  0769  2F34               	goto	l3751
  4218  076A                     u3940:	
  4219  076A                     l3761:	
  4220                           
  4221                           ;main.c: 222:     update();
  4222  076A  3182  22A8  3186   	fcall	_update
  4223  076D                     l3763:	
  4224                           
  4225                           ;main.c: 224:     PWM3_LoadDutyValue(0);
  4226  076D  3000               	movlw	0
  4227  076E  0020               	movlb	0	; select bank0
  4228  076F  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4229  0770  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4230  0771  3189  21D3  3186   	fcall	_PWM3_LoadDutyValue
  4231  0774                     l622:	
  4232  0774  0008               	return
  4233  0775                     __end_of_controle:	
  4234                           
  4235                           	psect	text5
  4236  02A8                     __ptext5:	
  4237 ;; *************** function _update *****************
  4238 ;; Defined at:
  4239 ;;		line 387 in file "main.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;		None
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  i               2   13[BANK0 ] int 
  4244 ;;  i               2   11[BANK0 ] int 
  4245 ;;  i               2    9[BANK0 ] int 
  4246 ;;  aux             1    8[BANK0 ] unsigned char 
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      void 
  4249 ;; Registers used:
  4250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4256 ;;      Params:         0       0       0       0       0       0
  4257 ;;      Locals:         0       7       0       0       0       0
  4258 ;;      Temps:          0       3       0       0       0       0
  4259 ;;      Totals:         0      10       0       0       0       0
  4260 ;;Total ram usage:       10 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    5
  4263 ;; This function calls:
  4264 ;;		_EUSART_Read
  4265 ;;		_EUSART_is_rx_ready
  4266 ;;		_max_down
  4267 ;;		_min_up
  4268 ;; This function is called by:
  4269 ;;		_controle
  4270 ;;		_gerenciamento
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           
  4275                           ;psect for function _update
  4276  02A8                     _update:	
  4277  02A8                     l3543:	
  4278                           ;incstack = 0
  4279                           ; Regs used in _update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4280                           
  4281                           
  4282                           ;main.c: 389:     uint8_t aux;;main.c: 390:     if(EUSART_is_rx_ready())
  4283  02A8  3188  204C  3182   	fcall	_EUSART_is_rx_ready
  4284  02AB  3A00               	xorlw	0
  4285  02AC  1903               	skipnz
  4286  02AD  2AAF               	goto	u3641
  4287  02AE  2AB0               	goto	u3640
  4288  02AF                     u3641:	
  4289  02AF  2AD1               	goto	l3551
  4290  02B0                     u3640:	
  4291  02B0                     l3545:	
  4292                           
  4293                           ;main.c: 391:         {;main.c: 392:             aux= EUSART_Read();
  4294  02B0  3189  214B  3182   	fcall	_EUSART_Read
  4295  02B3  0020               	movlb	0	; select bank0
  4296  02B4  00A5               	movwf	??_update
  4297  02B5  0825               	movf	??_update,w
  4298  02B6  00A8               	movwf	update@aux
  4299  02B7                     l3547:	
  4300                           
  4301                           ;main.c: 393:             and_origem = (int)((aux & 0x0C)>>2);
  4302  02B7  0828               	movf	update@aux,w
  4303  02B8  00A5               	movwf	??_update
  4304  02B9  3002               	movlw	2
  4305  02BA                     u3655:	
  4306  02BA  36A5               	lsrf	??_update,f
  4307  02BB  0B89               	decfsz	9,f
  4308  02BC  2ABA               	goto	u3655
  4309  02BD  0825               	movf	??_update,w
  4310  02BE  3903               	andlw	3
  4311  02BF  00A6               	movwf	??_update+1
  4312  02C0  01A7               	clrf	??_update+2
  4313  02C1  0826               	movf	??_update+1,w
  4314  02C2  0021               	movlb	1	; select bank1
  4315  02C3  00DA               	movwf	_and_origem^(0+128)
  4316  02C4  0020               	movlb	0	; select bank0
  4317  02C5  0827               	movf	??_update+2,w
  4318  02C6  0021               	movlb	1	; select bank1
  4319  02C7  00DB               	movwf	(_and_origem+1)^(0+128)
  4320  02C8                     l3549:	
  4321                           
  4322                           ;main.c: 395:             and_dst = (int)(aux & 0x02);
  4323  02C8  0020               	movlb	0	; select bank0
  4324  02C9  0828               	movf	update@aux,w
  4325  02CA  3902               	andlw	2
  4326  02CB  00A5               	movwf	??_update
  4327  02CC  01A6               	clrf	??_update+1
  4328  02CD  0825               	movf	??_update,w
  4329  02CE  00F4               	movwf	_and_dst
  4330  02CF  0826               	movf	??_update+1,w
  4331  02D0  00F5               	movwf	_and_dst+1
  4332  02D1                     l3551:	
  4333                           
  4334                           ;main.c: 399:     if(and_dst>and_origem)
  4335  02D1  0021               	movlb	1	; select bank1
  4336  02D2  085B               	movf	(_and_origem+1)^(0+128),w
  4337  02D3  3A80               	xorlw	128
  4338  02D4  0020               	movlb	0	; select bank0
  4339  02D5  00A5               	movwf	??_update
  4340  02D6  0875               	movf	_and_dst+1,w
  4341  02D7  3A80               	xorlw	128
  4342  02D8  0225               	subwf	??_update,w
  4343  02D9  1D03               	skipz
  4344  02DA  2ADE               	goto	u3665
  4345  02DB  0874               	movf	_and_dst,w
  4346  02DC  0021               	movlb	1	; select bank1
  4347  02DD  025A               	subwf	_and_origem^(0+128),w
  4348  02DE                     u3665:	
  4349  02DE  1803               	skipnc
  4350  02DF  2AE1               	goto	u3661
  4351  02E0  2AE2               	goto	u3660
  4352  02E1                     u3661:	
  4353  02E1  2B55               	goto	l3595
  4354  02E2                     u3660:	
  4355  02E2                     l3553:	
  4356  02E2                     l3555:	
  4357                           
  4358                           ;main.c: 402:       for(i=3;i>=0;i--)
  4359  02E2  3003               	movlw	3
  4360  02E3  0020               	movlb	0	; select bank0
  4361  02E4  00AB               	movwf	update@i
  4362  02E5  3000               	movlw	0
  4363  02E6  00AC               	movwf	update@i+1
  4364  02E7                     l3561:	
  4365                           
  4366                           ;main.c: 403:       {;main.c: 404:           if(i==0){
  4367  02E7  082B               	movf	update@i,w
  4368  02E8  042C               	iorwf	update@i+1,w
  4369  02E9  1D03               	btfss	3,2
  4370  02EA  2AEC               	goto	u3671
  4371  02EB  2AED               	goto	u3670
  4372  02EC                     u3671:	
  4373  02EC  2AF8               	goto	l3567
  4374  02ED                     u3670:	
  4375  02ED                     l3563:	
  4376                           
  4377                           ;main.c: 405:               fila_up[1] = fila_up[0];
  4378  02ED  0021               	movlb	1	; select bank1
  4379  02EE  083F               	movf	(_fila_up+1)^(0+128),w
  4380  02EF  00C1               	movwf	((_fila_up+1)^(0+128)+2)
  4381  02F0  083E               	movf	_fila_up^(0+128),w
  4382  02F1  00C0               	movwf	(_fila_up^(0+128)+2)
  4383  02F2                     l3565:	
  4384                           
  4385                           ;main.c: 406:               fila_up[0] = and_dst+1;
  4386  02F2  0874               	movf	_and_dst,w
  4387  02F3  3E01               	addlw	1
  4388  02F4  00BE               	movwf	_fila_up^(0+128)
  4389  02F5  3000               	movlw	0
  4390  02F6  3D75               	addwfc	_and_dst+1,w
  4391  02F7  00BF               	movwf	(_fila_up+1)^(0+128)
  4392  02F8                     l3567:	
  4393                           
  4394                           ;main.c: 409:           if(i>0){
  4395  02F8  0020               	movlb	0	; select bank0
  4396  02F9  082C               	movf	update@i+1,w
  4397  02FA  3A80               	xorlw	128
  4398  02FB  00A5               	movwf	??_update
  4399  02FC  3080               	movlw	128
  4400  02FD  0225               	subwf	??_update,w
  4401  02FE  1D03               	skipz
  4402  02FF  2B02               	goto	u3685
  4403  0300  3001               	movlw	1
  4404  0301  022B               	subwf	update@i,w
  4405  0302                     u3685:	
  4406  0302  1C03               	skipc
  4407  0303  2B05               	goto	u3681
  4408  0304  2B06               	goto	u3680
  4409  0305                     u3681:	
  4410  0305  2B13               	goto	l3571
  4411  0306                     u3680:	
  4412  0306                     l3569:	
  4413                           
  4414                           ;main.c: 410:               fila_up[i+1] = fila_up[i];
  4415  0306  0020               	movlb	0	; select bank0
  4416  0307  352B               	lslf	update@i,w
  4417  0308  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  4418  0309  0086               	movwf	6
  4419  030A  0187               	clrf	7
  4420  030B  352B               	lslf	update@i,w
  4421  030C  3EC0               	addlw	(low ((_fila_up| 0+2)))& (0+255)
  4422  030D  0084               	movwf	4
  4423  030E  0185               	clrf	5
  4424  030F  3F40               	moviw [0]fsr1
  4425  0310  3F80               	movwi [0]fsr0
  4426  0311  3F41               	moviw [1]fsr1
  4427  0312  3F81               	movwi [1]fsr0
  4428  0313                     l3571:	
  4429                           
  4430                           ;main.c: 412:       }
  4431  0313  30FF               	movlw	255
  4432  0314  0020               	movlb	0	; select bank0
  4433  0315  07AB               	addwf	update@i,f
  4434  0316  30FF               	movlw	255
  4435  0317  3DAC               	addwfc	update@i+1,f
  4436  0318                     l3573:	
  4437  0318  1FAC               	btfss	update@i+1,7
  4438  0319  2B1B               	goto	u3691
  4439  031A  2B1C               	goto	u3690
  4440  031B                     u3691:	
  4441  031B  2AE7               	goto	l3561
  4442  031C                     u3690:	
  4443  031C                     l3575:	
  4444                           
  4445                           ;main.c: 414:       for(i=3;i>=0;i--)
  4446  031C  3003               	movlw	3
  4447  031D  00AB               	movwf	update@i
  4448  031E  3000               	movlw	0
  4449  031F  00AC               	movwf	update@i+1
  4450  0320                     l3581:	
  4451                           
  4452                           ;main.c: 415:       {;main.c: 416:           if(i==0){
  4453  0320  082B               	movf	update@i,w
  4454  0321  042C               	iorwf	update@i+1,w
  4455  0322  1D03               	btfss	3,2
  4456  0323  2B25               	goto	u3701
  4457  0324  2B26               	goto	u3700
  4458  0325                     u3701:	
  4459  0325  2B31               	goto	l3587
  4460  0326                     u3700:	
  4461  0326                     l3583:	
  4462                           
  4463                           ;main.c: 417:               origem_up[1] = origem_up[0];
  4464  0326  0021               	movlb	1	; select bank1
  4465  0327  0821               	movf	(_origem_up+1)^(0+128),w
  4466  0328  00A3               	movwf	((_origem_up+1)^(0+128)+2)
  4467  0329  0820               	movf	_origem_up^(0+128),w
  4468  032A  00A2               	movwf	(_origem_up^(0+128)+2)
  4469  032B                     l3585:	
  4470                           
  4471                           ;main.c: 418:               origem_up[0] = and_origem+1;
  4472  032B  085A               	movf	_and_origem^(0+128),w
  4473  032C  3E01               	addlw	1
  4474  032D  00A0               	movwf	_origem_up^(0+128)
  4475  032E  3000               	movlw	0
  4476  032F  3D5B               	addwfc	(_and_origem+1)^(0+128),w
  4477  0330  00A1               	movwf	(_origem_up+1)^(0+128)
  4478  0331                     l3587:	
  4479                           
  4480                           ;main.c: 421:           if(i>0){
  4481  0331  0020               	movlb	0	; select bank0
  4482  0332  082C               	movf	update@i+1,w
  4483  0333  3A80               	xorlw	128
  4484  0334  00A5               	movwf	??_update
  4485  0335  3080               	movlw	128
  4486  0336  0225               	subwf	??_update,w
  4487  0337  1D03               	skipz
  4488  0338  2B3B               	goto	u3715
  4489  0339  3001               	movlw	1
  4490  033A  022B               	subwf	update@i,w
  4491  033B                     u3715:	
  4492  033B  1C03               	skipc
  4493  033C  2B3E               	goto	u3711
  4494  033D  2B3F               	goto	u3710
  4495  033E                     u3711:	
  4496  033E  2B4C               	goto	l3591
  4497  033F                     u3710:	
  4498  033F                     l3589:	
  4499                           
  4500                           ;main.c: 422:               origem_up[i+1] = origem_up[i];
  4501  033F  0020               	movlb	0	; select bank0
  4502  0340  352B               	lslf	update@i,w
  4503  0341  3EA0               	addlw	(low (_origem_up| 0))& (0+255)
  4504  0342  0086               	movwf	6
  4505  0343  0187               	clrf	7
  4506  0344  352B               	lslf	update@i,w
  4507  0345  3EA2               	addlw	(low ((_origem_up| 0+2)))& (0+255)
  4508  0346  0084               	movwf	4
  4509  0347  0185               	clrf	5
  4510  0348  3F40               	moviw [0]fsr1
  4511  0349  3F80               	movwi [0]fsr0
  4512  034A  3F41               	moviw [1]fsr1
  4513  034B  3F81               	movwi [1]fsr0
  4514  034C                     l3591:	
  4515                           
  4516                           ;main.c: 424:       }
  4517  034C  30FF               	movlw	255
  4518  034D  0020               	movlb	0	; select bank0
  4519  034E  07AB               	addwf	update@i,f
  4520  034F  30FF               	movlw	255
  4521  0350  3DAC               	addwfc	update@i+1,f
  4522  0351                     l3593:	
  4523  0351  1FAC               	btfss	update@i+1,7
  4524  0352  2B54               	goto	u3721
  4525  0353  2B55               	goto	u3720
  4526  0354                     u3721:	
  4527  0354  2B20               	goto	l3581
  4528  0355                     u3720:	
  4529  0355                     l3595:	
  4530                           
  4531                           ;main.c: 427:     int i;;main.c: 428:     max_fila_up = fila_up[0];
  4532  0355  0021               	movlb	1	; select bank1
  4533  0356  083F               	movf	(_fila_up+1)^(0+128),w
  4534  0357  00CF               	movwf	(_max_fila_up+1)^(0+128)
  4535  0358  083E               	movf	_fila_up^(0+128),w
  4536  0359  00CE               	movwf	_max_fila_up^(0+128)
  4537                           
  4538                           ;main.c: 429:     for(i=1;i<=4;i++)
  4539  035A  3001               	movlw	1
  4540  035B  0020               	movlb	0	; select bank0
  4541  035C  00A9               	movwf	update@i_1258
  4542  035D  3000               	movlw	0
  4543  035E  00AA               	movwf	update@i_1258+1
  4544  035F                     l3599:	
  4545                           
  4546                           ;main.c: 430:     {;main.c: 431:             if(fila_up[i]>max_fila_up)
  4547  035F  0020               	movlb	0	; select bank0
  4548  0360  3529               	lslf	update@i_1258,w
  4549  0361  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  4550  0362  0086               	movwf	6
  4551  0363  0187               	clrf	7
  4552  0364  3F40               	moviw [0]fsr1
  4553  0365  00A5               	movwf	??_update
  4554  0366  3F41               	moviw [1]fsr1
  4555  0367  00A6               	movwf	??_update+1
  4556  0368  0021               	movlb	1	; select bank1
  4557  0369  084F               	movf	(_max_fila_up+1)^(0+128),w
  4558  036A  3A80               	xorlw	128
  4559  036B  0020               	movlb	0	; select bank0
  4560  036C  00A7               	movwf	??_update+2
  4561  036D  0826               	movf	??_update+1,w
  4562  036E  3A80               	xorlw	128
  4563  036F  0227               	subwf	??_update+2,w
  4564  0370  1D03               	skipz
  4565  0371  2B75               	goto	u3735
  4566  0372  0825               	movf	??_update,w
  4567  0373  0021               	movlb	1	; select bank1
  4568  0374  024E               	subwf	_max_fila_up^(0+128),w
  4569  0375                     u3735:	
  4570  0375  1803               	skipnc
  4571  0376  2B78               	goto	u3731
  4572  0377  2B79               	goto	u3730
  4573  0378                     u3731:	
  4574  0378  2B83               	goto	l3603
  4575  0379                     u3730:	
  4576  0379                     l3601:	
  4577                           
  4578                           ;main.c: 432:             {;main.c: 433:                 max_fila_up = fila_up[i];
  4579  0379  0020               	movlb	0	; select bank0
  4580  037A  3529               	lslf	update@i_1258,w
  4581  037B  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  4582  037C  0086               	movwf	6
  4583  037D  0187               	clrf	7
  4584  037E  3F40               	moviw [0]fsr1
  4585  037F  0021               	movlb	1	; select bank1
  4586  0380  00CE               	movwf	_max_fila_up^(0+128)
  4587  0381  3F41               	moviw [1]fsr1
  4588  0382  00CF               	movwf	(_max_fila_up+1)^(0+128)
  4589  0383                     l3603:	
  4590                           
  4591                           ;main.c: 435:     }
  4592  0383  3001               	movlw	1
  4593  0384  0020               	movlb	0	; select bank0
  4594  0385  07A9               	addwf	update@i_1258,f
  4595  0386  3000               	movlw	0
  4596  0387  3DAA               	addwfc	update@i_1258+1,f
  4597  0388                     l3605:	
  4598  0388  082A               	movf	update@i_1258+1,w
  4599  0389  3A80               	xorlw	128
  4600  038A  00A5               	movwf	??_update
  4601  038B  3080               	movlw	128
  4602  038C  0225               	subwf	??_update,w
  4603  038D  1D03               	skipz
  4604  038E  2B91               	goto	u3745
  4605  038F  3005               	movlw	5
  4606  0390  0229               	subwf	update@i_1258,w
  4607  0391                     u3745:	
  4608  0391  1C03               	skipc
  4609  0392  2B94               	goto	u3741
  4610  0393  2B95               	goto	u3740
  4611  0394                     u3741:	
  4612  0394  2B5F               	goto	l3599
  4613  0395                     u3740:	
  4614  0395                     l3607:	
  4615                           
  4616                           ;main.c: 436:     if(max_fila_up==0)
  4617  0395  0021               	movlb	1	; select bank1
  4618  0396  084E               	movf	_max_fila_up^(0+128),w
  4619  0397  044F               	iorwf	(_max_fila_up+1)^(0+128),w
  4620  0398  1D03               	btfss	3,2
  4621  0399  2B9B               	goto	u3751
  4622  039A  2B9C               	goto	u3750
  4623  039B                     u3751:	
  4624  039B  2BA0               	goto	l695
  4625  039C                     u3750:	
  4626  039C                     l3609:	
  4627                           
  4628                           ;main.c: 437:     {;main.c: 438:         max_fila_up=1;
  4629  039C  3001               	movlw	1
  4630  039D  00CE               	movwf	_max_fila_up^(0+128)
  4631  039E  3000               	movlw	0
  4632  039F  00CF               	movwf	(_max_fila_up^(0+128)+1)
  4633  03A0                     l695:	
  4634                           ;main.c: 439:     }
  4635                           
  4636                           
  4637                           ;main.c: 441:     if(and_dst<and_origem)
  4638  03A0  0875               	movf	_and_dst+1,w
  4639  03A1  3A80               	xorlw	128
  4640  03A2  0020               	movlb	0	; select bank0
  4641  03A3  00A5               	movwf	??_update
  4642  03A4  0021               	movlb	1	; select bank1
  4643  03A5  085B               	movf	(_and_origem+1)^(0+128),w
  4644  03A6  3A80               	xorlw	128
  4645  03A7  0020               	movlb	0	; select bank0
  4646  03A8  0225               	subwf	??_update,w
  4647  03A9  1D03               	skipz
  4648  03AA  2BAE               	goto	u3765
  4649  03AB  0021               	movlb	1	; select bank1
  4650  03AC  085A               	movf	_and_origem^(0+128),w
  4651  03AD  0274               	subwf	_and_dst,w
  4652  03AE                     u3765:	
  4653  03AE  1803               	skipnc
  4654  03AF  2BB1               	goto	u3761
  4655  03B0  2BB2               	goto	u3760
  4656  03B1                     u3761:	
  4657  03B1  2C25               	goto	l3653
  4658  03B2                     u3760:	
  4659  03B2                     l3611:	
  4660  03B2                     l3613:	
  4661                           
  4662                           ;main.c: 444:       for(i=3;i>=0;i--)
  4663  03B2  3003               	movlw	3
  4664  03B3  0020               	movlb	0	; select bank0
  4665  03B4  00AD               	movwf	update@i_1259
  4666  03B5  3000               	movlw	0
  4667  03B6  00AE               	movwf	update@i_1259+1
  4668  03B7                     l3619:	
  4669                           
  4670                           ;main.c: 445:       {;main.c: 446:           if(i==0){
  4671  03B7  082D               	movf	update@i_1259,w
  4672  03B8  042E               	iorwf	update@i_1259+1,w
  4673  03B9  1D03               	btfss	3,2
  4674  03BA  2BBC               	goto	u3771
  4675  03BB  2BBD               	goto	u3770
  4676  03BC                     u3771:	
  4677  03BC  2BC8               	goto	l3625
  4678  03BD                     u3770:	
  4679  03BD                     l3621:	
  4680                           
  4681                           ;main.c: 447:               fila_down[1] = fila_down[0];
  4682  03BD  0021               	movlb	1	; select bank1
  4683  03BE  0835               	movf	(_fila_down+1)^(0+128),w
  4684  03BF  00B7               	movwf	((_fila_down+1)^(0+128)+2)
  4685  03C0  0834               	movf	_fila_down^(0+128),w
  4686  03C1  00B6               	movwf	(_fila_down^(0+128)+2)
  4687  03C2                     l3623:	
  4688                           
  4689                           ;main.c: 448:               fila_down[0] = and_dst+1;
  4690  03C2  0874               	movf	_and_dst,w
  4691  03C3  3E01               	addlw	1
  4692  03C4  00B4               	movwf	_fila_down^(0+128)
  4693  03C5  3000               	movlw	0
  4694  03C6  3D75               	addwfc	_and_dst+1,w
  4695  03C7  00B5               	movwf	(_fila_down+1)^(0+128)
  4696  03C8                     l3625:	
  4697                           
  4698                           ;main.c: 451:           if(i>0){
  4699  03C8  0020               	movlb	0	; select bank0
  4700  03C9  082E               	movf	update@i_1259+1,w
  4701  03CA  3A80               	xorlw	128
  4702  03CB  00A5               	movwf	??_update
  4703  03CC  3080               	movlw	128
  4704  03CD  0225               	subwf	??_update,w
  4705  03CE  1D03               	skipz
  4706  03CF  2BD2               	goto	u3785
  4707  03D0  3001               	movlw	1
  4708  03D1  022D               	subwf	update@i_1259,w
  4709  03D2                     u3785:	
  4710  03D2  1C03               	skipc
  4711  03D3  2BD5               	goto	u3781
  4712  03D4  2BD6               	goto	u3780
  4713  03D5                     u3781:	
  4714  03D5  2BE3               	goto	l3629
  4715  03D6                     u3780:	
  4716  03D6                     l3627:	
  4717                           
  4718                           ;main.c: 452:               fila_down[i+1] = fila_down[i];
  4719  03D6  0020               	movlb	0	; select bank0
  4720  03D7  352D               	lslf	update@i_1259,w
  4721  03D8  3EB4               	addlw	(low (_fila_down| 0))& (0+255)
  4722  03D9  0086               	movwf	6
  4723  03DA  0187               	clrf	7
  4724  03DB  352D               	lslf	update@i_1259,w
  4725  03DC  3EB6               	addlw	(low ((_fila_down| 0+2)))& (0+255)
  4726  03DD  0084               	movwf	4
  4727  03DE  0185               	clrf	5
  4728  03DF  3F40               	moviw [0]fsr1
  4729  03E0  3F80               	movwi [0]fsr0
  4730  03E1  3F41               	moviw [1]fsr1
  4731  03E2  3F81               	movwi [1]fsr0
  4732  03E3                     l3629:	
  4733                           
  4734                           ;main.c: 454:       }
  4735  03E3  30FF               	movlw	255
  4736  03E4  0020               	movlb	0	; select bank0
  4737  03E5  07AD               	addwf	update@i_1259,f
  4738  03E6  30FF               	movlw	255
  4739  03E7  3DAE               	addwfc	update@i_1259+1,f
  4740  03E8                     l3631:	
  4741  03E8  1FAE               	btfss	update@i_1259+1,7
  4742  03E9  2BEB               	goto	u3791
  4743  03EA  2BEC               	goto	u3790
  4744  03EB                     u3791:	
  4745  03EB  2BB7               	goto	l3619
  4746  03EC                     u3790:	
  4747  03EC                     l3633:	
  4748                           
  4749                           ;main.c: 456:       for(i=3;i>=0;i--)
  4750  03EC  3003               	movlw	3
  4751  03ED  00AD               	movwf	update@i_1259
  4752  03EE  3000               	movlw	0
  4753  03EF  00AE               	movwf	update@i_1259+1
  4754  03F0                     l3639:	
  4755                           
  4756                           ;main.c: 457:       {;main.c: 458:           if(i==0){
  4757  03F0  082D               	movf	update@i_1259,w
  4758  03F1  042E               	iorwf	update@i_1259+1,w
  4759  03F2  1D03               	btfss	3,2
  4760  03F3  2BF5               	goto	u3801
  4761  03F4  2BF6               	goto	u3800
  4762  03F5                     u3801:	
  4763  03F5  2C01               	goto	l3645
  4764  03F6                     u3800:	
  4765  03F6                     l3641:	
  4766                           
  4767                           ;main.c: 459:               origem_down[1] = origem_down[0];
  4768  03F6  0021               	movlb	1	; select bank1
  4769  03F7  082B               	movf	(_origem_down+1)^(0+128),w
  4770  03F8  00AD               	movwf	((_origem_down+1)^(0+128)+2)
  4771  03F9  082A               	movf	_origem_down^(0+128),w
  4772  03FA  00AC               	movwf	(_origem_down^(0+128)+2)
  4773  03FB                     l3643:	
  4774                           
  4775                           ;main.c: 460:               origem_down[0] = and_origem+1;
  4776  03FB  085A               	movf	_and_origem^(0+128),w
  4777  03FC  3E01               	addlw	1
  4778  03FD  00AA               	movwf	_origem_down^(0+128)
  4779  03FE  3000               	movlw	0
  4780  03FF  3D5B               	addwfc	(_and_origem+1)^(0+128),w
  4781  0400  00AB               	movwf	(_origem_down+1)^(0+128)
  4782  0401                     l3645:	
  4783                           
  4784                           ;main.c: 462:           if(i>0){
  4785  0401  0020               	movlb	0	; select bank0
  4786  0402  082E               	movf	update@i_1259+1,w
  4787  0403  3A80               	xorlw	128
  4788  0404  00A5               	movwf	??_update
  4789  0405  3080               	movlw	128
  4790  0406  0225               	subwf	??_update,w
  4791  0407  1D03               	skipz
  4792  0408  2C0B               	goto	u3815
  4793  0409  3001               	movlw	1
  4794  040A  022D               	subwf	update@i_1259,w
  4795  040B                     u3815:	
  4796  040B  1C03               	skipc
  4797  040C  2C0E               	goto	u3811
  4798  040D  2C0F               	goto	u3810
  4799  040E                     u3811:	
  4800  040E  2C1C               	goto	l3649
  4801  040F                     u3810:	
  4802  040F                     l3647:	
  4803                           
  4804                           ;main.c: 463:               origem_down[i+1] = origem_down[i];
  4805  040F  0020               	movlb	0	; select bank0
  4806  0410  352D               	lslf	update@i_1259,w
  4807  0411  3EAA               	addlw	(low (_origem_down| 0))& (0+255)
  4808  0412  0086               	movwf	6
  4809  0413  0187               	clrf	7
  4810  0414  352D               	lslf	update@i_1259,w
  4811  0415  3EAC               	addlw	(low ((_origem_down| 0+2)))& (0+255)
  4812  0416  0084               	movwf	4
  4813  0417  0185               	clrf	5
  4814  0418  3F40               	moviw [0]fsr1
  4815  0419  3F80               	movwi [0]fsr0
  4816  041A  3F41               	moviw [1]fsr1
  4817  041B  3F81               	movwi [1]fsr0
  4818  041C                     l3649:	
  4819                           
  4820                           ;main.c: 465:       }
  4821  041C  30FF               	movlw	255
  4822  041D  0020               	movlb	0	; select bank0
  4823  041E  07AD               	addwf	update@i_1259,f
  4824  041F  30FF               	movlw	255
  4825  0420  3DAE               	addwfc	update@i_1259+1,f
  4826  0421                     l3651:	
  4827  0421  1FAE               	btfss	update@i_1259+1,7
  4828  0422  2C24               	goto	u3821
  4829  0423  2C25               	goto	u3820
  4830  0424                     u3821:	
  4831  0424  2BF0               	goto	l3639
  4832  0425                     u3820:	
  4833  0425                     l3653:	
  4834                           
  4835                           ;main.c: 469:     min_fila_down = 4;
  4836  0425  3004               	movlw	4
  4837  0426  0021               	movlb	1	; select bank1
  4838  0427  00CC               	movwf	_min_fila_down^(0+128)
  4839  0428  3000               	movlw	0
  4840  0429  00CD               	movwf	(_min_fila_down^(0+128)+1)
  4841  042A                     l3655:	
  4842                           
  4843                           ;main.c: 470:     for(i=0;i<=4;i++)
  4844  042A  0020               	movlb	0	; select bank0
  4845  042B  01A9               	clrf	update@i_1258
  4846  042C  01AA               	clrf	update@i_1258+1
  4847  042D                     l3661:	
  4848                           
  4849                           ;main.c: 471:     {;main.c: 472:         if(fila_down[i]<min_fila_down&&fila_down[i]>0)
  4850  042D  0020               	movlb	0	; select bank0
  4851  042E  3529               	lslf	update@i_1258,w
  4852  042F  3EB4               	addlw	(low (_fila_down| 0))& (0+255)
  4853  0430  0086               	movwf	6
  4854  0431  0187               	clrf	7
  4855  0432  3F40               	moviw [0]fsr1
  4856  0433  00A5               	movwf	??_update
  4857  0434  3F41               	moviw [1]fsr1
  4858  0435  00A6               	movwf	??_update+1
  4859  0436  0826               	movf	??_update+1,w
  4860  0437  3A80               	xorlw	128
  4861  0438  00A7               	movwf	??_update+2
  4862  0439  0021               	movlb	1	; select bank1
  4863  043A  084D               	movf	(_min_fila_down+1)^(0+128),w
  4864  043B  3A80               	xorlw	128
  4865  043C  0020               	movlb	0	; select bank0
  4866  043D  0227               	subwf	??_update+2,w
  4867  043E  1D03               	skipz
  4868  043F  2C44               	goto	u3835
  4869  0440  0021               	movlb	1	; select bank1
  4870  0441  084C               	movf	_min_fila_down^(0+128),w
  4871  0442  0020               	movlb	0	; select bank0
  4872  0443  0225               	subwf	??_update,w
  4873  0444                     u3835:	
  4874  0444  1803               	skipnc
  4875  0445  2C47               	goto	u3831
  4876  0446  2C48               	goto	u3830
  4877  0447                     u3831:	
  4878  0447  2C68               	goto	l3667
  4879  0448                     u3830:	
  4880  0448                     l3663:	
  4881  0448  0020               	movlb	0	; select bank0
  4882  0449  3529               	lslf	update@i_1258,w
  4883  044A  3EB4               	addlw	(low (_fila_down| 0))& (0+255)
  4884  044B  0086               	movwf	6
  4885  044C  0187               	clrf	7
  4886  044D  3F40               	moviw [0]fsr1
  4887  044E  00A5               	movwf	??_update
  4888  044F  3F41               	moviw [1]fsr1
  4889  0450  00A6               	movwf	??_update+1
  4890  0451  0826               	movf	??_update+1,w
  4891  0452  3A80               	xorlw	128
  4892  0453  00A7               	movwf	??_update+2
  4893  0454  3080               	movlw	128
  4894  0455  0227               	subwf	??_update+2,w
  4895  0456  1D03               	skipz
  4896  0457  2C5A               	goto	u3845
  4897  0458  3001               	movlw	1
  4898  0459  0225               	subwf	??_update,w
  4899  045A                     u3845:	
  4900  045A  1C03               	skipc
  4901  045B  2C5D               	goto	u3841
  4902  045C  2C5E               	goto	u3840
  4903  045D                     u3841:	
  4904  045D  2C68               	goto	l3667
  4905  045E                     u3840:	
  4906  045E                     l3665:	
  4907                           
  4908                           ;main.c: 473:         {;main.c: 474:             min_fila_down = fila_down[i];
  4909  045E  0020               	movlb	0	; select bank0
  4910  045F  3529               	lslf	update@i_1258,w
  4911  0460  3EB4               	addlw	(low (_fila_down| 0))& (0+255)
  4912  0461  0086               	movwf	6
  4913  0462  0187               	clrf	7
  4914  0463  3F40               	moviw [0]fsr1
  4915  0464  0021               	movlb	1	; select bank1
  4916  0465  00CC               	movwf	_min_fila_down^(0+128)
  4917  0466  3F41               	moviw [1]fsr1
  4918  0467  00CD               	movwf	(_min_fila_down+1)^(0+128)
  4919  0468                     l3667:	
  4920                           
  4921                           ;main.c: 476:     }
  4922  0468  3001               	movlw	1
  4923  0469  0020               	movlb	0	; select bank0
  4924  046A  07A9               	addwf	update@i_1258,f
  4925  046B  3000               	movlw	0
  4926  046C  3DAA               	addwfc	update@i_1258+1,f
  4927  046D                     l3669:	
  4928  046D  082A               	movf	update@i_1258+1,w
  4929  046E  3A80               	xorlw	128
  4930  046F  00A5               	movwf	??_update
  4931  0470  3080               	movlw	128
  4932  0471  0225               	subwf	??_update,w
  4933  0472  1D03               	skipz
  4934  0473  2C76               	goto	u3855
  4935  0474  3005               	movlw	5
  4936  0475  0229               	subwf	update@i_1258,w
  4937  0476                     u3855:	
  4938  0476  1C03               	skipc
  4939  0477  2C79               	goto	u3851
  4940  0478  2C7A               	goto	u3850
  4941  0479                     u3851:	
  4942  0479  2C2D               	goto	l3661
  4943  047A                     u3850:	
  4944  047A                     l3671:	
  4945                           
  4946                           ;main.c: 478:     min_up();
  4947  047A  318E  265E  3182   	fcall	_min_up
  4948                           
  4949                           ;main.c: 479:     max_down();
  4950  047D  318D  25B0  3182   	fcall	_max_down
  4951  0480                     l708:	
  4952  0480  0008               	return
  4953  0481                     __end_of_update:	
  4954                           
  4955                           	psect	text6
  4956  0E5E                     __ptext6:	
  4957 ;; *************** function _min_up *****************
  4958 ;; Defined at:
  4959 ;;		line 319 in file "main.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;		None
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;  i               2    3[BANK0 ] int 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  1    wreg      void 
  4966 ;; Registers used:
  4967 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4973 ;;      Params:         0       0       0       0       0       0
  4974 ;;      Locals:         0       2       0       0       0       0
  4975 ;;      Temps:          0       3       0       0       0       0
  4976 ;;      Totals:         0       5       0       0       0       0
  4977 ;;Total ram usage:        5 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; Hardware stack levels required when called:    4
  4980 ;; This function calls:
  4981 ;;		Nothing
  4982 ;; This function is called by:
  4983 ;;		_col_up
  4984 ;;		_update
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           
  4989                           ;psect for function _min_up
  4990  0E5E                     _min_up:	
  4991  0E5E                     l2495:	
  4992                           ;incstack = 0
  4993                           ; Regs used in _min_up: [wreg+fsr1l+fsr1h+status,2+status,0]
  4994                           
  4995                           
  4996                           ;main.c: 322:     min_origem_up = 4;
  4997  0E5E  3004               	movlw	4
  4998  0E5F  00F0               	movwf	_min_origem_up
  4999  0E60  3000               	movlw	0
  5000  0E61  00F1               	movwf	_min_origem_up+1
  5001  0E62                     l2497:	
  5002                           
  5003                           ;main.c: 323:     int i;;main.c: 324:     for(i=0;i<=4;i++)
  5004  0E62  0020               	movlb	0	; select bank0
  5005  0E63  01A3               	clrf	min_up@i
  5006  0E64  01A4               	clrf	min_up@i+1
  5007  0E65                     l2503:	
  5008                           
  5009                           ;main.c: 325:     {;main.c: 326:         if(origem_up[i]<min_origem_up&&origem_up[i]>0)
  5010  0E65  0020               	movlb	0	; select bank0
  5011  0E66  3523               	lslf	min_up@i,w
  5012  0E67  3EA0               	addlw	(low (_origem_up| 0))& (0+255)
  5013  0E68  0086               	movwf	6
  5014  0E69  0187               	clrf	7
  5015  0E6A  3F40               	moviw [0]fsr1
  5016  0E6B  00A0               	movwf	??_min_up
  5017  0E6C  3F41               	moviw [1]fsr1
  5018  0E6D  00A1               	movwf	??_min_up+1
  5019  0E6E  0821               	movf	??_min_up+1,w
  5020  0E6F  3A80               	xorlw	128
  5021  0E70  00A2               	movwf	??_min_up+2
  5022  0E71  0871               	movf	_min_origem_up+1,w
  5023  0E72  3A80               	xorlw	128
  5024  0E73  0222               	subwf	??_min_up+2,w
  5025  0E74  1D03               	skipz
  5026  0E75  2E78               	goto	u1845
  5027  0E76  0870               	movf	_min_origem_up,w
  5028  0E77  0220               	subwf	??_min_up,w
  5029  0E78                     u1845:	
  5030  0E78  1803               	skipnc
  5031  0E79  2E7B               	goto	u1841
  5032  0E7A  2E7C               	goto	u1840
  5033  0E7B                     u1841:	
  5034  0E7B  2E9B               	goto	l661
  5035  0E7C                     u1840:	
  5036  0E7C                     l2505:	
  5037  0E7C  0020               	movlb	0	; select bank0
  5038  0E7D  3523               	lslf	min_up@i,w
  5039  0E7E  3EA0               	addlw	(low (_origem_up| 0))& (0+255)
  5040  0E7F  0086               	movwf	6
  5041  0E80  0187               	clrf	7
  5042  0E81  3F40               	moviw [0]fsr1
  5043  0E82  00A0               	movwf	??_min_up
  5044  0E83  3F41               	moviw [1]fsr1
  5045  0E84  00A1               	movwf	??_min_up+1
  5046  0E85  0821               	movf	??_min_up+1,w
  5047  0E86  3A80               	xorlw	128
  5048  0E87  00A2               	movwf	??_min_up+2
  5049  0E88  3080               	movlw	128
  5050  0E89  0222               	subwf	??_min_up+2,w
  5051  0E8A  1D03               	skipz
  5052  0E8B  2E8E               	goto	u1855
  5053  0E8C  3001               	movlw	1
  5054  0E8D  0220               	subwf	??_min_up,w
  5055  0E8E                     u1855:	
  5056  0E8E  1C03               	skipc
  5057  0E8F  2E91               	goto	u1851
  5058  0E90  2E92               	goto	u1850
  5059  0E91                     u1851:	
  5060  0E91  2E9B               	goto	l661
  5061  0E92                     u1850:	
  5062  0E92                     l2507:	
  5063                           
  5064                           ;main.c: 327:         {;main.c: 328:             min_origem_up = origem_up[i];
  5065  0E92  0020               	movlb	0	; select bank0
  5066  0E93  3523               	lslf	min_up@i,w
  5067  0E94  3EA0               	addlw	(low (_origem_up| 0))& (0+255)
  5068  0E95  0086               	movwf	6
  5069  0E96  0187               	clrf	7
  5070  0E97  3F40               	moviw [0]fsr1
  5071  0E98  00F0               	movwf	_min_origem_up
  5072  0E99  3F41               	moviw [1]fsr1
  5073  0E9A  00F1               	movwf	_min_origem_up+1
  5074  0E9B                     l661:	
  5075                           ;main.c: 329:         }
  5076                           
  5077                           
  5078                           ;main.c: 330:         if(fila_up[i]<min_origem_up&&fila_up[i]>0)
  5079  0E9B  0020               	movlb	0	; select bank0
  5080  0E9C  3523               	lslf	min_up@i,w
  5081  0E9D  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  5082  0E9E  0086               	movwf	6
  5083  0E9F  0187               	clrf	7
  5084  0EA0  3F40               	moviw [0]fsr1
  5085  0EA1  00A0               	movwf	??_min_up
  5086  0EA2  3F41               	moviw [1]fsr1
  5087  0EA3  00A1               	movwf	??_min_up+1
  5088  0EA4  0821               	movf	??_min_up+1,w
  5089  0EA5  3A80               	xorlw	128
  5090  0EA6  00A2               	movwf	??_min_up+2
  5091  0EA7  0871               	movf	_min_origem_up+1,w
  5092  0EA8  3A80               	xorlw	128
  5093  0EA9  0222               	subwf	??_min_up+2,w
  5094  0EAA  1D03               	skipz
  5095  0EAB  2EAE               	goto	u1865
  5096  0EAC  0870               	movf	_min_origem_up,w
  5097  0EAD  0220               	subwf	??_min_up,w
  5098  0EAE                     u1865:	
  5099  0EAE  1803               	skipnc
  5100  0EAF  2EB1               	goto	u1861
  5101  0EB0  2EB2               	goto	u1860
  5102  0EB1                     u1861:	
  5103  0EB1  2ED1               	goto	l2513
  5104  0EB2                     u1860:	
  5105  0EB2                     l2509:	
  5106  0EB2  0020               	movlb	0	; select bank0
  5107  0EB3  3523               	lslf	min_up@i,w
  5108  0EB4  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  5109  0EB5  0086               	movwf	6
  5110  0EB6  0187               	clrf	7
  5111  0EB7  3F40               	moviw [0]fsr1
  5112  0EB8  00A0               	movwf	??_min_up
  5113  0EB9  3F41               	moviw [1]fsr1
  5114  0EBA  00A1               	movwf	??_min_up+1
  5115  0EBB  0821               	movf	??_min_up+1,w
  5116  0EBC  3A80               	xorlw	128
  5117  0EBD  00A2               	movwf	??_min_up+2
  5118  0EBE  3080               	movlw	128
  5119  0EBF  0222               	subwf	??_min_up+2,w
  5120  0EC0  1D03               	skipz
  5121  0EC1  2EC4               	goto	u1875
  5122  0EC2  3001               	movlw	1
  5123  0EC3  0220               	subwf	??_min_up,w
  5124  0EC4                     u1875:	
  5125  0EC4  1C03               	skipc
  5126  0EC5  2EC7               	goto	u1871
  5127  0EC6  2EC8               	goto	u1870
  5128  0EC7                     u1871:	
  5129  0EC7  2ED1               	goto	l2513
  5130  0EC8                     u1870:	
  5131  0EC8                     l2511:	
  5132                           
  5133                           ;main.c: 331:         {;main.c: 332:             min_origem_up = fila_up[i];
  5134  0EC8  0020               	movlb	0	; select bank0
  5135  0EC9  3523               	lslf	min_up@i,w
  5136  0ECA  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  5137  0ECB  0086               	movwf	6
  5138  0ECC  0187               	clrf	7
  5139  0ECD  3F40               	moviw [0]fsr1
  5140  0ECE  00F0               	movwf	_min_origem_up
  5141  0ECF  3F41               	moviw [1]fsr1
  5142  0ED0  00F1               	movwf	_min_origem_up+1
  5143  0ED1                     l2513:	
  5144                           
  5145                           ;main.c: 334:     }
  5146  0ED1  3001               	movlw	1
  5147  0ED2  0020               	movlb	0	; select bank0
  5148  0ED3  07A3               	addwf	min_up@i,f
  5149  0ED4  3000               	movlw	0
  5150  0ED5  3DA4               	addwfc	min_up@i+1,f
  5151  0ED6                     l2515:	
  5152  0ED6  0824               	movf	min_up@i+1,w
  5153  0ED7  3A80               	xorlw	128
  5154  0ED8  00A0               	movwf	??_min_up
  5155  0ED9  3080               	movlw	128
  5156  0EDA  0220               	subwf	??_min_up,w
  5157  0EDB  1D03               	skipz
  5158  0EDC  2EDF               	goto	u1885
  5159  0EDD  3005               	movlw	5
  5160  0EDE  0223               	subwf	min_up@i,w
  5161  0EDF                     u1885:	
  5162  0EDF  1C03               	skipc
  5163  0EE0  2EE2               	goto	u1881
  5164  0EE1  2EE3               	goto	u1880
  5165  0EE2                     u1881:	
  5166  0EE2  2E65               	goto	l2503
  5167  0EE3                     u1880:	
  5168  0EE3                     l2517:	
  5169                           
  5170                           ;main.c: 336:     for(i=0;i<=4;i++)
  5171  0EE3  0020               	movlb	0	; select bank0
  5172  0EE4  01A3               	clrf	min_up@i
  5173  0EE5  01A4               	clrf	min_up@i+1
  5174  0EE6                     l2523:	
  5175                           
  5176                           ;main.c: 337:     {;main.c: 338:         if(origem_up[i]==min_origem_up)
  5177  0EE6  0020               	movlb	0	; select bank0
  5178  0EE7  3523               	lslf	min_up@i,w
  5179  0EE8  3EA0               	addlw	(low (_origem_up| 0))& (0+255)
  5180  0EE9  0086               	movwf	6
  5181  0EEA  0187               	clrf	7
  5182  0EEB  3F40               	moviw [0]fsr1
  5183  0EEC  00A0               	movwf	??_min_up
  5184  0EED  3F41               	moviw [1]fsr1
  5185  0EEE  00A1               	movwf	??_min_up+1
  5186  0EEF  0871               	movf	_min_origem_up+1,w
  5187  0EF0  0621               	xorwf	??_min_up+1,w
  5188  0EF1  1D03               	skipz
  5189  0EF2  2EF5               	goto	u1895
  5190  0EF3  0870               	movf	_min_origem_up,w
  5191  0EF4  0620               	xorwf	??_min_up,w
  5192  0EF5                     u1895:	
  5193  0EF5  1D03               	skipz
  5194  0EF6  2EF8               	goto	u1891
  5195  0EF7  2EF9               	goto	u1890
  5196  0EF8                     u1891:	
  5197  0EF8  2F00               	goto	l665
  5198  0EF9                     u1890:	
  5199  0EF9                     l2525:	
  5200                           
  5201                           ;main.c: 339:         {;main.c: 340:             origem_up[i]=out_value;
  5202  0EF9  3523               	lslf	min_up@i,w
  5203  0EFA  3EA0               	addlw	(low (_origem_up| 0))& (0+255)
  5204  0EFB  0086               	movwf	6
  5205  0EFC  0187               	clrf	7
  5206  0EFD  3000               	movlw	0
  5207  0EFE  3FC0               	movwi [0]fsr1
  5208  0EFF  3FC1               	movwi [1]fsr1
  5209  0F00                     l665:	
  5210                           ;main.c: 341:         }
  5211                           
  5212                           
  5213                           ;main.c: 342:         if(fila_up[i]==min_origem_up)
  5214  0F00  3523               	lslf	min_up@i,w
  5215  0F01  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  5216  0F02  0086               	movwf	6
  5217  0F03  0187               	clrf	7
  5218  0F04  3F40               	moviw [0]fsr1
  5219  0F05  00A0               	movwf	??_min_up
  5220  0F06  3F41               	moviw [1]fsr1
  5221  0F07  00A1               	movwf	??_min_up+1
  5222  0F08  0871               	movf	_min_origem_up+1,w
  5223  0F09  0621               	xorwf	??_min_up+1,w
  5224  0F0A  1D03               	skipz
  5225  0F0B  2F0E               	goto	u1905
  5226  0F0C  0870               	movf	_min_origem_up,w
  5227  0F0D  0620               	xorwf	??_min_up,w
  5228  0F0E                     u1905:	
  5229  0F0E  1D03               	skipz
  5230  0F0F  2F11               	goto	u1901
  5231  0F10  2F12               	goto	u1900
  5232  0F11                     u1901:	
  5233  0F11  2F19               	goto	l2529
  5234  0F12                     u1900:	
  5235  0F12                     l2527:	
  5236                           
  5237                           ;main.c: 343:         {;main.c: 344:             fila_up[i]=out_value;
  5238  0F12  3523               	lslf	min_up@i,w
  5239  0F13  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  5240  0F14  0086               	movwf	6
  5241  0F15  0187               	clrf	7
  5242  0F16  3000               	movlw	0
  5243  0F17  3FC0               	movwi [0]fsr1
  5244  0F18  3FC1               	movwi [1]fsr1
  5245  0F19                     l2529:	
  5246                           
  5247                           ;main.c: 346:     }
  5248  0F19  3001               	movlw	1
  5249  0F1A  07A3               	addwf	min_up@i,f
  5250  0F1B  3000               	movlw	0
  5251  0F1C  3DA4               	addwfc	min_up@i+1,f
  5252  0F1D                     l2531:	
  5253  0F1D  0824               	movf	min_up@i+1,w
  5254  0F1E  3A80               	xorlw	128
  5255  0F1F  00A0               	movwf	??_min_up
  5256  0F20  3080               	movlw	128
  5257  0F21  0220               	subwf	??_min_up,w
  5258  0F22  1D03               	skipz
  5259  0F23  2F26               	goto	u1915
  5260  0F24  3005               	movlw	5
  5261  0F25  0223               	subwf	min_up@i,w
  5262  0F26                     u1915:	
  5263  0F26  1C03               	skipc
  5264  0F27  2F29               	goto	u1911
  5265  0F28  2F2A               	goto	u1910
  5266  0F29                     u1911:	
  5267  0F29  2EE6               	goto	l2523
  5268  0F2A                     u1910:	
  5269  0F2A                     l667:	
  5270  0F2A  0008               	return
  5271  0F2B                     __end_of_min_up:	
  5272                           
  5273                           	psect	text7
  5274  0DB0                     __ptext7:	
  5275 ;; *************** function _max_down *****************
  5276 ;; Defined at:
  5277 ;;		line 351 in file "main.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;		None
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;  i               2    3[BANK0 ] int 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      void 
  5284 ;; Registers used:
  5285 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5291 ;;      Params:         0       0       0       0       0       0
  5292 ;;      Locals:         0       2       0       0       0       0
  5293 ;;      Temps:          0       3       0       0       0       0
  5294 ;;      Totals:         0       5       0       0       0       0
  5295 ;;Total ram usage:        5 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; Hardware stack levels required when called:    4
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_col_down
  5302 ;;		_update
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           
  5307                           ;psect for function _max_down
  5308  0DB0                     _max_down:	
  5309  0DB0                     l2533:	
  5310                           ;incstack = 0
  5311                           ; Regs used in _max_down: [wreg+fsr1l+fsr1h+status,2+status,0]
  5312                           
  5313                           
  5314                           ;main.c: 353:     max_origem_down = origem_down[0];
  5315  0DB0  0021               	movlb	1	; select bank1
  5316  0DB1  082B               	movf	(_origem_down+1)^(0+128),w
  5317  0DB2  00F3               	movwf	_max_origem_down+1
  5318  0DB3  082A               	movf	_origem_down^(0+128),w
  5319  0DB4  00F2               	movwf	_max_origem_down
  5320                           
  5321                           ;main.c: 354:     int i;;main.c: 355:     for(i=1;i<=4;i++)
  5322  0DB5  3001               	movlw	1
  5323  0DB6  0020               	movlb	0	; select bank0
  5324  0DB7  00A3               	movwf	max_down@i
  5325  0DB8  3000               	movlw	0
  5326  0DB9  00A4               	movwf	max_down@i+1
  5327  0DBA                     l2537:	
  5328                           
  5329                           ;main.c: 356:     {;main.c: 357:         if(origem_down[i]>max_origem_down)
  5330  0DBA  0020               	movlb	0	; select bank0
  5331  0DBB  3523               	lslf	max_down@i,w
  5332  0DBC  3EAA               	addlw	(low (_origem_down| 0))& (0+255)
  5333  0DBD  0086               	movwf	6
  5334  0DBE  0187               	clrf	7
  5335  0DBF  3F40               	moviw [0]fsr1
  5336  0DC0  00A0               	movwf	??_max_down
  5337  0DC1  3F41               	moviw [1]fsr1
  5338  0DC2  00A1               	movwf	??_max_down+1
  5339  0DC3  0873               	movf	_max_origem_down+1,w
  5340  0DC4  3A80               	xorlw	128
  5341  0DC5  00A2               	movwf	??_max_down+2
  5342  0DC6  0821               	movf	??_max_down+1,w
  5343  0DC7  3A80               	xorlw	128
  5344  0DC8  0222               	subwf	??_max_down+2,w
  5345  0DC9  1D03               	skipz
  5346  0DCA  2DCD               	goto	u1925
  5347  0DCB  0820               	movf	??_max_down,w
  5348  0DCC  0272               	subwf	_max_origem_down,w
  5349  0DCD                     u1925:	
  5350  0DCD  1803               	skipnc
  5351  0DCE  2DD0               	goto	u1921
  5352  0DCF  2DD1               	goto	u1920
  5353  0DD0                     u1921:	
  5354  0DD0  2DDA               	goto	l672
  5355  0DD1                     u1920:	
  5356  0DD1                     l2539:	
  5357                           
  5358                           ;main.c: 358:         {;main.c: 359:             max_origem_down = origem_down[i];
  5359  0DD1  0020               	movlb	0	; select bank0
  5360  0DD2  3523               	lslf	max_down@i,w
  5361  0DD3  3EAA               	addlw	(low (_origem_down| 0))& (0+255)
  5362  0DD4  0086               	movwf	6
  5363  0DD5  0187               	clrf	7
  5364  0DD6  3F40               	moviw [0]fsr1
  5365  0DD7  00F2               	movwf	_max_origem_down
  5366  0DD8  3F41               	moviw [1]fsr1
  5367  0DD9  00F3               	movwf	_max_origem_down+1
  5368  0DDA                     l672:	
  5369                           ;main.c: 360:         }
  5370                           
  5371                           
  5372                           ;main.c: 361:         if(fila_down[i]>max_origem_down)
  5373  0DDA  0020               	movlb	0	; select bank0
  5374  0DDB  3523               	lslf	max_down@i,w
  5375  0DDC  3EB4               	addlw	(low (_fila_down| 0))& (0+255)
  5376  0DDD  0086               	movwf	6
  5377  0DDE  0187               	clrf	7
  5378  0DDF  3F40               	moviw [0]fsr1
  5379  0DE0  00A0               	movwf	??_max_down
  5380  0DE1  3F41               	moviw [1]fsr1
  5381  0DE2  00A1               	movwf	??_max_down+1
  5382  0DE3  0873               	movf	_max_origem_down+1,w
  5383  0DE4  3A80               	xorlw	128
  5384  0DE5  00A2               	movwf	??_max_down+2
  5385  0DE6  0821               	movf	??_max_down+1,w
  5386  0DE7  3A80               	xorlw	128
  5387  0DE8  0222               	subwf	??_max_down+2,w
  5388  0DE9  1D03               	skipz
  5389  0DEA  2DED               	goto	u1935
  5390  0DEB  0820               	movf	??_max_down,w
  5391  0DEC  0272               	subwf	_max_origem_down,w
  5392  0DED                     u1935:	
  5393  0DED  1803               	skipnc
  5394  0DEE  2DF0               	goto	u1931
  5395  0DEF  2DF1               	goto	u1930
  5396  0DF0                     u1931:	
  5397  0DF0  2DFA               	goto	l2543
  5398  0DF1                     u1930:	
  5399  0DF1                     l2541:	
  5400                           
  5401                           ;main.c: 362:         {;main.c: 363:             max_origem_down = fila_down[i];
  5402  0DF1  0020               	movlb	0	; select bank0
  5403  0DF2  3523               	lslf	max_down@i,w
  5404  0DF3  3EB4               	addlw	(low (_fila_down| 0))& (0+255)
  5405  0DF4  0086               	movwf	6
  5406  0DF5  0187               	clrf	7
  5407  0DF6  3F40               	moviw [0]fsr1
  5408  0DF7  00F2               	movwf	_max_origem_down
  5409  0DF8  3F41               	moviw [1]fsr1
  5410  0DF9  00F3               	movwf	_max_origem_down+1
  5411  0DFA                     l2543:	
  5412                           
  5413                           ;main.c: 365:     }
  5414  0DFA  3001               	movlw	1
  5415  0DFB  0020               	movlb	0	; select bank0
  5416  0DFC  07A3               	addwf	max_down@i,f
  5417  0DFD  3000               	movlw	0
  5418  0DFE  3DA4               	addwfc	max_down@i+1,f
  5419  0DFF                     l2545:	
  5420  0DFF  0824               	movf	max_down@i+1,w
  5421  0E00  3A80               	xorlw	128
  5422  0E01  00A0               	movwf	??_max_down
  5423  0E02  3080               	movlw	128
  5424  0E03  0220               	subwf	??_max_down,w
  5425  0E04  1D03               	skipz
  5426  0E05  2E08               	goto	u1945
  5427  0E06  3005               	movlw	5
  5428  0E07  0223               	subwf	max_down@i,w
  5429  0E08                     u1945:	
  5430  0E08  1C03               	skipc
  5431  0E09  2E0B               	goto	u1941
  5432  0E0A  2E0C               	goto	u1940
  5433  0E0B                     u1941:	
  5434  0E0B  2DBA               	goto	l2537
  5435  0E0C                     u1940:	
  5436  0E0C                     l2547:	
  5437                           
  5438                           ;main.c: 367:     for(i=0;i<=4;i++)
  5439  0E0C  0020               	movlb	0	; select bank0
  5440  0E0D  01A3               	clrf	max_down@i
  5441  0E0E  01A4               	clrf	max_down@i+1
  5442  0E0F                     l2553:	
  5443                           
  5444                           ;main.c: 368:     {;main.c: 369:         if(origem_down[i]==max_origem_down)
  5445  0E0F  0020               	movlb	0	; select bank0
  5446  0E10  3523               	lslf	max_down@i,w
  5447  0E11  3EAA               	addlw	(low (_origem_down| 0))& (0+255)
  5448  0E12  0086               	movwf	6
  5449  0E13  0187               	clrf	7
  5450  0E14  3F40               	moviw [0]fsr1
  5451  0E15  00A0               	movwf	??_max_down
  5452  0E16  3F41               	moviw [1]fsr1
  5453  0E17  00A1               	movwf	??_max_down+1
  5454  0E18  0873               	movf	_max_origem_down+1,w
  5455  0E19  0621               	xorwf	??_max_down+1,w
  5456  0E1A  1D03               	skipz
  5457  0E1B  2E1E               	goto	u1955
  5458  0E1C  0872               	movf	_max_origem_down,w
  5459  0E1D  0620               	xorwf	??_max_down,w
  5460  0E1E                     u1955:	
  5461  0E1E  1D03               	skipz
  5462  0E1F  2E21               	goto	u1951
  5463  0E20  2E22               	goto	u1950
  5464  0E21                     u1951:	
  5465  0E21  2E29               	goto	l676
  5466  0E22                     u1950:	
  5467  0E22                     l2555:	
  5468                           
  5469                           ;main.c: 370:         {;main.c: 371:             origem_down[i]=out_value;
  5470  0E22  3523               	lslf	max_down@i,w
  5471  0E23  3EAA               	addlw	(low (_origem_down| 0))& (0+255)
  5472  0E24  0086               	movwf	6
  5473  0E25  0187               	clrf	7
  5474  0E26  3000               	movlw	0
  5475  0E27  3FC0               	movwi [0]fsr1
  5476  0E28  3FC1               	movwi [1]fsr1
  5477  0E29                     l676:	
  5478                           ;main.c: 372:         }
  5479                           
  5480                           
  5481                           ;main.c: 373:         if(fila_up[i]==max_origem_down)
  5482  0E29  3523               	lslf	max_down@i,w
  5483  0E2A  3EBE               	addlw	(low (_fila_up| 0))& (0+255)
  5484  0E2B  0086               	movwf	6
  5485  0E2C  0187               	clrf	7
  5486  0E2D  3F40               	moviw [0]fsr1
  5487  0E2E  00A0               	movwf	??_max_down
  5488  0E2F  3F41               	moviw [1]fsr1
  5489  0E30  00A1               	movwf	??_max_down+1
  5490  0E31  0873               	movf	_max_origem_down+1,w
  5491  0E32  0621               	xorwf	??_max_down+1,w
  5492  0E33  1D03               	skipz
  5493  0E34  2E37               	goto	u1965
  5494  0E35  0872               	movf	_max_origem_down,w
  5495  0E36  0620               	xorwf	??_max_down,w
  5496  0E37                     u1965:	
  5497  0E37  1D03               	skipz
  5498  0E38  2E3A               	goto	u1961
  5499  0E39  2E3B               	goto	u1960
  5500  0E3A                     u1961:	
  5501  0E3A  2E42               	goto	l2559
  5502  0E3B                     u1960:	
  5503  0E3B                     l2557:	
  5504                           
  5505                           ;main.c: 374:         {;main.c: 375:             fila_down[i]=out_value;
  5506  0E3B  3523               	lslf	max_down@i,w
  5507  0E3C  3EB4               	addlw	(low (_fila_down| 0))& (0+255)
  5508  0E3D  0086               	movwf	6
  5509  0E3E  0187               	clrf	7
  5510  0E3F  3000               	movlw	0
  5511  0E40  3FC0               	movwi [0]fsr1
  5512  0E41  3FC1               	movwi [1]fsr1
  5513  0E42                     l2559:	
  5514                           
  5515                           ;main.c: 377:     }
  5516  0E42  3001               	movlw	1
  5517  0E43  07A3               	addwf	max_down@i,f
  5518  0E44  3000               	movlw	0
  5519  0E45  3DA4               	addwfc	max_down@i+1,f
  5520  0E46                     l2561:	
  5521  0E46  0824               	movf	max_down@i+1,w
  5522  0E47  3A80               	xorlw	128
  5523  0E48  00A0               	movwf	??_max_down
  5524  0E49  3080               	movlw	128
  5525  0E4A  0220               	subwf	??_max_down,w
  5526  0E4B  1D03               	skipz
  5527  0E4C  2E4F               	goto	u1975
  5528  0E4D  3005               	movlw	5
  5529  0E4E  0223               	subwf	max_down@i,w
  5530  0E4F                     u1975:	
  5531  0E4F  1C03               	skipc
  5532  0E50  2E52               	goto	u1971
  5533  0E51  2E53               	goto	u1970
  5534  0E52                     u1971:	
  5535  0E52  2E0F               	goto	l2553
  5536  0E53                     u1970:	
  5537  0E53                     l2563:	
  5538                           
  5539                           ;main.c: 379:     if(max_origem_down==0)
  5540  0E53  0872               	movf	_max_origem_down,w
  5541  0E54  0473               	iorwf	_max_origem_down+1,w
  5542  0E55  1D03               	btfss	3,2
  5543  0E56  2E58               	goto	u1981
  5544  0E57  2E59               	goto	u1980
  5545  0E58                     u1981:	
  5546  0E58  2E5D               	goto	l679
  5547  0E59                     u1980:	
  5548  0E59                     l2565:	
  5549                           
  5550                           ;main.c: 380:     {;main.c: 381:         max_origem_down=1;
  5551  0E59  3001               	movlw	1
  5552  0E5A  00F2               	movwf	_max_origem_down
  5553  0E5B  3000               	movlw	0
  5554  0E5C  00F3               	movwf	_max_origem_down+1
  5555  0E5D                     l679:	
  5556  0E5D  0008               	return
  5557  0E5E                     __end_of_max_down:	
  5558                           
  5559                           	psect	text8
  5560  084C                     __ptext8:	
  5561 ;; *************** function _EUSART_is_rx_ready *****************
  5562 ;; Defined at:
  5563 ;;		line 99 in file "mcc_generated_files/eusart.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;		None
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;		None
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  1    wreg      _Bool 
  5570 ;; Registers used:
  5571 ;;		wreg, status,2, status,0
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5577 ;;      Params:         0       0       0       0       0       0
  5578 ;;      Locals:         0       0       0       0       0       0
  5579 ;;      Temps:          0       0       0       0       0       0
  5580 ;;      Totals:         0       0       0       0       0       0
  5581 ;;Total ram usage:        0 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    4
  5584 ;; This function calls:
  5585 ;;		Nothing
  5586 ;; This function is called by:
  5587 ;;		_update
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           
  5592                           ;psect for function _EUSART_is_rx_ready
  5593  084C                     _EUSART_is_rx_ready:	
  5594  084C                     l3527:	
  5595                           ;incstack = 0
  5596                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  5597                           
  5598                           
  5599                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  5600  084C  0020               	movlb	0	; select bank0
  5601  084D  0E11               	swapf	17,w	;volatile
  5602  084E  0C89               	rrf	9,f
  5603  084F  3901               	andlw	1
  5604  0850                     l51:	
  5605  0850  0008               	return
  5606  0851                     __end_of_EUSART_is_rx_ready:	
  5607                           
  5608                           	psect	text9
  5609  094B                     __ptext9:	
  5610 ;; *************** function _EUSART_Read *****************
  5611 ;; Defined at:
  5612 ;;		line 113 in file "mcc_generated_files/eusart.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;		None
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;		None
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      unsigned char 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5626 ;;      Params:         0       0       0       0       0       0
  5627 ;;      Locals:         0       0       0       0       0       0
  5628 ;;      Temps:          0       0       0       0       0       0
  5629 ;;      Totals:         0       0       0       0       0       0
  5630 ;;Total ram usage:        0 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:    4
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_update
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           
  5641                           ;psect for function _EUSART_Read
  5642  094B                     _EUSART_Read:	
  5643  094B                     l3531:	
  5644                           ;incstack = 0
  5645                           ; Regs used in _EUSART_Read: [wreg+status,2]
  5646                           
  5647  094B                     l60:	
  5648                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  5649                           
  5650                           
  5651                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  5652  094B  0020               	movlb	0	; select bank0
  5653  094C  1E91               	btfss	17,5	;volatile
  5654  094D  294F               	goto	u3621
  5655  094E  2950               	goto	u3620
  5656  094F                     u3621:	
  5657  094F  294B               	goto	l60
  5658  0950                     u3620:	
  5659  0950                     l3533:	
  5660                           
  5661                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  5662  0950  01F6               	clrf	_eusartRxLastError	;volatile
  5663  0951                     l3535:	
  5664                           
  5665                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  5666  0951  0023               	movlb	3	; select bank3
  5667  0952  1C9D               	btfss	29,1	;volatile
  5668  0953  2955               	goto	u3631
  5669  0954  2956               	goto	u3630
  5670  0955                     u3631:	
  5671  0955  2958               	goto	l3539
  5672  0956                     u3630:	
  5673  0956                     l3537:	
  5674                           
  5675                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  5676  0956  121D               	bcf	29,4	;volatile
  5677                           
  5678                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  5679  0957  161D               	bsf	29,4	;volatile
  5680  0958                     l3539:	
  5681                           
  5682                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  5683  0958  0819               	movf	25,w	;volatile
  5684  0959                     l64:	
  5685  0959  0008               	return
  5686  095A                     __end_of_EUSART_Read:	
  5687                           
  5688                           	psect	text10
  5689  09EF                     __ptext10:	
  5690 ;; *************** function ___wmul *****************
  5691 ;; Defined at:
  5692 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5695 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  product         2    4[BANK0 ] unsigned int 
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  2    0[BANK0 ] unsigned int 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5707 ;;      Params:         0       4       0       0       0       0
  5708 ;;      Locals:         0       2       0       0       0       0
  5709 ;;      Temps:          0       0       0       0       0       0
  5710 ;;      Totals:         0       6       0       0       0       0
  5711 ;;Total ram usage:        6 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; Hardware stack levels required when called:    4
  5714 ;; This function calls:
  5715 ;;		Nothing
  5716 ;; This function is called by:
  5717 ;;		_controle
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           
  5722                           ;psect for function ___wmul
  5723  09EF                     ___wmul:	
  5724  09EF                     l3673:	
  5725                           ;incstack = 0
  5726                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5727                           
  5728  09EF  0020               	movlb	0	; select bank0
  5729  09F0  01A4               	clrf	___wmul@product
  5730  09F1  01A5               	clrf	___wmul@product+1
  5731  09F2                     l3675:	
  5732  09F2  1C20               	btfss	___wmul@multiplier,0
  5733  09F3  29F5               	goto	u3861
  5734  09F4  29F6               	goto	u3860
  5735  09F5                     u3861:	
  5736  09F5  29FA               	goto	l858
  5737  09F6                     u3860:	
  5738  09F6                     l3677:	
  5739  09F6  0822               	movf	___wmul@multiplicand,w
  5740  09F7  07A4               	addwf	___wmul@product,f
  5741  09F8  0823               	movf	___wmul@multiplicand+1,w
  5742  09F9  3DA5               	addwfc	___wmul@product+1,f
  5743  09FA                     l858:	
  5744  09FA  3001               	movlw	1
  5745  09FB                     u3875:	
  5746  09FB  35A2               	lslf	___wmul@multiplicand,f
  5747  09FC  0DA3               	rlf	___wmul@multiplicand+1,f
  5748  09FD  0B89               	decfsz	9,f
  5749  09FE  29FB               	goto	u3875
  5750  09FF                     l3679:	
  5751  09FF  3001               	movlw	1
  5752  0A00                     u3885:	
  5753  0A00  36A1               	lsrf	___wmul@multiplier+1,f
  5754  0A01  0CA0               	rrf	___wmul@multiplier,f
  5755  0A02  0B89               	decfsz	9,f
  5756  0A03  2A00               	goto	u3885
  5757  0A04                     l3681:	
  5758  0A04  0820               	movf	___wmul@multiplier,w
  5759  0A05  0421               	iorwf	___wmul@multiplier+1,w
  5760  0A06  1D03               	btfss	3,2
  5761  0A07  2A09               	goto	u3891
  5762  0A08  2A0A               	goto	u3890
  5763  0A09                     u3891:	
  5764  0A09  29F2               	goto	l3675
  5765  0A0A                     u3890:	
  5766  0A0A                     l3683:	
  5767  0A0A  0825               	movf	___wmul@product+1,w
  5768  0A0B  00A1               	movwf	?___wmul+1
  5769  0A0C  0824               	movf	___wmul@product,w
  5770  0A0D  00A0               	movwf	?___wmul
  5771  0A0E                     l860:	
  5772  0A0E  0008               	return
  5773  0A0F                     __end_of___wmul:	
  5774                           
  5775                           	psect	text11
  5776  09D3                     __ptext11:	
  5777 ;; *************** function _PWM3_LoadDutyValue *****************
  5778 ;; Defined at:
  5779 ;;		line 82 in file "mcc_generated_files/pwm3.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  dutyValue       2    0[BANK0 ] unsigned short 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      void 
  5786 ;; Registers used:
  5787 ;;		wreg, status,2, status,0
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5793 ;;      Params:         0       2       0       0       0       0
  5794 ;;      Locals:         0       0       0       0       0       0
  5795 ;;      Temps:          0       2       0       0       0       0
  5796 ;;      Totals:         0       4       0       0       0       0
  5797 ;;Total ram usage:        4 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:    4
  5800 ;; This function calls:
  5801 ;;		Nothing
  5802 ;; This function is called by:
  5803 ;;		_controle
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           
  5808                           ;psect for function _PWM3_LoadDutyValue
  5809  09D3                     _PWM3_LoadDutyValue:	
  5810  09D3                     l2593:	
  5811                           ;incstack = 0
  5812                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  5813                           
  5814                           
  5815                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
  5816  09D3  0020               	movlb	0	; select bank0
  5817  09D4  0821               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  5818  09D5  00A3               	movwf	??_PWM3_LoadDutyValue+1
  5819  09D6  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
  5820  09D7  00A2               	movwf	??_PWM3_LoadDutyValue
  5821  09D8  36A3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5822  09D9  0CA2               	rrf	??_PWM3_LoadDutyValue,f
  5823  09DA  36A3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5824  09DB  0CA2               	rrf	??_PWM3_LoadDutyValue,f
  5825  09DC  0822               	movf	??_PWM3_LoadDutyValue,w
  5826  09DD  0026               	movlb	6	; select bank6
  5827  09DE  0091               	movwf	17	;volatile
  5828                           
  5829                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
  5830  09DF  0020               	movlb	0	; select bank0
  5831  09E0  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
  5832  09E1  3903               	andlw	3
  5833  09E2  00A2               	movwf	??_PWM3_LoadDutyValue
  5834  09E3  3004               	movlw	4
  5835  09E4                     u2035:	
  5836  09E4  35A2               	lslf	??_PWM3_LoadDutyValue,f
  5837  09E5  0B89               	decfsz	9,f
  5838  09E6  29E4               	goto	u2035
  5839  09E7  0026               	movlb	6	; select bank6
  5840  09E8  0813               	movf	19,w	;volatile
  5841  09E9  39CF               	andlw	207
  5842  09EA  0020               	movlb	0	; select bank0
  5843  09EB  0422               	iorwf	??_PWM3_LoadDutyValue,w
  5844  09EC  0026               	movlb	6	; select bank6
  5845  09ED  0093               	movwf	19	;volatile
  5846  09EE                     l475:	
  5847  09EE  0008               	return
  5848  09EF                     __end_of_PWM3_LoadDutyValue:	
  5849                           
  5850                           	psect	text12
  5851  0A30                     __ptext12:	
  5852 ;; *************** function _ADC_GetConversion *****************
  5853 ;; Defined at:
  5854 ;;		line 112 in file "mcc_generated_files/adc.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;  channel         1    wreg     enum E2474
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;  channel         1    3[BANK0 ] enum E2474
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  2    0[BANK0 ] unsigned short 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5868 ;;      Params:         0       2       0       0       0       0
  5869 ;;      Locals:         0       1       0       0       0       0
  5870 ;;      Temps:          0       1       0       0       0       0
  5871 ;;      Totals:         0       4       0       0       0       0
  5872 ;;Total ram usage:        4 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; Hardware stack levels required when called:    4
  5875 ;; This function calls:
  5876 ;;		Nothing
  5877 ;; This function is called by:
  5878 ;;		_controle
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           
  5883                           ;psect for function _ADC_GetConversion
  5884  0A30                     _ADC_GetConversion:	
  5885                           
  5886                           ;incstack = 0
  5887                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  5888                           ;ADC_GetConversion@channel stored from wreg
  5889  0A30  0020               	movlb	0	; select bank0
  5890  0A31  00A3               	movwf	ADC_GetConversion@channel
  5891  0A32                     l2581:	
  5892                           
  5893                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  5894  0A32  0823               	movf	ADC_GetConversion@channel,w
  5895  0A33  00A2               	movwf	??_ADC_GetConversion
  5896  0A34  0DA2               	rlf	??_ADC_GetConversion,f
  5897  0A35  0DA2               	rlf	??_ADC_GetConversion,f
  5898  0A36  0021               	movlb	1	; select bank1
  5899  0A37  081D               	movf	29,w	;volatile
  5900  0A38  0020               	movlb	0	; select bank0
  5901  0A39  0622               	xorwf	??_ADC_GetConversion,w
  5902  0A3A  3983               	andlw	-125
  5903  0A3B  0622               	xorwf	??_ADC_GetConversion,w
  5904  0A3C  0021               	movlb	1	; select bank1
  5905  0A3D  009D               	movwf	29	;volatile
  5906  0A3E                     l2583:	
  5907                           
  5908                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  5909  0A3E  141D               	bsf	29,0	;volatile
  5910  0A3F                     l2585:	
  5911                           
  5912                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  5913  0A3F  3003               	movlw	3
  5914  0A40                     u4167:	
  5915  0A40  0B89               	decfsz	9,f
  5916  0A41  2A40               	goto	u4167
  5917  0A42  0000               	nop
  5918  0A43                     l2587:	
  5919                           
  5920                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  5921  0A43  0021               	movlb	1	; select bank1
  5922  0A44  149D               	bsf	29,1	;volatile
  5923  0A45                     l282:	
  5924                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  5925                           
  5926                           
  5927                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  5928  0A45  189D               	btfsc	29,1	;volatile
  5929  0A46  2A48               	goto	u2021
  5930  0A47  2A49               	goto	u2020
  5931  0A48                     u2021:	
  5932  0A48  2A45               	goto	l282
  5933  0A49                     u2020:	
  5934  0A49                     l2589:	
  5935                           
  5936                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5937  0A49  081C               	movf	28,w	;volatile
  5938  0A4A  0020               	movlb	0	; select bank0
  5939  0A4B  00A1               	movwf	?_ADC_GetConversion+1
  5940  0A4C  0021               	movlb	1	; select bank1
  5941  0A4D  081B               	movf	27,w	;volatile
  5942  0A4E  0020               	movlb	0	; select bank0
  5943  0A4F  00A0               	movwf	?_ADC_GetConversion
  5944  0A50                     l285:	
  5945  0A50  0008               	return
  5946  0A51                     __end_of_ADC_GetConversion:	
  5947                           
  5948                           	psect	text13
  5949  09B7                     __ptext13:	
  5950 ;; *************** function _abs *****************
  5951 ;; Defined at:
  5952 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;  a               2    0[BANK0 ] int 
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;		None
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  2    0[BANK0 ] int 
  5959 ;; Registers used:
  5960 ;;		wreg, status,2, status,0
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5966 ;;      Params:         0       2       0       0       0       0
  5967 ;;      Locals:         0       0       0       0       0       0
  5968 ;;      Temps:          0       2       0       0       0       0
  5969 ;;      Totals:         0       4       0       0       0       0
  5970 ;;Total ram usage:        4 bytes
  5971 ;; Hardware stack levels used:    1
  5972 ;; Hardware stack levels required when called:    4
  5973 ;; This function calls:
  5974 ;;		Nothing
  5975 ;; This function is called by:
  5976 ;;		_gerenciamento
  5977 ;;		_col_up
  5978 ;;		_col_down
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           
  5983                           ;psect for function _abs
  5984  09B7                     _abs:	
  5985  09B7                     l3041:	
  5986                           ;incstack = 0
  5987                           ; Regs used in _abs: [wreg+status,2+status,0]
  5988                           
  5989  09B7  0020               	movlb	0	; select bank0
  5990  09B8  0821               	movf	abs@a+1,w
  5991  09B9  3A80               	xorlw	128
  5992  09BA  00A2               	movwf	??_abs
  5993  09BB  3080               	movlw	128
  5994  09BC  0222               	subwf	??_abs,w
  5995  09BD  1D03               	skipz
  5996  09BE  29C1               	goto	u2795
  5997  09BF  3001               	movlw	1
  5998  09C0  0220               	subwf	abs@a,w
  5999  09C1                     u2795:	
  6000  09C1  1803               	skipnc
  6001  09C2  29C4               	goto	u2791
  6002  09C3  29C5               	goto	u2790
  6003  09C4                     u2791:	
  6004  09C4  29D2               	goto	l1312
  6005  09C5                     u2790:	
  6006  09C5                     l3043:	
  6007  09C5  0020               	movlb	0	; select bank0
  6008  09C6  0920               	comf	abs@a,w
  6009  09C7  00A2               	movwf	??_abs
  6010  09C8  0921               	comf	abs@a+1,w
  6011  09C9  00A3               	movwf	??_abs+1
  6012  09CA  0AA2               	incf	??_abs,f
  6013  09CB  1903               	skipnz
  6014  09CC  0AA3               	incf	??_abs+1,f
  6015  09CD  0822               	movf	??_abs,w
  6016  09CE  00A0               	movwf	?_abs
  6017  09CF  0823               	movf	??_abs+1,w
  6018  09D0  00A1               	movwf	?_abs+1
  6019  09D1  29D2               	goto	l1315
  6020  09D2                     l1312:	
  6021  09D2                     l1315:	
  6022  09D2  0008               	return
  6023  09D3                     __end_of_abs:	
  6024                           
  6025                           	psect	text14
  6026  0F2B                     __ptext14:	
  6027 ;; *************** function _comunicacao *****************
  6028 ;; Defined at:
  6029 ;;		line 154 in file "main.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;		None
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;  position        4   75[BANK0 ] float 
  6034 ;;  speed           4   71[BANK0 ] float 
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  1    wreg      void 
  6037 ;; Registers used:
  6038 ;;		wreg, status,2, status,0, pclath, cstack
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6044 ;;      Params:         0       0       0       0       0       0
  6045 ;;      Locals:         0       8       0       0       0       0
  6046 ;;      Temps:          0       1       0       0       0       0
  6047 ;;      Totals:         0       9       0       0       0       0
  6048 ;;Total ram usage:        9 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; Hardware stack levels required when called:    6
  6051 ;; This function calls:
  6052 ;;		___fldiv
  6053 ;;		___flmul
  6054 ;;		___fltol
  6055 ;;		___xxtofl
  6056 ;; This function is called by:
  6057 ;;		_main
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           
  6062                           ;psect for function _comunicacao
  6063  0F2B                     _comunicacao:	
  6064  0F2B                     l3447:	
  6065                           ;incstack = 0
  6066                           ; Regs used in _comunicacao: [wreg+status,2+status,0+pclath+cstack]
  6067                           
  6068                           
  6069                           ;main.c: 159:     float speed = 3.75/(((float)ccp_value)*0.0000005);
  6070  0F2B  3035               	movlw	53
  6071  0F2C  0020               	movlb	0	; select bank0
  6072  0F2D  00B5               	movwf	___flmul@b+3
  6073  0F2E  3006               	movlw	6
  6074  0F2F  00B4               	movwf	___flmul@b+2
  6075  0F30  3037               	movlw	55
  6076  0F31  00B3               	movwf	___flmul@b+1
  6077  0F32  30BD               	movlw	189
  6078  0F33  00B2               	movwf	___flmul@b
  6079  0F34  0021               	movlb	1	; select bank1
  6080  0F35  0867               	movf	_ccp_value^(0+128),w
  6081  0F36  0020               	movlb	0	; select bank0
  6082  0F37  00A4               	movwf	___xxtofl@val
  6083  0F38  0021               	movlb	1	; select bank1
  6084  0F39  0868               	movf	(_ccp_value+1)^(0+128),w
  6085  0F3A  0020               	movlb	0	; select bank0
  6086  0F3B  00A5               	movwf	___xxtofl@val+1
  6087  0F3C  01A6               	clrf	___xxtofl@val+2
  6088  0F3D  01A7               	clrf	___xxtofl@val+3
  6089  0F3E  3000               	movlw	0
  6090  0F3F  318D  2503  318F   	fcall	___xxtofl
  6091  0F42  0020               	movlb	0	; select bank0
  6092  0F43  0827               	movf	?___xxtofl+3,w
  6093  0F44  00B9               	movwf	___flmul@a+3
  6094  0F45  0826               	movf	?___xxtofl+2,w
  6095  0F46  00B8               	movwf	___flmul@a+2
  6096  0F47  0825               	movf	?___xxtofl+1,w
  6097  0F48  00B7               	movwf	___flmul@a+1
  6098  0F49  0824               	movf	?___xxtofl,w
  6099  0F4A  00B6               	movwf	___flmul@a
  6100  0F4B  3180  2051  318F   	fcall	___flmul
  6101  0F4E  0020               	movlb	0	; select bank0
  6102  0F4F  0835               	movf	?___flmul+3,w
  6103  0F50  00CF               	movwf	___fldiv@a+3
  6104  0F51  0834               	movf	?___flmul+2,w
  6105  0F52  00CE               	movwf	___fldiv@a+2
  6106  0F53  0833               	movf	?___flmul+1,w
  6107  0F54  00CD               	movwf	___fldiv@a+1
  6108  0F55  0832               	movf	?___flmul,w
  6109  0F56  00CC               	movwf	___fldiv@a
  6110  0F57  3040               	movlw	64
  6111  0F58  00D3               	movwf	___fldiv@b+3
  6112  0F59  3070               	movlw	112
  6113  0F5A  00D2               	movwf	___fldiv@b+2
  6114  0F5B  3000               	movlw	0
  6115  0F5C  00D1               	movwf	___fldiv@b+1
  6116  0F5D  3000               	movlw	0
  6117  0F5E  00D0               	movwf	___fldiv@b
  6118  0F5F  3184  2481  318F   	fcall	___fldiv
  6119  0F62  0020               	movlb	0	; select bank0
  6120  0F63  084F               	movf	?___fldiv+3,w
  6121  0F64  00EA               	movwf	comunicacao@speed+3
  6122  0F65  084E               	movf	?___fldiv+2,w
  6123  0F66  00E9               	movwf	comunicacao@speed+2
  6124  0F67  084D               	movf	?___fldiv+1,w
  6125  0F68  00E8               	movwf	comunicacao@speed+1
  6126  0F69  084C               	movf	?___fldiv,w
  6127  0F6A  00E7               	movwf	comunicacao@speed
  6128                           
  6129                           ;main.c: 160:     float position = 1.5*pulses;
  6130  0F6B  303F               	movlw	63
  6131  0F6C  00B5               	movwf	___flmul@b+3
  6132  0F6D  30C0               	movlw	192
  6133  0F6E  00B4               	movwf	___flmul@b+2
  6134  0F6F  3000               	movlw	0
  6135  0F70  00B3               	movwf	___flmul@b+1
  6136  0F71  3000               	movlw	0
  6137  0F72  00B2               	movwf	___flmul@b
  6138  0F73  0021               	movlb	1	; select bank1
  6139  0F74  0869               	movf	_pulses^(0+128),w
  6140  0F75  0020               	movlb	0	; select bank0
  6141  0F76  00A4               	movwf	___xxtofl@val
  6142  0F77  0021               	movlb	1	; select bank1
  6143  0F78  086A               	movf	(_pulses+1)^(0+128),w
  6144  0F79  0020               	movlb	0	; select bank0
  6145  0F7A  00A5               	movwf	___xxtofl@val+1
  6146  0F7B  0D89               	rlf	9,f
  6147  0F7C  3B89               	subwfb	9,f
  6148  0F7D  0989               	comf	9,f
  6149  0F7E  00A6               	movwf	___xxtofl@val+2
  6150  0F7F  00A7               	movwf	___xxtofl@val+3
  6151  0F80  3001               	movlw	1
  6152  0F81  318D  2503  318F   	fcall	___xxtofl
  6153  0F84  0020               	movlb	0	; select bank0
  6154  0F85  0827               	movf	?___xxtofl+3,w
  6155  0F86  00B9               	movwf	___flmul@a+3
  6156  0F87  0826               	movf	?___xxtofl+2,w
  6157  0F88  00B8               	movwf	___flmul@a+2
  6158  0F89  0825               	movf	?___xxtofl+1,w
  6159  0F8A  00B7               	movwf	___flmul@a+1
  6160  0F8B  0824               	movf	?___xxtofl,w
  6161  0F8C  00B6               	movwf	___flmul@a
  6162  0F8D  3180  2051  318F   	fcall	___flmul
  6163  0F90  0020               	movlb	0	; select bank0
  6164  0F91  0835               	movf	?___flmul+3,w
  6165  0F92  00EE               	movwf	comunicacao@position+3
  6166  0F93  0834               	movf	?___flmul+2,w
  6167  0F94  00ED               	movwf	comunicacao@position+2
  6168  0F95  0833               	movf	?___flmul+1,w
  6169  0F96  00EC               	movwf	comunicacao@position+1
  6170  0F97  0832               	movf	?___flmul,w
  6171  0F98  00EB               	movwf	comunicacao@position
  6172  0F99                     l3449:	
  6173                           
  6174                           ;main.c: 175:     byte[0] = ((state_motor<<4)& 0x20)|(and_ating2 & 0x02);
  6175  0F99  0021               	movlb	1	; select bank1
  6176  0F9A  0848               	movf	_and_ating2^(0+128),w
  6177  0F9B  3902               	andlw	2
  6178  0F9C  0020               	movlb	0	; select bank0
  6179  0F9D  00E6               	movwf	??_comunicacao
  6180  0F9E  0866               	movf	??_comunicacao,w
  6181  0F9F  0022               	movlb	2	; select bank2
  6182  0FA0  00B0               	movwf	_byte^(0+256)
  6183  0FA1                     l3451:	
  6184                           
  6185                           ;main.c: 176:     byte[1] = 0x80 |((((uint8_t)position)>>1)& 0x7F);
  6186  0FA1  0020               	movlb	0	; select bank0
  6187  0FA2  086E               	movf	comunicacao@position+3,w
  6188  0FA3  00A3               	movwf	___fltol@f1+3
  6189  0FA4  086D               	movf	comunicacao@position+2,w
  6190  0FA5  00A2               	movwf	___fltol@f1+2
  6191  0FA6  086C               	movf	comunicacao@position+1,w
  6192  0FA7  00A1               	movwf	___fltol@f1+1
  6193  0FA8  086B               	movf	comunicacao@position,w
  6194  0FA9  00A0               	movwf	___fltol@f1
  6195  0FAA  318B  2397  318F   	fcall	___fltol
  6196  0FAD  0020               	movlb	0	; select bank0
  6197  0FAE  3620               	lsrf	?___fltol,w
  6198  0FAF  397F               	andlw	127
  6199  0FB0  3880               	iorlw	128
  6200  0FB1  00E6               	movwf	??_comunicacao
  6201  0FB2  0866               	movf	??_comunicacao,w
  6202  0FB3  0022               	movlb	2	; select bank2
  6203  0FB4  00B1               	movwf	(_byte^(0+256)+1)
  6204  0FB5                     l3453:	
  6205                           
  6206                           ;main.c: 177:     byte[2] = 0x80 |((((uint8_t)speed)>>1)& 0x7F);
  6207  0FB5  0020               	movlb	0	; select bank0
  6208  0FB6  086A               	movf	comunicacao@speed+3,w
  6209  0FB7  00A3               	movwf	___fltol@f1+3
  6210  0FB8  0869               	movf	comunicacao@speed+2,w
  6211  0FB9  00A2               	movwf	___fltol@f1+2
  6212  0FBA  0868               	movf	comunicacao@speed+1,w
  6213  0FBB  00A1               	movwf	___fltol@f1+1
  6214  0FBC  0867               	movf	comunicacao@speed,w
  6215  0FBD  00A0               	movwf	___fltol@f1
  6216  0FBE  318B  2397  318F   	fcall	___fltol
  6217  0FC1  0020               	movlb	0	; select bank0
  6218  0FC2  3620               	lsrf	?___fltol,w
  6219  0FC3  397F               	andlw	127
  6220  0FC4  3880               	iorlw	128
  6221  0FC5  00E6               	movwf	??_comunicacao
  6222  0FC6  0866               	movf	??_comunicacao,w
  6223  0FC7  0022               	movlb	2	; select bank2
  6224  0FC8  00B2               	movwf	(_byte^(0+256)+2)
  6225  0FC9                     l3455:	
  6226                           
  6227                           ;main.c: 178:     byte[3] = 0x80 |((((uint8_t)I_m)>>1)& 0x7F);
  6228  0FC9  0021               	movlb	1	; select bank1
  6229  0FCA  0866               	movf	(_I_m+3)^(0+128),w
  6230  0FCB  0020               	movlb	0	; select bank0
  6231  0FCC  00A3               	movwf	___fltol@f1+3
  6232  0FCD  0021               	movlb	1	; select bank1
  6233  0FCE  0865               	movf	(_I_m+2)^(0+128),w
  6234  0FCF  0020               	movlb	0	; select bank0
  6235  0FD0  00A2               	movwf	___fltol@f1+2
  6236  0FD1  0021               	movlb	1	; select bank1
  6237  0FD2  0864               	movf	(_I_m+1)^(0+128),w
  6238  0FD3  0020               	movlb	0	; select bank0
  6239  0FD4  00A1               	movwf	___fltol@f1+1
  6240  0FD5  0021               	movlb	1	; select bank1
  6241  0FD6  0863               	movf	_I_m^(0+128),w
  6242  0FD7  0020               	movlb	0	; select bank0
  6243  0FD8  00A0               	movwf	___fltol@f1
  6244  0FD9  318B  2397  318F   	fcall	___fltol
  6245  0FDC  0020               	movlb	0	; select bank0
  6246  0FDD  3620               	lsrf	?___fltol,w
  6247  0FDE  397F               	andlw	127
  6248  0FDF  3880               	iorlw	128
  6249  0FE0  00E6               	movwf	??_comunicacao
  6250  0FE1  0866               	movf	??_comunicacao,w
  6251  0FE2  0022               	movlb	2	; select bank2
  6252  0FE3  00B3               	movwf	(_byte^(0+256)+3)
  6253  0FE4                     l3457:	
  6254                           
  6255                           ;main.c: 179:     byte[4] = 0x80 |((((uint8_t)temp_mt)>>1)& 0x7F);
  6256  0FE4  0021               	movlb	1	; select bank1
  6257  0FE5  0862               	movf	(_temp_mt+3)^(0+128),w
  6258  0FE6  0020               	movlb	0	; select bank0
  6259  0FE7  00A3               	movwf	___fltol@f1+3
  6260  0FE8  0021               	movlb	1	; select bank1
  6261  0FE9  0861               	movf	(_temp_mt+2)^(0+128),w
  6262  0FEA  0020               	movlb	0	; select bank0
  6263  0FEB  00A2               	movwf	___fltol@f1+2
  6264  0FEC  0021               	movlb	1	; select bank1
  6265  0FED  0860               	movf	(_temp_mt+1)^(0+128),w
  6266  0FEE  0020               	movlb	0	; select bank0
  6267  0FEF  00A1               	movwf	___fltol@f1+1
  6268  0FF0  0021               	movlb	1	; select bank1
  6269  0FF1  085F               	movf	_temp_mt^(0+128),w
  6270  0FF2  0020               	movlb	0	; select bank0
  6271  0FF3  00A0               	movwf	___fltol@f1
  6272  0FF4  318B  2397  318F   	fcall	___fltol
  6273  0FF7  0020               	movlb	0	; select bank0
  6274  0FF8  3620               	lsrf	?___fltol,w
  6275  0FF9  397F               	andlw	127
  6276  0FFA  3880               	iorlw	128
  6277  0FFB  00E6               	movwf	??_comunicacao
  6278  0FFC  0866               	movf	??_comunicacao,w
  6279  0FFD  0022               	movlb	2	; select bank2
  6280  0FFE  00B4               	movwf	(_byte^(0+256)+4)
  6281  0FFF                     l608:	
  6282  0FFF  0008               	return
  6283  1000                     __end_of_comunicacao:	
  6284                           
  6285                           	psect	text15
  6286  0D03                     __ptext15:	
  6287 ;; *************** function ___xxtofl *****************
  6288 ;; Defined at:
  6289 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  sign            1    wreg     unsigned char 
  6292 ;;  val             4    4[BANK0 ] long 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  sign            1   12[BANK0 ] unsigned char 
  6295 ;;  arg             4   14[BANK0 ] unsigned long 
  6296 ;;  exp             1   13[BANK0 ] unsigned char 
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  4    4[BANK0 ] unsigned char 
  6299 ;; Registers used:
  6300 ;;		wreg, status,2, status,0
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6306 ;;      Params:         0       4       0       0       0       0
  6307 ;;      Locals:         0       6       0       0       0       0
  6308 ;;      Temps:          0       4       0       0       0       0
  6309 ;;      Totals:         0      14       0       0       0       0
  6310 ;;Total ram usage:       14 bytes
  6311 ;; Hardware stack levels used:    1
  6312 ;; Hardware stack levels required when called:    4
  6313 ;; This function calls:
  6314 ;;		Nothing
  6315 ;; This function is called by:
  6316 ;;		_comunicacao
  6317 ;;		_controle
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           
  6322                           ;psect for function ___xxtofl
  6323  0D03                     ___xxtofl:	
  6324                           
  6325                           ;incstack = 0
  6326                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6327                           ;___xxtofl@sign stored from wreg
  6328  0D03  0020               	movlb	0	; select bank0
  6329  0D04  00AC               	movwf	___xxtofl@sign
  6330  0D05                     l2879:	
  6331  0D05  082C               	movf	___xxtofl@sign,w
  6332  0D06  1903               	btfsc	3,2
  6333  0D07  2D09               	goto	u2561
  6334  0D08  2D0A               	goto	u2560
  6335  0D09                     u2561:	
  6336  0D09  2D1E               	goto	l2885
  6337  0D0A                     u2560:	
  6338  0D0A                     l2881:	
  6339  0D0A  1FA7               	btfss	___xxtofl@val+3,7
  6340  0D0B  2D0D               	goto	u2571
  6341  0D0C  2D0E               	goto	u2570
  6342  0D0D                     u2571:	
  6343  0D0D  2D1E               	goto	l2885
  6344  0D0E                     u2570:	
  6345  0D0E                     l2883:	
  6346  0D0E  0924               	comf	___xxtofl@val,w
  6347  0D0F  00AE               	movwf	___xxtofl@arg
  6348  0D10  0925               	comf	___xxtofl@val+1,w
  6349  0D11  00AF               	movwf	___xxtofl@arg+1
  6350  0D12  0926               	comf	___xxtofl@val+2,w
  6351  0D13  00B0               	movwf	___xxtofl@arg+2
  6352  0D14  0927               	comf	___xxtofl@val+3,w
  6353  0D15  00B1               	movwf	___xxtofl@arg+3
  6354  0D16  0AAE               	incf	___xxtofl@arg,f
  6355  0D17  1903               	skipnz
  6356  0D18  0AAF               	incf	___xxtofl@arg+1,f
  6357  0D19  1903               	skipnz
  6358  0D1A  0AB0               	incf	___xxtofl@arg+2,f
  6359  0D1B  1903               	skipnz
  6360  0D1C  0AB1               	incf	___xxtofl@arg+3,f
  6361  0D1D  2D26               	goto	l1293
  6362  0D1E                     l2885:	
  6363  0D1E  0827               	movf	___xxtofl@val+3,w
  6364  0D1F  00B1               	movwf	___xxtofl@arg+3
  6365  0D20  0826               	movf	___xxtofl@val+2,w
  6366  0D21  00B0               	movwf	___xxtofl@arg+2
  6367  0D22  0825               	movf	___xxtofl@val+1,w
  6368  0D23  00AF               	movwf	___xxtofl@arg+1
  6369  0D24  0824               	movf	___xxtofl@val,w
  6370  0D25  00AE               	movwf	___xxtofl@arg
  6371  0D26                     l1293:	
  6372  0D26  0827               	movf	___xxtofl@val+3,w
  6373  0D27  0426               	iorwf	___xxtofl@val+2,w
  6374  0D28  0425               	iorwf	___xxtofl@val+1,w
  6375  0D29  0424               	iorwf	___xxtofl@val,w
  6376  0D2A  1D03               	skipz
  6377  0D2B  2D2D               	goto	u2581
  6378  0D2C  2D2E               	goto	u2580
  6379  0D2D                     u2581:	
  6380  0D2D  2D37               	goto	l2891
  6381  0D2E                     u2580:	
  6382  0D2E                     l2887:	
  6383  0D2E  3000               	movlw	0
  6384  0D2F  00A7               	movwf	?___xxtofl+3
  6385  0D30  3000               	movlw	0
  6386  0D31  00A6               	movwf	?___xxtofl+2
  6387  0D32  3000               	movlw	0
  6388  0D33  00A5               	movwf	?___xxtofl+1
  6389  0D34  3000               	movlw	0
  6390  0D35  00A4               	movwf	?___xxtofl
  6391  0D36  2DAF               	goto	l1295
  6392  0D37                     l2891:	
  6393  0D37  3096               	movlw	150
  6394  0D38  00A8               	movwf	??___xxtofl
  6395  0D39  0828               	movf	??___xxtofl,w
  6396  0D3A  00AD               	movwf	___xxtofl@exp
  6397  0D3B  2D47               	goto	l2895
  6398  0D3C                     l2893:	
  6399  0D3C  3001               	movlw	1
  6400  0D3D  00A8               	movwf	??___xxtofl
  6401  0D3E  0828               	movf	??___xxtofl,w
  6402  0D3F  07AD               	addwf	___xxtofl@exp,f
  6403  0D40  3001               	movlw	1
  6404  0D41                     u2595:	
  6405  0D41  36B1               	lsrf	___xxtofl@arg+3,f
  6406  0D42  0CB0               	rrf	___xxtofl@arg+2,f
  6407  0D43  0CAF               	rrf	___xxtofl@arg+1,f
  6408  0D44  0CAE               	rrf	___xxtofl@arg,f
  6409  0D45  0B89               	decfsz	9,f
  6410  0D46  2D41               	goto	u2595
  6411  0D47                     l2895:	
  6412  0D47  30FE               	movlw	254
  6413  0D48  0531               	andwf	___xxtofl@arg+3,w
  6414  0D49  1D03               	btfss	3,2
  6415  0D4A  2D4C               	goto	u2601
  6416  0D4B  2D4D               	goto	u2600
  6417  0D4C                     u2601:	
  6418  0D4C  2D3C               	goto	l2893
  6419  0D4D                     u2600:	
  6420  0D4D  2D61               	goto	l1299
  6421  0D4E                     l2897:	
  6422  0D4E  3001               	movlw	1
  6423  0D4F  00A8               	movwf	??___xxtofl
  6424  0D50  0828               	movf	??___xxtofl,w
  6425  0D51  07AD               	addwf	___xxtofl@exp,f
  6426  0D52                     l2899:	
  6427  0D52  3001               	movlw	1
  6428  0D53  07AE               	addwf	___xxtofl@arg,f
  6429  0D54  3000               	movlw	0
  6430  0D55  3DAF               	addwfc	___xxtofl@arg+1,f
  6431  0D56  3000               	movlw	0
  6432  0D57  3DB0               	addwfc	___xxtofl@arg+2,f
  6433  0D58  3000               	movlw	0
  6434  0D59  3DB1               	addwfc	___xxtofl@arg+3,f
  6435  0D5A                     l2901:	
  6436  0D5A  3001               	movlw	1
  6437  0D5B                     u2615:	
  6438  0D5B  36B1               	lsrf	___xxtofl@arg+3,f
  6439  0D5C  0CB0               	rrf	___xxtofl@arg+2,f
  6440  0D5D  0CAF               	rrf	___xxtofl@arg+1,f
  6441  0D5E  0CAE               	rrf	___xxtofl@arg,f
  6442  0D5F  0B89               	decfsz	9,f
  6443  0D60  2D5B               	goto	u2615
  6444  0D61                     l1299:	
  6445  0D61  30FF               	movlw	255
  6446  0D62  0531               	andwf	___xxtofl@arg+3,w
  6447  0D63  1D03               	btfss	3,2
  6448  0D64  2D66               	goto	u2621
  6449  0D65  2D67               	goto	u2620
  6450  0D66                     u2621:	
  6451  0D66  2D4E               	goto	l2897
  6452  0D67                     u2620:	
  6453  0D67  2D71               	goto	l2905
  6454  0D68                     l2903:	
  6455  0D68  3001               	movlw	1
  6456  0D69  02AD               	subwf	___xxtofl@exp,f
  6457  0D6A  3001               	movlw	1
  6458  0D6B                     u2635:	
  6459  0D6B  35AE               	lslf	___xxtofl@arg,f
  6460  0D6C  0DAF               	rlf	___xxtofl@arg+1,f
  6461  0D6D  0DB0               	rlf	___xxtofl@arg+2,f
  6462  0D6E  0DB1               	rlf	___xxtofl@arg+3,f
  6463  0D6F  0B89               	decfsz	9,f
  6464  0D70  2D6B               	goto	u2635
  6465  0D71                     l2905:	
  6466  0D71  1BB0               	btfsc	___xxtofl@arg+2,7
  6467  0D72  2D74               	goto	u2641
  6468  0D73  2D75               	goto	u2640
  6469  0D74                     u2641:	
  6470  0D74  2D7B               	goto	l1306
  6471  0D75                     u2640:	
  6472  0D75                     l2907:	
  6473  0D75  3002               	movlw	2
  6474  0D76  022D               	subwf	___xxtofl@exp,w
  6475  0D77  1803               	skipnc
  6476  0D78  2D7A               	goto	u2651
  6477  0D79  2D7B               	goto	u2650
  6478  0D7A                     u2651:	
  6479  0D7A  2D68               	goto	l2903
  6480  0D7B                     u2650:	
  6481  0D7B                     l1306:	
  6482  0D7B  182D               	btfsc	___xxtofl@exp,0
  6483  0D7C  2D7E               	goto	u2661
  6484  0D7D  2D7F               	goto	u2660
  6485  0D7E                     u2661:	
  6486  0D7E  2D87               	goto	l1307
  6487  0D7F                     u2660:	
  6488  0D7F                     l2909:	
  6489  0D7F  30FF               	movlw	255
  6490  0D80  05AE               	andwf	___xxtofl@arg,f
  6491  0D81  30FF               	movlw	255
  6492  0D82  05AF               	andwf	___xxtofl@arg+1,f
  6493  0D83  307F               	movlw	127
  6494  0D84  05B0               	andwf	___xxtofl@arg+2,f
  6495  0D85  30FF               	movlw	255
  6496  0D86  05B1               	andwf	___xxtofl@arg+3,f
  6497  0D87                     l1307:	
  6498  0D87  1003               	clrc
  6499  0D88  0CAD               	rrf	___xxtofl@exp,f
  6500  0D89                     l2911:	
  6501  0D89  082D               	movf	___xxtofl@exp,w
  6502  0D8A  00A8               	movwf	??___xxtofl
  6503  0D8B  01A9               	clrf	??___xxtofl+1
  6504  0D8C  01AA               	clrf	??___xxtofl+2
  6505  0D8D  01AB               	clrf	??___xxtofl+3
  6506  0D8E  3018               	movlw	24
  6507  0D8F                     u2675:	
  6508  0D8F  35A8               	lslf	??___xxtofl,f
  6509  0D90  0DA9               	rlf	??___xxtofl+1,f
  6510  0D91  0DAA               	rlf	??___xxtofl+2,f
  6511  0D92  0DAB               	rlf	??___xxtofl+3,f
  6512  0D93                     u2670:	
  6513  0D93  0B89               	decfsz	9,f
  6514  0D94  2D8F               	goto	u2675
  6515  0D95  0828               	movf	??___xxtofl,w
  6516  0D96  04AE               	iorwf	___xxtofl@arg,f
  6517  0D97  0829               	movf	??___xxtofl+1,w
  6518  0D98  04AF               	iorwf	___xxtofl@arg+1,f
  6519  0D99  082A               	movf	??___xxtofl+2,w
  6520  0D9A  04B0               	iorwf	___xxtofl@arg+2,f
  6521  0D9B  082B               	movf	??___xxtofl+3,w
  6522  0D9C  04B1               	iorwf	___xxtofl@arg+3,f
  6523  0D9D                     l2913:	
  6524  0D9D  082C               	movf	___xxtofl@sign,w
  6525  0D9E  1903               	btfsc	3,2
  6526  0D9F  2DA1               	goto	u2681
  6527  0DA0  2DA2               	goto	u2680
  6528  0DA1                     u2681:	
  6529  0DA1  2DA7               	goto	l2919
  6530  0DA2                     u2680:	
  6531  0DA2                     l2915:	
  6532  0DA2  1FA7               	btfss	___xxtofl@val+3,7
  6533  0DA3  2DA5               	goto	u2691
  6534  0DA4  2DA6               	goto	u2690
  6535  0DA5                     u2691:	
  6536  0DA5  2DA7               	goto	l2919
  6537  0DA6                     u2690:	
  6538  0DA6                     l2917:	
  6539  0DA6  17B1               	bsf	___xxtofl@arg+3,7
  6540  0DA7                     l2919:	
  6541  0DA7  0831               	movf	___xxtofl@arg+3,w
  6542  0DA8  00A7               	movwf	?___xxtofl+3
  6543  0DA9  0830               	movf	___xxtofl@arg+2,w
  6544  0DAA  00A6               	movwf	?___xxtofl+2
  6545  0DAB  082F               	movf	___xxtofl@arg+1,w
  6546  0DAC  00A5               	movwf	?___xxtofl+1
  6547  0DAD  082E               	movf	___xxtofl@arg,w
  6548  0DAE  00A4               	movwf	?___xxtofl
  6549  0DAF                     l1295:	
  6550  0DAF  0008               	return
  6551  0DB0                     __end_of___xxtofl:	
  6552                           
  6553                           	psect	text16
  6554  0B97                     __ptext16:	
  6555 ;; *************** function ___fltol *****************
  6556 ;; Defined at:
  6557 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;  f1              4    0[BANK0 ] unsigned char 
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;  exp1            1   10[BANK0 ] unsigned char 
  6562 ;;  sign1           1    9[BANK0 ] unsigned char 
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  4    0[BANK0 ] long 
  6565 ;; Registers used:
  6566 ;;		wreg, status,2, status,0
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6572 ;;      Params:         0       4       0       0       0       0
  6573 ;;      Locals:         0       2       0       0       0       0
  6574 ;;      Temps:          0       5       0       0       0       0
  6575 ;;      Totals:         0      11       0       0       0       0
  6576 ;;Total ram usage:       11 bytes
  6577 ;; Hardware stack levels used:    1
  6578 ;; Hardware stack levels required when called:    4
  6579 ;; This function calls:
  6580 ;;		Nothing
  6581 ;; This function is called by:
  6582 ;;		_comunicacao
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           
  6587                           ;psect for function ___fltol
  6588  0B97                     ___fltol:	
  6589  0B97                     l3241:	
  6590                           ;incstack = 0
  6591                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6592                           
  6593  0B97  1003               	clrc
  6594  0B98  0020               	movlb	0	; select bank0
  6595  0B99  0D22               	rlf	___fltol@f1+2,w
  6596  0B9A  0D23               	rlf	___fltol@f1+3,w
  6597  0B9B  00A4               	movwf	??___fltol
  6598  0B9C  0824               	movf	??___fltol,w
  6599  0B9D  00AA               	movwf	___fltol@exp1
  6600  0B9E  082A               	movf	___fltol@exp1,w
  6601  0B9F  1D03               	btfss	3,2
  6602  0BA0  2BA2               	goto	u3001
  6603  0BA1  2BA3               	goto	u3000
  6604  0BA2                     u3001:	
  6605  0BA2  2BAC               	goto	l3247
  6606  0BA3                     u3000:	
  6607  0BA3                     l3243:	
  6608  0BA3  3000               	movlw	0
  6609  0BA4  00A3               	movwf	?___fltol+3
  6610  0BA5  3000               	movlw	0
  6611  0BA6  00A2               	movwf	?___fltol+2
  6612  0BA7  3000               	movlw	0
  6613  0BA8  00A1               	movwf	?___fltol+1
  6614  0BA9  3000               	movlw	0
  6615  0BAA  00A0               	movwf	?___fltol
  6616  0BAB  2C0B               	goto	l1052
  6617  0BAC                     l3247:	
  6618  0BAC  0820               	movf	___fltol@f1,w
  6619  0BAD  00A4               	movwf	??___fltol
  6620  0BAE  0821               	movf	___fltol@f1+1,w
  6621  0BAF  00A5               	movwf	??___fltol+1
  6622  0BB0  0822               	movf	___fltol@f1+2,w
  6623  0BB1  00A6               	movwf	??___fltol+2
  6624  0BB2  0823               	movf	___fltol@f1+3,w
  6625  0BB3  00A7               	movwf	??___fltol+3
  6626  0BB4  301F               	movlw	31
  6627  0BB5                     u3015:	
  6628  0BB5  36A7               	lsrf	??___fltol+3,f
  6629  0BB6  0CA6               	rrf	??___fltol+2,f
  6630  0BB7  0CA5               	rrf	??___fltol+1,f
  6631  0BB8  0CA4               	rrf	??___fltol,f
  6632  0BB9                     u3010:	
  6633  0BB9  0B89               	decfsz	9,f
  6634  0BBA  2BB5               	goto	u3015
  6635  0BBB  0824               	movf	??___fltol,w
  6636  0BBC  00A8               	movwf	??___fltol+4
  6637  0BBD  0828               	movf	??___fltol+4,w
  6638  0BBE  00A9               	movwf	___fltol@sign1
  6639  0BBF                     l3249:	
  6640  0BBF  17A2               	bsf	___fltol@f1+2,7
  6641  0BC0                     l3251:	
  6642  0BC0  30FF               	movlw	255
  6643  0BC1  05A0               	andwf	___fltol@f1,f
  6644  0BC2  30FF               	movlw	255
  6645  0BC3  05A1               	andwf	___fltol@f1+1,f
  6646  0BC4  30FF               	movlw	255
  6647  0BC5  05A2               	andwf	___fltol@f1+2,f
  6648  0BC6  3000               	movlw	0
  6649  0BC7  05A3               	andwf	___fltol@f1+3,f
  6650  0BC8                     l3253:	
  6651  0BC8  3096               	movlw	150
  6652  0BC9  02AA               	subwf	___fltol@exp1,f
  6653  0BCA                     l3255:	
  6654  0BCA  1FAA               	btfss	___fltol@exp1,7
  6655  0BCB  2BCD               	goto	u3021
  6656  0BCC  2BCE               	goto	u3020
  6657  0BCD                     u3021:	
  6658  0BCD  2BE6               	goto	l3265
  6659  0BCE                     u3020:	
  6660  0BCE                     l3257:	
  6661  0BCE  082A               	movf	___fltol@exp1,w
  6662  0BCF  3A80               	xorlw	128
  6663  0BD0  3E97               	addlw	151
  6664  0BD1  1803               	skipnc
  6665  0BD2  2BD4               	goto	u3031
  6666  0BD3  2BD5               	goto	u3030
  6667  0BD4                     u3031:	
  6668  0BD4  2BD6               	goto	l3263
  6669  0BD5                     u3030:	
  6670  0BD5  2BA3               	goto	l3243
  6671  0BD6                     l3263:	
  6672  0BD6  3001               	movlw	1
  6673  0BD7                     u3045:	
  6674  0BD7  36A3               	lsrf	___fltol@f1+3,f
  6675  0BD8  0CA2               	rrf	___fltol@f1+2,f
  6676  0BD9  0CA1               	rrf	___fltol@f1+1,f
  6677  0BDA  0CA0               	rrf	___fltol@f1,f
  6678  0BDB  0B89               	decfsz	9,f
  6679  0BDC  2BD7               	goto	u3045
  6680  0BDD  3001               	movlw	1
  6681  0BDE  00A4               	movwf	??___fltol
  6682  0BDF  0824               	movf	??___fltol,w
  6683  0BE0  07AA               	addwf	___fltol@exp1,f
  6684  0BE1  1D03               	btfss	3,2
  6685  0BE2  2BE4               	goto	u3051
  6686  0BE3  2BE5               	goto	u3050
  6687  0BE4                     u3051:	
  6688  0BE4  2BD6               	goto	l3263
  6689  0BE5                     u3050:	
  6690  0BE5  2BFB               	goto	l3273
  6691  0BE6                     l3265:	
  6692  0BE6  3020               	movlw	32
  6693  0BE7  022A               	subwf	___fltol@exp1,w
  6694  0BE8  1C03               	skipc
  6695  0BE9  2BEB               	goto	u3061
  6696  0BEA  2BEC               	goto	u3060
  6697  0BEB                     u3061:	
  6698  0BEB  2BF6               	goto	l1059
  6699  0BEC                     u3060:	
  6700  0BEC  2BA3               	goto	l3243
  6701  0BED                     l3271:	
  6702  0BED  3001               	movlw	1
  6703  0BEE                     u3075:	
  6704  0BEE  35A0               	lslf	___fltol@f1,f
  6705  0BEF  0DA1               	rlf	___fltol@f1+1,f
  6706  0BF0  0DA2               	rlf	___fltol@f1+2,f
  6707  0BF1  0DA3               	rlf	___fltol@f1+3,f
  6708  0BF2  0B89               	decfsz	9,f
  6709  0BF3  2BEE               	goto	u3075
  6710  0BF4  3001               	movlw	1
  6711  0BF5  02AA               	subwf	___fltol@exp1,f
  6712  0BF6                     l1059:	
  6713  0BF6  082A               	movf	___fltol@exp1,w
  6714  0BF7  1D03               	btfss	3,2
  6715  0BF8  2BFA               	goto	u3081
  6716  0BF9  2BFB               	goto	u3080
  6717  0BFA                     u3081:	
  6718  0BFA  2BED               	goto	l3271
  6719  0BFB                     u3080:	
  6720  0BFB                     l3273:	
  6721  0BFB  0829               	movf	___fltol@sign1,w
  6722  0BFC  1903               	btfsc	3,2
  6723  0BFD  2BFF               	goto	u3091
  6724  0BFE  2C00               	goto	u3090
  6725  0BFF                     u3091:	
  6726  0BFF  2C0B               	goto	l1062
  6727  0C00                     u3090:	
  6728  0C00                     l3275:	
  6729  0C00  09A0               	comf	___fltol@f1,f
  6730  0C01  09A1               	comf	___fltol@f1+1,f
  6731  0C02  09A2               	comf	___fltol@f1+2,f
  6732  0C03  09A3               	comf	___fltol@f1+3,f
  6733  0C04  0AA0               	incf	___fltol@f1,f
  6734  0C05  1903               	skipnz
  6735  0C06  0AA1               	incf	___fltol@f1+1,f
  6736  0C07  1903               	skipnz
  6737  0C08  0AA2               	incf	___fltol@f1+2,f
  6738  0C09  1903               	skipnz
  6739  0C0A  0AA3               	incf	___fltol@f1+3,f
  6740  0C0B                     l1062:	
  6741  0C0B                     l1052:	
  6742  0C0B  0008               	return
  6743  0C0C                     __end_of___fltol:	
  6744                           
  6745                           	psect	text17
  6746  0051                     __ptext17:	
  6747 ;; *************** function ___flmul *****************
  6748 ;; Defined at:
  6749 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  b               4   18[BANK0 ] long 
  6752 ;;  a               4   22[BANK0 ] long 
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;  prod            4   38[BANK0 ] struct .
  6755 ;;  grs             4   32[BANK0 ] unsigned long 
  6756 ;;  temp            2   42[BANK0 ] struct .
  6757 ;;  bexp            1   37[BANK0 ] unsigned char 
  6758 ;;  aexp            1   36[BANK0 ] unsigned char 
  6759 ;;  sign            1   31[BANK0 ] unsigned char 
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  4   18[BANK0 ] unsigned char 
  6762 ;; Registers used:
  6763 ;;		wreg, status,2, status,0, pclath, cstack
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6769 ;;      Params:         0       8       0       0       0       0
  6770 ;;      Locals:         0      13       0       0       0       0
  6771 ;;      Temps:          0       5       0       0       0       0
  6772 ;;      Totals:         0      26       0       0       0       0
  6773 ;;Total ram usage:       26 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; Hardware stack levels required when called:    5
  6776 ;; This function calls:
  6777 ;;		__Umul8_16
  6778 ;; This function is called by:
  6779 ;;		_comunicacao
  6780 ;;		_controle
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           
  6785                           ;psect for function ___flmul
  6786  0051                     ___flmul:	
  6787  0051                     l2739:	
  6788                           ;incstack = 0
  6789                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  6790                           
  6791  0051  0020               	movlb	0	; select bank0
  6792  0052  0835               	movf	___flmul@b+3,w
  6793  0053  3980               	andlw	128
  6794  0054  00BA               	movwf	??___flmul
  6795  0055  083A               	movf	??___flmul,w
  6796  0056  00BF               	movwf	___flmul@sign
  6797  0057                     l2741:	
  6798  0057  3535               	lslf	___flmul@b+3,w
  6799  0058  00BA               	movwf	??___flmul
  6800  0059  083A               	movf	??___flmul,w
  6801  005A  00C5               	movwf	___flmul@bexp
  6802  005B                     l2743:	
  6803  005B  1FB4               	btfss	___flmul@b+2,7
  6804  005C  285E               	goto	u2301
  6805  005D  285F               	goto	u2300
  6806  005E                     u2301:	
  6807  005E  2860               	goto	l2747
  6808  005F                     u2300:	
  6809  005F                     l2745:	
  6810  005F  1445               	bsf	___flmul@bexp,0
  6811  0060                     l2747:	
  6812  0060  0845               	movf	___flmul@bexp,w
  6813  0061  1903               	btfsc	3,2
  6814  0062  2864               	goto	u2311
  6815  0063  2865               	goto	u2310
  6816  0064                     u2311:	
  6817  0064  2874               	goto	l2755
  6818  0065                     u2310:	
  6819  0065                     l2749:	
  6820  0065  0A45               	incf	___flmul@bexp,w
  6821  0066  1D03               	btfss	3,2
  6822  0067  2869               	goto	u2321
  6823  0068  286A               	goto	u2320
  6824  0069                     u2321:	
  6825  0069  2872               	goto	l2753
  6826  006A                     u2320:	
  6827  006A                     l2751:	
  6828  006A  3000               	movlw	0
  6829  006B  00B5               	movwf	___flmul@b+3
  6830  006C  3000               	movlw	0
  6831  006D  00B4               	movwf	___flmul@b+2
  6832  006E  3000               	movlw	0
  6833  006F  00B3               	movwf	___flmul@b+1
  6834  0070  3000               	movlw	0
  6835  0071  00B2               	movwf	___flmul@b
  6836  0072                     l2753:	
  6837  0072  17B4               	bsf	___flmul@b+2,7
  6838  0073  287C               	goto	l2757
  6839  0074                     l2755:	
  6840  0074  3000               	movlw	0
  6841  0075  00B5               	movwf	___flmul@b+3
  6842  0076  3000               	movlw	0
  6843  0077  00B4               	movwf	___flmul@b+2
  6844  0078  3000               	movlw	0
  6845  0079  00B3               	movwf	___flmul@b+1
  6846  007A  3000               	movlw	0
  6847  007B  00B2               	movwf	___flmul@b
  6848  007C                     l2757:	
  6849  007C  0839               	movf	___flmul@a+3,w
  6850  007D  3980               	andlw	128
  6851  007E  00BA               	movwf	??___flmul
  6852  007F  083A               	movf	??___flmul,w
  6853  0080  06BF               	xorwf	___flmul@sign,f
  6854  0081                     l2759:	
  6855  0081  3539               	lslf	___flmul@a+3,w
  6856  0082  00BA               	movwf	??___flmul
  6857  0083  083A               	movf	??___flmul,w
  6858  0084  00C4               	movwf	___flmul@aexp
  6859  0085                     l2761:	
  6860  0085  1FB8               	btfss	___flmul@a+2,7
  6861  0086  2888               	goto	u2331
  6862  0087  2889               	goto	u2330
  6863  0088                     u2331:	
  6864  0088  288A               	goto	l2765
  6865  0089                     u2330:	
  6866  0089                     l2763:	
  6867  0089  1444               	bsf	___flmul@aexp,0
  6868  008A                     l2765:	
  6869  008A  0844               	movf	___flmul@aexp,w
  6870  008B  1903               	btfsc	3,2
  6871  008C  288E               	goto	u2341
  6872  008D  288F               	goto	u2340
  6873  008E                     u2341:	
  6874  008E  289E               	goto	l2773
  6875  008F                     u2340:	
  6876  008F                     l2767:	
  6877  008F  0A44               	incf	___flmul@aexp,w
  6878  0090  1D03               	btfss	3,2
  6879  0091  2893               	goto	u2351
  6880  0092  2894               	goto	u2350
  6881  0093                     u2351:	
  6882  0093  289C               	goto	l2771
  6883  0094                     u2350:	
  6884  0094                     l2769:	
  6885  0094  3000               	movlw	0
  6886  0095  00B9               	movwf	___flmul@a+3
  6887  0096  3000               	movlw	0
  6888  0097  00B8               	movwf	___flmul@a+2
  6889  0098  3000               	movlw	0
  6890  0099  00B7               	movwf	___flmul@a+1
  6891  009A  3000               	movlw	0
  6892  009B  00B6               	movwf	___flmul@a
  6893  009C                     l2771:	
  6894  009C  17B8               	bsf	___flmul@a+2,7
  6895  009D  28A6               	goto	l2775
  6896  009E                     l2773:	
  6897  009E  3000               	movlw	0
  6898  009F  00B9               	movwf	___flmul@a+3
  6899  00A0  3000               	movlw	0
  6900  00A1  00B8               	movwf	___flmul@a+2
  6901  00A2  3000               	movlw	0
  6902  00A3  00B7               	movwf	___flmul@a+1
  6903  00A4  3000               	movlw	0
  6904  00A5  00B6               	movwf	___flmul@a
  6905  00A6                     l2775:	
  6906  00A6  0844               	movf	___flmul@aexp,w
  6907  00A7  1903               	btfsc	3,2
  6908  00A8  28AA               	goto	u2361
  6909  00A9  28AB               	goto	u2360
  6910  00AA                     u2361:	
  6911  00AA  28B0               	goto	l2779
  6912  00AB                     u2360:	
  6913  00AB                     l2777:	
  6914  00AB  0845               	movf	___flmul@bexp,w
  6915  00AC  1D03               	btfss	3,2
  6916  00AD  28AF               	goto	u2371
  6917  00AE  28B0               	goto	u2370
  6918  00AF                     u2371:	
  6919  00AF  28B9               	goto	l2783
  6920  00B0                     u2370:	
  6921  00B0                     l2779:	
  6922  00B0  3000               	movlw	0
  6923  00B1  00B5               	movwf	?___flmul+3
  6924  00B2  3000               	movlw	0
  6925  00B3  00B4               	movwf	?___flmul+2
  6926  00B4  3000               	movlw	0
  6927  00B5  00B3               	movwf	?___flmul+1
  6928  00B6  3000               	movlw	0
  6929  00B7  00B2               	movwf	?___flmul
  6930  00B8  2AA7               	goto	l1255
  6931  00B9                     l2783:	
  6932  00B9  0832               	movf	___flmul@b,w
  6933  00BA  00BA               	movwf	??___flmul
  6934  00BB  083A               	movf	??___flmul,w
  6935  00BC  00A0               	movwf	__Umul8_16@multiplicand
  6936  00BD  0838               	movf	___flmul@a+2,w
  6937  00BE  318A  2297  3180   	fcall	__Umul8_16
  6938  00C1  0020               	movlb	0	; select bank0
  6939  00C2  0821               	movf	?__Umul8_16+1,w
  6940  00C3  00CB               	movwf	___flmul@temp+1
  6941  00C4  0820               	movf	?__Umul8_16,w
  6942  00C5  00CA               	movwf	___flmul@temp
  6943  00C6                     l2785:	
  6944  00C6  084A               	movf	___flmul@temp,w
  6945  00C7  00BA               	movwf	??___flmul
  6946  00C8  01BB               	clrf	??___flmul+1
  6947  00C9  01BC               	clrf	??___flmul+2
  6948  00CA  01BD               	clrf	??___flmul+3
  6949  00CB  083D               	movf	??___flmul+3,w
  6950  00CC  00C3               	movwf	___flmul@grs+3
  6951  00CD  083C               	movf	??___flmul+2,w
  6952  00CE  00C2               	movwf	___flmul@grs+2
  6953  00CF  083B               	movf	??___flmul+1,w
  6954  00D0  00C1               	movwf	___flmul@grs+1
  6955  00D1  083A               	movf	??___flmul,w
  6956  00D2  00C0               	movwf	___flmul@grs
  6957  00D3                     l2787:	
  6958  00D3  084B               	movf	___flmul@temp+1,w
  6959  00D4  00BA               	movwf	??___flmul
  6960  00D5  01BB               	clrf	??___flmul+1
  6961  00D6  01BC               	clrf	??___flmul+2
  6962  00D7  01BD               	clrf	??___flmul+3
  6963  00D8  083D               	movf	??___flmul+3,w
  6964  00D9  00C9               	movwf	___flmul@prod+3
  6965  00DA  083C               	movf	??___flmul+2,w
  6966  00DB  00C8               	movwf	___flmul@prod+2
  6967  00DC  083B               	movf	??___flmul+1,w
  6968  00DD  00C7               	movwf	___flmul@prod+1
  6969  00DE  083A               	movf	??___flmul,w
  6970  00DF  00C6               	movwf	___flmul@prod
  6971  00E0  0833               	movf	___flmul@b+1,w
  6972  00E1  00BA               	movwf	??___flmul
  6973  00E2  083A               	movf	??___flmul,w
  6974  00E3  00A0               	movwf	__Umul8_16@multiplicand
  6975  00E4  0837               	movf	___flmul@a+1,w
  6976  00E5  318A  2297  3180   	fcall	__Umul8_16
  6977  00E8  0020               	movlb	0	; select bank0
  6978  00E9  0821               	movf	?__Umul8_16+1,w
  6979  00EA  00CB               	movwf	___flmul@temp+1
  6980  00EB  0820               	movf	?__Umul8_16,w
  6981  00EC  00CA               	movwf	___flmul@temp
  6982  00ED                     l2789:	
  6983  00ED  084A               	movf	___flmul@temp,w
  6984  00EE  00BA               	movwf	??___flmul
  6985  00EF  01BB               	clrf	??___flmul+1
  6986  00F0  01BC               	clrf	??___flmul+2
  6987  00F1  01BD               	clrf	??___flmul+3
  6988  00F2  083A               	movf	??___flmul,w
  6989  00F3  07C0               	addwf	___flmul@grs,f
  6990  00F4  083B               	movf	??___flmul+1,w
  6991  00F5  3DC1               	addwfc	___flmul@grs+1,f
  6992  00F6  083C               	movf	??___flmul+2,w
  6993  00F7  3DC2               	addwfc	___flmul@grs+2,f
  6994  00F8  083D               	movf	??___flmul+3,w
  6995  00F9  3DC3               	addwfc	___flmul@grs+3,f
  6996  00FA                     l2791:	
  6997  00FA  084B               	movf	___flmul@temp+1,w
  6998  00FB  00BA               	movwf	??___flmul
  6999  00FC  01BB               	clrf	??___flmul+1
  7000  00FD  01BC               	clrf	??___flmul+2
  7001  00FE  01BD               	clrf	??___flmul+3
  7002  00FF  083A               	movf	??___flmul,w
  7003  0100  07C6               	addwf	___flmul@prod,f
  7004  0101  083B               	movf	??___flmul+1,w
  7005  0102  3DC7               	addwfc	___flmul@prod+1,f
  7006  0103  083C               	movf	??___flmul+2,w
  7007  0104  3DC8               	addwfc	___flmul@prod+2,f
  7008  0105  083D               	movf	??___flmul+3,w
  7009  0106  3DC9               	addwfc	___flmul@prod+3,f
  7010  0107  0834               	movf	___flmul@b+2,w
  7011  0108  00BA               	movwf	??___flmul
  7012  0109  083A               	movf	??___flmul,w
  7013  010A  00A0               	movwf	__Umul8_16@multiplicand
  7014  010B  0836               	movf	___flmul@a,w
  7015  010C  318A  2297  3180   	fcall	__Umul8_16
  7016  010F  0020               	movlb	0	; select bank0
  7017  0110  0821               	movf	?__Umul8_16+1,w
  7018  0111  00CB               	movwf	___flmul@temp+1
  7019  0112  0820               	movf	?__Umul8_16,w
  7020  0113  00CA               	movwf	___flmul@temp
  7021  0114                     l2793:	
  7022  0114  084A               	movf	___flmul@temp,w
  7023  0115  00BA               	movwf	??___flmul
  7024  0116  01BB               	clrf	??___flmul+1
  7025  0117  01BC               	clrf	??___flmul+2
  7026  0118  01BD               	clrf	??___flmul+3
  7027  0119  083A               	movf	??___flmul,w
  7028  011A  07C0               	addwf	___flmul@grs,f
  7029  011B  083B               	movf	??___flmul+1,w
  7030  011C  3DC1               	addwfc	___flmul@grs+1,f
  7031  011D  083C               	movf	??___flmul+2,w
  7032  011E  3DC2               	addwfc	___flmul@grs+2,f
  7033  011F  083D               	movf	??___flmul+3,w
  7034  0120  3DC3               	addwfc	___flmul@grs+3,f
  7035  0121                     l2795:	
  7036  0121  084B               	movf	___flmul@temp+1,w
  7037  0122  00BA               	movwf	??___flmul
  7038  0123  01BB               	clrf	??___flmul+1
  7039  0124  01BC               	clrf	??___flmul+2
  7040  0125  01BD               	clrf	??___flmul+3
  7041  0126  083A               	movf	??___flmul,w
  7042  0127  07C6               	addwf	___flmul@prod,f
  7043  0128  083B               	movf	??___flmul+1,w
  7044  0129  3DC7               	addwfc	___flmul@prod+1,f
  7045  012A  083C               	movf	??___flmul+2,w
  7046  012B  3DC8               	addwfc	___flmul@prod+2,f
  7047  012C  083D               	movf	??___flmul+3,w
  7048  012D  3DC9               	addwfc	___flmul@prod+3,f
  7049  012E                     l2797:	
  7050  012E  3008               	movlw	8
  7051  012F                     u2385:	
  7052  012F  35C0               	lslf	___flmul@grs,f
  7053  0130  0DC1               	rlf	___flmul@grs+1,f
  7054  0131  0DC2               	rlf	___flmul@grs+2,f
  7055  0132  0DC3               	rlf	___flmul@grs+3,f
  7056  0133  0B89               	decfsz	9,f
  7057  0134  292F               	goto	u2385
  7058  0135                     l2799:	
  7059  0135  0833               	movf	___flmul@b+1,w
  7060  0136  00BA               	movwf	??___flmul
  7061  0137  083A               	movf	??___flmul,w
  7062  0138  00A0               	movwf	__Umul8_16@multiplicand
  7063  0139  0836               	movf	___flmul@a,w
  7064  013A  318A  2297  3180   	fcall	__Umul8_16
  7065  013D  0020               	movlb	0	; select bank0
  7066  013E  0821               	movf	?__Umul8_16+1,w
  7067  013F  00CB               	movwf	___flmul@temp+1
  7068  0140  0820               	movf	?__Umul8_16,w
  7069  0141  00CA               	movwf	___flmul@temp
  7070  0142                     l2801:	
  7071  0142  084A               	movf	___flmul@temp,w
  7072  0143  07C0               	addwf	___flmul@grs,f
  7073  0144  084B               	movf	___flmul@temp+1,w
  7074  0145  3DC1               	addwfc	___flmul@grs+1,f
  7075  0146  3000               	movlw	0
  7076  0147  3DC2               	addwfc	___flmul@grs+2,f
  7077  0148  3DC3               	addwfc	___flmul@grs+3,f
  7078  0149                     l2803:	
  7079  0149  0832               	movf	___flmul@b,w
  7080  014A  00BA               	movwf	??___flmul
  7081  014B  083A               	movf	??___flmul,w
  7082  014C  00A0               	movwf	__Umul8_16@multiplicand
  7083  014D  0837               	movf	___flmul@a+1,w
  7084  014E  318A  2297  3180   	fcall	__Umul8_16
  7085  0151  0020               	movlb	0	; select bank0
  7086  0152  0821               	movf	?__Umul8_16+1,w
  7087  0153  00CB               	movwf	___flmul@temp+1
  7088  0154  0820               	movf	?__Umul8_16,w
  7089  0155  00CA               	movwf	___flmul@temp
  7090  0156                     l2805:	
  7091  0156  084A               	movf	___flmul@temp,w
  7092  0157  07C0               	addwf	___flmul@grs,f
  7093  0158  084B               	movf	___flmul@temp+1,w
  7094  0159  3DC1               	addwfc	___flmul@grs+1,f
  7095  015A  3000               	movlw	0
  7096  015B  3DC2               	addwfc	___flmul@grs+2,f
  7097  015C  3DC3               	addwfc	___flmul@grs+3,f
  7098  015D                     l2807:	
  7099  015D  3008               	movlw	8
  7100  015E                     u2395:	
  7101  015E  35C0               	lslf	___flmul@grs,f
  7102  015F  0DC1               	rlf	___flmul@grs+1,f
  7103  0160  0DC2               	rlf	___flmul@grs+2,f
  7104  0161  0DC3               	rlf	___flmul@grs+3,f
  7105  0162  0B89               	decfsz	9,f
  7106  0163  295E               	goto	u2395
  7107  0164  0832               	movf	___flmul@b,w
  7108  0165  00BA               	movwf	??___flmul
  7109  0166  083A               	movf	??___flmul,w
  7110  0167  00A0               	movwf	__Umul8_16@multiplicand
  7111  0168  0836               	movf	___flmul@a,w
  7112  0169  318A  2297  3180   	fcall	__Umul8_16
  7113  016C  0020               	movlb	0	; select bank0
  7114  016D  0821               	movf	?__Umul8_16+1,w
  7115  016E  00CB               	movwf	___flmul@temp+1
  7116  016F  0820               	movf	?__Umul8_16,w
  7117  0170  00CA               	movwf	___flmul@temp
  7118  0171                     l2809:	
  7119  0171  084A               	movf	___flmul@temp,w
  7120  0172  07C0               	addwf	___flmul@grs,f
  7121  0173  084B               	movf	___flmul@temp+1,w
  7122  0174  3DC1               	addwfc	___flmul@grs+1,f
  7123  0175  3000               	movlw	0
  7124  0176  3DC2               	addwfc	___flmul@grs+2,f
  7125  0177  3DC3               	addwfc	___flmul@grs+3,f
  7126  0178                     l2811:	
  7127  0178  0833               	movf	___flmul@b+1,w
  7128  0179  00BA               	movwf	??___flmul
  7129  017A  083A               	movf	??___flmul,w
  7130  017B  00A0               	movwf	__Umul8_16@multiplicand
  7131  017C  0838               	movf	___flmul@a+2,w
  7132  017D  318A  2297  3180   	fcall	__Umul8_16
  7133  0180  0020               	movlb	0	; select bank0
  7134  0181  0821               	movf	?__Umul8_16+1,w
  7135  0182  00CB               	movwf	___flmul@temp+1
  7136  0183  0820               	movf	?__Umul8_16,w
  7137  0184  00CA               	movwf	___flmul@temp
  7138  0185  084A               	movf	___flmul@temp,w
  7139  0186  07C6               	addwf	___flmul@prod,f
  7140  0187  084B               	movf	___flmul@temp+1,w
  7141  0188  3DC7               	addwfc	___flmul@prod+1,f
  7142  0189  3000               	movlw	0
  7143  018A  3DC8               	addwfc	___flmul@prod+2,f
  7144  018B  3DC9               	addwfc	___flmul@prod+3,f
  7145  018C                     l2813:	
  7146  018C  0834               	movf	___flmul@b+2,w
  7147  018D  00BA               	movwf	??___flmul
  7148  018E  083A               	movf	??___flmul,w
  7149  018F  00A0               	movwf	__Umul8_16@multiplicand
  7150  0190  0837               	movf	___flmul@a+1,w
  7151  0191  318A  2297  3180   	fcall	__Umul8_16
  7152  0194  0020               	movlb	0	; select bank0
  7153  0195  0821               	movf	?__Umul8_16+1,w
  7154  0196  00CB               	movwf	___flmul@temp+1
  7155  0197  0820               	movf	?__Umul8_16,w
  7156  0198  00CA               	movwf	___flmul@temp
  7157  0199                     l2815:	
  7158  0199  084A               	movf	___flmul@temp,w
  7159  019A  07C6               	addwf	___flmul@prod,f
  7160  019B  084B               	movf	___flmul@temp+1,w
  7161  019C  3DC7               	addwfc	___flmul@prod+1,f
  7162  019D  3000               	movlw	0
  7163  019E  3DC8               	addwfc	___flmul@prod+2,f
  7164  019F  3DC9               	addwfc	___flmul@prod+3,f
  7165  01A0  0834               	movf	___flmul@b+2,w
  7166  01A1  00BA               	movwf	??___flmul
  7167  01A2  083A               	movf	??___flmul,w
  7168  01A3  00A0               	movwf	__Umul8_16@multiplicand
  7169  01A4  0838               	movf	___flmul@a+2,w
  7170  01A5  318A  2297  3180   	fcall	__Umul8_16
  7171  01A8  0020               	movlb	0	; select bank0
  7172  01A9  0821               	movf	?__Umul8_16+1,w
  7173  01AA  00CB               	movwf	___flmul@temp+1
  7174  01AB  0820               	movf	?__Umul8_16,w
  7175  01AC  00CA               	movwf	___flmul@temp
  7176  01AD                     l2817:	
  7177  01AD  084A               	movf	___flmul@temp,w
  7178  01AE  00BA               	movwf	??___flmul
  7179  01AF  084B               	movf	___flmul@temp+1,w
  7180  01B0  00BB               	movwf	??___flmul+1
  7181  01B1  01BC               	clrf	??___flmul+2
  7182  01B2  01BD               	clrf	??___flmul+3
  7183  01B3  3008               	movlw	8
  7184  01B4                     u2405:	
  7185  01B4  35BA               	lslf	??___flmul,f
  7186  01B5  0DBB               	rlf	??___flmul+1,f
  7187  01B6  0DBC               	rlf	??___flmul+2,f
  7188  01B7  0DBD               	rlf	??___flmul+3,f
  7189  01B8                     u2400:	
  7190  01B8  0B89               	decfsz	9,f
  7191  01B9  29B4               	goto	u2405
  7192  01BA  083A               	movf	??___flmul,w
  7193  01BB  07C6               	addwf	___flmul@prod,f
  7194  01BC  083B               	movf	??___flmul+1,w
  7195  01BD  3DC7               	addwfc	___flmul@prod+1,f
  7196  01BE  083C               	movf	??___flmul+2,w
  7197  01BF  3DC8               	addwfc	___flmul@prod+2,f
  7198  01C0  083D               	movf	??___flmul+3,w
  7199  01C1  3DC9               	addwfc	___flmul@prod+3,f
  7200  01C2                     l2819:	
  7201  01C2  0840               	movf	___flmul@grs,w
  7202  01C3  00BA               	movwf	??___flmul
  7203  01C4  0841               	movf	___flmul@grs+1,w
  7204  01C5  00BB               	movwf	??___flmul+1
  7205  01C6  0842               	movf	___flmul@grs+2,w
  7206  01C7  00BC               	movwf	??___flmul+2
  7207  01C8  0843               	movf	___flmul@grs+3,w
  7208  01C9  00BD               	movwf	??___flmul+3
  7209  01CA  3018               	movlw	24
  7210  01CB                     u2415:	
  7211  01CB  36BD               	lsrf	??___flmul+3,f
  7212  01CC  0CBC               	rrf	??___flmul+2,f
  7213  01CD  0CBB               	rrf	??___flmul+1,f
  7214  01CE  0CBA               	rrf	??___flmul,f
  7215  01CF                     u2410:	
  7216  01CF  0B89               	decfsz	9,f
  7217  01D0  29CB               	goto	u2415
  7218  01D1  083A               	movf	??___flmul,w
  7219  01D2  07C6               	addwf	___flmul@prod,f
  7220  01D3  083B               	movf	??___flmul+1,w
  7221  01D4  3DC7               	addwfc	___flmul@prod+1,f
  7222  01D5  083C               	movf	??___flmul+2,w
  7223  01D6  3DC8               	addwfc	___flmul@prod+2,f
  7224  01D7  083D               	movf	??___flmul+3,w
  7225  01D8  3DC9               	addwfc	___flmul@prod+3,f
  7226  01D9                     l2821:	
  7227  01D9  3008               	movlw	8
  7228  01DA                     u2425:	
  7229  01DA  35C0               	lslf	___flmul@grs,f
  7230  01DB  0DC1               	rlf	___flmul@grs+1,f
  7231  01DC  0DC2               	rlf	___flmul@grs+2,f
  7232  01DD  0DC3               	rlf	___flmul@grs+3,f
  7233  01DE  0B89               	decfsz	9,f
  7234  01DF  29DA               	goto	u2425
  7235  01E0                     l2823:	
  7236  01E0  0845               	movf	___flmul@bexp,w
  7237  01E1  0744               	addwf	___flmul@aexp,w
  7238  01E2  00BA               	movwf	??___flmul
  7239  01E3  01BB               	clrf	??___flmul+1
  7240  01E4  0DBB               	rlf	??___flmul+1,f
  7241  01E5  083A               	movf	??___flmul,w
  7242  01E6  3E82               	addlw	130
  7243  01E7  00CA               	movwf	___flmul@temp
  7244  01E8  30FF               	movlw	255
  7245  01E9  3D3B               	addwfc	??___flmul+1,w
  7246  01EA  00CB               	movwf	___flmul@temp+1
  7247  01EB  2A03               	goto	l2835
  7248  01EC                     l2825:	
  7249  01EC  3001               	movlw	1
  7250  01ED                     u2435:	
  7251  01ED  35C6               	lslf	___flmul@prod,f
  7252  01EE  0DC7               	rlf	___flmul@prod+1,f
  7253  01EF  0DC8               	rlf	___flmul@prod+2,f
  7254  01F0  0DC9               	rlf	___flmul@prod+3,f
  7255  01F1  0B89               	decfsz	9,f
  7256  01F2  29ED               	goto	u2435
  7257  01F3                     l2827:	
  7258  01F3  1FC3               	btfss	___flmul@grs+3,7
  7259  01F4  29F6               	goto	u2441
  7260  01F5  29F7               	goto	u2440
  7261  01F6                     u2441:	
  7262  01F6  29F8               	goto	l2831
  7263  01F7                     u2440:	
  7264  01F7                     l2829:	
  7265  01F7  1446               	bsf	___flmul@prod,0
  7266  01F8                     l2831:	
  7267  01F8  3001               	movlw	1
  7268  01F9                     u2455:	
  7269  01F9  35C0               	lslf	___flmul@grs,f
  7270  01FA  0DC1               	rlf	___flmul@grs+1,f
  7271  01FB  0DC2               	rlf	___flmul@grs+2,f
  7272  01FC  0DC3               	rlf	___flmul@grs+3,f
  7273  01FD  0B89               	decfsz	9,f
  7274  01FE  29F9               	goto	u2455
  7275  01FF                     l2833:	
  7276  01FF  30FF               	movlw	255
  7277  0200  07CA               	addwf	___flmul@temp,f
  7278  0201  30FF               	movlw	255
  7279  0202  3DCB               	addwfc	___flmul@temp+1,f
  7280  0203                     l2835:	
  7281  0203  1FC8               	btfss	___flmul@prod+2,7
  7282  0204  2A06               	goto	u2461
  7283  0205  2A07               	goto	u2460
  7284  0206                     u2461:	
  7285  0206  29EC               	goto	l2825
  7286  0207                     u2460:	
  7287  0207                     l2837:	
  7288  0207  01C4               	clrf	___flmul@aexp
  7289  0208                     l2839:	
  7290  0208  1FC3               	btfss	___flmul@grs+3,7
  7291  0209  2A0B               	goto	u2471
  7292  020A  2A0C               	goto	u2470
  7293  020B                     u2471:	
  7294  020B  2A28               	goto	l2847
  7295  020C                     u2470:	
  7296  020C                     l2841:	
  7297  020C  30FF               	movlw	255
  7298  020D  0540               	andwf	___flmul@grs,w
  7299  020E  00BA               	movwf	??___flmul
  7300  020F  30FF               	movlw	255
  7301  0210  0541               	andwf	___flmul@grs+1,w
  7302  0211  00BB               	movwf	??___flmul+1
  7303  0212  30FF               	movlw	255
  7304  0213  0542               	andwf	___flmul@grs+2,w
  7305  0214  00BC               	movwf	??___flmul+2
  7306  0215  307F               	movlw	127
  7307  0216  0543               	andwf	___flmul@grs+3,w
  7308  0217  00BD               	movwf	??___flmul+3
  7309  0218  083D               	movf	??___flmul+3,w
  7310  0219  043C               	iorwf	??___flmul+2,w
  7311  021A  043B               	iorwf	??___flmul+1,w
  7312  021B  043A               	iorwf	??___flmul,w
  7313  021C  1903               	skipnz
  7314  021D  2A1F               	goto	u2481
  7315  021E  2A20               	goto	u2480
  7316  021F                     u2481:	
  7317  021F  2A23               	goto	l1261
  7318  0220                     u2480:	
  7319  0220                     l2843:	
  7320  0220  01C4               	clrf	___flmul@aexp
  7321  0221  0AC4               	incf	___flmul@aexp,f
  7322  0222  2A28               	goto	l2847
  7323  0223                     l1261:	
  7324  0223  1C46               	btfss	___flmul@prod,0
  7325  0224  2A26               	goto	u2491
  7326  0225  2A27               	goto	u2490
  7327  0226                     u2491:	
  7328  0226  2A28               	goto	l2847
  7329  0227                     u2490:	
  7330  0227  2A20               	goto	l2843
  7331  0228                     l2847:	
  7332  0228  0844               	movf	___flmul@aexp,w
  7333  0229  1903               	btfsc	3,2
  7334  022A  2A2C               	goto	u2501
  7335  022B  2A2D               	goto	u2500
  7336  022C                     u2501:	
  7337  022C  2A55               	goto	l2857
  7338  022D                     u2500:	
  7339  022D                     l2849:	
  7340  022D  3001               	movlw	1
  7341  022E  07C6               	addwf	___flmul@prod,f
  7342  022F  3000               	movlw	0
  7343  0230  3DC7               	addwfc	___flmul@prod+1,f
  7344  0231  3000               	movlw	0
  7345  0232  3DC8               	addwfc	___flmul@prod+2,f
  7346  0233  3000               	movlw	0
  7347  0234  3DC9               	addwfc	___flmul@prod+3,f
  7348  0235                     l2851:	
  7349  0235  1C49               	btfss	___flmul@prod+3,0
  7350  0236  2A38               	goto	u2511
  7351  0237  2A39               	goto	u2510
  7352  0238                     u2511:	
  7353  0238  2A55               	goto	l2857
  7354  0239                     u2510:	
  7355  0239                     l2853:	
  7356  0239  0846               	movf	___flmul@prod,w
  7357  023A  00BA               	movwf	??___flmul
  7358  023B  0847               	movf	___flmul@prod+1,w
  7359  023C  00BB               	movwf	??___flmul+1
  7360  023D  0848               	movf	___flmul@prod+2,w
  7361  023E  00BC               	movwf	??___flmul+2
  7362  023F  0849               	movf	___flmul@prod+3,w
  7363  0240  00BD               	movwf	??___flmul+3
  7364  0241  3001               	movlw	1
  7365  0242  00BE               	movwf	??___flmul+4
  7366  0243                     u2525:	
  7367  0243  37BD               	asrf	??___flmul+3,f
  7368  0244  0CBC               	rrf	??___flmul+2,f
  7369  0245  0CBB               	rrf	??___flmul+1,f
  7370  0246  0CBA               	rrf	??___flmul,f
  7371  0247                     u2520:	
  7372  0247  0BBE               	decfsz	??___flmul+4,f
  7373  0248  2A43               	goto	u2525
  7374  0249  083D               	movf	??___flmul+3,w
  7375  024A  00C9               	movwf	___flmul@prod+3
  7376  024B  083C               	movf	??___flmul+2,w
  7377  024C  00C8               	movwf	___flmul@prod+2
  7378  024D  083B               	movf	??___flmul+1,w
  7379  024E  00C7               	movwf	___flmul@prod+1
  7380  024F  083A               	movf	??___flmul,w
  7381  0250  00C6               	movwf	___flmul@prod
  7382  0251                     l2855:	
  7383  0251  3001               	movlw	1
  7384  0252  07CA               	addwf	___flmul@temp,f
  7385  0253  3000               	movlw	0
  7386  0254  3DCB               	addwfc	___flmul@temp+1,f
  7387  0255                     l2857:	
  7388  0255  084B               	movf	___flmul@temp+1,w
  7389  0256  3A80               	xorlw	128
  7390  0257  00BA               	movwf	??___flmul
  7391  0258  3080               	movlw	128
  7392  0259  023A               	subwf	??___flmul,w
  7393  025A  1D03               	skipz
  7394  025B  2A5E               	goto	u2535
  7395  025C  30FF               	movlw	255
  7396  025D  024A               	subwf	___flmul@temp,w
  7397  025E                     u2535:	
  7398  025E  1C03               	skipc
  7399  025F  2A61               	goto	u2531
  7400  0260  2A62               	goto	u2530
  7401  0261                     u2531:	
  7402  0261  2A6C               	goto	l2861
  7403  0262                     u2530:	
  7404  0262                     l2859:	
  7405  0262  307F               	movlw	127
  7406  0263  0020               	movlb	0	; select bank0
  7407  0264  00C9               	movwf	___flmul@prod+3
  7408  0265  3080               	movlw	128
  7409  0266  00C8               	movwf	___flmul@prod+2
  7410  0267  3000               	movlw	0
  7411  0268  00C7               	movwf	___flmul@prod+1
  7412  0269  3000               	movlw	0
  7413  026A  00C6               	movwf	___flmul@prod
  7414  026B  2A9B               	goto	l1267
  7415  026C                     l2861:	
  7416  026C  0020               	movlb	0	; select bank0
  7417  026D  084B               	movf	___flmul@temp+1,w
  7418  026E  3A80               	xorlw	128
  7419  026F  00BA               	movwf	??___flmul
  7420  0270  3080               	movlw	128
  7421  0271  023A               	subwf	??___flmul,w
  7422  0272  1D03               	skipz
  7423  0273  2A76               	goto	u2545
  7424  0274  3001               	movlw	1
  7425  0275  024A               	subwf	___flmul@temp,w
  7426  0276                     u2545:	
  7427  0276  1803               	skipnc
  7428  0277  2A79               	goto	u2541
  7429  0278  2A7A               	goto	u2540
  7430  0279                     u2541:	
  7431  0279  2A85               	goto	l2867
  7432  027A                     u2540:	
  7433  027A                     l2863:	
  7434  027A  3000               	movlw	0
  7435  027B  0020               	movlb	0	; select bank0
  7436  027C  00C9               	movwf	___flmul@prod+3
  7437  027D  3000               	movlw	0
  7438  027E  00C8               	movwf	___flmul@prod+2
  7439  027F  3000               	movlw	0
  7440  0280  00C7               	movwf	___flmul@prod+1
  7441  0281  3000               	movlw	0
  7442  0282  00C6               	movwf	___flmul@prod
  7443  0283                     l2865:	
  7444  0283  01BF               	clrf	___flmul@sign
  7445  0284  2A9B               	goto	l1267
  7446  0285                     l2867:	
  7447  0285  0020               	movlb	0	; select bank0
  7448  0286  084A               	movf	___flmul@temp,w
  7449  0287  00BA               	movwf	??___flmul
  7450  0288  083A               	movf	??___flmul,w
  7451  0289  00C5               	movwf	___flmul@bexp
  7452  028A  30FF               	movlw	255
  7453  028B  05C6               	andwf	___flmul@prod,f
  7454  028C  30FF               	movlw	255
  7455  028D  05C7               	andwf	___flmul@prod+1,f
  7456  028E  307F               	movlw	127
  7457  028F  05C8               	andwf	___flmul@prod+2,f
  7458  0290  3000               	movlw	0
  7459  0291  05C9               	andwf	___flmul@prod+3,f
  7460  0292                     l2869:	
  7461  0292  1C45               	btfss	___flmul@bexp,0
  7462  0293  2A95               	goto	u2551
  7463  0294  2A96               	goto	u2550
  7464  0295                     u2551:	
  7465  0295  2A97               	goto	l2873
  7466  0296                     u2550:	
  7467  0296                     l2871:	
  7468  0296  17C8               	bsf	___flmul@prod+2,7
  7469  0297                     l2873:	
  7470  0297  3645               	lsrf	___flmul@bexp,w
  7471  0298  00BA               	movwf	??___flmul
  7472  0299  083A               	movf	??___flmul,w
  7473  029A  00C9               	movwf	___flmul@prod+3
  7474  029B                     l1267:	
  7475  029B  083F               	movf	___flmul@sign,w
  7476  029C  00BA               	movwf	??___flmul
  7477  029D  083A               	movf	??___flmul,w
  7478  029E  04C9               	iorwf	___flmul@prod+3,f
  7479  029F                     l2875:	
  7480  029F  0849               	movf	___flmul@prod+3,w
  7481  02A0  00B5               	movwf	?___flmul+3
  7482  02A1  0848               	movf	___flmul@prod+2,w
  7483  02A2  00B4               	movwf	?___flmul+2
  7484  02A3  0847               	movf	___flmul@prod+1,w
  7485  02A4  00B3               	movwf	?___flmul+1
  7486  02A5  0846               	movf	___flmul@prod,w
  7487  02A6  00B2               	movwf	?___flmul
  7488  02A7                     l1255:	
  7489  02A7  0008               	return
  7490  02A8                     __end_of___flmul:	
  7491                           
  7492                           	psect	text18
  7493  0A97                     __ptext18:	
  7494 ;; *************** function __Umul8_16 *****************
  7495 ;; Defined at:
  7496 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8_16.c"
  7497 ;; Parameters:    Size  Location     Type
  7498 ;;  multiplier      1    wreg     unsigned char 
  7499 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;  multiplier      1    8[BANK0 ] unsigned char 
  7502 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  7503 ;;  product         2    4[BANK0 ] unsigned int 
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  2    0[BANK0 ] unsigned int 
  7506 ;; Registers used:
  7507 ;;		wreg, status,2, status,0
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7513 ;;      Params:         0       2       0       0       0       0
  7514 ;;      Locals:         0       5       0       0       0       0
  7515 ;;      Temps:          0       2       0       0       0       0
  7516 ;;      Totals:         0       9       0       0       0       0
  7517 ;;Total ram usage:        9 bytes
  7518 ;; Hardware stack levels used:    1
  7519 ;; Hardware stack levels required when called:    4
  7520 ;; This function calls:
  7521 ;;		Nothing
  7522 ;; This function is called by:
  7523 ;;		___flmul
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           
  7528                           ;psect for function __Umul8_16
  7529  0A97                     __Umul8_16:	
  7530                           
  7531                           ;incstack = 0
  7532                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7533                           ;__Umul8_16@multiplier stored from wreg
  7534  0A97  0020               	movlb	0	; select bank0
  7535  0A98  00A8               	movwf	__Umul8_16@multiplier
  7536  0A99                     l2567:	
  7537  0A99  01A4               	clrf	__Umul8_16@product
  7538  0A9A  01A5               	clrf	__Umul8_16@product+1
  7539  0A9B                     l2569:	
  7540  0A9B  0820               	movf	__Umul8_16@multiplicand,w
  7541  0A9C  00A2               	movwf	??__Umul8_16
  7542  0A9D  01A3               	clrf	??__Umul8_16+1
  7543  0A9E  0822               	movf	??__Umul8_16,w
  7544  0A9F  00A6               	movwf	__Umul8_16@word_mpld
  7545  0AA0  0823               	movf	??__Umul8_16+1,w
  7546  0AA1  00A7               	movwf	__Umul8_16@word_mpld+1
  7547  0AA2                     l2571:	
  7548  0AA2  1C28               	btfss	__Umul8_16@multiplier,0
  7549  0AA3  2AA5               	goto	u1991
  7550  0AA4  2AA6               	goto	u1990
  7551  0AA5                     u1991:	
  7552  0AA5  2AAA               	goto	l1319
  7553  0AA6                     u1990:	
  7554  0AA6                     l2573:	
  7555  0AA6  0826               	movf	__Umul8_16@word_mpld,w
  7556  0AA7  07A4               	addwf	__Umul8_16@product,f
  7557  0AA8  0827               	movf	__Umul8_16@word_mpld+1,w
  7558  0AA9  3DA5               	addwfc	__Umul8_16@product+1,f
  7559  0AAA                     l1319:	
  7560  0AAA  3001               	movlw	1
  7561  0AAB                     u2005:	
  7562  0AAB  35A6               	lslf	__Umul8_16@word_mpld,f
  7563  0AAC  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  7564  0AAD  0B89               	decfsz	9,f
  7565  0AAE  2AAB               	goto	u2005
  7566  0AAF  1003               	clrc
  7567  0AB0  0CA8               	rrf	__Umul8_16@multiplier,f
  7568  0AB1                     l2575:	
  7569  0AB1  0828               	movf	__Umul8_16@multiplier,w
  7570  0AB2  1D03               	btfss	3,2
  7571  0AB3  2AB5               	goto	u2011
  7572  0AB4  2AB6               	goto	u2010
  7573  0AB5                     u2011:	
  7574  0AB5  2AA2               	goto	l2571
  7575  0AB6                     u2010:	
  7576  0AB6                     l2577:	
  7577  0AB6  0825               	movf	__Umul8_16@product+1,w
  7578  0AB7  00A1               	movwf	?__Umul8_16+1
  7579  0AB8  0824               	movf	__Umul8_16@product,w
  7580  0AB9  00A0               	movwf	?__Umul8_16
  7581  0ABA                     l1321:	
  7582  0ABA  0008               	return
  7583  0ABB                     __end_of__Umul8_16:	
  7584                           
  7585                           	psect	text19
  7586  0481                     __ptext19:	
  7587 ;; *************** function ___fldiv *****************
  7588 ;; Defined at:
  7589 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;  a               4   44[BANK0 ] unsigned int 
  7592 ;;  b               4   48[BANK0 ] unsigned int 
  7593 ;; Auto vars:     Size  Location     Type
  7594 ;;  grs             4   64[BANK0 ] unsigned long 
  7595 ;;  rem             4   57[BANK0 ] unsigned long 
  7596 ;;  new_exp         2   62[BANK0 ] int 
  7597 ;;  aexp            1   69[BANK0 ] unsigned char 
  7598 ;;  bexp            1   68[BANK0 ] unsigned char 
  7599 ;;  sign            1   61[BANK0 ] unsigned char 
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  4   44[BANK0 ] unsigned char 
  7602 ;; Registers used:
  7603 ;;		wreg, status,2, status,0
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7609 ;;      Params:         0       8       0       0       0       0
  7610 ;;      Locals:         0      13       0       0       0       0
  7611 ;;      Temps:          0       5       0       0       0       0
  7612 ;;      Totals:         0      26       0       0       0       0
  7613 ;;Total ram usage:       26 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; Hardware stack levels required when called:    4
  7616 ;; This function calls:
  7617 ;;		Nothing
  7618 ;; This function is called by:
  7619 ;;		_comunicacao
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623                           
  7624                           ;psect for function ___fldiv
  7625  0481                     ___fldiv:	
  7626  0481                     l3277:	
  7627                           ;incstack = 0
  7628                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  7629                           
  7630  0481  0020               	movlb	0	; select bank0
  7631  0482  0853               	movf	___fldiv@b+3,w
  7632  0483  3980               	andlw	128
  7633  0484  00D4               	movwf	??___fldiv
  7634  0485  0854               	movf	??___fldiv,w
  7635  0486  00DD               	movwf	___fldiv@sign
  7636  0487                     l3279:	
  7637  0487  3553               	lslf	___fldiv@b+3,w
  7638  0488  00D4               	movwf	??___fldiv
  7639  0489  0854               	movf	??___fldiv,w
  7640  048A  00E4               	movwf	___fldiv@bexp
  7641  048B                     l3281:	
  7642  048B  1FD2               	btfss	___fldiv@b+2,7
  7643  048C  2C8E               	goto	u3101
  7644  048D  2C8F               	goto	u3100
  7645  048E                     u3101:	
  7646  048E  2C90               	goto	l3285
  7647  048F                     u3100:	
  7648  048F                     l3283:	
  7649  048F  1464               	bsf	___fldiv@bexp,0
  7650  0490                     l3285:	
  7651  0490  0864               	movf	___fldiv@bexp,w
  7652  0491  1903               	btfsc	3,2
  7653  0492  2C94               	goto	u3111
  7654  0493  2C95               	goto	u3110
  7655  0494                     u3111:	
  7656  0494  2CA5               	goto	l3295
  7657  0495                     u3110:	
  7658  0495                     l3287:	
  7659  0495  0A64               	incf	___fldiv@bexp,w
  7660  0496  1D03               	btfss	3,2
  7661  0497  2C99               	goto	u3121
  7662  0498  2C9A               	goto	u3120
  7663  0499                     u3121:	
  7664  0499  2CA2               	goto	l3291
  7665  049A                     u3120:	
  7666  049A                     l3289:	
  7667  049A  3000               	movlw	0
  7668  049B  00D3               	movwf	___fldiv@b+3
  7669  049C  3000               	movlw	0
  7670  049D  00D2               	movwf	___fldiv@b+2
  7671  049E  3000               	movlw	0
  7672  049F  00D1               	movwf	___fldiv@b+1
  7673  04A0  3000               	movlw	0
  7674  04A1  00D0               	movwf	___fldiv@b
  7675  04A2                     l3291:	
  7676  04A2  17D2               	bsf	___fldiv@b+2,7
  7677  04A3                     l3293:	
  7678  04A3  01D3               	clrf	___fldiv@b+3
  7679  04A4  2CAD               	goto	l3297
  7680  04A5                     l3295:	
  7681  04A5  3000               	movlw	0
  7682  04A6  00D3               	movwf	___fldiv@b+3
  7683  04A7  3000               	movlw	0
  7684  04A8  00D2               	movwf	___fldiv@b+2
  7685  04A9  3000               	movlw	0
  7686  04AA  00D1               	movwf	___fldiv@b+1
  7687  04AB  3000               	movlw	0
  7688  04AC  00D0               	movwf	___fldiv@b
  7689  04AD                     l3297:	
  7690  04AD  084F               	movf	___fldiv@a+3,w
  7691  04AE  3980               	andlw	128
  7692  04AF  00D4               	movwf	??___fldiv
  7693  04B0  0854               	movf	??___fldiv,w
  7694  04B1  06DD               	xorwf	___fldiv@sign,f
  7695  04B2                     l3299:	
  7696  04B2  354F               	lslf	___fldiv@a+3,w
  7697  04B3  00D4               	movwf	??___fldiv
  7698  04B4  0854               	movf	??___fldiv,w
  7699  04B5  00E5               	movwf	___fldiv@aexp
  7700  04B6                     l3301:	
  7701  04B6  1FCE               	btfss	___fldiv@a+2,7
  7702  04B7  2CB9               	goto	u3131
  7703  04B8  2CBA               	goto	u3130
  7704  04B9                     u3131:	
  7705  04B9  2CBB               	goto	l3305
  7706  04BA                     u3130:	
  7707  04BA                     l3303:	
  7708  04BA  1465               	bsf	___fldiv@aexp,0
  7709  04BB                     l3305:	
  7710  04BB  0865               	movf	___fldiv@aexp,w
  7711  04BC  1903               	btfsc	3,2
  7712  04BD  2CBF               	goto	u3141
  7713  04BE  2CC0               	goto	u3140
  7714  04BF                     u3141:	
  7715  04BF  2CD0               	goto	l3315
  7716  04C0                     u3140:	
  7717  04C0                     l3307:	
  7718  04C0  0A65               	incf	___fldiv@aexp,w
  7719  04C1  1D03               	btfss	3,2
  7720  04C2  2CC4               	goto	u3151
  7721  04C3  2CC5               	goto	u3150
  7722  04C4                     u3151:	
  7723  04C4  2CCD               	goto	l3311
  7724  04C5                     u3150:	
  7725  04C5                     l3309:	
  7726  04C5  3000               	movlw	0
  7727  04C6  00CF               	movwf	___fldiv@a+3
  7728  04C7  3000               	movlw	0
  7729  04C8  00CE               	movwf	___fldiv@a+2
  7730  04C9  3000               	movlw	0
  7731  04CA  00CD               	movwf	___fldiv@a+1
  7732  04CB  3000               	movlw	0
  7733  04CC  00CC               	movwf	___fldiv@a
  7734  04CD                     l3311:	
  7735  04CD  17CE               	bsf	___fldiv@a+2,7
  7736  04CE                     l3313:	
  7737  04CE  01CF               	clrf	___fldiv@a+3
  7738  04CF  2CD8               	goto	l1215
  7739  04D0                     l3315:	
  7740  04D0  3000               	movlw	0
  7741  04D1  00CF               	movwf	___fldiv@a+3
  7742  04D2  3000               	movlw	0
  7743  04D3  00CE               	movwf	___fldiv@a+2
  7744  04D4  3000               	movlw	0
  7745  04D5  00CD               	movwf	___fldiv@a+1
  7746  04D6  3000               	movlw	0
  7747  04D7  00CC               	movwf	___fldiv@a
  7748  04D8                     l1215:	
  7749  04D8  084F               	movf	___fldiv@a+3,w
  7750  04D9  044E               	iorwf	___fldiv@a+2,w
  7751  04DA  044D               	iorwf	___fldiv@a+1,w
  7752  04DB  044C               	iorwf	___fldiv@a,w
  7753  04DC  1D03               	skipz
  7754  04DD  2CDF               	goto	u3161
  7755  04DE  2CE0               	goto	u3160
  7756  04DF                     u3161:	
  7757  04DF  2CF9               	goto	l3325
  7758  04E0                     u3160:	
  7759  04E0                     l3317:	
  7760  04E0  3000               	movlw	0
  7761  04E1  00D3               	movwf	___fldiv@b+3
  7762  04E2  3000               	movlw	0
  7763  04E3  00D2               	movwf	___fldiv@b+2
  7764  04E4  3000               	movlw	0
  7765  04E5  00D1               	movwf	___fldiv@b+1
  7766  04E6  3000               	movlw	0
  7767  04E7  00D0               	movwf	___fldiv@b
  7768  04E8  3080               	movlw	128
  7769  04E9  04D2               	iorwf	___fldiv@b+2,f
  7770  04EA  307F               	movlw	127
  7771  04EB  04D3               	iorwf	___fldiv@b+3,f
  7772  04EC                     l3319:	
  7773  04EC  085D               	movf	___fldiv@sign,w
  7774  04ED  00D4               	movwf	??___fldiv
  7775  04EE  0854               	movf	??___fldiv,w
  7776  04EF  04D3               	iorwf	___fldiv@b+3,f
  7777  04F0                     l3321:	
  7778  04F0  0853               	movf	___fldiv@b+3,w
  7779  04F1  00CF               	movwf	?___fldiv+3
  7780  04F2  0852               	movf	___fldiv@b+2,w
  7781  04F3  00CE               	movwf	?___fldiv+2
  7782  04F4  0851               	movf	___fldiv@b+1,w
  7783  04F5  00CD               	movwf	?___fldiv+1
  7784  04F6  0850               	movf	___fldiv@b,w
  7785  04F7  00CC               	movwf	?___fldiv
  7786  04F8  2E34               	goto	l1217
  7787  04F9                     l3325:	
  7788  04F9  0864               	movf	___fldiv@bexp,w
  7789  04FA  1D03               	btfss	3,2
  7790  04FB  2CFD               	goto	u3171
  7791  04FC  2CFE               	goto	u3170
  7792  04FD                     u3171:	
  7793  04FD  2D07               	goto	l3331
  7794  04FE                     u3170:	
  7795  04FE                     l3327:	
  7796  04FE  3000               	movlw	0
  7797  04FF  00CF               	movwf	?___fldiv+3
  7798  0500  3000               	movlw	0
  7799  0501  00CE               	movwf	?___fldiv+2
  7800  0502  3000               	movlw	0
  7801  0503  00CD               	movwf	?___fldiv+1
  7802  0504  3000               	movlw	0
  7803  0505  00CC               	movwf	?___fldiv
  7804  0506  2E34               	goto	l1217
  7805  0507                     l3331:	
  7806  0507  0864               	movf	___fldiv@bexp,w
  7807  0508  00D4               	movwf	??___fldiv
  7808  0509  01D5               	clrf	??___fldiv+1
  7809  050A  0855               	movf	??___fldiv+1,w
  7810  050B  00D7               	movwf	??___fldiv+3
  7811  050C  0865               	movf	___fldiv@aexp,w
  7812  050D  0254               	subwf	??___fldiv,w
  7813  050E  00D6               	movwf	??___fldiv+2
  7814  050F  1C03               	skipc
  7815  0510  03D7               	decf	??___fldiv+3,f
  7816  0511  0856               	movf	??___fldiv+2,w
  7817  0512  3E7F               	addlw	127
  7818  0513  00DE               	movwf	___fldiv@new_exp
  7819  0514  3000               	movlw	0
  7820  0515  3D57               	addwfc	??___fldiv+3,w
  7821  0516  00DF               	movwf	___fldiv@new_exp+1
  7822  0517                     l3333:	
  7823  0517  0853               	movf	___fldiv@b+3,w
  7824  0518  00DC               	movwf	___fldiv@rem+3
  7825  0519  0852               	movf	___fldiv@b+2,w
  7826  051A  00DB               	movwf	___fldiv@rem+2
  7827  051B  0851               	movf	___fldiv@b+1,w
  7828  051C  00DA               	movwf	___fldiv@rem+1
  7829  051D  0850               	movf	___fldiv@b,w
  7830  051E  00D9               	movwf	___fldiv@rem
  7831  051F                     l3335:	
  7832  051F  3000               	movlw	0
  7833  0520  00D3               	movwf	___fldiv@b+3
  7834  0521  3000               	movlw	0
  7835  0522  00D2               	movwf	___fldiv@b+2
  7836  0523  3000               	movlw	0
  7837  0524  00D1               	movwf	___fldiv@b+1
  7838  0525  3000               	movlw	0
  7839  0526  00D0               	movwf	___fldiv@b
  7840  0527                     l3337:	
  7841  0527  3000               	movlw	0
  7842  0528  00E3               	movwf	___fldiv@grs+3
  7843  0529  3000               	movlw	0
  7844  052A  00E2               	movwf	___fldiv@grs+2
  7845  052B  3000               	movlw	0
  7846  052C  00E1               	movwf	___fldiv@grs+1
  7847  052D  3000               	movlw	0
  7848  052E  00E0               	movwf	___fldiv@grs
  7849  052F                     l3339:	
  7850  052F  01E5               	clrf	___fldiv@aexp
  7851  0530  2D6F               	goto	l3359
  7852  0531                     l3341:	
  7853  0531  0865               	movf	___fldiv@aexp,w
  7854  0532  1903               	btfsc	3,2
  7855  0533  2D35               	goto	u3181
  7856  0534  2D36               	goto	u3180
  7857  0535                     u3181:	
  7858  0535  2D50               	goto	l3351
  7859  0536                     u3180:	
  7860  0536                     l3343:	
  7861  0536  3001               	movlw	1
  7862  0537                     u3195:	
  7863  0537  35D9               	lslf	___fldiv@rem,f
  7864  0538  0DDA               	rlf	___fldiv@rem+1,f
  7865  0539  0DDB               	rlf	___fldiv@rem+2,f
  7866  053A  0DDC               	rlf	___fldiv@rem+3,f
  7867  053B  0B89               	decfsz	9,f
  7868  053C  2D37               	goto	u3195
  7869  053D  3001               	movlw	1
  7870  053E                     u3205:	
  7871  053E  35D0               	lslf	___fldiv@b,f
  7872  053F  0DD1               	rlf	___fldiv@b+1,f
  7873  0540  0DD2               	rlf	___fldiv@b+2,f
  7874  0541  0DD3               	rlf	___fldiv@b+3,f
  7875  0542  0B89               	decfsz	9,f
  7876  0543  2D3E               	goto	u3205
  7877  0544                     l3345:	
  7878  0544  1FE3               	btfss	___fldiv@grs+3,7
  7879  0545  2D47               	goto	u3211
  7880  0546  2D48               	goto	u3210
  7881  0547                     u3211:	
  7882  0547  2D49               	goto	l3349
  7883  0548                     u3210:	
  7884  0548                     l3347:	
  7885  0548  1450               	bsf	___fldiv@b,0
  7886  0549                     l3349:	
  7887  0549  3001               	movlw	1
  7888  054A                     u3225:	
  7889  054A  35E0               	lslf	___fldiv@grs,f
  7890  054B  0DE1               	rlf	___fldiv@grs+1,f
  7891  054C  0DE2               	rlf	___fldiv@grs+2,f
  7892  054D  0DE3               	rlf	___fldiv@grs+3,f
  7893  054E  0B89               	decfsz	9,f
  7894  054F  2D4A               	goto	u3225
  7895  0550                     l3351:	
  7896  0550  084F               	movf	___fldiv@a+3,w
  7897  0551  025C               	subwf	___fldiv@rem+3,w
  7898  0552  1D03               	skipz
  7899  0553  2D5E               	goto	u3235
  7900  0554  084E               	movf	___fldiv@a+2,w
  7901  0555  025B               	subwf	___fldiv@rem+2,w
  7902  0556  1D03               	skipz
  7903  0557  2D5E               	goto	u3235
  7904  0558  084D               	movf	___fldiv@a+1,w
  7905  0559  025A               	subwf	___fldiv@rem+1,w
  7906  055A  1D03               	skipz
  7907  055B  2D5E               	goto	u3235
  7908  055C  084C               	movf	___fldiv@a,w
  7909  055D  0259               	subwf	___fldiv@rem,w
  7910  055E                     u3235:	
  7911  055E  1C03               	skipc
  7912  055F  2D61               	goto	u3231
  7913  0560  2D62               	goto	u3230
  7914  0561                     u3231:	
  7915  0561  2D6B               	goto	l3357
  7916  0562                     u3230:	
  7917  0562                     l3353:	
  7918  0562  1763               	bsf	___fldiv@grs+3,6
  7919  0563                     l3355:	
  7920  0563  084C               	movf	___fldiv@a,w
  7921  0564  02D9               	subwf	___fldiv@rem,f
  7922  0565  084D               	movf	___fldiv@a+1,w
  7923  0566  3BDA               	subwfb	___fldiv@rem+1,f
  7924  0567  084E               	movf	___fldiv@a+2,w
  7925  0568  3BDB               	subwfb	___fldiv@rem+2,f
  7926  0569  084F               	movf	___fldiv@a+3,w
  7927  056A  3BDC               	subwfb	___fldiv@rem+3,f
  7928  056B                     l3357:	
  7929  056B  3001               	movlw	1
  7930  056C  00D4               	movwf	??___fldiv
  7931  056D  0854               	movf	??___fldiv,w
  7932  056E  07E5               	addwf	___fldiv@aexp,f
  7933  056F                     l3359:	
  7934  056F  301A               	movlw	26
  7935  0570  0265               	subwf	___fldiv@aexp,w
  7936  0571  1C03               	skipc
  7937  0572  2D74               	goto	u3241
  7938  0573  2D75               	goto	u3240
  7939  0574                     u3241:	
  7940  0574  2D31               	goto	l3341
  7941  0575                     u3240:	
  7942  0575                     l3361:	
  7943  0575  085C               	movf	___fldiv@rem+3,w
  7944  0576  045B               	iorwf	___fldiv@rem+2,w
  7945  0577  045A               	iorwf	___fldiv@rem+1,w
  7946  0578  0459               	iorwf	___fldiv@rem,w
  7947  0579  1903               	skipnz
  7948  057A  2D7C               	goto	u3251
  7949  057B  2D7D               	goto	u3250
  7950  057C                     u3251:	
  7951  057C  2D96               	goto	l3375
  7952  057D                     u3250:	
  7953  057D                     l3363:	
  7954  057D  1460               	bsf	___fldiv@grs,0
  7955  057E  2D96               	goto	l3375
  7956  057F                     l3365:	
  7957  057F  3001               	movlw	1
  7958  0580                     u3265:	
  7959  0580  35D0               	lslf	___fldiv@b,f
  7960  0581  0DD1               	rlf	___fldiv@b+1,f
  7961  0582  0DD2               	rlf	___fldiv@b+2,f
  7962  0583  0DD3               	rlf	___fldiv@b+3,f
  7963  0584  0B89               	decfsz	9,f
  7964  0585  2D80               	goto	u3265
  7965  0586                     l3367:	
  7966  0586  1FE3               	btfss	___fldiv@grs+3,7
  7967  0587  2D89               	goto	u3271
  7968  0588  2D8A               	goto	u3270
  7969  0589                     u3271:	
  7970  0589  2D8B               	goto	l3371
  7971  058A                     u3270:	
  7972  058A                     l3369:	
  7973  058A  1450               	bsf	___fldiv@b,0
  7974  058B                     l3371:	
  7975  058B  3001               	movlw	1
  7976  058C                     u3285:	
  7977  058C  35E0               	lslf	___fldiv@grs,f
  7978  058D  0DE1               	rlf	___fldiv@grs+1,f
  7979  058E  0DE2               	rlf	___fldiv@grs+2,f
  7980  058F  0DE3               	rlf	___fldiv@grs+3,f
  7981  0590  0B89               	decfsz	9,f
  7982  0591  2D8C               	goto	u3285
  7983  0592                     l3373:	
  7984  0592  30FF               	movlw	255
  7985  0593  07DE               	addwf	___fldiv@new_exp,f
  7986  0594  30FF               	movlw	255
  7987  0595  3DDF               	addwfc	___fldiv@new_exp+1,f
  7988  0596                     l3375:	
  7989  0596  1FD2               	btfss	___fldiv@b+2,7
  7990  0597  2D99               	goto	u3291
  7991  0598  2D9A               	goto	u3290
  7992  0599                     u3291:	
  7993  0599  2D7F               	goto	l3365
  7994  059A                     u3290:	
  7995  059A                     l3377:	
  7996  059A  01E5               	clrf	___fldiv@aexp
  7997  059B                     l3379:	
  7998  059B  1FE3               	btfss	___fldiv@grs+3,7
  7999  059C  2D9E               	goto	u3301
  8000  059D  2D9F               	goto	u3300
  8001  059E                     u3301:	
  8002  059E  2DBB               	goto	l3387
  8003  059F                     u3300:	
  8004  059F                     l3381:	
  8005  059F  30FF               	movlw	255
  8006  05A0  0560               	andwf	___fldiv@grs,w
  8007  05A1  00D4               	movwf	??___fldiv
  8008  05A2  30FF               	movlw	255
  8009  05A3  0561               	andwf	___fldiv@grs+1,w
  8010  05A4  00D5               	movwf	??___fldiv+1
  8011  05A5  30FF               	movlw	255
  8012  05A6  0562               	andwf	___fldiv@grs+2,w
  8013  05A7  00D6               	movwf	??___fldiv+2
  8014  05A8  307F               	movlw	127
  8015  05A9  0563               	andwf	___fldiv@grs+3,w
  8016  05AA  00D7               	movwf	??___fldiv+3
  8017  05AB  0857               	movf	??___fldiv+3,w
  8018  05AC  0456               	iorwf	??___fldiv+2,w
  8019  05AD  0455               	iorwf	??___fldiv+1,w
  8020  05AE  0454               	iorwf	??___fldiv,w
  8021  05AF  1903               	skipnz
  8022  05B0  2DB2               	goto	u3311
  8023  05B1  2DB3               	goto	u3310
  8024  05B2                     u3311:	
  8025  05B2  2DB6               	goto	l1231
  8026  05B3                     u3310:	
  8027  05B3                     l3383:	
  8028  05B3  01E5               	clrf	___fldiv@aexp
  8029  05B4  0AE5               	incf	___fldiv@aexp,f
  8030  05B5  2DBB               	goto	l3387
  8031  05B6                     l1231:	
  8032  05B6  1C50               	btfss	___fldiv@b,0
  8033  05B7  2DB9               	goto	u3321
  8034  05B8  2DBA               	goto	u3320
  8035  05B9                     u3321:	
  8036  05B9  2DBB               	goto	l3387
  8037  05BA                     u3320:	
  8038  05BA  2DB3               	goto	l3383
  8039  05BB                     l3387:	
  8040  05BB  0865               	movf	___fldiv@aexp,w
  8041  05BC  1903               	btfsc	3,2
  8042  05BD  2DBF               	goto	u3331
  8043  05BE  2DC0               	goto	u3330
  8044  05BF                     u3331:	
  8045  05BF  2DE8               	goto	l3397
  8046  05C0                     u3330:	
  8047  05C0                     l3389:	
  8048  05C0  3001               	movlw	1
  8049  05C1  07D0               	addwf	___fldiv@b,f
  8050  05C2  3000               	movlw	0
  8051  05C3  3DD1               	addwfc	___fldiv@b+1,f
  8052  05C4  3000               	movlw	0
  8053  05C5  3DD2               	addwfc	___fldiv@b+2,f
  8054  05C6  3000               	movlw	0
  8055  05C7  3DD3               	addwfc	___fldiv@b+3,f
  8056  05C8                     l3391:	
  8057  05C8  1C53               	btfss	___fldiv@b+3,0
  8058  05C9  2DCB               	goto	u3341
  8059  05CA  2DCC               	goto	u3340
  8060  05CB                     u3341:	
  8061  05CB  2DE8               	goto	l3397
  8062  05CC                     u3340:	
  8063  05CC                     l3393:	
  8064  05CC  0850               	movf	___fldiv@b,w
  8065  05CD  00D4               	movwf	??___fldiv
  8066  05CE  0851               	movf	___fldiv@b+1,w
  8067  05CF  00D5               	movwf	??___fldiv+1
  8068  05D0  0852               	movf	___fldiv@b+2,w
  8069  05D1  00D6               	movwf	??___fldiv+2
  8070  05D2  0853               	movf	___fldiv@b+3,w
  8071  05D3  00D7               	movwf	??___fldiv+3
  8072  05D4  3001               	movlw	1
  8073  05D5  00D8               	movwf	??___fldiv+4
  8074  05D6                     u3355:	
  8075  05D6  37D7               	asrf	??___fldiv+3,f
  8076  05D7  0CD6               	rrf	??___fldiv+2,f
  8077  05D8  0CD5               	rrf	??___fldiv+1,f
  8078  05D9  0CD4               	rrf	??___fldiv,f
  8079  05DA                     u3350:	
  8080  05DA  0BD8               	decfsz	??___fldiv+4,f
  8081  05DB  2DD6               	goto	u3355
  8082  05DC  0857               	movf	??___fldiv+3,w
  8083  05DD  00D3               	movwf	___fldiv@b+3
  8084  05DE  0856               	movf	??___fldiv+2,w
  8085  05DF  00D2               	movwf	___fldiv@b+2
  8086  05E0  0855               	movf	??___fldiv+1,w
  8087  05E1  00D1               	movwf	___fldiv@b+1
  8088  05E2  0854               	movf	??___fldiv,w
  8089  05E3  00D0               	movwf	___fldiv@b
  8090  05E4                     l3395:	
  8091  05E4  3001               	movlw	1
  8092  05E5  07DE               	addwf	___fldiv@new_exp,f
  8093  05E6  3000               	movlw	0
  8094  05E7  3DDF               	addwfc	___fldiv@new_exp+1,f
  8095  05E8                     l3397:	
  8096  05E8  085F               	movf	___fldiv@new_exp+1,w
  8097  05E9  3A80               	xorlw	128
  8098  05EA  00D4               	movwf	??___fldiv
  8099  05EB  3080               	movlw	128
  8100  05EC  0254               	subwf	??___fldiv,w
  8101  05ED  1D03               	skipz
  8102  05EE  2DF1               	goto	u3365
  8103  05EF  30FF               	movlw	255
  8104  05F0  025E               	subwf	___fldiv@new_exp,w
  8105  05F1                     u3365:	
  8106  05F1  1C03               	skipc
  8107  05F2  2DF4               	goto	u3361
  8108  05F3  2DF5               	goto	u3360
  8109  05F4                     u3361:	
  8110  05F4  2E02               	goto	l1236
  8111  05F5                     u3360:	
  8112  05F5                     l3399:	
  8113  05F5  30FF               	movlw	255
  8114  05F6  0020               	movlb	0	; select bank0
  8115  05F7  00DE               	movwf	___fldiv@new_exp
  8116  05F8  3000               	movlw	0
  8117  05F9  00DF               	movwf	___fldiv@new_exp+1
  8118  05FA  3000               	movlw	0
  8119  05FB  00D3               	movwf	___fldiv@b+3
  8120  05FC  3000               	movlw	0
  8121  05FD  00D2               	movwf	___fldiv@b+2
  8122  05FE  3000               	movlw	0
  8123  05FF  00D1               	movwf	___fldiv@b+1
  8124  0600  3000               	movlw	0
  8125  0601  00D0               	movwf	___fldiv@b
  8126  0602                     l1236:	
  8127  0602  0020               	movlb	0	; select bank0
  8128  0603  085F               	movf	___fldiv@new_exp+1,w
  8129  0604  3A80               	xorlw	128
  8130  0605  00D4               	movwf	??___fldiv
  8131  0606  3080               	movlw	128
  8132  0607  0254               	subwf	??___fldiv,w
  8133  0608  1D03               	skipz
  8134  0609  2E0C               	goto	u3375
  8135  060A  3001               	movlw	1
  8136  060B  025E               	subwf	___fldiv@new_exp,w
  8137  060C                     u3375:	
  8138  060C  1803               	skipnc
  8139  060D  2E0F               	goto	u3371
  8140  060E  2E10               	goto	u3370
  8141  060F                     u3371:	
  8142  060F  2E1C               	goto	l1237
  8143  0610                     u3370:	
  8144  0610                     l3401:	
  8145  0610  0020               	movlb	0	; select bank0
  8146  0611  01DE               	clrf	___fldiv@new_exp
  8147  0612  01DF               	clrf	___fldiv@new_exp+1
  8148  0613                     l3403:	
  8149  0613  3000               	movlw	0
  8150  0614  00D3               	movwf	___fldiv@b+3
  8151  0615  3000               	movlw	0
  8152  0616  00D2               	movwf	___fldiv@b+2
  8153  0617  3000               	movlw	0
  8154  0618  00D1               	movwf	___fldiv@b+1
  8155  0619  3000               	movlw	0
  8156  061A  00D0               	movwf	___fldiv@b
  8157  061B                     l3405:	
  8158  061B  01DD               	clrf	___fldiv@sign
  8159  061C                     l1237:	
  8160  061C  0020               	movlb	0	; select bank0
  8161  061D  085E               	movf	___fldiv@new_exp,w
  8162  061E  00D4               	movwf	??___fldiv
  8163  061F  0854               	movf	??___fldiv,w
  8164  0620  00E4               	movwf	___fldiv@bexp
  8165  0621                     l3407:	
  8166  0621  1C64               	btfss	___fldiv@bexp,0
  8167  0622  2E24               	goto	u3381
  8168  0623  2E25               	goto	u3380
  8169  0624                     u3381:	
  8170  0624  2E27               	goto	l3411
  8171  0625                     u3380:	
  8172  0625                     l3409:	
  8173  0625  17D2               	bsf	___fldiv@b+2,7
  8174  0626  2E2B               	goto	l1239
  8175  0627                     l3411:	
  8176  0627  307F               	movlw	127
  8177  0628  00D4               	movwf	??___fldiv
  8178  0629  0854               	movf	??___fldiv,w
  8179  062A  05D2               	andwf	___fldiv@b+2,f
  8180  062B                     l1239:	
  8181  062B  3664               	lsrf	___fldiv@bexp,w
  8182  062C  00D4               	movwf	??___fldiv
  8183  062D  0854               	movf	??___fldiv,w
  8184  062E  00D3               	movwf	___fldiv@b+3
  8185  062F  085D               	movf	___fldiv@sign,w
  8186  0630  00D4               	movwf	??___fldiv
  8187  0631  0854               	movf	??___fldiv,w
  8188  0632  04D3               	iorwf	___fldiv@b+3,f
  8189  0633  2CF0               	goto	l3321
  8190  0634                     l1217:	
  8191  0634  0008               	return
  8192  0635                     __end_of___fldiv:	
  8193                           
  8194                           	psect	text20
  8195  0A51                     __ptext20:	
  8196 ;; *************** function _SYSTEM_Initialize *****************
  8197 ;; Defined at:
  8198 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;		None
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;		None
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  1    wreg      void 
  8205 ;; Registers used:
  8206 ;;		wreg, status,2, status,0, pclath, cstack
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8212 ;;      Params:         0       0       0       0       0       0
  8213 ;;      Locals:         0       0       0       0       0       0
  8214 ;;      Temps:          0       0       0       0       0       0
  8215 ;;      Totals:         0       0       0       0       0       0
  8216 ;;Total ram usage:        0 bytes
  8217 ;; Hardware stack levels used:    1
  8218 ;; Hardware stack levels required when called:    6
  8219 ;; This function calls:
  8220 ;;		_ADC_Initialize
  8221 ;;		_CCP4_Initialize
  8222 ;;		_EUSART_Initialize
  8223 ;;		_FVR_Initialize
  8224 ;;		_OSCILLATOR_Initialize
  8225 ;;		_PIN_MANAGER_Initialize
  8226 ;;		_PWM3_Initialize
  8227 ;;		_TMR1_Initialize
  8228 ;;		_TMR2_Initialize
  8229 ;;		_TMR4_Initialize
  8230 ;;		_WDT_Initialize
  8231 ;; This function is called by:
  8232 ;;		_main
  8233 ;; This function uses a non-reentrant model
  8234 ;;
  8235                           
  8236                           
  8237                           ;psect for function _SYSTEM_Initialize
  8238  0A51                     _SYSTEM_Initialize:	
  8239  0A51                     l3939:	
  8240                           ;incstack = 0
  8241                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8242                           
  8243                           
  8244                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8245  0A51  318B  2353  318A   	fcall	_PIN_MANAGER_Initialize
  8246                           
  8247                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8248  0A54  3188  205E  318A   	fcall	_OSCILLATOR_Initialize
  8249                           
  8250                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  8251  0A57  3188  2048  318A   	fcall	_WDT_Initialize
  8252                           
  8253                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  8254  0A5A  3188  2044  318A   	fcall	_FVR_Initialize
  8255                           
  8256                           ;mcc_generated_files/mcc.c: 57:     CCP4_Initialize();
  8257  0A5D  3189  217B  318A   	fcall	_CCP4_Initialize
  8258                           
  8259                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  8260  0A60  3188  2065  318A   	fcall	_ADC_Initialize
  8261                           
  8262                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
  8263  0A63  3189  218D  318A   	fcall	_TMR4_Initialize
  8264                           
  8265                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
  8266  0A66  3188  20BD  318A   	fcall	_PWM3_Initialize
  8267                           
  8268                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  8269  0A69  3188  206D  318A   	fcall	_TMR2_Initialize
  8270                           
  8271                           ;mcc_generated_files/mcc.c: 62:     TMR1_Initialize();
  8272  0A6C  3189  215A  318A   	fcall	_TMR1_Initialize
  8273                           
  8274                           ;mcc_generated_files/mcc.c: 63:     EUSART_Initialize();
  8275  0A6F  318A  2273  318A   	fcall	_EUSART_Initialize
  8276  0A72                     l121:	
  8277  0A72  0008               	return
  8278  0A73                     __end_of_SYSTEM_Initialize:	
  8279                           
  8280                           	psect	text21
  8281  0848                     __ptext21:	
  8282 ;; *************** function _WDT_Initialize *****************
  8283 ;; Defined at:
  8284 ;;		line 76 in file "mcc_generated_files/mcc.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;		None
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;		None
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  1    wreg      void 
  8291 ;; Registers used:
  8292 ;;		wreg
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8298 ;;      Params:         0       0       0       0       0       0
  8299 ;;      Locals:         0       0       0       0       0       0
  8300 ;;      Temps:          0       0       0       0       0       0
  8301 ;;      Totals:         0       0       0       0       0       0
  8302 ;;Total ram usage:        0 bytes
  8303 ;; Hardware stack levels used:    1
  8304 ;; Hardware stack levels required when called:    4
  8305 ;; This function calls:
  8306 ;;		Nothing
  8307 ;; This function is called by:
  8308 ;;		_SYSTEM_Initialize
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           
  8312                           
  8313                           ;psect for function _WDT_Initialize
  8314  0848                     _WDT_Initialize:	
  8315  0848                     l3829:	
  8316                           ;incstack = 0
  8317                           ; Regs used in _WDT_Initialize: [wreg]
  8318                           
  8319                           
  8320                           ;mcc_generated_files/mcc.c: 79:     WDTCON = 0x16;
  8321  0848  3016               	movlw	22
  8322  0849  0021               	movlb	1	; select bank1
  8323  084A  0097               	movwf	23	;volatile
  8324  084B                     l127:	
  8325  084B  0008               	return
  8326  084C                     __end_of_WDT_Initialize:	
  8327                           
  8328                           	psect	text22
  8329  098D                     __ptext22:	
  8330 ;; *************** function _TMR4_Initialize *****************
  8331 ;; Defined at:
  8332 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;		None
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;		None
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  1    wreg      void 
  8339 ;; Registers used:
  8340 ;;		wreg, status,2, status,0, pclath, cstack
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8346 ;;      Params:         0       0       0       0       0       0
  8347 ;;      Locals:         0       0       0       0       0       0
  8348 ;;      Temps:          0       0       0       0       0       0
  8349 ;;      Totals:         0       0       0       0       0       0
  8350 ;;Total ram usage:        0 bytes
  8351 ;; Hardware stack levels used:    1
  8352 ;; Hardware stack levels required when called:    5
  8353 ;; This function calls:
  8354 ;;		_TMR4_SetInterruptHandler
  8355 ;; This function is called by:
  8356 ;;		_SYSTEM_Initialize
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           
  8361                           ;psect for function _TMR4_Initialize
  8362  098D                     _TMR4_Initialize:	
  8363  098D                     l3851:	
  8364                           ;incstack = 0
  8365                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8366                           
  8367                           
  8368                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xDE;
  8369  098D  30DE               	movlw	222
  8370  098E  0028               	movlb	8	; select bank8
  8371  098F  0096               	movwf	22	;volatile
  8372  0990                     l3853:	
  8373                           
  8374                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  8375  0990  0195               	clrf	21	;volatile
  8376  0991                     l3855:	
  8377                           
  8378                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  8379  0991  0020               	movlb	0	; select bank0
  8380  0992  1093               	bcf	19,1	;volatile
  8381  0993                     l3857:	
  8382                           
  8383                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  8384  0993  0021               	movlb	1	; select bank1
  8385  0994  1493               	bsf	19,1	;volatile
  8386  0995                     l3859:	
  8387                           
  8388                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  8389  0995  3003               	movlw	low _TMR4_DefaultInterruptHandler
  8390  0996  0020               	movlb	0	; select bank0
  8391  0997  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  8392  0998  3000               	movlw	high _TMR4_DefaultInterruptHandler
  8393  0999  00A1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  8394  099A  3187  27F7  3189   	fcall	_TMR4_SetInterruptHandler
  8395  099D                     l3861:	
  8396                           
  8397                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x07;
  8398  099D  3007               	movlw	7
  8399  099E  0028               	movlb	8	; select bank8
  8400  099F  0097               	movwf	23	;volatile
  8401  09A0                     l225:	
  8402  09A0  0008               	return
  8403  09A1                     __end_of_TMR4_Initialize:	
  8404                           
  8405                           	psect	text23
  8406  07F7                     __ptext23:	
  8407 ;; *************** function _TMR4_SetInterruptHandler *****************
  8408 ;; Defined at:
  8409 ;;		line 132 in file "mcc_generated_files/tmr4.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8412 ;;		 -> send_data(1), TMR4_DefaultInterruptHandler(1), 
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;		None
  8415 ;; Return value:  Size  Location     Type
  8416 ;;                  1    wreg      void 
  8417 ;; Registers used:
  8418 ;;		wreg
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8424 ;;      Params:         0       2       0       0       0       0
  8425 ;;      Locals:         0       0       0       0       0       0
  8426 ;;      Temps:          0       0       0       0       0       0
  8427 ;;      Totals:         0       2       0       0       0       0
  8428 ;;Total ram usage:        2 bytes
  8429 ;; Hardware stack levels used:    1
  8430 ;; Hardware stack levels required when called:    4
  8431 ;; This function calls:
  8432 ;;		Nothing
  8433 ;; This function is called by:
  8434 ;;		_TMR4_Initialize
  8435 ;;		_main
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           
  8440                           ;psect for function _TMR4_SetInterruptHandler
  8441  07F7                     _TMR4_SetInterruptHandler:	
  8442  07F7                     l3693:	
  8443                           ;incstack = 0
  8444                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  8445                           
  8446                           
  8447                           ;mcc_generated_files/tmr4.c: 133:     TMR4_InterruptHandler = InterruptHandler;
  8448  07F7  0020               	movlb	0	; select bank0
  8449  07F8  0821               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
  8450  07F9  0021               	movlb	1	; select bank1
  8451  07FA  00EC               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
  8452  07FB  0020               	movlb	0	; select bank0
  8453  07FC  0820               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
  8454  07FD  0021               	movlb	1	; select bank1
  8455  07FE  00EB               	movwf	_TMR4_InterruptHandler^(0+128)
  8456  07FF                     l247:	
  8457  07FF  0008               	return
  8458  0800                     __end_of_TMR4_SetInterruptHandler:	
  8459                           
  8460                           	psect	text24
  8461  086D                     __ptext24:	
  8462 ;; *************** function _TMR2_Initialize *****************
  8463 ;; Defined at:
  8464 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8465 ;; Parameters:    Size  Location     Type
  8466 ;;		None
  8467 ;; Auto vars:     Size  Location     Type
  8468 ;;		None
  8469 ;; Return value:  Size  Location     Type
  8470 ;;                  1    wreg      void 
  8471 ;; Registers used:
  8472 ;;		wreg, status,2
  8473 ;; Tracked objects:
  8474 ;;		On entry : 0/0
  8475 ;;		On exit  : 0/0
  8476 ;;		Unchanged: 0/0
  8477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8478 ;;      Params:         0       0       0       0       0       0
  8479 ;;      Locals:         0       0       0       0       0       0
  8480 ;;      Temps:          0       0       0       0       0       0
  8481 ;;      Totals:         0       0       0       0       0       0
  8482 ;;Total ram usage:        0 bytes
  8483 ;; Hardware stack levels used:    1
  8484 ;; Hardware stack levels required when called:    4
  8485 ;; This function calls:
  8486 ;;		Nothing
  8487 ;; This function is called by:
  8488 ;;		_SYSTEM_Initialize
  8489 ;; This function uses a non-reentrant model
  8490 ;;
  8491                           
  8492                           
  8493                           ;psect for function _TMR2_Initialize
  8494  086D                     _TMR2_Initialize:	
  8495  086D                     l3871:	
  8496                           ;incstack = 0
  8497                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8498                           
  8499                           
  8500                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  8501  086D  30FF               	movlw	255
  8502  086E  0020               	movlb	0	; select bank0
  8503  086F  009B               	movwf	27	;volatile
  8504  0870                     l3873:	
  8505                           
  8506                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  8507  0870  019A               	clrf	26	;volatile
  8508  0871                     l3875:	
  8509                           
  8510                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  8511  0871  1091               	bcf	17,1	;volatile
  8512  0872                     l3877:	
  8513                           
  8514                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  8515  0872  3004               	movlw	4
  8516  0873  009C               	movwf	28	;volatile
  8517  0874                     l185:	
  8518  0874  0008               	return
  8519  0875                     __end_of_TMR2_Initialize:	
  8520                           
  8521                           	psect	text25
  8522  095A                     __ptext25:	
  8523 ;; *************** function _TMR1_Initialize *****************
  8524 ;; Defined at:
  8525 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;		None
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;		None
  8530 ;; Return value:  Size  Location     Type
  8531 ;;                  1    wreg      void 
  8532 ;; Registers used:
  8533 ;;		wreg, status,2
  8534 ;; Tracked objects:
  8535 ;;		On entry : 0/0
  8536 ;;		On exit  : 0/0
  8537 ;;		Unchanged: 0/0
  8538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8539 ;;      Params:         0       0       0       0       0       0
  8540 ;;      Locals:         0       0       0       0       0       0
  8541 ;;      Temps:          0       0       0       0       0       0
  8542 ;;      Totals:         0       0       0       0       0       0
  8543 ;;Total ram usage:        0 bytes
  8544 ;; Hardware stack levels used:    1
  8545 ;; Hardware stack levels required when called:    4
  8546 ;; This function calls:
  8547 ;;		Nothing
  8548 ;; This function is called by:
  8549 ;;		_SYSTEM_Initialize
  8550 ;; This function uses a non-reentrant model
  8551 ;;
  8552                           
  8553                           
  8554                           ;psect for function _TMR1_Initialize
  8555  095A                     _TMR1_Initialize:	
  8556  095A                     l3879:	
  8557                           ;incstack = 0
  8558                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  8559                           
  8560                           
  8561                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  8562  095A  0020               	movlb	0	; select bank0
  8563  095B  0199               	clrf	25	;volatile
  8564                           
  8565                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
  8566  095C  0197               	clrf	23	;volatile
  8567                           
  8568                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  8569  095D  0196               	clrf	22	;volatile
  8570  095E                     l3881:	
  8571                           
  8572                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  8573  095E  1011               	bcf	17,0	;volatile
  8574  095F                     l3883:	
  8575                           
  8576                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8577  095F  0817               	movf	23,w	;volatile
  8578  0960  0021               	movlb	1	; select bank1
  8579  0961  00EE               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  8580  0962  0020               	movlb	0	; select bank0
  8581  0963  0816               	movf	22,w	;volatile
  8582  0964  0021               	movlb	1	; select bank1
  8583  0965  00ED               	movwf	_timer1ReloadVal^(0+128)	;volatile
  8584  0966                     l3885:	
  8585                           
  8586                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  8587  0966  3031               	movlw	49
  8588  0967  0020               	movlb	0	; select bank0
  8589  0968  0098               	movwf	24	;volatile
  8590  0969                     l146:	
  8591  0969  0008               	return
  8592  096A                     __end_of_TMR1_Initialize:	
  8593                           
  8594                           	psect	text26
  8595  08BD                     __ptext26:	
  8596 ;; *************** function _PWM3_Initialize *****************
  8597 ;; Defined at:
  8598 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;		None
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;		None
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  1    wreg      void 
  8605 ;; Registers used:
  8606 ;;		wreg, status,2, status,0
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 0/0
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8612 ;;      Params:         0       0       0       0       0       0
  8613 ;;      Locals:         0       0       0       0       0       0
  8614 ;;      Temps:          0       0       0       0       0       0
  8615 ;;      Totals:         0       0       0       0       0       0
  8616 ;;Total ram usage:        0 bytes
  8617 ;; Hardware stack levels used:    1
  8618 ;; Hardware stack levels required when called:    4
  8619 ;; This function calls:
  8620 ;;		Nothing
  8621 ;; This function is called by:
  8622 ;;		_SYSTEM_Initialize
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           
  8627                           ;psect for function _PWM3_Initialize
  8628  08BD                     _PWM3_Initialize:	
  8629  08BD                     l3863:	
  8630                           ;incstack = 0
  8631                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  8632                           
  8633                           
  8634                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x0C;
  8635  08BD  300C               	movlw	12
  8636  08BE  0026               	movlb	6	; select bank6
  8637  08BF  0093               	movwf	19	;volatile
  8638  08C0                     l3865:	
  8639                           
  8640                           ;mcc_generated_files/pwm3.c: 72:  CCPR3L = 0x00;
  8641  08C0  0191               	clrf	17	;volatile
  8642  08C1                     l3867:	
  8643                           
  8644                           ;mcc_generated_files/pwm3.c: 75:  CCPR3H = 0x00;
  8645  08C1  0192               	clrf	18	;volatile
  8646  08C2                     l3869:	
  8647                           
  8648                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x0;
  8649  08C2  30CF               	movlw	-49
  8650  08C3  0025               	movlb	5	; select bank5
  8651  08C4  059E               	andwf	30,f	;volatile
  8652  08C5                     l472:	
  8653  08C5  0008               	return
  8654  08C6                     __end_of_PWM3_Initialize:	
  8655                           
  8656                           	psect	text27
  8657  0B53                     __ptext27:	
  8658 ;; *************** function _PIN_MANAGER_Initialize *****************
  8659 ;; Defined at:
  8660 ;;		line 60 in file "mcc_generated_files/pin_manager.c"
  8661 ;; Parameters:    Size  Location     Type
  8662 ;;		None
  8663 ;; Auto vars:     Size  Location     Type
  8664 ;;		None
  8665 ;; Return value:  Size  Location     Type
  8666 ;;                  1    wreg      void 
  8667 ;; Registers used:
  8668 ;;		wreg, status,2, status,0, pclath, cstack
  8669 ;; Tracked objects:
  8670 ;;		On entry : 0/0
  8671 ;;		On exit  : 0/0
  8672 ;;		Unchanged: 0/0
  8673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8674 ;;      Params:         0       0       0       0       0       0
  8675 ;;      Locals:         0       0       0       0       0       0
  8676 ;;      Temps:          0       0       0       0       0       0
  8677 ;;      Totals:         0       0       0       0       0       0
  8678 ;;Total ram usage:        0 bytes
  8679 ;; Hardware stack levels used:    1
  8680 ;; Hardware stack levels required when called:    5
  8681 ;; This function calls:
  8682 ;;		_IOCBF0_SetInterruptHandler
  8683 ;;		_IOCBF3_SetInterruptHandler
  8684 ;;		_IOCBF4_SetInterruptHandler
  8685 ;;		_IOCBF5_SetInterruptHandler
  8686 ;; This function is called by:
  8687 ;;		_SYSTEM_Initialize
  8688 ;; This function uses a non-reentrant model
  8689 ;;
  8690                           
  8691                           
  8692                           ;psect for function _PIN_MANAGER_Initialize
  8693  0B53                     _PIN_MANAGER_Initialize:	
  8694  0B53                     l3777:	
  8695                           ;incstack = 0
  8696                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8697                           
  8698                           
  8699                           ;mcc_generated_files/pin_manager.c: 65:     LATA = 0x00;
  8700  0B53  0022               	movlb	2	; select bank2
  8701  0B54  018C               	clrf	12	;volatile
  8702                           
  8703                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
  8704  0B55  018D               	clrf	13	;volatile
  8705  0B56                     l3779:	
  8706                           
  8707                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0x33;
  8708  0B56  3033               	movlw	51
  8709  0B57  0021               	movlb	1	; select bank1
  8710  0B58  008C               	movwf	12	;volatile
  8711  0B59                     l3781:	
  8712                           
  8713                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
  8714  0B59  30FF               	movlw	255
  8715  0B5A  008D               	movwf	13	;volatile
  8716  0B5B                     l3783:	
  8717                           
  8718                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xC0;
  8719  0B5B  30C0               	movlw	192
  8720  0B5C  0023               	movlb	3	; select bank3
  8721  0B5D  008D               	movwf	13	;volatile
  8722  0B5E                     l3785:	
  8723                           
  8724                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x03;
  8725  0B5E  3003               	movlw	3
  8726  0B5F  008C               	movwf	12	;volatile
  8727                           
  8728                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  8729  0B60  0024               	movlb	4	; select bank4
  8730  0B61  018D               	clrf	13	;volatile
  8731                           
  8732                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  8733  0B62  018C               	clrf	12	;volatile
  8734  0B63                     l3787:	
  8735                           
  8736                           ;mcc_generated_files/pin_manager.c: 85:     OPTION_REGbits.nWPUEN = 1;
  8737  0B63  0021               	movlb	1	; select bank1
  8738  0B64  1795               	bsf	21,7	;volatile
  8739                           
  8740                           ;mcc_generated_files/pin_manager.c: 91:     APFCON0 = 0x00;
  8741  0B65  0022               	movlb	2	; select bank2
  8742  0B66  019D               	clrf	29	;volatile
  8743                           
  8744                           ;mcc_generated_files/pin_manager.c: 92:     APFCON1 = 0x00;
  8745  0B67  019E               	clrf	30	;volatile
  8746  0B68                     l3789:	
  8747                           
  8748                           ;mcc_generated_files/pin_manager.c: 98:     IOCBFbits.IOCBF0 = 0;
  8749  0B68  0027               	movlb	7	; select bank7
  8750  0B69  1016               	bcf	22,0	;volatile
  8751  0B6A                     l3791:	
  8752                           
  8753                           ;mcc_generated_files/pin_manager.c: 100:     IOCBFbits.IOCBF3 = 0;
  8754  0B6A  1196               	bcf	22,3	;volatile
  8755  0B6B                     l3793:	
  8756                           
  8757                           ;mcc_generated_files/pin_manager.c: 102:     IOCBFbits.IOCBF4 = 0;
  8758  0B6B  1216               	bcf	22,4	;volatile
  8759  0B6C                     l3795:	
  8760                           
  8761                           ;mcc_generated_files/pin_manager.c: 104:     IOCBFbits.IOCBF5 = 0;
  8762  0B6C  1296               	bcf	22,5	;volatile
  8763  0B6D                     l3797:	
  8764                           
  8765                           ;mcc_generated_files/pin_manager.c: 106:     IOCBNbits.IOCBN0 = 1;
  8766  0B6D  1415               	bsf	21,0	;volatile
  8767  0B6E                     l3799:	
  8768                           
  8769                           ;mcc_generated_files/pin_manager.c: 108:     IOCBNbits.IOCBN3 = 1;
  8770  0B6E  1595               	bsf	21,3	;volatile
  8771  0B6F                     l3801:	
  8772                           
  8773                           ;mcc_generated_files/pin_manager.c: 110:     IOCBNbits.IOCBN4 = 1;
  8774  0B6F  1615               	bsf	21,4	;volatile
  8775  0B70                     l3803:	
  8776                           
  8777                           ;mcc_generated_files/pin_manager.c: 112:     IOCBNbits.IOCBN5 = 1;
  8778  0B70  1695               	bsf	21,5	;volatile
  8779  0B71                     l3805:	
  8780                           
  8781                           ;mcc_generated_files/pin_manager.c: 114:     IOCBPbits.IOCBP0 = 0;
  8782  0B71  1014               	bcf	20,0	;volatile
  8783  0B72                     l3807:	
  8784                           
  8785                           ;mcc_generated_files/pin_manager.c: 116:     IOCBPbits.IOCBP3 = 0;
  8786  0B72  1194               	bcf	20,3	;volatile
  8787  0B73                     l3809:	
  8788                           
  8789                           ;mcc_generated_files/pin_manager.c: 118:     IOCBPbits.IOCBP4 = 0;
  8790  0B73  1214               	bcf	20,4	;volatile
  8791  0B74                     l3811:	
  8792                           
  8793                           ;mcc_generated_files/pin_manager.c: 120:     IOCBPbits.IOCBP5 = 0;
  8794  0B74  1294               	bcf	20,5	;volatile
  8795  0B75                     l3813:	
  8796                           
  8797                           ;mcc_generated_files/pin_manager.c: 125:     IOCBF0_SetInterruptHandler(IOCBF0_DefaultIn
      +                          terruptHandler);
  8798  0B75  3041               	movlw	low _IOCBF0_DefaultInterruptHandler
  8799  0B76  0020               	movlb	0	; select bank0
  8800  0B77  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler
  8801  0B78  3008               	movlw	high _IOCBF0_DefaultInterruptHandler
  8802  0B79  00A1               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler+1
  8803  0B7A  3188  2099  318B   	fcall	_IOCBF0_SetInterruptHandler
  8804  0B7D                     l3815:	
  8805                           
  8806                           ;mcc_generated_files/pin_manager.c: 126:     IOCBF3_SetInterruptHandler(IOCBF3_DefaultIn
      +                          terruptHandler);
  8807  0B7D  3042               	movlw	low _IOCBF3_DefaultInterruptHandler
  8808  0B7E  0020               	movlb	0	; select bank0
  8809  0B7F  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler
  8810  0B80  3008               	movlw	high _IOCBF3_DefaultInterruptHandler
  8811  0B81  00A1               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler+1
  8812  0B82  3188  20A2  318B   	fcall	_IOCBF3_SetInterruptHandler
  8813  0B85                     l3817:	
  8814                           
  8815                           ;mcc_generated_files/pin_manager.c: 127:     IOCBF4_SetInterruptHandler(IOCBF4_DefaultIn
      +                          terruptHandler);
  8816  0B85  3043               	movlw	low _IOCBF4_DefaultInterruptHandler
  8817  0B86  0020               	movlb	0	; select bank0
  8818  0B87  00A0               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
  8819  0B88  3008               	movlw	high _IOCBF4_DefaultInterruptHandler
  8820  0B89  00A1               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
  8821  0B8A  3188  20AB  318B   	fcall	_IOCBF4_SetInterruptHandler
  8822  0B8D                     l3819:	
  8823                           
  8824                           ;mcc_generated_files/pin_manager.c: 128:     IOCBF5_SetInterruptHandler(IOCBF5_DefaultIn
      +                          terruptHandler);
  8825  0B8D  3002               	movlw	low _IOCBF5_DefaultInterruptHandler
  8826  0B8E  0020               	movlb	0	; select bank0
  8827  0B8F  00A0               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler
  8828  0B90  3000               	movlw	high _IOCBF5_DefaultInterruptHandler
  8829  0B91  00A1               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler+1
  8830  0B92  3188  20B4  318B   	fcall	_IOCBF5_SetInterruptHandler
  8831  0B95                     l3821:	
  8832                           
  8833                           ;mcc_generated_files/pin_manager.c: 131:     INTCONbits.IOCIE = 1;
  8834  0B95  158B               	bsf	11,3	;volatile
  8835  0B96                     l414:	
  8836  0B96  0008               	return
  8837  0B97                     __end_of_PIN_MANAGER_Initialize:	
  8838                           
  8839                           	psect	text28
  8840  08B4                     __ptext28:	
  8841 ;; *************** function _IOCBF5_SetInterruptHandler *****************
  8842 ;; Defined at:
  8843 ;;		line 267 in file "mcc_generated_files/pin_manager.c"
  8844 ;; Parameters:    Size  Location     Type
  8845 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8846 ;;		 -> sensor4(1), IOCBF5_DefaultInterruptHandler(1), 
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;		None
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  1    wreg      void 
  8851 ;; Registers used:
  8852 ;;		wreg
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8858 ;;      Params:         0       2       0       0       0       0
  8859 ;;      Locals:         0       0       0       0       0       0
  8860 ;;      Temps:          0       0       0       0       0       0
  8861 ;;      Totals:         0       2       0       0       0       0
  8862 ;;Total ram usage:        2 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:    4
  8865 ;; This function calls:
  8866 ;;		Nothing
  8867 ;; This function is called by:
  8868 ;;		_PIN_MANAGER_Initialize
  8869 ;;		_main
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           
  8873                           
  8874                           ;psect for function _IOCBF5_SetInterruptHandler
  8875  08B4                     _IOCBF5_SetInterruptHandler:	
  8876  08B4                     l3703:	
  8877                           ;incstack = 0
  8878                           ; Regs used in _IOCBF5_SetInterruptHandler: [wreg]
  8879                           
  8880                           
  8881                           ;mcc_generated_files/pin_manager.c: 268:     IOCBF5_InterruptHandler = InterruptHandler;
  8882  08B4  0020               	movlb	0	; select bank0
  8883  08B5  0821               	movf	IOCBF5_SetInterruptHandler@InterruptHandler+1,w
  8884  08B6  0022               	movlb	2	; select bank2
  8885  08B7  00A1               	movwf	(_IOCBF5_InterruptHandler+1)^(0+256)
  8886  08B8  0020               	movlb	0	; select bank0
  8887  08B9  0820               	movf	IOCBF5_SetInterruptHandler@InterruptHandler,w
  8888  08BA  0022               	movlb	2	; select bank2
  8889  08BB  00A0               	movwf	_IOCBF5_InterruptHandler^(0+256)
  8890  08BC                     l458:	
  8891  08BC  0008               	return
  8892  08BD                     __end_of_IOCBF5_SetInterruptHandler:	
  8893                           
  8894                           	psect	text29
  8895  08AB                     __ptext29:	
  8896 ;; *************** function _IOCBF4_SetInterruptHandler *****************
  8897 ;; Defined at:
  8898 ;;		line 237 in file "mcc_generated_files/pin_manager.c"
  8899 ;; Parameters:    Size  Location     Type
  8900 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8901 ;;		 -> sensor3(1), IOCBF4_DefaultInterruptHandler(1), 
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;		None
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      void 
  8906 ;; Registers used:
  8907 ;;		wreg
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8913 ;;      Params:         0       2       0       0       0       0
  8914 ;;      Locals:         0       0       0       0       0       0
  8915 ;;      Temps:          0       0       0       0       0       0
  8916 ;;      Totals:         0       2       0       0       0       0
  8917 ;;Total ram usage:        2 bytes
  8918 ;; Hardware stack levels used:    1
  8919 ;; Hardware stack levels required when called:    4
  8920 ;; This function calls:
  8921 ;;		Nothing
  8922 ;; This function is called by:
  8923 ;;		_PIN_MANAGER_Initialize
  8924 ;;		_main
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           
  8929                           ;psect for function _IOCBF4_SetInterruptHandler
  8930  08AB                     _IOCBF4_SetInterruptHandler:	
  8931  08AB                     l3701:	
  8932                           ;incstack = 0
  8933                           ; Regs used in _IOCBF4_SetInterruptHandler: [wreg]
  8934                           
  8935                           
  8936                           ;mcc_generated_files/pin_manager.c: 238:     IOCBF4_InterruptHandler = InterruptHandler;
  8937  08AB  0020               	movlb	0	; select bank0
  8938  08AC  0821               	movf	IOCBF4_SetInterruptHandler@InterruptHandler+1,w
  8939  08AD  0022               	movlb	2	; select bank2
  8940  08AE  00A3               	movwf	(_IOCBF4_InterruptHandler+1)^(0+256)
  8941  08AF  0020               	movlb	0	; select bank0
  8942  08B0  0820               	movf	IOCBF4_SetInterruptHandler@InterruptHandler,w
  8943  08B1  0022               	movlb	2	; select bank2
  8944  08B2  00A2               	movwf	_IOCBF4_InterruptHandler^(0+256)
  8945  08B3                     l448:	
  8946  08B3  0008               	return
  8947  08B4                     __end_of_IOCBF4_SetInterruptHandler:	
  8948                           
  8949                           	psect	text30
  8950  08A2                     __ptext30:	
  8951 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  8952 ;; Defined at:
  8953 ;;		line 207 in file "mcc_generated_files/pin_manager.c"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8956 ;;		 -> sensor2(1), IOCBF3_DefaultInterruptHandler(1), 
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;		None
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  1    wreg      void 
  8961 ;; Registers used:
  8962 ;;		wreg
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8968 ;;      Params:         0       2       0       0       0       0
  8969 ;;      Locals:         0       0       0       0       0       0
  8970 ;;      Temps:          0       0       0       0       0       0
  8971 ;;      Totals:         0       2       0       0       0       0
  8972 ;;Total ram usage:        2 bytes
  8973 ;; Hardware stack levels used:    1
  8974 ;; Hardware stack levels required when called:    4
  8975 ;; This function calls:
  8976 ;;		Nothing
  8977 ;; This function is called by:
  8978 ;;		_PIN_MANAGER_Initialize
  8979 ;;		_main
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982                           
  8983                           
  8984                           ;psect for function _IOCBF3_SetInterruptHandler
  8985  08A2                     _IOCBF3_SetInterruptHandler:	
  8986  08A2                     l3699:	
  8987                           ;incstack = 0
  8988                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  8989                           
  8990                           
  8991                           ;mcc_generated_files/pin_manager.c: 208:     IOCBF3_InterruptHandler = InterruptHandler;
  8992  08A2  0020               	movlb	0	; select bank0
  8993  08A3  0821               	movf	IOCBF3_SetInterruptHandler@InterruptHandler+1,w
  8994  08A4  0022               	movlb	2	; select bank2
  8995  08A5  00A5               	movwf	(_IOCBF3_InterruptHandler+1)^(0+256)
  8996  08A6  0020               	movlb	0	; select bank0
  8997  08A7  0820               	movf	IOCBF3_SetInterruptHandler@InterruptHandler,w
  8998  08A8  0022               	movlb	2	; select bank2
  8999  08A9  00A4               	movwf	_IOCBF3_InterruptHandler^(0+256)
  9000  08AA                     l438:	
  9001  08AA  0008               	return
  9002  08AB                     __end_of_IOCBF3_SetInterruptHandler:	
  9003                           
  9004                           	psect	text31
  9005  0899                     __ptext31:	
  9006 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  9007 ;; Defined at:
  9008 ;;		line 177 in file "mcc_generated_files/pin_manager.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9011 ;;		 -> sensor1(1), IOCBF0_DefaultInterruptHandler(1), 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;		None
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  1    wreg      void 
  9016 ;; Registers used:
  9017 ;;		wreg
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9023 ;;      Params:         0       2       0       0       0       0
  9024 ;;      Locals:         0       0       0       0       0       0
  9025 ;;      Temps:          0       0       0       0       0       0
  9026 ;;      Totals:         0       2       0       0       0       0
  9027 ;;Total ram usage:        2 bytes
  9028 ;; Hardware stack levels used:    1
  9029 ;; Hardware stack levels required when called:    4
  9030 ;; This function calls:
  9031 ;;		Nothing
  9032 ;; This function is called by:
  9033 ;;		_PIN_MANAGER_Initialize
  9034 ;;		_main
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           
  9039                           ;psect for function _IOCBF0_SetInterruptHandler
  9040  0899                     _IOCBF0_SetInterruptHandler:	
  9041  0899                     l3697:	
  9042                           ;incstack = 0
  9043                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  9044                           
  9045                           
  9046                           ;mcc_generated_files/pin_manager.c: 178:     IOCBF0_InterruptHandler = InterruptHandler;
  9047  0899  0020               	movlb	0	; select bank0
  9048  089A  0821               	movf	IOCBF0_SetInterruptHandler@InterruptHandler+1,w
  9049  089B  0022               	movlb	2	; select bank2
  9050  089C  00A7               	movwf	(_IOCBF0_InterruptHandler+1)^(0+256)
  9051  089D  0020               	movlb	0	; select bank0
  9052  089E  0820               	movf	IOCBF0_SetInterruptHandler@InterruptHandler,w
  9053  089F  0022               	movlb	2	; select bank2
  9054  08A0  00A6               	movwf	_IOCBF0_InterruptHandler^(0+256)
  9055  08A1                     l428:	
  9056  08A1  0008               	return
  9057  08A2                     __end_of_IOCBF0_SetInterruptHandler:	
  9058                           
  9059                           	psect	text32
  9060  085E                     __ptext32:	
  9061 ;; *************** function _OSCILLATOR_Initialize *****************
  9062 ;; Defined at:
  9063 ;;		line 66 in file "mcc_generated_files/mcc.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;		None
  9066 ;; Auto vars:     Size  Location     Type
  9067 ;;		None
  9068 ;; Return value:  Size  Location     Type
  9069 ;;                  1    wreg      void 
  9070 ;; Registers used:
  9071 ;;		wreg, status,2
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9077 ;;      Params:         0       0       0       0       0       0
  9078 ;;      Locals:         0       0       0       0       0       0
  9079 ;;      Temps:          0       0       0       0       0       0
  9080 ;;      Totals:         0       0       0       0       0       0
  9081 ;;Total ram usage:        0 bytes
  9082 ;; Hardware stack levels used:    1
  9083 ;; Hardware stack levels required when called:    4
  9084 ;; This function calls:
  9085 ;;		Nothing
  9086 ;; This function is called by:
  9087 ;;		_SYSTEM_Initialize
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           
  9092                           ;psect for function _OSCILLATOR_Initialize
  9093  085E                     _OSCILLATOR_Initialize:	
  9094  085E                     l3823:	
  9095                           ;incstack = 0
  9096                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9097                           
  9098                           
  9099                           ;mcc_generated_files/mcc.c: 69:     OSCCON = 0x70;
  9100  085E  3070               	movlw	112
  9101  085F  0021               	movlb	1	; select bank1
  9102  0860  0099               	movwf	25	;volatile
  9103  0861                     l3825:	
  9104                           
  9105                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  9106  0861  0198               	clrf	24	;volatile
  9107  0862                     l3827:	
  9108                           
  9109                           ;mcc_generated_files/mcc.c: 73:     BORCON = 0x00;
  9110  0862  0022               	movlb	2	; select bank2
  9111  0863  0196               	clrf	22	;volatile
  9112  0864                     l124:	
  9113  0864  0008               	return
  9114  0865                     __end_of_OSCILLATOR_Initialize:	
  9115                           
  9116                           	psect	text33
  9117  0844                     __ptext33:	
  9118 ;; *************** function _FVR_Initialize *****************
  9119 ;; Defined at:
  9120 ;;		line 58 in file "mcc_generated_files/fvr.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;		None
  9123 ;; Auto vars:     Size  Location     Type
  9124 ;;		None
  9125 ;; Return value:  Size  Location     Type
  9126 ;;                  1    wreg      void 
  9127 ;; Registers used:
  9128 ;;		wreg
  9129 ;; Tracked objects:
  9130 ;;		On entry : 0/0
  9131 ;;		On exit  : 0/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9134 ;;      Params:         0       0       0       0       0       0
  9135 ;;      Locals:         0       0       0       0       0       0
  9136 ;;      Temps:          0       0       0       0       0       0
  9137 ;;      Totals:         0       0       0       0       0       0
  9138 ;;Total ram usage:        0 bytes
  9139 ;; Hardware stack levels used:    1
  9140 ;; Hardware stack levels required when called:    4
  9141 ;; This function calls:
  9142 ;;		Nothing
  9143 ;; This function is called by:
  9144 ;;		_SYSTEM_Initialize
  9145 ;; This function uses a non-reentrant model
  9146 ;;
  9147                           
  9148                           
  9149                           ;psect for function _FVR_Initialize
  9150  0844                     _FVR_Initialize:	
  9151  0844                     l3831:	
  9152                           ;incstack = 0
  9153                           ; Regs used in _FVR_Initialize: [wreg]
  9154                           
  9155                           
  9156                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x81;
  9157  0844  3081               	movlw	129
  9158  0845  0022               	movlb	2	; select bank2
  9159  0846  0097               	movwf	23	;volatile
  9160  0847                     l320:	
  9161  0847  0008               	return
  9162  0848                     __end_of_FVR_Initialize:	
  9163                           
  9164                           	psect	text34
  9165  0A73                     __ptext34:	
  9166 ;; *************** function _EUSART_Initialize *****************
  9167 ;; Defined at:
  9168 ;;		line 66 in file "mcc_generated_files/eusart.c"
  9169 ;; Parameters:    Size  Location     Type
  9170 ;;		None
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;		None
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  1    wreg      void 
  9175 ;; Registers used:
  9176 ;;		wreg, status,2, status,0, pclath, cstack
  9177 ;; Tracked objects:
  9178 ;;		On entry : 0/0
  9179 ;;		On exit  : 0/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9182 ;;      Params:         0       0       0       0       0       0
  9183 ;;      Locals:         0       0       0       0       0       0
  9184 ;;      Temps:          0       0       0       0       0       0
  9185 ;;      Totals:         0       0       0       0       0       0
  9186 ;;Total ram usage:        0 bytes
  9187 ;; Hardware stack levels used:    1
  9188 ;; Hardware stack levels required when called:    5
  9189 ;; This function calls:
  9190 ;;		_EUSART_SetErrorHandler
  9191 ;;		_EUSART_SetFramingErrorHandler
  9192 ;;		_EUSART_SetOverrunErrorHandler
  9193 ;; This function is called by:
  9194 ;;		_SYSTEM_Initialize
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198                           
  9199                           ;psect for function _EUSART_Initialize
  9200  0A73                     _EUSART_Initialize:	
  9201  0A73                     l3765:	
  9202                           ;incstack = 0
  9203                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9204                           
  9205                           
  9206                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  9207  0A73  3008               	movlw	8
  9208  0A74  0023               	movlb	3	; select bank3
  9209  0A75  009F               	movwf	31	;volatile
  9210                           
  9211                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  9212  0A76  3090               	movlw	144
  9213  0A77  009D               	movwf	29	;volatile
  9214                           
  9215                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  9216  0A78  3024               	movlw	36
  9217  0A79  009E               	movwf	30	;volatile
  9218                           
  9219                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  9220  0A7A  3067               	movlw	103
  9221  0A7B  009B               	movwf	27	;volatile
  9222  0A7C                     l3767:	
  9223                           
  9224                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  9225  0A7C  019C               	clrf	28	;volatile
  9226  0A7D                     l3769:	
  9227                           
  9228                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  9229  0A7D  3000               	movlw	0
  9230  0A7E  0020               	movlb	0	; select bank0
  9231  0A7F  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  9232  0A80  3000               	movlw	0
  9233  0A81  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  9234  0A82  3188  2087  318A   	fcall	_EUSART_SetFramingErrorHandler
  9235  0A85                     l3771:	
  9236                           
  9237                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  9238  0A85  3000               	movlw	0
  9239  0A86  0020               	movlb	0	; select bank0
  9240  0A87  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  9241  0A88  3000               	movlw	0
  9242  0A89  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  9243  0A8A  3188  2090  318A   	fcall	_EUSART_SetOverrunErrorHandler
  9244  0A8D                     l3773:	
  9245                           
  9246                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  9247  0A8D  3000               	movlw	0
  9248  0A8E  0020               	movlb	0	; select bank0
  9249  0A8F  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  9250  0A90  3000               	movlw	0
  9251  0A91  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  9252  0A92  3188  207E  318A   	fcall	_EUSART_SetErrorHandler
  9253  0A95                     l3775:	
  9254                           
  9255                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  9256  0A95  01F6               	clrf	_eusartRxLastError	;volatile
  9257  0A96                     l43:	
  9258  0A96  0008               	return
  9259  0A97                     __end_of_EUSART_Initialize:	
  9260                           
  9261                           	psect	text35
  9262  0890                     __ptext35:	
  9263 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  9264 ;; Defined at:
  9265 ;;		line 161 in file "mcc_generated_files/eusart.c"
  9266 ;; Parameters:    Size  Location     Type
  9267 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9268 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;		None
  9271 ;; Return value:  Size  Location     Type
  9272 ;;                  1    wreg      void 
  9273 ;; Registers used:
  9274 ;;		wreg
  9275 ;; Tracked objects:
  9276 ;;		On entry : 0/0
  9277 ;;		On exit  : 0/0
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9280 ;;      Params:         0       2       0       0       0       0
  9281 ;;      Locals:         0       0       0       0       0       0
  9282 ;;      Temps:          0       0       0       0       0       0
  9283 ;;      Totals:         0       2       0       0       0       0
  9284 ;;Total ram usage:        2 bytes
  9285 ;; Hardware stack levels used:    1
  9286 ;; Hardware stack levels required when called:    4
  9287 ;; This function calls:
  9288 ;;		Nothing
  9289 ;; This function is called by:
  9290 ;;		_EUSART_Initialize
  9291 ;; This function uses a non-reentrant model
  9292 ;;
  9293                           
  9294                           
  9295                           ;psect for function _EUSART_SetOverrunErrorHandler
  9296  0890                     _EUSART_SetOverrunErrorHandler:	
  9297  0890                     l3689:	
  9298                           ;incstack = 0
  9299                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  9300                           
  9301                           
  9302                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  9303  0890  0020               	movlb	0	; select bank0
  9304  0891  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  9305  0892  0022               	movlb	2	; select bank2
  9306  0893  00AD               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  9307  0894  0020               	movlb	0	; select bank0
  9308  0895  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  9309  0896  0022               	movlb	2	; select bank2
  9310  0897  00AC               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  9311  0898                     l85:	
  9312  0898  0008               	return
  9313  0899                     __end_of_EUSART_SetOverrunErrorHandler:	
  9314                           
  9315                           	psect	text36
  9316  0887                     __ptext36:	
  9317 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  9318 ;; Defined at:
  9319 ;;		line 157 in file "mcc_generated_files/eusart.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9322 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;		None
  9325 ;; Return value:  Size  Location     Type
  9326 ;;                  1    wreg      void 
  9327 ;; Registers used:
  9328 ;;		wreg
  9329 ;; Tracked objects:
  9330 ;;		On entry : 0/0
  9331 ;;		On exit  : 0/0
  9332 ;;		Unchanged: 0/0
  9333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9334 ;;      Params:         0       2       0       0       0       0
  9335 ;;      Locals:         0       0       0       0       0       0
  9336 ;;      Temps:          0       0       0       0       0       0
  9337 ;;      Totals:         0       2       0       0       0       0
  9338 ;;Total ram usage:        2 bytes
  9339 ;; Hardware stack levels used:    1
  9340 ;; Hardware stack levels required when called:    4
  9341 ;; This function calls:
  9342 ;;		Nothing
  9343 ;; This function is called by:
  9344 ;;		_EUSART_Initialize
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348                           
  9349                           ;psect for function _EUSART_SetFramingErrorHandler
  9350  0887                     _EUSART_SetFramingErrorHandler:	
  9351  0887                     l3687:	
  9352                           ;incstack = 0
  9353                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9354                           
  9355                           
  9356                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  9357  0887  0020               	movlb	0	; select bank0
  9358  0888  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  9359  0889  0022               	movlb	2	; select bank2
  9360  088A  00AF               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  9361  088B  0020               	movlb	0	; select bank0
  9362  088C  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  9363  088D  0022               	movlb	2	; select bank2
  9364  088E  00AE               	movwf	_EUSART_FramingErrorHandler^(0+256)
  9365  088F                     l82:	
  9366  088F  0008               	return
  9367  0890                     __end_of_EUSART_SetFramingErrorHandler:	
  9368                           
  9369                           	psect	text37
  9370  087E                     __ptext37:	
  9371 ;; *************** function _EUSART_SetErrorHandler *****************
  9372 ;; Defined at:
  9373 ;;		line 165 in file "mcc_generated_files/eusart.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9376 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9377 ;; Auto vars:     Size  Location     Type
  9378 ;;		None
  9379 ;; Return value:  Size  Location     Type
  9380 ;;                  1    wreg      void 
  9381 ;; Registers used:
  9382 ;;		wreg
  9383 ;; Tracked objects:
  9384 ;;		On entry : 0/0
  9385 ;;		On exit  : 0/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9388 ;;      Params:         0       2       0       0       0       0
  9389 ;;      Locals:         0       0       0       0       0       0
  9390 ;;      Temps:          0       0       0       0       0       0
  9391 ;;      Totals:         0       2       0       0       0       0
  9392 ;;Total ram usage:        2 bytes
  9393 ;; Hardware stack levels used:    1
  9394 ;; Hardware stack levels required when called:    4
  9395 ;; This function calls:
  9396 ;;		Nothing
  9397 ;; This function is called by:
  9398 ;;		_EUSART_Initialize
  9399 ;; This function uses a non-reentrant model
  9400 ;;
  9401                           
  9402                           
  9403                           ;psect for function _EUSART_SetErrorHandler
  9404  087E                     _EUSART_SetErrorHandler:	
  9405  087E                     l3691:	
  9406                           ;incstack = 0
  9407                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9408                           
  9409                           
  9410                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  9411  087E  0020               	movlb	0	; select bank0
  9412  087F  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9413  0880  0022               	movlb	2	; select bank2
  9414  0881  00AB               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  9415  0882  0020               	movlb	0	; select bank0
  9416  0883  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9417  0884  0022               	movlb	2	; select bank2
  9418  0885  00AA               	movwf	_EUSART_ErrorHandler^(0+256)
  9419  0886                     l88:	
  9420  0886  0008               	return
  9421  0887                     __end_of_EUSART_SetErrorHandler:	
  9422                           
  9423                           	psect	text38
  9424  097B                     __ptext38:	
  9425 ;; *************** function _CCP4_Initialize *****************
  9426 ;; Defined at:
  9427 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  9428 ;; Parameters:    Size  Location     Type
  9429 ;;		None
  9430 ;; Auto vars:     Size  Location     Type
  9431 ;;		None
  9432 ;; Return value:  Size  Location     Type
  9433 ;;                  1    wreg      void 
  9434 ;; Registers used:
  9435 ;;		wreg, status,2, status,0, pclath, cstack
  9436 ;; Tracked objects:
  9437 ;;		On entry : 0/0
  9438 ;;		On exit  : 0/0
  9439 ;;		Unchanged: 0/0
  9440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9441 ;;      Params:         0       0       0       0       0       0
  9442 ;;      Locals:         0       0       0       0       0       0
  9443 ;;      Temps:          0       0       0       0       0       0
  9444 ;;      Totals:         0       0       0       0       0       0
  9445 ;;Total ram usage:        0 bytes
  9446 ;; Hardware stack levels used:    1
  9447 ;; Hardware stack levels required when called:    5
  9448 ;; This function calls:
  9449 ;;		_CCP4_SetCallBack
  9450 ;; This function is called by:
  9451 ;;		_SYSTEM_Initialize
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           
  9456                           ;psect for function _CCP4_Initialize
  9457  097B                     _CCP4_Initialize:	
  9458  097B                     l3833:	
  9459                           ;incstack = 0
  9460                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9461                           
  9462                           
  9463                           ;mcc_generated_files/ccp4.c: 70:  CCP4CON = 0x05;
  9464  097B  3005               	movlw	5
  9465  097C  0026               	movlb	6	; select bank6
  9466  097D  009A               	movwf	26	;volatile
  9467  097E                     l3835:	
  9468                           
  9469                           ;mcc_generated_files/ccp4.c: 73:  CCPR4L = 0x00;
  9470  097E  0198               	clrf	24	;volatile
  9471  097F                     l3837:	
  9472                           
  9473                           ;mcc_generated_files/ccp4.c: 76:  CCPR4H = 0x00;
  9474  097F  0199               	clrf	25	;volatile
  9475  0980                     l3839:	
  9476                           
  9477                           ;mcc_generated_files/ccp4.c: 79:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  9478  0980  3040               	movlw	low _CCP4_DefaultCallBack
  9479  0981  0020               	movlb	0	; select bank0
  9480  0982  00A0               	movwf	CCP4_SetCallBack@customCallBack
  9481  0983  3008               	movlw	high _CCP4_DefaultCallBack
  9482  0984  00A1               	movwf	CCP4_SetCallBack@customCallBack+1
  9483  0985  3188  2075  3189   	fcall	_CCP4_SetCallBack
  9484  0988                     l3841:	
  9485                           
  9486                           ;mcc_generated_files/ccp4.c: 83:     PIR3bits.CCP4IF = 0;
  9487  0988  0020               	movlb	0	; select bank0
  9488  0989  1293               	bcf	19,5	;volatile
  9489  098A                     l3843:	
  9490                           
  9491                           ;mcc_generated_files/ccp4.c: 86:     PIE3bits.CCP4IE = 1;
  9492  098A  0021               	movlb	1	; select bank1
  9493  098B  1693               	bsf	19,5	;volatile
  9494  098C                     l343:	
  9495  098C  0008               	return
  9496  098D                     __end_of_CCP4_Initialize:	
  9497                           
  9498                           	psect	text39
  9499  0875                     __ptext39:	
  9500 ;; *************** function _CCP4_SetCallBack *****************
  9501 ;; Defined at:
  9502 ;;		line 104 in file "mcc_generated_files/ccp4.c"
  9503 ;; Parameters:    Size  Location     Type
  9504 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  9505 ;;		 -> get_pulse(1), CCP4_DefaultCallBack(1), 
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;		None
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1    wreg      void 
  9510 ;; Registers used:
  9511 ;;		wreg
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9517 ;;      Params:         0       2       0       0       0       0
  9518 ;;      Locals:         0       0       0       0       0       0
  9519 ;;      Temps:          0       0       0       0       0       0
  9520 ;;      Totals:         0       2       0       0       0       0
  9521 ;;Total ram usage:        2 bytes
  9522 ;; Hardware stack levels used:    1
  9523 ;; Hardware stack levels required when called:    4
  9524 ;; This function calls:
  9525 ;;		Nothing
  9526 ;; This function is called by:
  9527 ;;		_CCP4_Initialize
  9528 ;;		_main
  9529 ;; This function uses a non-reentrant model
  9530 ;;
  9531                           
  9532                           
  9533                           ;psect for function _CCP4_SetCallBack
  9534  0875                     _CCP4_SetCallBack:	
  9535  0875                     l3695:	
  9536                           ;incstack = 0
  9537                           ; Regs used in _CCP4_SetCallBack: [wreg]
  9538                           
  9539                           
  9540                           ;mcc_generated_files/ccp4.c: 105:     CCP4_CallBack = customCallBack;
  9541  0875  0020               	movlb	0	; select bank0
  9542  0876  0821               	movf	CCP4_SetCallBack@customCallBack+1,w
  9543  0877  0022               	movlb	2	; select bank2
  9544  0878  00A9               	movwf	(_CCP4_CallBack+1)^(0+256)
  9545  0879  0020               	movlb	0	; select bank0
  9546  087A  0820               	movf	CCP4_SetCallBack@customCallBack,w
  9547  087B  0022               	movlb	2	; select bank2
  9548  087C  00A8               	movwf	_CCP4_CallBack^(0+256)
  9549  087D                     l349:	
  9550  087D  0008               	return
  9551  087E                     __end_of_CCP4_SetCallBack:	
  9552                           
  9553                           	psect	text40
  9554  0865                     __ptext40:	
  9555 ;; *************** function _ADC_Initialize *****************
  9556 ;; Defined at:
  9557 ;;		line 67 in file "mcc_generated_files/adc.c"
  9558 ;; Parameters:    Size  Location     Type
  9559 ;;		None
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;		None
  9562 ;; Return value:  Size  Location     Type
  9563 ;;                  1    wreg      void 
  9564 ;; Registers used:
  9565 ;;		wreg, status,2
  9566 ;; Tracked objects:
  9567 ;;		On entry : 0/0
  9568 ;;		On exit  : 0/0
  9569 ;;		Unchanged: 0/0
  9570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9571 ;;      Params:         0       0       0       0       0       0
  9572 ;;      Locals:         0       0       0       0       0       0
  9573 ;;      Temps:          0       0       0       0       0       0
  9574 ;;      Totals:         0       0       0       0       0       0
  9575 ;;Total ram usage:        0 bytes
  9576 ;; Hardware stack levels used:    1
  9577 ;; Hardware stack levels required when called:    4
  9578 ;; This function calls:
  9579 ;;		Nothing
  9580 ;; This function is called by:
  9581 ;;		_SYSTEM_Initialize
  9582 ;; This function uses a non-reentrant model
  9583 ;;
  9584                           
  9585                           
  9586                           ;psect for function _ADC_Initialize
  9587  0865                     _ADC_Initialize:	
  9588  0865                     l3845:	
  9589                           ;incstack = 0
  9590                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9591                           
  9592                           
  9593                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  9594  0865  30D3               	movlw	211
  9595  0866  0021               	movlb	1	; select bank1
  9596  0867  009E               	movwf	30	;volatile
  9597  0868                     l3847:	
  9598                           
  9599                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  9600  0868  019B               	clrf	27	;volatile
  9601  0869                     l3849:	
  9602                           
  9603                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  9604  0869  019C               	clrf	28	;volatile
  9605                           
  9606                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  9607  086A  3001               	movlw	1
  9608  086B  009D               	movwf	29	;volatile
  9609  086C                     l267:	
  9610  086C  0008               	return
  9611  086D                     __end_of_ADC_Initialize:	
  9612                           
  9613                           	psect	intentry
  9614  0004                     __pintentry:	
  9615 ;; *************** function _INTERRUPT_InterruptManager *****************
  9616 ;; Defined at:
  9617 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;		None
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;		None
  9622 ;; Return value:  Size  Location     Type
  9623 ;;                  1    wreg      void 
  9624 ;; Registers used:
  9625 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/0
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9631 ;;      Params:         0       0       0       0       0       0
  9632 ;;      Locals:         0       0       0       0       0       0
  9633 ;;      Temps:          0       0       0       0       0       0
  9634 ;;      Totals:         0       0       0       0       0       0
  9635 ;;Total ram usage:        0 bytes
  9636 ;; Hardware stack levels used:    1
  9637 ;; Hardware stack levels required when called:    3
  9638 ;; This function calls:
  9639 ;;		_CCP4_CaptureISR
  9640 ;;		_PIN_MANAGER_IOC
  9641 ;;		_TMR4_ISR
  9642 ;; This function is called by:
  9643 ;;		Interrupt level 1
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647  0004                     _INTERRUPT_InterruptManager:	
  9648                           
  9649                           ;incstack = 0
  9650  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  9651                           
  9652                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  9653  0005  3180               	pagesel	$
  9654  0006                     i1l3503:	
  9655                           
  9656                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  9657  0006  1D8B               	btfss	11,3	;volatile
  9658  0007  2809               	goto	u355_21
  9659  0008  280A               	goto	u355_20
  9660  0009                     u355_21:	
  9661  0009  2812               	goto	i1l305
  9662  000A                     u355_20:	
  9663  000A                     i1l3505:	
  9664  000A  1C0B               	btfss	11,0	;volatile
  9665  000B  280D               	goto	u356_21
  9666  000C  280E               	goto	u356_20
  9667  000D                     u356_21:	
  9668  000D  2812               	goto	i1l305
  9669  000E                     u356_20:	
  9670  000E                     i1l3507:	
  9671                           
  9672                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  9673  000E  318A  220F  3180   	fcall	_PIN_MANAGER_IOC
  9674                           
  9675                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  9676  0011  2832               	goto	i1l313
  9677  0012                     i1l305:	
  9678                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  9679                           
  9680  0012  1F0B               	btfss	11,6	;volatile
  9681  0013  2815               	goto	u357_21
  9682  0014  2816               	goto	u357_20
  9683  0015                     u357_21:	
  9684  0015  2832               	goto	i1l313
  9685  0016                     u357_20:	
  9686  0016                     i1l3509:	
  9687                           
  9688                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.CCP4IE == 1 && PIR3bits.CCP4IF == 1)
  9689  0016  0021               	movlb	1	; select bank1
  9690  0017  1E93               	btfss	19,5	;volatile
  9691  0018  281A               	goto	u358_21
  9692  0019  281B               	goto	u358_20
  9693  001A                     u358_21:	
  9694  001A  2824               	goto	i1l308
  9695  001B                     u358_20:	
  9696  001B                     i1l3511:	
  9697  001B  0020               	movlb	0	; select bank0
  9698  001C  1E93               	btfss	19,5	;volatile
  9699  001D  281F               	goto	u359_21
  9700  001E  2820               	goto	u359_20
  9701  001F                     u359_21:	
  9702  001F  2824               	goto	i1l308
  9703  0020                     u359_20:	
  9704  0020                     i1l3513:	
  9705                           
  9706                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             CCP4_CaptureISR();
  9707  0020  3189  21A1  3180   	fcall	_CCP4_CaptureISR
  9708                           
  9709                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  9710  0023  2832               	goto	i1l313
  9711  0024                     i1l308:	
  9712                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.TMR4IE == 1 && PI
      +                          R3bits.TMR4IF == 1)
  9713                           
  9714  0024  0021               	movlb	1	; select bank1
  9715  0025  1C93               	btfss	19,1	;volatile
  9716  0026  2828               	goto	u360_21
  9717  0027  2829               	goto	u360_20
  9718  0028                     u360_21:	
  9719  0028  2832               	goto	i1l312
  9720  0029                     u360_20:	
  9721  0029                     i1l3515:	
  9722  0029  0020               	movlb	0	; select bank0
  9723  002A  1C93               	btfss	19,1	;volatile
  9724  002B  282D               	goto	u361_21
  9725  002C  282E               	goto	u361_20
  9726  002D                     u361_21:	
  9727  002D  2832               	goto	i1l312
  9728  002E                     u361_20:	
  9729  002E                     i1l3517:	
  9730                           
  9731                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR4_ISR();
  9732  002E  3189  213C  3180   	fcall	_TMR4_ISR
  9733                           
  9734                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  9735  0031  2832               	goto	i1l313
  9736  0032                     i1l312:	
  9737                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  9738                           
  9739  0032                     i1l313:	
  9740  0032  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9741  0033  0009               	retfie
  9742  0034                     __end_of_INTERRUPT_InterruptManager:	
  9743                           
  9744                           	psect	text42
  9745  093C                     __ptext42:	
  9746 ;; *************** function _TMR4_ISR *****************
  9747 ;; Defined at:
  9748 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  9749 ;; Parameters:    Size  Location     Type
  9750 ;;		None
  9751 ;; Auto vars:     Size  Location     Type
  9752 ;;		None
  9753 ;; Return value:  Size  Location     Type
  9754 ;;                  1    wreg      void 
  9755 ;; Registers used:
  9756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9757 ;; Tracked objects:
  9758 ;;		On entry : 0/0
  9759 ;;		On exit  : 0/0
  9760 ;;		Unchanged: 0/0
  9761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9762 ;;      Params:         0       0       0       0       0       0
  9763 ;;      Locals:         0       0       0       0       0       0
  9764 ;;      Temps:          0       0       0       0       0       0
  9765 ;;      Totals:         0       0       0       0       0       0
  9766 ;;Total ram usage:        0 bytes
  9767 ;; Hardware stack levels used:    1
  9768 ;; Hardware stack levels required when called:    2
  9769 ;; This function calls:
  9770 ;;		Absolute function
  9771 ;;		_TMR4_DefaultInterruptHandler
  9772 ;;		_send_data
  9773 ;; This function is called by:
  9774 ;;		_INTERRUPT_InterruptManager
  9775 ;; This function uses a non-reentrant model
  9776 ;;
  9777                           
  9778                           
  9779                           ;psect for function _TMR4_ISR
  9780  093C                     _TMR4_ISR:	
  9781  093C                     i1l3419:	
  9782                           ;incstack = 0
  9783                           ; Regs used in _TMR4_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9784                           
  9785                           
  9786                           ;mcc_generated_files/tmr4.c: 123:     PIR3bits.TMR4IF = 0;
  9787  093C  0020               	movlb	0	; select bank0
  9788  093D  1093               	bcf	19,1	;volatile
  9789  093E                     i1l3421:	
  9790                           
  9791                           ;mcc_generated_files/tmr4.c: 125:     if(TMR4_InterruptHandler)
  9792  093E  0021               	movlb	1	; select bank1
  9793  093F  086B               	movf	_TMR4_InterruptHandler^(0+128),w
  9794  0940  046C               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
  9795  0941  1903               	btfsc	3,2
  9796  0942  2944               	goto	u339_21
  9797  0943  2945               	goto	u339_20
  9798  0944                     u339_21:	
  9799  0944  294A               	goto	i1l244
  9800  0945                     u339_20:	
  9801  0945                     i1l3423:	
  9802                           
  9803                           ;mcc_generated_files/tmr4.c: 126:     {;mcc_generated_files/tmr4.c: 127:         TMR4_In
      +                          terruptHandler();
  9804  0945  086C               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
  9805  0946  008A               	movwf	10
  9806  0947  086B               	movf	_TMR4_InterruptHandler^(0+128),w
  9807  0948  000A               	callw
  9808  0949  3189               	pagesel	$
  9809  094A                     i1l244:	
  9810  094A  0008               	return
  9811  094B                     __end_of_TMR4_ISR:	
  9812                           
  9813                           	psect	text43
  9814  0003                     __ptext43:	
  9815 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  9816 ;; Defined at:
  9817 ;;		line 136 in file "mcc_generated_files/tmr4.c"
  9818 ;; Parameters:    Size  Location     Type
  9819 ;;		None
  9820 ;; Auto vars:     Size  Location     Type
  9821 ;;		None
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  1    wreg      void 
  9824 ;; Registers used:
  9825 ;;		None
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9831 ;;      Params:         0       0       0       0       0       0
  9832 ;;      Locals:         0       0       0       0       0       0
  9833 ;;      Temps:          0       0       0       0       0       0
  9834 ;;      Totals:         0       0       0       0       0       0
  9835 ;;Total ram usage:        0 bytes
  9836 ;; Hardware stack levels used:    1
  9837 ;; This function calls:
  9838 ;;		Nothing
  9839 ;; This function is called by:
  9840 ;;		_TMR4_Initialize
  9841 ;;		_TMR4_ISR
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845                           
  9846                           ;psect for function _TMR4_DefaultInterruptHandler
  9847  0003                     _TMR4_DefaultInterruptHandler:	
  9848  0003                     i1l250:	
  9849                           ;incstack = 0
  9850                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  9851                           
  9852  0003  0008               	return
  9853  0004                     __end_of_TMR4_DefaultInterruptHandler:	
  9854                           
  9855                           	psect	text44
  9856  0AE0                     __ptext44:	
  9857 ;; *************** function _send_data *****************
  9858 ;; Defined at:
  9859 ;;		line 70 in file "main.c"
  9860 ;; Parameters:    Size  Location     Type
  9861 ;;		None
  9862 ;; Auto vars:     Size  Location     Type
  9863 ;;  i               2    2[COMMON] int 
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  1    wreg      void 
  9866 ;; Registers used:
  9867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/0
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9873 ;;      Params:         0       0       0       0       0       0
  9874 ;;      Locals:         2       0       0       0       0       0
  9875 ;;      Temps:          1       0       0       0       0       0
  9876 ;;      Totals:         3       0       0       0       0       0
  9877 ;;Total ram usage:        3 bytes
  9878 ;; Hardware stack levels used:    1
  9879 ;; Hardware stack levels required when called:    1
  9880 ;; This function calls:
  9881 ;;		_EUSART_Write
  9882 ;;		_EUSART_is_tx_ready
  9883 ;; This function is called by:
  9884 ;;		_main
  9885 ;;		_TMR4_ISR
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           
  9890                           ;psect for function _send_data
  9891  0AE0                     _send_data:	
  9892  0AE0                     i1l3159:	
  9893                           ;incstack = 0
  9894                           ; Regs used in _send_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9895                           
  9896                           
  9897                           ;main.c: 72:         aux_tempo++;
  9898  0AE0  3001               	movlw	1
  9899  0AE1  0021               	movlb	1	; select bank1
  9900  0AE2  07D6               	addwf	_aux_tempo^(0+128),f
  9901  0AE3  3000               	movlw	0
  9902  0AE4  3DD7               	addwfc	(_aux_tempo+1)^(0+128),f
  9903  0AE5                     i1l3161:	
  9904                           
  9905                           ;main.c: 73:         if(aux_tempo == 14)
  9906  0AE5  300E               	movlw	14
  9907  0AE6  0656               	xorwf	_aux_tempo^(0+128),w
  9908  0AE7  0457               	iorwf	(_aux_tempo+1)^(0+128),w
  9909  0AE8  1D03               	btfss	3,2
  9910  0AE9  2AEB               	goto	u284_21
  9911  0AEA  2AEC               	goto	u284_20
  9912  0AEB                     u284_21:	
  9913  0AEB  2B14               	goto	i1l579
  9914  0AEC                     u284_20:	
  9915  0AEC                     i1l3163:	
  9916                           
  9917                           ;main.c: 74:         {;main.c: 75:             int i=0;
  9918  0AEC  01F9               	clrf	send_data@i
  9919  0AED  01FA               	clrf	send_data@i+1
  9920                           
  9921                           ;main.c: 76:             while(i<5)
  9922  0AEE  2B04               	goto	i1l3171
  9923  0AEF                     i1l3165:	
  9924                           
  9925                           ;main.c: 77:             {;main.c: 78:                 if(EUSART_is_tx_ready())
  9926  0AEF  3189  212D  318A   	fcall	_EUSART_is_tx_ready
  9927  0AF2  3A00               	xorlw	0
  9928  0AF3  1903               	skipnz
  9929  0AF4  2AF6               	goto	u285_21
  9930  0AF5  2AF7               	goto	u285_20
  9931  0AF6                     u285_21:	
  9932  0AF6  2B04               	goto	i1l3171
  9933  0AF7                     u285_20:	
  9934  0AF7                     i1l3167:	
  9935                           
  9936                           ;main.c: 79:                     {;main.c: 80:                         EUSART_Write(byte
      +                          [i]);
  9937  0AF7  0879               	movf	send_data@i,w
  9938  0AF8  3E30               	addlw	(low (_byte| (0+256)))& (0+255)
  9939  0AF9  0086               	movwf	6
  9940  0AFA  3001               	movlw	1	; select bank2/3
  9941  0AFB  0087               	movwf	7
  9942  0AFC  0801               	movf	1,w
  9943  0AFD  3188  20C6  318A   	fcall	_EUSART_Write
  9944  0B00                     i1l3169:	
  9945                           
  9946                           ;main.c: 81:                         i++;
  9947  0B00  3001               	movlw	1
  9948  0B01  07F9               	addwf	send_data@i,f
  9949  0B02  3000               	movlw	0
  9950  0B03  3DFA               	addwfc	send_data@i+1,f
  9951  0B04                     i1l3171:	
  9952                           
  9953                           ;main.c: 76:             while(i<5)
  9954  0B04  087A               	movf	send_data@i+1,w
  9955  0B05  3A80               	xorlw	128
  9956  0B06  00F8               	movwf	??_send_data
  9957  0B07  3080               	movlw	128
  9958  0B08  0278               	subwf	??_send_data,w
  9959  0B09  1D03               	skipz
  9960  0B0A  2B0D               	goto	u286_25
  9961  0B0B  3005               	movlw	5
  9962  0B0C  0279               	subwf	send_data@i,w
  9963  0B0D                     u286_25:	
  9964  0B0D  1C03               	skipc
  9965  0B0E  2B10               	goto	u286_21
  9966  0B0F  2B11               	goto	u286_20
  9967  0B10                     u286_21:	
  9968  0B10  2AEF               	goto	i1l3165
  9969  0B11                     u286_20:	
  9970  0B11                     i1l3173:	
  9971                           
  9972                           ;main.c: 85:             aux_tempo =0;
  9973  0B11  0021               	movlb	1	; select bank1
  9974  0B12  01D6               	clrf	_aux_tempo^(0+128)
  9975  0B13  01D7               	clrf	(_aux_tempo+1)^(0+128)
  9976  0B14                     i1l579:	
  9977  0B14  0008               	return
  9978  0B15                     __end_of_send_data:	
  9979                           
  9980                           	psect	text45
  9981  092D                     __ptext45:	
  9982 ;; *************** function _EUSART_is_tx_ready *****************
  9983 ;; Defined at:
  9984 ;;		line 94 in file "mcc_generated_files/eusart.c"
  9985 ;; Parameters:    Size  Location     Type
  9986 ;;		None
  9987 ;; Auto vars:     Size  Location     Type
  9988 ;;		None
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  1    wreg      _Bool 
  9991 ;; Registers used:
  9992 ;;		wreg, status,2
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9998 ;;      Params:         0       0       0       0       0       0
  9999 ;;      Locals:         1       0       0       0       0       0
 10000 ;;      Temps:          0       0       0       0       0       0
 10001 ;;      Totals:         1       0       0       0       0       0
 10002 ;;Total ram usage:        1 bytes
 10003 ;; Hardware stack levels used:    1
 10004 ;; This function calls:
 10005 ;;		Nothing
 10006 ;; This function is called by:
 10007 ;;		_send_data
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011                           
 10012                           ;psect for function _EUSART_is_tx_ready
 10013  092D                     _EUSART_is_tx_ready:	
 10014  092D                     i1l2929:	
 10015                           ;incstack = 0
 10016                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
 10017                           
 10018                           
 10019                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
 10020  092D  01F7               	clrf	_EUSART_is_tx_ready$167
 10021  092E                     i1l2931:	
 10022  092E  0020               	movlb	0	; select bank0
 10023  092F  1E11               	btfss	17,4	;volatile
 10024  0930  2932               	goto	u270_21
 10025  0931  2933               	goto	u270_20
 10026  0932                     u270_21:	
 10027  0932  293A               	goto	i1l2937
 10028  0933                     u270_20:	
 10029  0933                     i1l2933:	
 10030  0933  0023               	movlb	3	; select bank3
 10031  0934  1E9E               	btfss	30,5	;volatile
 10032  0935  2937               	goto	u271_21
 10033  0936  2938               	goto	u271_20
 10034  0937                     u271_21:	
 10035  0937  293A               	goto	i1l2937
 10036  0938                     u271_20:	
 10037  0938                     i1l2935:	
 10038  0938  01F7               	clrf	_EUSART_is_tx_ready$167
 10039  0939  0AF7               	incf	_EUSART_is_tx_ready$167,f
 10040  093A                     i1l2937:	
 10041  093A  0877               	movf	_EUSART_is_tx_ready$167,w
 10042  093B                     i1l48:	
 10043  093B  0008               	return
 10044  093C                     __end_of_EUSART_is_tx_ready:	
 10045                           
 10046                           	psect	text46
 10047  08C6                     __ptext46:	
 10048 ;; *************** function _EUSART_Write *****************
 10049 ;; Defined at:
 10050 ;;		line 132 in file "mcc_generated_files/eusart.c"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;  txData          1    wreg     unsigned char 
 10053 ;; Auto vars:     Size  Location     Type
 10054 ;;  txData          1    0[COMMON] unsigned char 
 10055 ;; Return value:  Size  Location     Type
 10056 ;;                  1    wreg      void 
 10057 ;; Registers used:
 10058 ;;		wreg
 10059 ;; Tracked objects:
 10060 ;;		On entry : 0/0
 10061 ;;		On exit  : 0/0
 10062 ;;		Unchanged: 0/0
 10063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10064 ;;      Params:         0       0       0       0       0       0
 10065 ;;      Locals:         1       0       0       0       0       0
 10066 ;;      Temps:          0       0       0       0       0       0
 10067 ;;      Totals:         1       0       0       0       0       0
 10068 ;;Total ram usage:        1 bytes
 10069 ;; Hardware stack levels used:    1
 10070 ;; This function calls:
 10071 ;;		Nothing
 10072 ;; This function is called by:
 10073 ;;		_send_data
 10074 ;; This function uses a non-reentrant model
 10075 ;;
 10076                           
 10077                           
 10078                           ;psect for function _EUSART_Write
 10079  08C6                     _EUSART_Write:	
 10080                           
 10081                           ;incstack = 0
 10082                           ; Regs used in _EUSART_Write: [wreg]
 10083                           ;EUSART_Write@txData stored from wreg
 10084  08C6  00F7               	movwf	EUSART_Write@txData
 10085  08C7                     i1l2941:	
 10086  08C7                     i1l67:	
 10087                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
 10088                           
 10089                           
 10090                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
 10091  08C7  0020               	movlb	0	; select bank0
 10092  08C8  1E11               	btfss	17,4	;volatile
 10093  08C9  28CB               	goto	u272_21
 10094  08CA  28CC               	goto	u272_20
 10095  08CB                     u272_21:	
 10096  08CB  28C7               	goto	i1l67
 10097  08CC                     u272_20:	
 10098  08CC                     i1l2943:	
 10099                           
 10100                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
 10101  08CC  0877               	movf	EUSART_Write@txData,w
 10102  08CD  0023               	movlb	3	; select bank3
 10103  08CE  009A               	movwf	26	;volatile
 10104  08CF                     i1l70:	
 10105  08CF  0008               	return
 10106  08D0                     __end_of_EUSART_Write:	
 10107                           
 10108                           	psect	text47
 10109  0A0F                     __ptext47:	
 10110 ;; *************** function _PIN_MANAGER_IOC *****************
 10111 ;; Defined at:
 10112 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;		None
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;		None
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  1    wreg      void 
 10119 ;; Registers used:
 10120 ;;		wreg, status,2, status,0, pclath, cstack
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/0
 10123 ;;		On exit  : 0/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10126 ;;      Params:         0       0       0       0       0       0
 10127 ;;      Locals:         0       0       0       0       0       0
 10128 ;;      Temps:          0       0       0       0       0       0
 10129 ;;      Totals:         0       0       0       0       0       0
 10130 ;;Total ram usage:        0 bytes
 10131 ;; Hardware stack levels used:    1
 10132 ;; Hardware stack levels required when called:    2
 10133 ;; This function calls:
 10134 ;;		_IOCBF0_ISR
 10135 ;;		_IOCBF3_ISR
 10136 ;;		_IOCBF4_ISR
 10137 ;;		_IOCBF5_ISR
 10138 ;; This function is called by:
 10139 ;;		_INTERRUPT_InterruptManager
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143                           
 10144                           ;psect for function _PIN_MANAGER_IOC
 10145  0A0F                     _PIN_MANAGER_IOC:	
 10146  0A0F                     i1l3425:	
 10147                           ;incstack = 0
 10148                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 10149                           
 10150                           
 10151                           ;mcc_generated_files/pin_manager.c: 138:     if(IOCBFbits.IOCBF0 == 1)
 10152  0A0F  0027               	movlb	7	; select bank7
 10153  0A10  1C16               	btfss	22,0	;volatile
 10154  0A11  2A13               	goto	u340_21
 10155  0A12  2A14               	goto	u340_20
 10156  0A13                     u340_21:	
 10157  0A13  2A17               	goto	i1l3429
 10158  0A14                     u340_20:	
 10159  0A14                     i1l3427:	
 10160                           
 10161                           ;mcc_generated_files/pin_manager.c: 139:     {;mcc_generated_files/pin_manager.c: 140:  
      +                                 IOCBF0_ISR();
 10162  0A14  3188  20F1  318A   	fcall	_IOCBF0_ISR
 10163  0A17                     i1l3429:	
 10164                           
 10165                           ;mcc_generated_files/pin_manager.c: 143:     if(IOCBFbits.IOCBF3 == 1)
 10166  0A17  0027               	movlb	7	; select bank7
 10167  0A18  1D96               	btfss	22,3	;volatile
 10168  0A19  2A1B               	goto	u341_21
 10169  0A1A  2A1C               	goto	u341_20
 10170  0A1B                     u341_21:	
 10171  0A1B  2A1F               	goto	i1l3433
 10172  0A1C                     u341_20:	
 10173  0A1C                     i1l3431:	
 10174                           
 10175                           ;mcc_generated_files/pin_manager.c: 144:     {;mcc_generated_files/pin_manager.c: 145:  
      +                                 IOCBF3_ISR();
 10176  0A1C  3189  2100  318A   	fcall	_IOCBF3_ISR
 10177  0A1F                     i1l3433:	
 10178                           
 10179                           ;mcc_generated_files/pin_manager.c: 148:     if(IOCBFbits.IOCBF4 == 1)
 10180  0A1F  0027               	movlb	7	; select bank7
 10181  0A20  1E16               	btfss	22,4	;volatile
 10182  0A21  2A23               	goto	u342_21
 10183  0A22  2A24               	goto	u342_20
 10184  0A23                     u342_21:	
 10185  0A23  2A27               	goto	i1l3437
 10186  0A24                     u342_20:	
 10187  0A24                     i1l3435:	
 10188                           
 10189                           ;mcc_generated_files/pin_manager.c: 149:     {;mcc_generated_files/pin_manager.c: 150:  
      +                                 IOCBF4_ISR();
 10190  0A24  3189  210F  318A   	fcall	_IOCBF4_ISR
 10191  0A27                     i1l3437:	
 10192                           
 10193                           ;mcc_generated_files/pin_manager.c: 153:     if(IOCBFbits.IOCBF5 == 1)
 10194  0A27  0027               	movlb	7	; select bank7
 10195  0A28  1E96               	btfss	22,5	;volatile
 10196  0A29  2A2B               	goto	u343_21
 10197  0A2A  2A2C               	goto	u343_20
 10198  0A2B                     u343_21:	
 10199  0A2B  2A2F               	goto	i1l421
 10200  0A2C                     u343_20:	
 10201  0A2C                     i1l3439:	
 10202                           
 10203                           ;mcc_generated_files/pin_manager.c: 154:     {;mcc_generated_files/pin_manager.c: 155:  
      +                                 IOCBF5_ISR();
 10204  0A2C  3189  211E  318A   	fcall	_IOCBF5_ISR
 10205  0A2F                     i1l421:	
 10206  0A2F  0008               	return
 10207  0A30                     __end_of_PIN_MANAGER_IOC:	
 10208                           
 10209                           	psect	text48
 10210  091E                     __ptext48:	
 10211 ;; *************** function _IOCBF5_ISR *****************
 10212 ;; Defined at:
 10213 ;;		line 252 in file "mcc_generated_files/pin_manager.c"
 10214 ;; Parameters:    Size  Location     Type
 10215 ;;		None
 10216 ;; Auto vars:     Size  Location     Type
 10217 ;;		None
 10218 ;; Return value:  Size  Location     Type
 10219 ;;                  1    wreg      void 
 10220 ;; Registers used:
 10221 ;;		wreg, status,2, status,0, pclath, cstack
 10222 ;; Tracked objects:
 10223 ;;		On entry : 0/0
 10224 ;;		On exit  : 0/0
 10225 ;;		Unchanged: 0/0
 10226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10227 ;;      Params:         0       0       0       0       0       0
 10228 ;;      Locals:         0       0       0       0       0       0
 10229 ;;      Temps:          0       0       0       0       0       0
 10230 ;;      Totals:         0       0       0       0       0       0
 10231 ;;Total ram usage:        0 bytes
 10232 ;; Hardware stack levels used:    1
 10233 ;; Hardware stack levels required when called:    1
 10234 ;; This function calls:
 10235 ;;		Absolute function
 10236 ;;		_IOCBF5_DefaultInterruptHandler
 10237 ;;		_sensor4
 10238 ;; This function is called by:
 10239 ;;		_PIN_MANAGER_IOC
 10240 ;; This function uses a non-reentrant model
 10241 ;;
 10242                           
 10243                           
 10244                           ;psect for function _IOCBF5_ISR
 10245  091E                     _IOCBF5_ISR:	
 10246  091E                     i1l3153:	
 10247                           ;incstack = 0
 10248                           ; Regs used in _IOCBF5_ISR: [wreg+status,2+status,0+pclath+cstack]
 10249                           
 10250                           
 10251                           ;mcc_generated_files/pin_manager.c: 257:     if(IOCBF5_InterruptHandler)
 10252  091E  0022               	movlb	2	; select bank2
 10253  091F  0820               	movf	_IOCBF5_InterruptHandler^(0+256),w
 10254  0920  0421               	iorwf	(_IOCBF5_InterruptHandler+1)^(0+256),w
 10255  0921  1903               	btfsc	3,2
 10256  0922  2924               	goto	u283_21
 10257  0923  2925               	goto	u283_20
 10258  0924                     u283_21:	
 10259  0924  292A               	goto	i1l3157
 10260  0925                     u283_20:	
 10261  0925                     i1l3155:	
 10262                           
 10263                           ;mcc_generated_files/pin_manager.c: 258:     {;mcc_generated_files/pin_manager.c: 259:  
      +                                 IOCBF5_InterruptHandler();
 10264  0925  0821               	movf	(_IOCBF5_InterruptHandler+1)^(0+256),w
 10265  0926  008A               	movwf	10
 10266  0927  0820               	movf	_IOCBF5_InterruptHandler^(0+256),w
 10267  0928  000A               	callw
 10268  0929  3189               	pagesel	$
 10269  092A                     i1l3157:	
 10270                           
 10271                           ;mcc_generated_files/pin_manager.c: 261:     IOCBFbits.IOCBF5 = 0;
 10272  092A  0027               	movlb	7	; select bank7
 10273  092B  1296               	bcf	22,5	;volatile
 10274  092C                     i1l455:	
 10275  092C  0008               	return
 10276  092D                     __end_of_IOCBF5_ISR:	
 10277                           
 10278                           	psect	text49
 10279  0002                     __ptext49:	
 10280 ;; *************** function _IOCBF5_DefaultInterruptHandler *****************
 10281 ;; Defined at:
 10282 ;;		line 274 in file "mcc_generated_files/pin_manager.c"
 10283 ;; Parameters:    Size  Location     Type
 10284 ;;		None
 10285 ;; Auto vars:     Size  Location     Type
 10286 ;;		None
 10287 ;; Return value:  Size  Location     Type
 10288 ;;                  1    wreg      void 
 10289 ;; Registers used:
 10290 ;;		None
 10291 ;; Tracked objects:
 10292 ;;		On entry : 0/0
 10293 ;;		On exit  : 0/0
 10294 ;;		Unchanged: 0/0
 10295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10296 ;;      Params:         0       0       0       0       0       0
 10297 ;;      Locals:         0       0       0       0       0       0
 10298 ;;      Temps:          0       0       0       0       0       0
 10299 ;;      Totals:         0       0       0       0       0       0
 10300 ;;Total ram usage:        0 bytes
 10301 ;; Hardware stack levels used:    1
 10302 ;; This function calls:
 10303 ;;		Nothing
 10304 ;; This function is called by:
 10305 ;;		_PIN_MANAGER_Initialize
 10306 ;;		_IOCBF5_ISR
 10307 ;; This function uses a non-reentrant model
 10308 ;;
 10309                           
 10310                           
 10311                           ;psect for function _IOCBF5_DefaultInterruptHandler
 10312  0002                     _IOCBF5_DefaultInterruptHandler:	
 10313  0002                     i1l461:	
 10314                           ;incstack = 0
 10315                           ; Regs used in _IOCBF5_DefaultInterruptHandler: []
 10316                           
 10317  0002  0008               	return
 10318  0003                     __end_of_IOCBF5_DefaultInterruptHandler:	
 10319                           
 10320                           	psect	text50
 10321  08E6                     __ptext50:	
 10322 ;; *************** function _sensor4 *****************
 10323 ;; Defined at:
 10324 ;;		line 107 in file "main.c"
 10325 ;; Parameters:    Size  Location     Type
 10326 ;;		None
 10327 ;; Auto vars:     Size  Location     Type
 10328 ;;		None
 10329 ;; Return value:  Size  Location     Type
 10330 ;;                  1    wreg      void 
 10331 ;; Registers used:
 10332 ;;		wreg
 10333 ;; Tracked objects:
 10334 ;;		On entry : 0/0
 10335 ;;		On exit  : 0/0
 10336 ;;		Unchanged: 0/0
 10337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10338 ;;      Params:         0       0       0       0       0       0
 10339 ;;      Locals:         0       0       0       0       0       0
 10340 ;;      Temps:          1       0       0       0       0       0
 10341 ;;      Totals:         1       0       0       0       0       0
 10342 ;;Total ram usage:        1 bytes
 10343 ;; Hardware stack levels used:    1
 10344 ;; This function calls:
 10345 ;;		Nothing
 10346 ;; This function is called by:
 10347 ;;		_main
 10348 ;;		_IOCBF5_ISR
 10349 ;; This function uses a non-reentrant model
 10350 ;;
 10351                           
 10352                           
 10353                           ;psect for function _sensor4
 10354  08E6                     _sensor4:	
 10355  08E6                     i1l2979:	
 10356                           ;incstack = 0
 10357                           ; Regs used in _sensor4: [wreg]
 10358                           
 10359                           
 10360                           ;main.c: 109:         and_ating=4;
 10361  08E6  3004               	movlw	4
 10362  08E7  00F7               	movwf	??_sensor4
 10363  08E8  0877               	movf	??_sensor4,w
 10364  08E9  0020               	movlb	0	; select bank0
 10365  08EA  00EF               	movwf	_and_ating
 10366                           
 10367                           ;main.c: 110:         and_ating2=3;
 10368  08EB  3003               	movlw	3
 10369  08EC  0021               	movlb	1	; select bank1
 10370  08ED  00C8               	movwf	_and_ating2^(0+128)
 10371  08EE  3000               	movlw	0
 10372  08EF  00C9               	movwf	(_and_ating2^(0+128)+1)
 10373  08F0                     i1l591:	
 10374  08F0  0008               	return
 10375  08F1                     __end_of_sensor4:	
 10376                           
 10377                           	psect	text51
 10378  090F                     __ptext51:	
 10379 ;; *************** function _IOCBF4_ISR *****************
 10380 ;; Defined at:
 10381 ;;		line 222 in file "mcc_generated_files/pin_manager.c"
 10382 ;; Parameters:    Size  Location     Type
 10383 ;;		None
 10384 ;; Auto vars:     Size  Location     Type
 10385 ;;		None
 10386 ;; Return value:  Size  Location     Type
 10387 ;;                  1    wreg      void 
 10388 ;; Registers used:
 10389 ;;		wreg, status,2, status,0, pclath, cstack
 10390 ;; Tracked objects:
 10391 ;;		On entry : 0/0
 10392 ;;		On exit  : 0/0
 10393 ;;		Unchanged: 0/0
 10394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10395 ;;      Params:         0       0       0       0       0       0
 10396 ;;      Locals:         0       0       0       0       0       0
 10397 ;;      Temps:          0       0       0       0       0       0
 10398 ;;      Totals:         0       0       0       0       0       0
 10399 ;;Total ram usage:        0 bytes
 10400 ;; Hardware stack levels used:    1
 10401 ;; Hardware stack levels required when called:    1
 10402 ;; This function calls:
 10403 ;;		Absolute function
 10404 ;;		_IOCBF4_DefaultInterruptHandler
 10405 ;;		_sensor3
 10406 ;; This function is called by:
 10407 ;;		_PIN_MANAGER_IOC
 10408 ;; This function uses a non-reentrant model
 10409 ;;
 10410                           
 10411                           
 10412                           ;psect for function _IOCBF4_ISR
 10413  090F                     _IOCBF4_ISR:	
 10414  090F                     i1l3147:	
 10415                           ;incstack = 0
 10416                           ; Regs used in _IOCBF4_ISR: [wreg+status,2+status,0+pclath+cstack]
 10417                           
 10418                           
 10419                           ;mcc_generated_files/pin_manager.c: 227:     if(IOCBF4_InterruptHandler)
 10420  090F  0022               	movlb	2	; select bank2
 10421  0910  0822               	movf	_IOCBF4_InterruptHandler^(0+256),w
 10422  0911  0423               	iorwf	(_IOCBF4_InterruptHandler+1)^(0+256),w
 10423  0912  1903               	btfsc	3,2
 10424  0913  2915               	goto	u282_21
 10425  0914  2916               	goto	u282_20
 10426  0915                     u282_21:	
 10427  0915  291B               	goto	i1l3151
 10428  0916                     u282_20:	
 10429  0916                     i1l3149:	
 10430                           
 10431                           ;mcc_generated_files/pin_manager.c: 228:     {;mcc_generated_files/pin_manager.c: 229:  
      +                                 IOCBF4_InterruptHandler();
 10432  0916  0823               	movf	(_IOCBF4_InterruptHandler+1)^(0+256),w
 10433  0917  008A               	movwf	10
 10434  0918  0822               	movf	_IOCBF4_InterruptHandler^(0+256),w
 10435  0919  000A               	callw
 10436  091A  3189               	pagesel	$
 10437  091B                     i1l3151:	
 10438                           
 10439                           ;mcc_generated_files/pin_manager.c: 231:     IOCBFbits.IOCBF4 = 0;
 10440  091B  0027               	movlb	7	; select bank7
 10441  091C  1216               	bcf	22,4	;volatile
 10442  091D                     i1l445:	
 10443  091D  0008               	return
 10444  091E                     __end_of_IOCBF4_ISR:	
 10445                           
 10446                           	psect	text52
 10447  0843                     __ptext52:	
 10448 ;; *************** function _IOCBF4_DefaultInterruptHandler *****************
 10449 ;; Defined at:
 10450 ;;		line 244 in file "mcc_generated_files/pin_manager.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;		None
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;		None
 10455 ;; Return value:  Size  Location     Type
 10456 ;;                  1    wreg      void 
 10457 ;; Registers used:
 10458 ;;		None
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/0
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10464 ;;      Params:         0       0       0       0       0       0
 10465 ;;      Locals:         0       0       0       0       0       0
 10466 ;;      Temps:          0       0       0       0       0       0
 10467 ;;      Totals:         0       0       0       0       0       0
 10468 ;;Total ram usage:        0 bytes
 10469 ;; Hardware stack levels used:    1
 10470 ;; This function calls:
 10471 ;;		Nothing
 10472 ;; This function is called by:
 10473 ;;		_PIN_MANAGER_Initialize
 10474 ;;		_IOCBF4_ISR
 10475 ;; This function uses a non-reentrant model
 10476 ;;
 10477                           
 10478                           
 10479                           ;psect for function _IOCBF4_DefaultInterruptHandler
 10480  0843                     _IOCBF4_DefaultInterruptHandler:	
 10481  0843                     i1l451:	
 10482                           ;incstack = 0
 10483                           ; Regs used in _IOCBF4_DefaultInterruptHandler: []
 10484                           
 10485  0843  0008               	return
 10486  0844                     __end_of_IOCBF4_DefaultInterruptHandler:	
 10487                           
 10488                           	psect	text53
 10489  08DB                     __ptext53:	
 10490 ;; *************** function _sensor3 *****************
 10491 ;; Defined at:
 10492 ;;		line 101 in file "main.c"
 10493 ;; Parameters:    Size  Location     Type
 10494 ;;		None
 10495 ;; Auto vars:     Size  Location     Type
 10496 ;;		None
 10497 ;; Return value:  Size  Location     Type
 10498 ;;                  1    wreg      void 
 10499 ;; Registers used:
 10500 ;;		wreg
 10501 ;; Tracked objects:
 10502 ;;		On entry : 0/0
 10503 ;;		On exit  : 0/0
 10504 ;;		Unchanged: 0/0
 10505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10506 ;;      Params:         0       0       0       0       0       0
 10507 ;;      Locals:         0       0       0       0       0       0
 10508 ;;      Temps:          1       0       0       0       0       0
 10509 ;;      Totals:         1       0       0       0       0       0
 10510 ;;Total ram usage:        1 bytes
 10511 ;; Hardware stack levels used:    1
 10512 ;; This function calls:
 10513 ;;		Nothing
 10514 ;; This function is called by:
 10515 ;;		_main
 10516 ;;		_IOCBF4_ISR
 10517 ;; This function uses a non-reentrant model
 10518 ;;
 10519                           
 10520                           
 10521                           ;psect for function _sensor3
 10522  08DB                     _sensor3:	
 10523  08DB                     i1l2977:	
 10524                           ;incstack = 0
 10525                           ; Regs used in _sensor3: [wreg]
 10526                           
 10527                           
 10528                           ;main.c: 103:         and_ating=3;
 10529  08DB  3003               	movlw	3
 10530  08DC  00F7               	movwf	??_sensor3
 10531  08DD  0877               	movf	??_sensor3,w
 10532  08DE  0020               	movlb	0	; select bank0
 10533  08DF  00EF               	movwf	_and_ating
 10534                           
 10535                           ;main.c: 104:         and_ating2=2;
 10536  08E0  3002               	movlw	2
 10537  08E1  0021               	movlb	1	; select bank1
 10538  08E2  00C8               	movwf	_and_ating2^(0+128)
 10539  08E3  3000               	movlw	0
 10540  08E4  00C9               	movwf	(_and_ating2^(0+128)+1)
 10541  08E5                     i1l588:	
 10542  08E5  0008               	return
 10543  08E6                     __end_of_sensor3:	
 10544                           
 10545                           	psect	text54
 10546  0900                     __ptext54:	
 10547 ;; *************** function _IOCBF3_ISR *****************
 10548 ;; Defined at:
 10549 ;;		line 192 in file "mcc_generated_files/pin_manager.c"
 10550 ;; Parameters:    Size  Location     Type
 10551 ;;		None
 10552 ;; Auto vars:     Size  Location     Type
 10553 ;;		None
 10554 ;; Return value:  Size  Location     Type
 10555 ;;                  1    wreg      void 
 10556 ;; Registers used:
 10557 ;;		wreg, status,2, status,0, pclath, cstack
 10558 ;; Tracked objects:
 10559 ;;		On entry : 0/0
 10560 ;;		On exit  : 0/0
 10561 ;;		Unchanged: 0/0
 10562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10563 ;;      Params:         0       0       0       0       0       0
 10564 ;;      Locals:         0       0       0       0       0       0
 10565 ;;      Temps:          0       0       0       0       0       0
 10566 ;;      Totals:         0       0       0       0       0       0
 10567 ;;Total ram usage:        0 bytes
 10568 ;; Hardware stack levels used:    1
 10569 ;; Hardware stack levels required when called:    1
 10570 ;; This function calls:
 10571 ;;		Absolute function
 10572 ;;		_IOCBF3_DefaultInterruptHandler
 10573 ;;		_sensor2
 10574 ;; This function is called by:
 10575 ;;		_PIN_MANAGER_IOC
 10576 ;; This function uses a non-reentrant model
 10577 ;;
 10578                           
 10579                           
 10580                           ;psect for function _IOCBF3_ISR
 10581  0900                     _IOCBF3_ISR:	
 10582  0900                     i1l3141:	
 10583                           ;incstack = 0
 10584                           ; Regs used in _IOCBF3_ISR: [wreg+status,2+status,0+pclath+cstack]
 10585                           
 10586                           
 10587                           ;mcc_generated_files/pin_manager.c: 197:     if(IOCBF3_InterruptHandler)
 10588  0900  0022               	movlb	2	; select bank2
 10589  0901  0824               	movf	_IOCBF3_InterruptHandler^(0+256),w
 10590  0902  0425               	iorwf	(_IOCBF3_InterruptHandler+1)^(0+256),w
 10591  0903  1903               	btfsc	3,2
 10592  0904  2906               	goto	u281_21
 10593  0905  2907               	goto	u281_20
 10594  0906                     u281_21:	
 10595  0906  290C               	goto	i1l3145
 10596  0907                     u281_20:	
 10597  0907                     i1l3143:	
 10598                           
 10599                           ;mcc_generated_files/pin_manager.c: 198:     {;mcc_generated_files/pin_manager.c: 199:  
      +                                 IOCBF3_InterruptHandler();
 10600  0907  0825               	movf	(_IOCBF3_InterruptHandler+1)^(0+256),w
 10601  0908  008A               	movwf	10
 10602  0909  0824               	movf	_IOCBF3_InterruptHandler^(0+256),w
 10603  090A  000A               	callw
 10604  090B  3189               	pagesel	$
 10605  090C                     i1l3145:	
 10606                           
 10607                           ;mcc_generated_files/pin_manager.c: 201:     IOCBFbits.IOCBF3 = 0;
 10608  090C  0027               	movlb	7	; select bank7
 10609  090D  1196               	bcf	22,3	;volatile
 10610  090E                     i1l435:	
 10611  090E  0008               	return
 10612  090F                     __end_of_IOCBF3_ISR:	
 10613                           
 10614                           	psect	text55
 10615  0842                     __ptext55:	
 10616 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
 10617 ;; Defined at:
 10618 ;;		line 214 in file "mcc_generated_files/pin_manager.c"
 10619 ;; Parameters:    Size  Location     Type
 10620 ;;		None
 10621 ;; Auto vars:     Size  Location     Type
 10622 ;;		None
 10623 ;; Return value:  Size  Location     Type
 10624 ;;                  1    wreg      void 
 10625 ;; Registers used:
 10626 ;;		None
 10627 ;; Tracked objects:
 10628 ;;		On entry : 0/0
 10629 ;;		On exit  : 0/0
 10630 ;;		Unchanged: 0/0
 10631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10632 ;;      Params:         0       0       0       0       0       0
 10633 ;;      Locals:         0       0       0       0       0       0
 10634 ;;      Temps:          0       0       0       0       0       0
 10635 ;;      Totals:         0       0       0       0       0       0
 10636 ;;Total ram usage:        0 bytes
 10637 ;; Hardware stack levels used:    1
 10638 ;; This function calls:
 10639 ;;		Nothing
 10640 ;; This function is called by:
 10641 ;;		_PIN_MANAGER_Initialize
 10642 ;;		_IOCBF3_ISR
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646                           
 10647                           ;psect for function _IOCBF3_DefaultInterruptHandler
 10648  0842                     _IOCBF3_DefaultInterruptHandler:	
 10649  0842                     i1l441:	
 10650                           ;incstack = 0
 10651                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
 10652                           
 10653  0842  0008               	return
 10654  0843                     __end_of_IOCBF3_DefaultInterruptHandler:	
 10655                           
 10656                           	psect	text56
 10657  08D0                     __ptext56:	
 10658 ;; *************** function _sensor2 *****************
 10659 ;; Defined at:
 10660 ;;		line 95 in file "main.c"
 10661 ;; Parameters:    Size  Location     Type
 10662 ;;		None
 10663 ;; Auto vars:     Size  Location     Type
 10664 ;;		None
 10665 ;; Return value:  Size  Location     Type
 10666 ;;                  1    wreg      void 
 10667 ;; Registers used:
 10668 ;;		wreg
 10669 ;; Tracked objects:
 10670 ;;		On entry : 0/0
 10671 ;;		On exit  : 0/0
 10672 ;;		Unchanged: 0/0
 10673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10674 ;;      Params:         0       0       0       0       0       0
 10675 ;;      Locals:         0       0       0       0       0       0
 10676 ;;      Temps:          1       0       0       0       0       0
 10677 ;;      Totals:         1       0       0       0       0       0
 10678 ;;Total ram usage:        1 bytes
 10679 ;; Hardware stack levels used:    1
 10680 ;; This function calls:
 10681 ;;		Nothing
 10682 ;; This function is called by:
 10683 ;;		_main
 10684 ;;		_IOCBF3_ISR
 10685 ;; This function uses a non-reentrant model
 10686 ;;
 10687                           
 10688                           
 10689                           ;psect for function _sensor2
 10690  08D0                     _sensor2:	
 10691  08D0                     i1l2975:	
 10692                           ;incstack = 0
 10693                           ; Regs used in _sensor2: [wreg]
 10694                           
 10695                           
 10696                           ;main.c: 97:         and_ating=2;
 10697  08D0  3002               	movlw	2
 10698  08D1  00F7               	movwf	??_sensor2
 10699  08D2  0877               	movf	??_sensor2,w
 10700  08D3  0020               	movlb	0	; select bank0
 10701  08D4  00EF               	movwf	_and_ating
 10702                           
 10703                           ;main.c: 98:         and_ating2=1;
 10704  08D5  3001               	movlw	1
 10705  08D6  0021               	movlb	1	; select bank1
 10706  08D7  00C8               	movwf	_and_ating2^(0+128)
 10707  08D8  3000               	movlw	0
 10708  08D9  00C9               	movwf	(_and_ating2^(0+128)+1)
 10709  08DA                     i1l585:	
 10710  08DA  0008               	return
 10711  08DB                     __end_of_sensor2:	
 10712                           
 10713                           	psect	text57
 10714  08F1                     __ptext57:	
 10715 ;; *************** function _IOCBF0_ISR *****************
 10716 ;; Defined at:
 10717 ;;		line 162 in file "mcc_generated_files/pin_manager.c"
 10718 ;; Parameters:    Size  Location     Type
 10719 ;;		None
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;		None
 10722 ;; Return value:  Size  Location     Type
 10723 ;;                  1    wreg      void 
 10724 ;; Registers used:
 10725 ;;		wreg, status,2, status,0, pclath, cstack
 10726 ;; Tracked objects:
 10727 ;;		On entry : 0/0
 10728 ;;		On exit  : 0/0
 10729 ;;		Unchanged: 0/0
 10730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10731 ;;      Params:         0       0       0       0       0       0
 10732 ;;      Locals:         0       0       0       0       0       0
 10733 ;;      Temps:          0       0       0       0       0       0
 10734 ;;      Totals:         0       0       0       0       0       0
 10735 ;;Total ram usage:        0 bytes
 10736 ;; Hardware stack levels used:    1
 10737 ;; Hardware stack levels required when called:    1
 10738 ;; This function calls:
 10739 ;;		Absolute function
 10740 ;;		_IOCBF0_DefaultInterruptHandler
 10741 ;;		_sensor1
 10742 ;; This function is called by:
 10743 ;;		_PIN_MANAGER_IOC
 10744 ;; This function uses a non-reentrant model
 10745 ;;
 10746                           
 10747                           
 10748                           ;psect for function _IOCBF0_ISR
 10749  08F1                     _IOCBF0_ISR:	
 10750  08F1                     i1l3135:	
 10751                           ;incstack = 0
 10752                           ; Regs used in _IOCBF0_ISR: [wreg+status,2+status,0+pclath+cstack]
 10753                           
 10754                           
 10755                           ;mcc_generated_files/pin_manager.c: 167:     if(IOCBF0_InterruptHandler)
 10756  08F1  0022               	movlb	2	; select bank2
 10757  08F2  0826               	movf	_IOCBF0_InterruptHandler^(0+256),w
 10758  08F3  0427               	iorwf	(_IOCBF0_InterruptHandler+1)^(0+256),w
 10759  08F4  1903               	btfsc	3,2
 10760  08F5  28F7               	goto	u280_21
 10761  08F6  28F8               	goto	u280_20
 10762  08F7                     u280_21:	
 10763  08F7  28FD               	goto	i1l3139
 10764  08F8                     u280_20:	
 10765  08F8                     i1l3137:	
 10766                           
 10767                           ;mcc_generated_files/pin_manager.c: 168:     {;mcc_generated_files/pin_manager.c: 169:  
      +                                 IOCBF0_InterruptHandler();
 10768  08F8  0827               	movf	(_IOCBF0_InterruptHandler+1)^(0+256),w
 10769  08F9  008A               	movwf	10
 10770  08FA  0826               	movf	_IOCBF0_InterruptHandler^(0+256),w
 10771  08FB  000A               	callw
 10772  08FC  3188               	pagesel	$
 10773  08FD                     i1l3139:	
 10774                           
 10775                           ;mcc_generated_files/pin_manager.c: 171:     IOCBFbits.IOCBF0 = 0;
 10776  08FD  0027               	movlb	7	; select bank7
 10777  08FE  1016               	bcf	22,0	;volatile
 10778  08FF                     i1l425:	
 10779  08FF  0008               	return
 10780  0900                     __end_of_IOCBF0_ISR:	
 10781                           
 10782                           	psect	text58
 10783  0841                     __ptext58:	
 10784 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
 10785 ;; Defined at:
 10786 ;;		line 184 in file "mcc_generated_files/pin_manager.c"
 10787 ;; Parameters:    Size  Location     Type
 10788 ;;		None
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;		None
 10791 ;; Return value:  Size  Location     Type
 10792 ;;                  1    wreg      void 
 10793 ;; Registers used:
 10794 ;;		None
 10795 ;; Tracked objects:
 10796 ;;		On entry : 0/0
 10797 ;;		On exit  : 0/0
 10798 ;;		Unchanged: 0/0
 10799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10800 ;;      Params:         0       0       0       0       0       0
 10801 ;;      Locals:         0       0       0       0       0       0
 10802 ;;      Temps:          0       0       0       0       0       0
 10803 ;;      Totals:         0       0       0       0       0       0
 10804 ;;Total ram usage:        0 bytes
 10805 ;; Hardware stack levels used:    1
 10806 ;; This function calls:
 10807 ;;		Nothing
 10808 ;; This function is called by:
 10809 ;;		_PIN_MANAGER_Initialize
 10810 ;;		_IOCBF0_ISR
 10811 ;; This function uses a non-reentrant model
 10812 ;;
 10813                           
 10814                           
 10815                           ;psect for function _IOCBF0_DefaultInterruptHandler
 10816  0841                     _IOCBF0_DefaultInterruptHandler:	
 10817  0841                     i1l431:	
 10818                           ;incstack = 0
 10819                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
 10820                           
 10821  0841  0008               	return
 10822  0842                     __end_of_IOCBF0_DefaultInterruptHandler:	
 10823                           
 10824                           	psect	text59
 10825  0857                     __ptext59:	
 10826 ;; *************** function _sensor1 *****************
 10827 ;; Defined at:
 10828 ;;		line 89 in file "main.c"
 10829 ;; Parameters:    Size  Location     Type
 10830 ;;		None
 10831 ;; Auto vars:     Size  Location     Type
 10832 ;;		None
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  1    wreg      void 
 10835 ;; Registers used:
 10836 ;;		status,2
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10842 ;;      Params:         0       0       0       0       0       0
 10843 ;;      Locals:         0       0       0       0       0       0
 10844 ;;      Temps:          0       0       0       0       0       0
 10845 ;;      Totals:         0       0       0       0       0       0
 10846 ;;Total ram usage:        0 bytes
 10847 ;; Hardware stack levels used:    1
 10848 ;; This function calls:
 10849 ;;		Nothing
 10850 ;; This function is called by:
 10851 ;;		_main
 10852 ;;		_IOCBF0_ISR
 10853 ;; This function uses a non-reentrant model
 10854 ;;
 10855                           
 10856                           
 10857                           ;psect for function _sensor1
 10858  0857                     _sensor1:	
 10859  0857                     i1l2971:	
 10860                           ;incstack = 0
 10861                           ; Regs used in _sensor1: [status,2]
 10862                           
 10863                           
 10864                           ;main.c: 91:         and_ating=1;
 10865  0857  0020               	movlb	0	; select bank0
 10866  0858  01EF               	clrf	_and_ating
 10867  0859  0AEF               	incf	_and_ating,f
 10868  085A                     i1l2973:	
 10869                           
 10870                           ;main.c: 92:         and_ating2=0;
 10871  085A  0021               	movlb	1	; select bank1
 10872  085B  01C8               	clrf	_and_ating2^(0+128)
 10873  085C  01C9               	clrf	(_and_ating2+1)^(0+128)
 10874  085D                     i1l582:	
 10875  085D  0008               	return
 10876  085E                     __end_of_sensor1:	
 10877                           
 10878                           	psect	text60
 10879  09A1                     __ptext60:	
 10880 ;; *************** function _CCP4_CaptureISR *****************
 10881 ;; Defined at:
 10882 ;;		line 89 in file "mcc_generated_files/ccp4.c"
 10883 ;; Parameters:    Size  Location     Type
 10884 ;;		None
 10885 ;; Auto vars:     Size  Location     Type
 10886 ;;  module          2    5[COMMON] struct CCPR4Reg_tag
 10887 ;; Return value:  Size  Location     Type
 10888 ;;                  1    wreg      void 
 10889 ;; Registers used:
 10890 ;;		wreg, status,2, status,0, pclath, cstack
 10891 ;; Tracked objects:
 10892 ;;		On entry : 0/0
 10893 ;;		On exit  : 0/0
 10894 ;;		Unchanged: 0/0
 10895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10896 ;;      Params:         0       0       0       0       0       0
 10897 ;;      Locals:         2       0       0       0       0       0
 10898 ;;      Temps:          1       0       0       0       0       0
 10899 ;;      Totals:         3       0       0       0       0       0
 10900 ;;Total ram usage:        3 bytes
 10901 ;; Hardware stack levels used:    1
 10902 ;; Hardware stack levels required when called:    2
 10903 ;; This function calls:
 10904 ;;		Absolute function
 10905 ;;		_CCP4_DefaultCallBack
 10906 ;;		_get_pulse
 10907 ;; This function is called by:
 10908 ;;		_INTERRUPT_InterruptManager
 10909 ;; This function uses a non-reentrant model
 10910 ;;
 10911                           
 10912                           
 10913                           ;psect for function _CCP4_CaptureISR
 10914  09A1                     _CCP4_CaptureISR:	
 10915  09A1                     i1l3441:	
 10916                           ;incstack = 0
 10917                           ; Regs used in _CCP4_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
 10918                           
 10919                           
 10920                           ;mcc_generated_files/ccp4.c: 91:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 94:     PIR3bits.CCP4IF = 0;
 10921  09A1  0020               	movlb	0	; select bank0
 10922  09A2  1293               	bcf	19,5	;volatile
 10923  09A3                     i1l3443:	
 10924                           
 10925                           ;mcc_generated_files/ccp4.c: 97:     module.ccpr4l = CCPR4L;
 10926  09A3  0026               	movlb	6	; select bank6
 10927  09A4  0818               	movf	24,w	;volatile
 10928  09A5  00FB               	movwf	??_CCP4_CaptureISR
 10929  09A6  087B               	movf	??_CCP4_CaptureISR,w
 10930  09A7  00FC               	movwf	CCP4_CaptureISR@module
 10931                           
 10932                           ;mcc_generated_files/ccp4.c: 98:     module.ccpr4h = CCPR4H;
 10933  09A8  0819               	movf	25,w	;volatile
 10934  09A9  00FB               	movwf	??_CCP4_CaptureISR
 10935  09AA  087B               	movf	??_CCP4_CaptureISR,w
 10936  09AB  00FD               	movwf	CCP4_CaptureISR@module+1
 10937  09AC                     i1l3445:	
 10938                           
 10939                           ;mcc_generated_files/ccp4.c: 101:     CCP4_CallBack(module.ccpr4_16Bit);
 10940  09AC  087D               	movf	CCP4_CaptureISR@module+1,w
 10941  09AD  00FA               	movwf	get_pulse@capturedValue+1
 10942  09AE  087C               	movf	CCP4_CaptureISR@module,w
 10943  09AF  00F9               	movwf	get_pulse@capturedValue
 10944  09B0  0022               	movlb	2	; select bank2
 10945  09B1  0829               	movf	(_CCP4_CallBack+1)^(0+256),w
 10946  09B2  008A               	movwf	10
 10947  09B3  0828               	movf	_CCP4_CallBack^(0+256),w
 10948  09B4  000A               	callw
 10949  09B5  3189               	pagesel	$
 10950  09B6                     i1l346:	
 10951  09B6  0008               	return
 10952  09B7                     __end_of_CCP4_CaptureISR:	
 10953                           
 10954                           	psect	text61
 10955  0840                     __ptext61:	
 10956 ;; *************** function _CCP4_DefaultCallBack *****************
 10957 ;; Defined at:
 10958 ;;		line 60 in file "mcc_generated_files/ccp4.c"
 10959 ;; Parameters:    Size  Location     Type
 10960 ;;  capturedValu    2    2[COMMON] unsigned short 
 10961 ;; Auto vars:     Size  Location     Type
 10962 ;;		None
 10963 ;; Return value:  Size  Location     Type
 10964 ;;                  1    wreg      void 
 10965 ;; Registers used:
 10966 ;;		None
 10967 ;; Tracked objects:
 10968 ;;		On entry : 0/0
 10969 ;;		On exit  : 0/0
 10970 ;;		Unchanged: 0/0
 10971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10972 ;;      Params:         2       0       0       0       0       0
 10973 ;;      Locals:         0       0       0       0       0       0
 10974 ;;      Temps:          0       0       0       0       0       0
 10975 ;;      Totals:         2       0       0       0       0       0
 10976 ;;Total ram usage:        2 bytes
 10977 ;; Hardware stack levels used:    1
 10978 ;; This function calls:
 10979 ;;		Nothing
 10980 ;; This function is called by:
 10981 ;;		_CCP4_Initialize
 10982 ;;		_CCP4_CaptureISR
 10983 ;; This function uses a non-reentrant model
 10984 ;;
 10985                           
 10986                           
 10987                           ;psect for function _CCP4_DefaultCallBack
 10988  0840                     _CCP4_DefaultCallBack:	
 10989  0840                     i1l340:	
 10990                           ;incstack = 0
 10991                           ; Regs used in _CCP4_DefaultCallBack: []
 10992                           
 10993  0840  0008               	return
 10994  0841                     __end_of_CCP4_DefaultCallBack:	
 10995                           
 10996                           	psect	text62
 10997  0ABB                     __ptext62:	
 10998 ;; *************** function _get_pulse *****************
 10999 ;; Defined at:
 11000 ;;		line 113 in file "main.c"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;  capturedValu    2    2[COMMON] unsigned short 
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;		None
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  1    wreg      void 
 11007 ;; Registers used:
 11008 ;;		wreg, status,2, status,0, pclath, cstack
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11014 ;;      Params:         2       0       0       0       0       0
 11015 ;;      Locals:         0       0       0       0       0       0
 11016 ;;      Temps:          0       0       0       0       0       0
 11017 ;;      Totals:         2       0       0       0       0       0
 11018 ;;Total ram usage:        2 bytes
 11019 ;; Hardware stack levels used:    1
 11020 ;; Hardware stack levels required when called:    1
 11021 ;; This function calls:
 11022 ;;		_TMR1_WriteTimer
 11023 ;; This function is called by:
 11024 ;;		_main
 11025 ;;		_CCP4_CaptureISR
 11026 ;; This function uses a non-reentrant model
 11027 ;;
 11028                           
 11029                           
 11030                           ;psect for function _get_pulse
 11031  0ABB                     _get_pulse:	
 11032  0ABB                     i1l3175:	
 11033                           ;incstack = 0
 11034                           ; Regs used in _get_pulse: [wreg+status,2+status,0+pclath+cstack]
 11035                           
 11036                           
 11037                           ;main.c: 113: void get_pulse(uint16_t capturedValue);main.c: 114:     {;main.c: 115:    
      +                               TMR1_WriteTimer(0);
 11038  0ABB  3000               	movlw	0
 11039  0ABC  00F7               	movwf	TMR1_WriteTimer@timerVal
 11040  0ABD  00F8               	movwf	TMR1_WriteTimer@timerVal+1
 11041  0ABE  3189  216A  318A   	fcall	_TMR1_WriteTimer
 11042  0AC1                     i1l3177:	
 11043                           
 11044                           ;main.c: 116:         ccp_value = capturedValue;
 11045  0AC1  087A               	movf	get_pulse@capturedValue+1,w
 11046  0AC2  0021               	movlb	1	; select bank1
 11047  0AC3  00E8               	movwf	(_ccp_value+1)^(0+128)
 11048  0AC4  0879               	movf	get_pulse@capturedValue,w
 11049  0AC5  00E7               	movwf	_ccp_value^(0+128)
 11050  0AC6                     i1l3179:	
 11051                           
 11052                           ;main.c: 117:         if(sentido == 1){
 11053  0AC6  0358               	decf	_sentido^(0+128),w
 11054  0AC7  0459               	iorwf	(_sentido+1)^(0+128),w
 11055  0AC8  1D03               	btfss	3,2
 11056  0AC9  2ACB               	goto	u287_21
 11057  0ACA  2ACC               	goto	u287_20
 11058  0ACB                     u287_21:	
 11059  0ACB  2AD1               	goto	i1l3183
 11060  0ACC                     u287_20:	
 11061  0ACC                     i1l3181:	
 11062                           
 11063                           ;main.c: 118:             pulses++;
 11064  0ACC  3001               	movlw	1
 11065  0ACD  07E9               	addwf	_pulses^(0+128),f
 11066  0ACE  3000               	movlw	0
 11067  0ACF  3DEA               	addwfc	(_pulses+1)^(0+128),f
 11068                           
 11069                           ;main.c: 119:         }else if(sentido == 0 && pulses >= 0){
 11070  0AD0  2ADF               	goto	i1l597
 11071  0AD1                     i1l3183:	
 11072  0AD1  0858               	movf	_sentido^(0+128),w
 11073  0AD2  0459               	iorwf	(_sentido+1)^(0+128),w
 11074  0AD3  1D03               	btfss	3,2
 11075  0AD4  2AD6               	goto	u288_21
 11076  0AD5  2AD7               	goto	u288_20
 11077  0AD6                     u288_21:	
 11078  0AD6  2ADF               	goto	i1l597
 11079  0AD7                     u288_20:	
 11080  0AD7                     i1l3185:	
 11081  0AD7  1BEA               	btfsc	(_pulses+1)^(0+128),7
 11082  0AD8  2ADA               	goto	u289_21
 11083  0AD9  2ADB               	goto	u289_20
 11084  0ADA                     u289_21:	
 11085  0ADA  2ADF               	goto	i1l597
 11086  0ADB                     u289_20:	
 11087  0ADB                     i1l3187:	
 11088                           
 11089                           ;main.c: 120:             pulses--;
 11090  0ADB  30FF               	movlw	255
 11091  0ADC  07E9               	addwf	_pulses^(0+128),f
 11092  0ADD  30FF               	movlw	255
 11093  0ADE  3DEA               	addwfc	(_pulses+1)^(0+128),f
 11094  0ADF                     i1l597:	
 11095  0ADF  0008               	return
 11096  0AE0                     __end_of_get_pulse:	
 11097                           
 11098                           	psect	text63
 11099  096A                     __ptext63:	
 11100 ;; *************** function _TMR1_WriteTimer *****************
 11101 ;; Defined at:
 11102 ;;		line 113 in file "mcc_generated_files/tmr1.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;  timerVal        2    0[COMMON] unsigned short 
 11105 ;; Auto vars:     Size  Location     Type
 11106 ;;		None
 11107 ;; Return value:  Size  Location     Type
 11108 ;;                  1    wreg      void 
 11109 ;; Registers used:
 11110 ;;		wreg, status,2
 11111 ;; Tracked objects:
 11112 ;;		On entry : 0/0
 11113 ;;		On exit  : 0/0
 11114 ;;		Unchanged: 0/0
 11115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11116 ;;      Params:         2       0       0       0       0       0
 11117 ;;      Locals:         0       0       0       0       0       0
 11118 ;;      Temps:          0       0       0       0       0       0
 11119 ;;      Totals:         2       0       0       0       0       0
 11120 ;;Total ram usage:        2 bytes
 11121 ;; Hardware stack levels used:    1
 11122 ;; This function calls:
 11123 ;;		Nothing
 11124 ;; This function is called by:
 11125 ;;		_get_pulse
 11126 ;;		_TMR1_Reload
 11127 ;; This function uses a non-reentrant model
 11128 ;;
 11129                           
 11130                           
 11131                           ;psect for function _TMR1_WriteTimer
 11132  096A                     _TMR1_WriteTimer:	
 11133  096A                     i1l2945:	
 11134                           ;incstack = 0
 11135                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 11136                           
 11137                           
 11138                           ;mcc_generated_files/tmr1.c: 113: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 114: {;mcc_generated_files/tmr1.c: 115:     if (T1CONbits.nT1SYNC == 1)
 11139  096A  0020               	movlb	0	; select bank0
 11140  096B  1D18               	btfss	24,2	;volatile
 11141  096C  296E               	goto	u273_21
 11142  096D  296F               	goto	u273_20
 11143  096E                     u273_21:	
 11144  096E  2976               	goto	i1l2955
 11145  096F                     u273_20:	
 11146  096F                     i1l2947:	
 11147                           
 11148                           ;mcc_generated_files/tmr1.c: 116:     {;mcc_generated_files/tmr1.c: 118:         T1CONbi
      +                          ts.TMR1ON = 0;
 11149  096F  1018               	bcf	24,0	;volatile
 11150  0970                     i1l2949:	
 11151                           
 11152                           ;mcc_generated_files/tmr1.c: 121:         TMR1H = (timerVal >> 8);
 11153  0970  0878               	movf	TMR1_WriteTimer@timerVal+1,w
 11154  0971  0097               	movwf	23	;volatile
 11155  0972                     i1l2951:	
 11156                           
 11157                           ;mcc_generated_files/tmr1.c: 122:         TMR1L = timerVal;
 11158  0972  0877               	movf	TMR1_WriteTimer@timerVal,w
 11159  0973  0096               	movwf	22	;volatile
 11160  0974                     i1l2953:	
 11161                           
 11162                           ;mcc_generated_files/tmr1.c: 125:         T1CONbits.TMR1ON =1;
 11163  0974  1418               	bsf	24,0	;volatile
 11164                           
 11165                           ;mcc_generated_files/tmr1.c: 126:     }
 11166  0975  297A               	goto	i1l160
 11167  0976                     i1l2955:	
 11168                           
 11169                           ;mcc_generated_files/tmr1.c: 128:     {;mcc_generated_files/tmr1.c: 130:         TMR1H =
      +                           (timerVal >> 8);
 11170  0976  0878               	movf	TMR1_WriteTimer@timerVal+1,w
 11171  0977  0097               	movwf	23	;volatile
 11172  0978                     i1l2957:	
 11173                           
 11174                           ;mcc_generated_files/tmr1.c: 131:         TMR1L = timerVal;
 11175  0978  0877               	movf	TMR1_WriteTimer@timerVal,w
 11176  0979  0096               	movwf	22	;volatile
 11177  097A                     i1l160:	
 11178  097A  0008               	return
 11179  097B                     __end_of_TMR1_WriteTimer:	
 11180  007E                     btemp	set	126	;btemp
 11181  007E                     int$flags	set	126
 11182  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         88
    Persistent  52
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     79      80
    BANK1            80      0      79
    BANK2            80      0      21
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    IOCBF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor4(), IOCBF5_DefaultInterruptHandler(), 

    IOCBF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor4(), IOCBF5_DefaultInterruptHandler(), Absolute function(), 

    IOCBF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor3(), IOCBF4_DefaultInterruptHandler(), 

    IOCBF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor3(), IOCBF4_DefaultInterruptHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor2(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor2(), IOCBF3_DefaultInterruptHandler(), Absolute function(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor1(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor1(), IOCBF0_DefaultInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> get_pulse(), CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> get_pulse(), CCP4_DefaultCallBack(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> send_data(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> send_data(), Absolute function(), TMR4_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP4_CaptureISR
    _TMR4_ISR->_send_data
    _send_data->_EUSART_Write
    _send_data->_EUSART_is_tx_ready
    _IOCBF5_ISR->_sensor4
    _IOCBF4_ISR->_sensor3
    _IOCBF3_ISR->_sensor2
    _CCP4_CaptureISR->_CCP4_DefaultCallBack
    _CCP4_CaptureISR->_get_pulse
    _get_pulse->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_comunicacao
    _gerenciamento->_col_down
    _gerenciamento->_col_up
    _col_up->_controle
    _col_down->_controle
    _controle->___flmul
    _update->_max_down
    _update->_min_up
    _comunicacao->___fldiv
    ___xxtofl->_ADC_GetConversion
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF5_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   31842
                   _CCP4_SetCallBack
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                        _comunicacao
                      _gerenciamento
 ---------------------------------------------------------------------------------
 (1) _gerenciamento                                        0     0      0   23596
                                _abs
                           _col_down
                             _col_up
                           _controle
                             _update
 ---------------------------------------------------------------------------------
 (2) _col_up                                               2     2      0    7414
                                             62 BANK0      2     2      0
                                _abs
                           _controle
                             _min_up
 ---------------------------------------------------------------------------------
 (2) _col_down                                             2     2      0    7370
                                             62 BANK0      2     2      0
                                _abs
                           _controle
                           _max_down
 ---------------------------------------------------------------------------------
 (2) _controle                                            18    18      0    6656
                                             44 BANK0     18    18      0
                  _ADC_GetConversion
                 _PWM3_LoadDutyValue
                            ___flmul
                             ___wmul
                           ___xxtofl
                             _update
 ---------------------------------------------------------------------------------
 (2) _update                                              10    10      0    1710
                                              5 BANK0     10    10      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                           _max_down
                             _min_up
 ---------------------------------------------------------------------------------
 (3) _min_up                                               5     5      0     312
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _max_down                                             5     5      0     268
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _PWM3_LoadDutyValue                                   4     2      2     500
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     446
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _comunicacao                                          9     9      0    5351
                                             70 BANK0      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                              4 BANK0     14    10      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    2873
                                             18 BANK0     26    18      8
                  _ADC_GetConversion (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             44 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1629
                     _ADC_Initialize
                    _CCP4_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     844
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF5_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF4_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     211
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0     454
                    _CCP4_CaptureISR
                    _PIN_MANAGER_IOC
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR4_ISR                                             0     0      0      92
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                          _send_data *
 ---------------------------------------------------------------------------------
 (8) _send_data                                            3     3      0      92
                                              1 COMMON     3     3      0
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (9) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCBF0_ISR
                         _IOCBF3_ISR
                         _IOCBF4_ISR
                         _IOCBF5_ISR
 ---------------------------------------------------------------------------------
 (8) _IOCBF5_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF5_DefaultInterruptHandler *
                            _sensor4 *
 ---------------------------------------------------------------------------------
 (9) _sensor4                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _IOCBF5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _IOCBF4_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF4_DefaultInterruptHandler *
                            _sensor3 *
 ---------------------------------------------------------------------------------
 (9) _sensor3                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _IOCBF4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _IOCBF3_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                            _sensor2 *
 ---------------------------------------------------------------------------------
 (9) _sensor2                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _IOCBF0_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF0_DefaultInterruptHandler *
                            _sensor1 *
 ---------------------------------------------------------------------------------
 (9) _sensor1                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CCP4_CaptureISR                                      3     3      0     362
                                              4 COMMON     3     3      0
                   Absolute function *
               _CCP4_DefaultCallBack *
                          _get_pulse *
 ---------------------------------------------------------------------------------
 (8) _get_pulse                                            2     0      2     315
                                              2 COMMON     2     0      2
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _CCP4_DefaultCallBack                                 2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP4_SetCallBack
   _IOCBF0_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _IOCBF4_SetInterruptHandler
   _IOCBF5_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
       _IOCBF4_SetInterruptHandler
       _IOCBF5_SetInterruptHandler
     _PWM3_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _WDT_Initialize
   _TMR4_SetInterruptHandler
   _comunicacao
     ___fldiv
       ___flmul (ARG)
         _ADC_GetConversion (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_GetConversion (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
     ___flmul
       _ADC_GetConversion (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
     ___fltol
     ___xxtofl
       _ADC_GetConversion (ARG)
   _gerenciamento
     _abs
     _col_down
       _abs
       _controle
         _ADC_GetConversion
         _PWM3_LoadDutyValue
         ___flmul
           _ADC_GetConversion (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_GetConversion (ARG)
         ___wmul
         ___xxtofl
           _ADC_GetConversion (ARG)
         _update
           _EUSART_Read
           _EUSART_is_rx_ready
           _max_down
           _min_up
       _max_down
     _col_up
       _abs
       _controle
         _ADC_GetConversion
         _PWM3_LoadDutyValue
         ___flmul
           _ADC_GetConversion (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _ADC_GetConversion (ARG)
         ___wmul
         ___xxtofl
           _ADC_GetConversion (ARG)
         _update
           _EUSART_Read
           _EUSART_is_rx_ready
           _max_down
           _min_up
       _min_up
     _controle
       _ADC_GetConversion
       _PWM3_LoadDutyValue
       ___flmul
         _ADC_GetConversion (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_GetConversion (ARG)
       ___wmul
       ___xxtofl
         _ADC_GetConversion (ARG)
       _update
         _EUSART_Read
         _EUSART_is_rx_ready
         _max_down
         _min_up
     _update
       _EUSART_Read
       _EUSART_is_rx_ready
       _max_down
       _min_up

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     Absolute function(Fake) *
     _CCP4_DefaultCallBack *
     _get_pulse *
       _TMR1_WriteTimer
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       Absolute function(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       _sensor1 *
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _sensor2 *
     _IOCBF4_ISR
       Absolute function(Fake) *
       _IOCBF4_DefaultInterruptHandler *
       _sensor3 *
     _IOCBF5_ISR
       Absolute function(Fake) *
       _IOCBF5_DefaultInterruptHandler *
       _sensor4 *
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *
     _send_data *
       _EUSART_Write
       _EUSART_is_tx_ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C2       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      15      10       26.3%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C2      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec 13 14:21:13 2020

                              _CCP4_Initialize 097B                                   ___fldiv@aexp 0065  
                                 ___fldiv@bexp 0064               ??_IOCBF3_DefaultInterruptHandler 0077  
              ?_IOCBF3_DefaultInterruptHandler 0077                                   ___fldiv@sign 005D  
                                  __CFG_CP$OFF 0000                                             l43 0A96  
                                           l51 0850                                             l60 094B  
                                           l64 0959                                             l82 088F  
                                           l85 0898                                             l88 0886  
                       __end_of_FVR_Initialize 0848                            ___wmul@multiplicand 0022  
                                  _state_motor 00DE                            __Umul8_16@word_mpld 0026  
                                  __CFG_LVP$ON 0000                                            l121 0A72  
                                          l124 0864                                            l127 084B  
                                          l320 0847                                            l225 09A0  
                                          l146 0969                                            l414 0B96  
                                          l343 098C                                            l247 07FF  
                                          l185 0874                                            l282 0A45  
                                          l602 0B4A                                            l267 086C  
                                          l428 08A1                                            l349 087D  
                                          l285 0A50                                            l438 08AA  
                                          l622 0774                                            l448 08B3  
                                          l472 08C5                                            l608 0FFF  
                                          l641 07B9                                            l458 08BC  
                                          l634 0C80                                            l475 09EE  
                                          l708 0480                                            l652 0CC5  
                                          l661 0E9B                                            l645 07F6  
                                          l672 0DDA                                            l656 0D02  
                                          l665 0F00                                            l667 0F2A  
                                          l860 0A0E                                            l676 0E29  
                                          l679 0E5D                                            l695 03A0  
                                          l858 09FA                                            _PR2 001B  
                                          _PR4 0416                                   __CFG_CPD$OFF 0000  
                                          _I_m 00E3                                _timer1ReloadVal 00ED  
                                          _abs 09B7                 ?_EUSART_SetFramingErrorHandler 0020  
                              _TMR2_Initialize 086D                 CCP4_SetCallBack@customCallBack 0020  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 ?_comunicacao 0077                                   __CFG_IESO$ON 0000  
                             _CCP4_SetCallBack 0875                                   ___flmul@aexp 0044  
                                 ___flmul@bexp 0045             __end_of_IOCBF4_SetInterruptHandler 08B4  
                   _IOCBF4_SetInterruptHandler 08AB                                   ___flmul@sign 003F  
                                 ___flmul@temp 004A                                   ___flmul@prod 0046  
                      __end_of_CCP4_CaptureISR 09B7                                   ?_EUSART_Read 0077  
                                 ___fltol@exp1 002A                                           ?_abs 0020  
                                         l1052 0C0B                                           l1062 0C0B  
                                         l1231 05B6                                           l1215 04D8  
                                         l1312 09D2                                           l1217 0634  
                                         l1321 0ABA                                           l1306 0D7B  
                                         l1059 0BF6                                           l1307 0D87  
                                         l1315 09D2                                           l1236 0602  
                                         l1237 061C                                           l1261 0223  
                                         l1239 062B                                           l1319 0AAA  
                                         l1255 02A7                                           l3041 09B7  
                                         l1267 029B                                           l3043 09C5  
                                         l3301 04B6                                           l1293 0D26  
                                         l3311 04CD                                           l3303 04BA  
                                         l1295 0DAF                                           l2511 0EC8  
                                         l2503 0E65                                           l3401 0610  
                                         l3321 04F0                                           l3313 04CE  
                                         l3305 04BB                                           l3241 0B97  
                                         l2513 0ED1                                           l2505 0E7C  
                                         l3411 0627                                           l3403 0613  
                                         l3331 0507                                           l3307 04C0  
                                         l3315 04D0                                           l3251 0BC0  
                                         l3243 0BA3                                           l1299 0D61  
                                         l2531 0F1D                                           l2523 0EE6  
                                         l2515 0ED6                                           l2507 0E92  
                                         l3405 061B                                           l3341 0531  
                                         l3333 0517                                           l3317 04E0  
                                         l3325 04F9                                           l3309 04C5  
                                         l3253 0BC8                                           l2541 0DF1  
                                         l2533 0DB0                                           l2525 0EF9  
                                         l2517 0EE3                                           l2509 0EB2  
                                         l3407 0621                                           l3343 0536  
                                         l3351 0550                                           l3335 051F  
                                         l3327 04FE                                           l3319 04EC  
                                         l3271 0BED                                           l3263 0BD6  
                                         l3255 0BCA                                           l3247 0BAC  
                                         l2543 0DFA                                           l2527 0F12  
                                         l3409 0625                                           l3361 0575  
                                         l3353 0562                                           l3345 0544  
                                         l3337 0527                                           l3281 048B  
                                         l2801 0142                                           l3273 0BFB  
                                         l3257 0BCE                                           l3265 0BE6  
                                         l3249 0BBF                                           l2561 0E46  
                                         l2553 0E0F                                           l2545 0DFF  
                                         l2537 0DBA                                           l2529 0F19  
                                         l3601 0379                                           l3371 058B  
                                         l3363 057D                                           l3355 0563  
                                         l3347 0548                                           l3339 052F  
                                         l3291 04A2                                           l3283 048F  
                                         l2571 0AA2                                           l2811 0178  
                                         l2803 0149                                           l3275 0C00  
                                         l3451 0FA1                                           l3531 094B  
                                         l2563 0E53                                           l2555 0E22  
                                         l2547 0E0C                                           l2539 0DD1  
                                         l3611 03B2                                           l3603 0383  
                                         l3701 08AB                                           l3381 059F  
                                         l3373 0592                                           l3365 057F  
                                         l3357 056B                                           l3349 0549  
                                         l3293 04A3                                           l3285 0490  
                                         l3277 0481                                           l2573 0AA6  
                                         l2821 01D9                                           l2813 018C  
                                         l2805 0156                                           l2741 0057  
                                         l2901 0D5A                                           l3453 0FB5  
                                         l2581 0A32                                           l3533 0950  
                                         l2565 0E59                                           l2557 0E3B  
                                         l3621 03BD                                           l3613 03B2  
                                         l3605 0388                                           l3703 08B4  
                                         l3391 05C8                                           l3383 05B3  
                                         l3367 0586                                           l3375 0596  
                                         l3359 056F                                           l3287 0495  
                                         l3295 04A5                                           l3279 0487  
                                         l2575 0AB1                                           l2567 0A99  
                                         l2831 01F8                                           l2823 01E0  
                                         l2815 0199                                           l2807 015D  
                                         l2751 006A                                           l2743 005B  
                                         l2911 0D89                                           l2903 0D68  
                                         l3455 0FC9                                           l3447 0F2B  
                                         l2583 0A3E                                           l3535 0951  
                                         l3527 084C                                           l2559 0E42  
                                         l2495 0E5E                                           l3631 03E8  
                                         l3623 03C2                                           l3607 0395  
                                         l3551 02D1                                           l3543 02A8  
                                         l3711 06B2                                           l3801 0B6F  
                                         l3393 05CC                                           l3377 059A  
                                         l3369 058A                                           l3297 04AD  
                                         l3289 049A                                           l2577 0AB6  
                                         l2569 0A9B                                           l2841 020C  
                                         l2833 01FF                                           l2825 01EC  
                                         l2817 01AD                                           l2809 0171  
                                         l2761 0085                                           l2753 0072  
                                         l2745 005F                                           l2913 0D9D  
                                         l2905 0D71                                           l3457 0FE4  
                                         l3449 0F99                                           l2585 0A3F  
                                         l2593 09D3                                           l3537 0956  
                                         l2497 0E62                                           l3641 03F6  
                                         l3633 03EC                                           l3625 03C8  
                                         l3609 039C                                           l3561 02E7  
                                         l3553 02E2                                           l3545 02B0  
                                         l3721 06D6                                           l3713 06B6  
                                         l3705 0635                                           l3811 0B74  
                                         l3803 0B70                                           l3395 05E4  
                                         l3387 05BB                                           l3379 059B  
                                         l3299 04B2                                           l2851 0235  
                                         l2843 0220                                           l2827 01F3  
                                         l2835 0203                                           l2819 01C2  
                                         l2771 009C                                           l2763 0089  
                                         l2755 0074                                           l2747 0060  
                                         l2739 0051                                           l2915 0DA2  
                                         l2907 0D75                                           l2587 0A43  
                                         l3539 0958                                           l3651 0421  
                                         l3643 03FB                                           l3627 03D6  
                                         l3619 03B7                                           l3571 0313  
                                         l3563 02ED                                           l3555 02E2  
                                         l3547 02B7                                           l3731 06F4  
                                         l3715 06BA                                           l3707 06AD  
                                         l3821 0B95                                           l3813 0B75  
                                         l3805 0B71                                           l3389 05C0  
                                         l3397 05E8                                           l2861 026C  
                                         l2853 0239                                           l2837 0207  
                                         l2829 01F7                                           l2773 009E  
                                         l2765 008A                                           l2757 007C  
                                         l2749 0065                                           l2917 0DA6  
                                         l2909 0D7F                                           l2589 0A49  
                                         l3661 042D                                           l3645 0401  
                                         l3629 03E3                                           l3653 0425  
                                         l3581 0320                                           l3573 0318  
                                         l3565 02F2                                           l3549 02C8  
                                         l3741 071C                                           l3733 06FC  
                                         l3717 06CE                                           l3709 06AD  
                                         l3901 07AB                                           l3831 0844  
                                         l3823 085E                                           l3815 0B7D  
                                         l3807 0B72                                           l3399 05F5  
                                         l2871 0296                                           l2863 027A  
                                         l2855 0251                                           l2847 0228  
                                         l2839 0208                                           l2791 00FA  
                                         l2783 00B9                                           l2775 00A6  
                                         l2767 008F                                           l2759 0081  
                                         l2919 0DA7                                           l3671 047A  
                                         l3663 0448                                           l3655 042A  
                                         l3647 040F                                           l3639 03F0  
                                         l3591 034C                                           l3583 0326  
                                         l3575 031C                                           l3567 02F8  
                                         l3751 0734                                           l3743 0721  
                                         l3735 0701                                           l3727 06D8  
                                         l3719 06D4                                           l3911 07E4  
                                         l3903 07BB                                           l3841 0988  
                                         l3833 097B                                           l3825 0861  
                                         l3817 0B85                                           l3809 0B73  
                                         l2873 0297                                           l2865 0283  
                                         l2849 022D                                           l2857 0255  
                                         l2793 0114                                           l2785 00C6  
                                         l2777 00AB                                           l2769 0094  
                                         l2881 0D0A                                           l3681 0A04  
                                         l3673 09EF                                           l3665 045E  
                                         l3649 041C                                           l3593 0351  
                                         l3585 032B                                           l3569 0306  
                                         l3761 076A                                           l3753 0747  
                                         l3745 072F                                           l3737 070E  
                                         l3729 06EB                                           l3921 0CA6  
                                         l3913 0C81                                           l3905 07C9  
                                         l3843 098A                                           l3835 097E  
                                         l3691 087E                                           l3771 0A85  
                                         l3827 0862                                           l3819 0B8D  
                                         l3851 098D                                           l2875 029F  
                                         l2867 0285                                           l2859 0262  
                                         l2795 0121                                           l2787 00D3  
                                         l2779 00B0                                           l2891 0D37  
                                         l2883 0D0E                                           l3683 0A0A  
                                         l3675 09F2                                           l3667 0468  
                                         l3587 0331                                           l3595 0355  
                                         l3763 076D                                           l3755 0750  
                                         l3739 0714                                           l3931 0CD5  
                                         l3923 0CB2                                           l3915 0C82  
                                         l3907 07CC                                           l3845 0865  
                                         l3837 097F                                           l3773 0A8D  
                                         l3765 0A73                                           l3781 0B59  
                                         l3693 07F7                                           l3861 099D  
                                         l3853 0990                                           l3829 0848  
                                         l2869 0292                                           l2797 012E  
                                         l2789 00ED                                           l2893 0D3C  
                                         l2885 0D1E                                           l3677 09F6  
                                         l3669 046D                                           l3589 033F  
                                         l3757 0758                                           l3933 0CD8  
                                         l3925 0CB4                                           l3917 0C96  
                                         l3909 07E1                                           l3941 0C0C  
                                         l3847 0868                                           l3695 0875  
                                         l3839 0980                                           l3687 0887  
                                         l3775 0A95                                           l3767 0A7C  
                                         l3791 0B6A                                           l3783 0B5B  
                                         l3863 08BD                                           l3871 086D  
                                         l3855 0991                                           l2799 0135  
                                         l2895 0D47                                           l2887 0D2E  
                                         l2879 0D05                                           l3679 09FF  
                                         l3599 035F                                           l3759 075D  
                                         l3935 0CED                                           l3919 0CA4  
                                         l3927 0CB7                                           l3951 0C28  
                                         l3943 0C0F                                           l3849 0869  
                                         l3689 0890                                           l3769 0A7D  
                                         l3697 0899                                           l3793 0B6B  
                                         l3785 0B5E                                           l3777 0B53  
                                         l3865 08C0                                           l3881 095E  
                                         l3873 0870                                           l3857 0993  
                                         l2897 0D4E                                           l3937 0CF0  
                                         l3929 0CC7                                           l3961 0C42  
                                         l3945 0C16                                           l3953 0C2E  
                                         l3699 08A2                                           l3795 0B6C  
                                         l3787 0B63                                           l3779 0B56  
                                         l3867 08C1                                           l3883 095F  
                                         l3875 0871                                           l3859 0995  
                                         l3939 0A51                                           l2899 0D52  
                                         l3891 078A                                           l3971 0C5A  
                                         l3963 0C48                                           l3955 0C32  
                                         l3947 0C1C                                           l3797 0B6D  
                                         l3789 0B68                                           l3869 08C2  
                                         l3885 0966                                           l3877 0872  
                                         l3893 0798                                           l3981 0C7D  
                                         l3973 0C5E                                           l3965 0C4E  
                                         l3957 0C36                                           l3949 0C22  
                                         l3799 0B6E                                           l3879 095A  
                                         l3895 079A                                           l3887 0775  
                                         l3975 0C71                                           l3959 0C3C  
                                         l3967 0C54                                           l3983 0B15  
                                         l3897 07A6                                           l3889 0776  
                                         l3977 0C78                                           l3969 0C56  
                                         l3985 0B18                                           l3899 07A8  
                                         l3979 0C7B                                           l3987 0B19  
                                         l3989 0B4D                                           u2010 0AB6  
                                         u2011 0AB5                                           u2020 0A49  
                                         u2005 0AAB                                           u2021 0A48  
                                         u3000 0BA3                                           u3001 0BA2  
                                         u3010 0BB9                                           u2035 09E4  
                                         u3100 048F                                           u2300 005F  
                                         u3020 0BCE                                           u3101 048E  
                                         u2301 005E                                           u3021 0BCD  
                                         _LATA 010C                                           u3110 0495  
                                         u2310 0065                                           u3030 0BD5  
                                         _LATB 010D                                           u3111 0494  
                                         u2311 0064                                           u3031 0BD4  
                                         u3015 0BB5                                           u3120 049A  
                                         u2400 01B8                                           u2320 006A  
                                         u4000 0CA4                                           u3121 0499  
                                         u2321 0069                                           u4001 0CA3  
                                         u3210 0548                                           u3130 04BA  
                                         u2410 01CF                                           u2330 0089  
                                         u3050 0BE5                                           u4010 0CB2  
                                         u3211 0547                                           u3131 04B9  
                                         u2331 0088                                           u3051 0BE4  
                                         u4011 0CB1                                           u3300 059F  
                                         u3140 04C0                                           u2500 022D  
                                         u2340 008F                                           u3060 0BEC  
                                         u4020 0CC5                                           u4100 0C3C  
                                         u3301 059E                                           u3205 053E  
                                         u3141 04BF                                           u2501 022C  
                                         u2405 01B4                                           u2341 008E  
                                         u3061 0BEB                                           u3045 0BD7  
                                         u4021 0CC4                                           u4005 0CA0  
                                         u4101 0C3B                                           u3310 05B3  
                                         u3230 0562                                           u3150 04C5  
                                         u2510 0239                                           u2350 0094  
                                         u4030 0CD5                                           u4110 0C42  
                                         u3311 05B2                                           u3231 0561  
                                         u3151 04C4                                           u2511 0238  
                                         u2415 01CB                                           u2351 0093  
                                         u4031 0CD4                                           u4015 0CAE  
                                         u4111 0C41                                           u3320 05BA  
                                         u3240 0575                                           u3160 04E0  
                                         u2520 0247                                           u2440 01F7  
                                         u2360 00AB                                           u3080 0BFB  
                                         u2600 0D4D                                           u4040 0D02  
                                         u4120 0C48                                           u3321 05B9  
                                         u3241 0574                                           u3225 054A  
                                         u3161 04DF                                           u2441 01F6  
                                         u2425 01DA                                           u2361 00AA  
                                         u3081 0BFA                                           u2601 0D4C  
                                         u4041 0D01                                           u4025 0CC1  
                                         u4121 0C47                                           u3330 05C0  
                                         u3250 057D                                           u3170 04FE  
                                         u2530 0262                                           u2370 00B0  
                                         u3090 0C00                                           u4130 0C4E  
                                         u4050 0C16                                           u3331 05BF  
                                         u3251 057C                                           u3235 055E  
                                         u3171 04FD                                           u2531 0261  
                                         u2435 01ED                                           u2371 00AF  
                                         u3091 0BFF                                           u3075 0BEE  
                                         u4035 0CD1                                           u4131 0C4D  
                                         u4051 0C15                                           u3340 05CC  
                                         u3180 0536                                           u2540 027A  
                                         u2460 0207                                           u2620 0D67  
                                         u1900 0F12                                           u4140 0C54  
                                         u4060 0C1C                                           u3341 05CB  
                                         u3181 0535                                           u2541 0279  
                                         u2525 0243                                           u2461 0206  
                                         u2621 0D66                                           u1901 0F11  
                                         u4045 0CFE                                           u4141 0C53  
                                         u4061 0C1B                                           u3350 05DA  
                                         u3270 058A                                           u2550 0296  
                                         u2470 020C                                           u1910 0F2A  
                                         u4150 0C78                                           u4070 0C22  
                                         u3271 0589                                           u2551 0295  
                                         u2535 025E                                           u2471 020B  
                                         u2455 01F9                                           u2615 0D5B  
                                         u1911 0F29                                           u4151 0C77  
                                         u4071 0C21                                           u3360 05F5  
                                         u2480 0220                                           u2640 0D75  
                                         u2560 0D0A                                           u1920 0DD1  
                                         u1840 0E7C                                           u4080 0C28  
                                         u3361 05F4                                           u3265 0580  
                                         u2545 0276                                           u2481 021F  
                                         u2385 012F                                           u2641 0D74  
                                         u2561 0D09                                           u1921 0DD0  
                                         u1905 0F0E                                           u1841 0E7B  
                                         u4081 0C27                                           u3370 0610  
                                         u3290 059A                                           u2490 0227  
                                         u2650 0D7B                                           u2570 0D0E  
                                         u1930 0DF1                                           u1850 0E92  
                                         u4090 0C2E                                           u3371 060F  
                                         u3355 05D6                                           u3291 0599  
                                         u3195 0537                                           u2491 0226  
                                         u2395 015E                                           u2651 0D7A  
                                         u2635 0D6B                                           u2571 0D0D  
                                         u1931 0DF0                                           u1915 0F26  
                                         u1851 0E91                                           u4091 0C2D  
                                         u3380 0625                                           u2660 0D7F  
                                         u2580 0D2E                                           u3620 0950  
                                         u1940 0E0C                                           u1860 0EB2  
                                         u3700 0326                                           u3381 0624  
                                         u3365 05F1                                           u3285 058C  
                                         u2661 0D7E                                           u2581 0D2D  
                                         u3621 094F                                           u1941 0E0B  
                                         u1925 0DCD                                           u1861 0EB1  
                                         u1845 0E78                                           u3701 0325  
                                         u2670 0D93                                           u3630 0956  
                                         u1950 0E22                                           u1870 0EC8  
                                         u3710 033F                                           u3375 060C  
                                         u4167 0A40                                           u3631 0955  
                                         u1951 0E21                                           u1935 0DED  
                                         u1871 0EC7                                           u1855 0E8E  
                                         u3711 033E                                           u2680 0DA2  
                                         u1960 0E3B                                           u1880 0EE3  
                                         u3800 03F6                                           u3720 0355  
                                         u3640 02B0                                           u2681 0DA1  
                                         u1961 0E3A                                           u1945 0E08  
                                         u1881 0EE2                                           u1865 0EAE  
                                         u3801 03F5                                           u3721 0354  
                                         u3641 02AF                                           u2690 0DA6  
                                         u1970 0E53                                           u1890 0EF9  
                                         u3810 040F                                           u3730 0379  
                                         u2691 0DA5                                           u2675 0D8F  
                                         u2595 0D41                                           u1971 0E52  
                                         u1955 0E1E                                           u1891 0EF8  
                                         u1875 0EC4                                           u3811 040E  
                                         u3731 0378                                           u3715 033B  
                                         u1980 0E59                                           u3820 0425  
                                         u3740 0395                                           u3660 02E2  
                                         u3900 06EB                                           u1981 0E58  
                                         u1965 0E37                                           u1885 0EDF  
                                         u3821 0424                                           u3741 0394  
                                         u3661 02E1                                           u3901 06EA  
                                         u1990 0AA6                                           u2790 09C5  
                                         u3830 0448                                           u3750 039C  
                                         u3670 02ED                                           u3910 070E  
                       get_pulse@capturedValue 0079                                           u1991 0AA5  
                                         u2791 09C4                                           u1975 0E4F  
                                         u1895 0EF5                                           u3831 0447  
                                         u3815 040B                                           u3751 039B  
                                         u3735 0375                                           u3671 02EC  
                                         u3655 02BA                                           u3911 070D  
                                         u3840 045E                                           u3760 03B2  
                                         u3680 0306                                           u3920 072F  
                                         u3841 045D                                           u3761 03B1  
                                         u3745 0391                                           u3681 0305  
                                         u3665 02DE                                           u3921 072E  
                                         u3905 06E7                                           u3850 047A  
                                         u3770 03BD                                           u3690 031C  
                                         u3930 0747                                           u2795 09C1  
                                         u3851 0479                                           u3835 0444  
                                         u3771 03BC                                           u3691 031B  
                                         u3931 0746                                           u3915 070A  
                                         u3860 09F6                                           u3780 03D6  
                                         u3940 076A                                           u3861 09F5  
                                         u3845 045A                                           u3781 03D5  
                                         u3765 03AE                                           u3685 0302  
                                         u3941 0769                                           u3925 072B  
                                         i1l70 08CF                                           u3790 03EC  
                                         u3950 0798                                           u3855 0476  
                                         u3791 03EB                                           u3935 0743  
                                         u3951 0797                                           i1l48 093B  
                                         u3960 07A6                                           u3785 03D2  
                                         u3945 0766                                           u3961 07A5  
                                         u3890 0A0A                                           u3970 07B9  
                                         i1l67 08C7                                           u3891 0A09  
                                         u3875 09FB                                           u3971 07B8  
                                         u3955 0794                                           u3980 07C9  
                                         u3885 0A00                                           u3981 07C8  
                                         u3965 07A2                                           u3990 07F6  
                                         u3991 07F5                                           u3975 07B5  
                                         u3985 07C5                                           u3995 07F2  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _WPUA 020C                                           _WPUB 020D  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         abs@a 0020                                           _main 0B15  
                                         _byte 0130                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                           start 0034  
                              ___fldiv@new_exp 005E                                  __CFG_MCLRE$ON 0000  
                   ??_TMR4_SetInterruptHandler 0022                                          ??_abs 0022  
                             comunicacao@speed 0067                                ?_FVR_Initialize 0077  
                                ?_EUSART_Write 0077                 __size_of_OSCILLATOR_Initialize 0007  
                          __size_of_IOCBF0_ISR 000F                            __size_of_IOCBF3_ISR 000F  
                __end_of_OSCILLATOR_Initialize 0865                            __size_of_IOCBF4_ISR 000F  
                          __size_of_IOCBF5_ISR 000F                                  ___fltol@sign1 0029  
                                        ?_main 0077                                __end_of___fldiv 0635  
                                __CFG_WDTE$OFF 0000                         ??_CCP4_DefaultCallBack 007B  
                              __end_of___flmul 02A8                                __end_of___fltol 0C0C  
                                        _T1CON 0018                                          _T2CON 001C  
                                        _T4CON 0417                                          i1l160 097A  
                                        i1l312 0032                                          i1l313 0032  
                                        i1l305 0012                                          i1l250 0003  
                                        i1l340 0840                                          i1l244 094A  
                                        i1l308 0024                                          i1l421 0A2F  
                                        i1l431 0841                                          i1l425 08FF  
                                        i1l441 0842                                          i1l346 09B6  
                                        i1l435 090E                                          i1l451 0843  
                                        i1l445 091D                                          i1l461 0002  
                                        i1l455 092C                                          i1l582 085D  
                                        i1l591 08F0                                          i1l585 08DA  
                                        i1l579 0B14                                          i1l588 08E5  
                                        i1l597 0ADF                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                 update@i_1258 0029                                   update@i_1259 002D  
                                        _TXSTA 019E                                _TMR4_Initialize 098D  
                             __end_of_TMR4_ISR 094B                                          _andar 00D2  
                      __end_of_PIN_MANAGER_IOC 0A30                                 _WDT_Initialize 0848  
                      __end_of_PWM3_Initialize 08C6                        __end_of_TMR1_Initialize 096A  
                                        pclath 000A                                __end_of_sensor1 085E  
                              __end_of_sensor2 08DB                                __end_of_sensor3 08E6  
                              __end_of_sensor4 08F1                                          status 0003  
                      __end_of_CCP4_Initialize 098D                                          wtemp0 007E  
                              _TMR1_WriteTimer 096A                                ??_gerenciamento 0060  
                              __initialization 0036                                   __end_of_main 0B53  
                               ??_EUSART_Write 0077                        __end_of_TMR2_Initialize 0875  
                  ?_INTERRUPT_InterruptManager 0077                                         ??_main 006F  
                               __CFG_PLLEN$OFF 0000                        _IOCBF0_InterruptHandler 0126  
                       __end_of_WDT_Initialize 084C                               ?_CCP4_CaptureISR 0077  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 012C  
                 ??_IOCBF5_SetInterruptHandler 0022                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR3H 0312  
                                       _CCPR4H 0319                                         _CCPR3L 0311  
                                       _CCPR4L 0318                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 0851  
                                       _BORCON 0116                                         _T1GCON 0019  
                      TMR1_WriteTimer@timerVal 0077                                         i1l3141 0900  
                                       i1l3135 08F1                                         i1l3143 0907  
                                       i1l3151 091B                                         i1l3137 08F8  
                                       i1l3145 090C                                         i1l3153 091E  
                                       i1l3161 0AE5                                         i1l3139 08FD  
                                       i1l3147 090F                                         i1l3155 0925  
                                       i1l3171 0B04                                         i1l3163 0AEC  
                                       i1l3181 0ACC                                         i1l3149 0916  
                                       i1l3157 092A                                         i1l3173 0B11  
                                       i1l3165 0AEF                                         i1l3421 093E  
                                       i1l3183 0AD1                                         i1l3175 0ABB  
                                       i1l3431 0A1C                                         i1l3167 0AF7  
                                       i1l3159 0AE0                                         i1l3423 0945  
                                       i1l3511 001B                                         i1l3503 0006  
                                       i1l3185 0AD7                                         i1l3177 0AC1  
                                       i1l3441 09A1                                         i1l3433 0A1F  
                                       i1l3425 0A0F                                         i1l3169 0B00  
                                       i1l3513 0020                                         i1l3505 000A  
                                       i1l3187 0ADB                                         i1l3179 0AC6  
                                       i1l3443 09A3                                         i1l3435 0A24  
                                       i1l3427 0A14                                         i1l3419 093C  
                                       i1l3515 0029                                         i1l3507 000E  
                                       i1l3445 09AC                                         i1l3437 0A27  
                                       i1l3429 0A17                                         i1l3517 002E  
                                       i1l3509 0016                                         i1l3439 0A2C  
                                       i1l2931 092E                                         i1l2941 08C7  
                                       i1l2933 0933                                         i1l2951 0972  
                                       i1l2943 08CC                                         i1l2935 0938  
                                       i1l2953 0974                                         i1l2945 096A  
                                       i1l2937 093A                                         i1l2929 092D  
                                       i1l2947 096F                                         i1l2955 0976  
                                       i1l2971 0857                                         i1l2957 0978  
                                       i1l2949 0970                                         i1l2973 085A  
                                       i1l2975 08D0                                         i1l2977 08DB  
                                       i1l2979 08E6                                         _FVRCON 0117  
                                       u340_20 0A14                                         u340_21 0A13  
                   __end_of_EUSART_is_tx_ready 093C                                         u341_20 0A1C  
                                       u341_21 0A1B                                         u342_20 0A24  
                                       u270_20 0933                                         u342_21 0A23  
                                       u270_21 0932                                         u343_20 0A2C  
                                       u271_20 0938                                         u343_21 0A2B  
                                       u271_21 0937                                         u280_20 08F8  
                                       u272_20 08CC                                         u360_20 0029  
                                       u280_21 08F7                                         u272_21 08CB  
                                       u360_21 0028                                         u273_20 096F  
                                       u281_20 0907                                         u361_20 002E  
                                       u273_21 096E                                         u281_21 0906  
                                       u361_21 002D                                         u282_20 0916  
                                       u282_21 0915                                         u283_20 0925  
                                       u339_20 0945                                         u355_20 000A  
                                       u283_21 0924                                         u339_21 0944  
                                       u355_21 0009                                         u284_20 0AEC  
                                       u356_20 000E                                         u284_21 0AEB  
                                       u356_21 000D                                         u285_20 0AF7  
                                       u357_20 0016                                         u285_21 0AF6  
                                       u357_21 0015                                _max_origem_down 0072  
                                       u286_20 0B11                                         u358_20 001B  
                                       u286_21 0B10                                         u358_21 001A  
                                       u286_25 0B0D                                         u287_20 0ACC  
                                       u359_20 0020                                         u287_21 0ACB  
                                       u359_21 001F                                         u288_20 0AD7  
                                       u288_21 0AD6                                         u289_20 0ADB  
                                       u289_21 0ADA                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                               __end_of___xxtofl 0DB0  
                               __CFG_PWRTE$OFF 0000                               __end_of_col_down 0D03  
                                 _CCPTMRS0bits 029E                    __size_of_PWM3_LoadDutyValue 001C  
                                       ___wmul 09EF                                      ??___fldiv 0054  
                               __CFG_STVREN$ON 0000                                      ??___flmul 003A  
                             __end_of_controle 0775                                      ??___fltol 0024  
                                       _col_up 0775                               __end_of_max_down 0E5E  
                      __end_of_TMR4_Initialize 09A1                                         _min_up 0E5E  
                                _CCP4_CallBack 0128                                         _update 02A8  
                                       _pulses 00E9            __size_of_IOCBF5_SetInterruptHandler 0009  
         __end_of_TMR4_DefaultInterruptHandler 0004          __size_of_TMR4_DefaultInterruptHandler 0001  
                 _TMR4_DefaultInterruptHandler 0003                             __size_of__Umul8_16 0024  
                              ?_WDT_Initialize 0077                                      ??_sensor1 0077  
                                    ??_sensor2 0077                                      ??_sensor3 0077  
                                    ??_sensor4 0077                       ADC_GetConversion@channel 0023  
   IOCBF5_SetInterruptHandler@InterruptHandler 0020     IOCBF4_SetInterruptHandler@InterruptHandler 0020  
   IOCBF3_SetInterruptHandler@InterruptHandler 0020     IOCBF0_SetInterruptHandler@InterruptHandler 0020  
     TMR4_SetInterruptHandler@InterruptHandler 0020                               ?_PIN_MANAGER_IOC 0077  
                         __size_of_comunicacao 00D5                        __end_of_TMR1_WriteTimer 097B  
                                 ??_IOCBF0_ISR 0077                                   ??_IOCBF3_ISR 0078  
                                 ??_IOCBF4_ISR 0078                                   ??_IOCBF5_ISR 0078  
                             ?_TMR1_Initialize 0077                               ?_PWM3_Initialize 0077  
                                 ___xxtofl@arg 002E                           __size_of_EUSART_Read 000F  
                                 ___xxtofl@exp 002D                              _SYSTEM_Initialize 0A51  
                                 ___xxtofl@val 0024                        __end_of__initialization 004D  
                             ?_CCP4_Initialize 0077                             ?_SYSTEM_Initialize 0077  
                                   ___fltol@f1 0020                       __end_of_CCP4_SetCallBack 087E  
                               __pcstackCOMMON 0077                            ??_SYSTEM_Initialize 0022  
                                    ?_TMR4_ISR 0077         __end_of_IOCBF0_DefaultInterruptHandler 0842  
      __size_of_IOCBF0_DefaultInterruptHandler 0001                 _IOCBF0_DefaultInterruptHandler 0841  
                             ?_TMR2_Initialize 0077                             __end_of_IOCBF0_ISR 0900  
                           __end_of_IOCBF3_ISR 090F                             __end_of_IOCBF4_ISR 091E  
                           __end_of_IOCBF5_ISR 092D                                 _OPTION_REGbits 0095  
                ?_TMR4_DefaultInterruptHandler 0077                ??_EUSART_SetOverrunErrorHandler 0022  
       __end_of_IOCBF3_DefaultInterruptHandler 0843        __size_of_IOCBF3_DefaultInterruptHandler 0001  
               _IOCBF3_DefaultInterruptHandler 0842                    ?_IOCBF4_SetInterruptHandler 0020  
                           __size_of_get_pulse 0025                      __end_of_SYSTEM_Initialize 0A73  
                                   __pbssBANK0 006F                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0130                           __end_of_EUSART_Write 08D0  
                                   _and_ating2 00C8                                     _and_origem 00DA  
                        _TMR4_InterruptHandler 00EB                              __end_of__Umul8_16 0ABB  
                             ??_FVR_Initialize 0020                                     __pmaintext 0B15  
                                _min_fila_down 00CC                                        ?___wmul 0020  
                                   ??_TMR4_ISR 007B                                     __pintentry 0004  
                                      ?_col_up 0077                             __size_of_send_data 0035  
                                      _CCP3CON 0313                                        _CCP4CON 031A  
                                      _BAUDCON 019F                                        ?_min_up 0077  
                             ?_TMR4_Initialize 0077               ??_IOCBF4_DefaultInterruptHandler 0077  
              ?_IOCBF4_DefaultInterruptHandler 0077                                        _APFCON0 011D  
                                      _APFCON1 011E                                        ?_update 0077  
                      __size_of_ADC_Initialize 0008                                      ?___xxtofl 0024  
           __end_of_IOCBF5_SetInterruptHandler 08BD                     _IOCBF5_SetInterruptHandler 08B4  
                                      _OSCTUNE 0098                                      ?_col_down 0077  
                     ??_EUSART_SetErrorHandler 0022                               ?_TMR1_WriteTimer 0077  
                                    ?_controle 0077                                      ?_max_down 0077  
                        controle@max_dutyValue 0058                           _ADC_InterruptHandler 00DC  
                                _min_origem_up 0070                              __end_of_get_pulse 0AE0  
                                      ___fldiv 0481                                        ___flmul 0051  
                                      ___fltol 0B97                                __size_of___wmul 0020  
                              __size_of_col_up 0082                                        _and_dst 0074  
                              __size_of_min_up 00CD                                        __ptext1 0C0C  
                                      __ptext2 0775                                        __ptext3 0C81  
                                      __ptext4 0635                                        __ptext5 02A8  
                                      __ptext6 0E5E                                        __ptext7 0DB0  
                                      __ptext8 084C                                        __ptext9 094B  
                                      _fila_up 00BE                                __size_of_update 01D9  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 085E  
                                    _T2CONbits 001C                                   __size_of_abs 001C  
                                   ??___xxtofl 0028                  __size_of_CCP4_DefaultCallBack 0001  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 0022  
            __size_of_TMR4_SetInterruptHandler 0009                                      _IOCBFbits 0396  
                    ?_TMR4_SetInterruptHandler 0020                                      _IOCBNbits 0395  
                                      _sensor1 0857                                        _sensor2 08D0  
                                      _sensor3 08DB                                        _sensor4 08E6  
                                      _temp_mt 00DF                                        _sentido 00D8  
                                    _IOCBPbits 0394                                     ??_col_down 005E  
                   __size_of_SYSTEM_Initialize 0022                                        clrloop0 0852  
                         end_of_initialization 004D                              __end_of_send_data 0B15  
               ??_TMR4_DefaultInterruptHandler 0077                                     ??_controle 004C  
        __end_of_EUSART_SetOverrunErrorHandler 0899         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 0890                                     ??_max_down 0020  
                                      min_up@i 0023                              _EUSART_Initialize 0A73  
                        __end_of_gerenciamento 0C81                             ?_EUSART_Initialize 0077  
                                    _RCSTAbits 019D                                  controle@count 005C  
                           _EUSART_is_rx_ready 084C                                        update@i 002B  
                                controle@route 0052                             _EUSART_is_tx_ready 092D  
                          ??_EUSART_Initialize 0022                               ??_WDT_Initialize 0020  
                          ?_EUSART_is_rx_ready 0077                            ?_EUSART_is_tx_ready 0077  
                        controle@min_dutyValue 0056                               __CFG_FOSC$INTOSC 0000  
                                ___xxtofl@sign 002C                          __size_of_EUSART_Write 000A  
                                  ___fldiv@grs 0060                                    ___fldiv@rem 0059  
                 ??_IOCBF0_SetInterruptHandler 0022                   ??_IOCBF3_SetInterruptHandler 0022  
              __size_of_EUSART_SetErrorHandler 0009                                    ___flmul@grs 0040  
                    __end_of_EUSART_Initialize 0A97                           ??_EUSART_is_rx_ready 0020  
                         ??_EUSART_is_tx_ready 0077                                      _TXSTAbits 019E  
                     __size_of_CCP4_CaptureISR 0016              CCP4_DefaultCallBack@capturedValue 0079  
                   __end_of_PWM3_LoadDutyValue 09EF                              controle@dutyValue 005A  
                            ?_CCP4_SetCallBack 0020                             ??_CCP4_SetCallBack 0022  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 0A0F  
                                 _EUSART_Write 08C6                                 __end_of_col_up 07F7  
                            __size_of_TMR4_ISR 000F                                 _ADC_Initialize 0865  
          __size_of_IOCBF0_SetInterruptHandler 0009            __size_of_IOCBF3_SetInterruptHandler 0009  
                       ?_OSCILLATOR_Initialize 0077                                 __end_of_min_up 0F2B  
                               __end_of_update 0481                                  ??_comunicacao 0066  
                          start_initialization 0036                __size_of_PIN_MANAGER_Initialize 0044  
                                  __end_of_abs 09D3                                  ??_EUSART_Read 0020  
                       _EUSART_is_tx_ready$167 0077                       __size_of_PIN_MANAGER_IOC 0021  
               ?_EUSART_SetOverrunErrorHandler 0020                       __size_of_PWM3_Initialize 0009  
                     __size_of_TMR1_Initialize 0010                     _EUSART_FramingErrorHandler 012E  
                                     ??___wmul 0024                         _EUSART_SetErrorHandler 087E  
                     __size_of_CCP4_Initialize 0012                         __end_of_ADC_Initialize 086D  
                                    __Umul8_16 0A97                                       ??_col_up 005E  
                                     ??_min_up 0020                                       ??_update 0025  
                        CCP4_CaptureISR@module 007C                                      ___fldiv@a 004C  
                                    ___fldiv@b 0050                                      ___flmul@a 0036  
                                    ___flmul@b 0032                                    __pbssCOMMON 0070  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                     __size_of_TMR2_Initialize 0008                    ?_IOCBF5_SetInterruptHandler 0020  
                            __size_of___xxtofl 00AD                            comunicacao@position 006B  
       __end_of_IOCBF4_DefaultInterruptHandler 0844        __size_of_IOCBF4_DefaultInterruptHandler 0001  
               _IOCBF4_DefaultInterruptHandler 0843                            __end_of_comunicacao 1000  
                            __size_of_col_down 0082                     __size_of_EUSART_Initialize 0024  
                          __end_of_EUSART_Read 095A                              __size_of_controle 0140  
                                    __pnvBANK1 00EB                                      __pnvBANK2 0120  
                                    _and_ating 006F                                      _ccp_value 00E7  
                            __size_of_max_down 00AE                        _IOCBF3_InterruptHandler 0124  
                       _PIN_MANAGER_Initialize 0B53               __end_of_TMR4_SetInterruptHandler 0800  
                                     ?___fldiv 004C                              ??_CCP4_CaptureISR 007B  
                                     ?___flmul 0032                                       ?___fltol 0020  
                                   ?__Umul8_16 0020                                      _fila_down 00B4  
                              ?_ADC_Initialize 0077                   ??_INTERRUPT_InterruptManager 007E  
                                   send_data@i 0079                                      _distancia 00D0  
                                    _get_pulse 0ABB               ??_IOCBF5_DefaultInterruptHandler 0077  
              ?_IOCBF5_DefaultInterruptHandler 0077                                      _aux_tempo 00D6  
           __end_of_IOCBF0_SetInterruptHandler 08A2                     _IOCBF0_SetInterruptHandler 0899  
           __end_of_IOCBF3_SetInterruptHandler 08AB                     _IOCBF3_SetInterruptHandler 08A2  
                                     ?_sensor1 0077                                       ?_sensor2 0077  
                                     ?_sensor3 0077                                       ?_sensor4 0077  
                     __size_of_TMR4_Initialize 0014                                 ___wmul@product 0024  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0020  
                                    clear_ram0 0851                   __end_of_CCP4_DefaultCallBack 0841  
                                    _send_data 0AE0                                       _PIE3bits 0093  
                            _eusartRxLastError 0076                       __size_of_TMR1_WriteTimer 0011  
          __size_of_INTERRUPT_InterruptManager 0030                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0022                                       _PIR3bits 0013  
                                    _origem_up 00A0              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR4_ISR 093C                              ??_PIN_MANAGER_IOC 0078  
                            ??_TMR1_Initialize 0020                              ??_PWM3_Initialize 0020  
                                   ?_get_pulse 0079                                     _ADCON0bits 009D  
                                    _out_value 00CA                              ___wmul@multiplier 0020  
                      __size_of_FVR_Initialize 0004                              ??_CCP4_Initialize 0022  
                                  _comunicacao 0F2B                                    _EUSART_Read 094B  
                                    controle@a 0054                              ??_TMR2_Initialize 0020  
                                   ?_send_data 0077                                      max_down@i 0023  
                            _ADC_GetConversion 0A30                        ??_OSCILLATOR_Initialize 0020  
                                  ??__Umul8_16 0022                            _EUSART_ErrorHandler 012A  
                           ?_ADC_GetConversion 0020                                    _max_fila_up 00CE  
                             __size_of___fldiv 01B4                               __size_of___flmul 0257  
                             __size_of___fltol 0075                       _TMR4_SetInterruptHandler 07F7  
                           _PWM3_LoadDutyValue 09D3                            ??_ADC_GetConversion 0022  
                      _IOCBF4_InterruptHandler 0122                                       ___xxtofl 0D03  
                    __size_of_CCP4_SetCallBack 0009                                       __ptext10 09EF  
                                     __ptext11 09D3                                       __ptext20 0A51  
                                     __ptext12 0A30                                       __ptext21 0848  
                                     __ptext13 09B7                                     _T1GCONbits 0019  
                                     __ptext30 08A2                                       __ptext22 098D  
                                     __ptext14 0F2B                                       __ptext31 0899  
                                     __ptext23 07F7                                       __ptext15 0D03  
                                     __ptext40 0865                                       __ptext32 085E  
                                     __ptext24 086D                                       __ptext16 0B97  
                                     __ptext33 0844                                       __ptext25 095A  
                                     __ptext17 0051                                       __ptext50 08E6  
                                     __ptext42 093C                                       __ptext34 0A73  
                                     __ptext26 08BD                                       __ptext18 0A97  
                                     __ptext51 090F                                       __ptext43 0003  
                                     __ptext35 0890                                       __ptext27 0B53  
                                     __ptext19 0481                                       __ptext60 09A1  
                                     __ptext52 0843                                       __ptext44 0AE0  
                                     __ptext36 0887                                       __ptext28 08B4  
                                     __ptext61 0840                                       __ptext53 08DB  
                                     __ptext45 092D                                       __ptext37 087E  
                                     __ptext29 08AB                                       __ptext62 0ABB  
                                     __ptext54 0900                                       __ptext46 08C6  
                                     __ptext38 097B                                       __ptext63 096A  
                                     __ptext55 0842                                       __ptext47 0A0F  
                                     __ptext39 0875                                       __ptext56 08D0  
                                     __ptext48 091E                                       __ptext57 08F1  
                                     __ptext49 0002                                       __ptext58 0841  
                          ?_PWM3_LoadDutyValue 0020                                       __ptext59 0857  
                       __size_of_gerenciamento 0075                               __size_of_sensor1 0007  
                             __size_of_sensor2 000B                               __size_of_sensor3 000B  
                             __size_of_sensor4 000B                                       _col_down 0C81  
                 ??_IOCBF4_SetInterruptHandler 0022                                     _IOCBF0_ISR 08F1  
                                   _IOCBF3_ISR 0900                                     _IOCBF4_ISR 090F  
                                   _IOCBF5_ISR 091E                                       _controle 0635  
                                     _max_down 0DB0                              ??_TMR4_Initialize 0022  
                  __size_of_EUSART_is_rx_ready 0005                                  __size_of_main 003E  
                  __size_of_EUSART_is_tx_ready 000F                      __end_of_ADC_GetConversion 0A51  
                      ?_EUSART_SetErrorHandler 0020                                       _sentido2 00D4  
EUSART_SetOverrunErrorHandler@interruptHandler 0020                           ??_PWM3_LoadDutyValue 0022  
                                     int$flags 007E                                controle@destiny 0050  
           __end_of_INTERRUPT_InterruptManager 0034                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0890         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 0887                              ??_TMR1_WriteTimer 0079  
                                  ??_get_pulse 007B            __size_of_IOCBF4_SetInterruptHandler 0009  
                                    update@aux 0028                                     _INTCONbits 000B  
                         _CCP4_DefaultCallBack 0840                                     _FVRCONbits 0117  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                              _CCP4_CaptureISR 09A1                        ?_PIN_MANAGER_Initialize 0077  
               __end_of_EUSART_SetErrorHandler 0887                              __CFG_CLKOUTEN$OFF 0000  
                                  ??_send_data 0078                               ??_ADC_Initialize 0020  
                                _gerenciamento 0C0C                                    _origem_down 00AA  
EUSART_SetFramingErrorHandler@interruptHandler 0020                    PWM3_LoadDutyValue@dutyValue 0020  
                               _FVR_Initialize 0844                         __Umul8_16@multiplicand 0020  
                        ?_CCP4_DefaultCallBack 0079                    ?_IOCBF0_SetInterruptHandler 0020  
                  ?_IOCBF3_SetInterruptHandler 0020                                    ?_IOCBF0_ISR 0077  
                           EUSART_Write@txData 0077                                    ?_IOCBF3_ISR 0077  
                                  ?_IOCBF4_ISR 0077                                    ?_IOCBF5_ISR 0077  
               __end_of_PIN_MANAGER_Initialize 0B97               ??_IOCBF0_DefaultInterruptHandler 0077  
              ?_IOCBF0_DefaultInterruptHandler 0077         __end_of_IOCBF5_DefaultInterruptHandler 0003  
      __size_of_IOCBF5_DefaultInterruptHandler 0001                 _IOCBF5_DefaultInterruptHandler 0002  
                              _PIN_MANAGER_IOC 0A0F                           __Umul8_16@multiplier 0028  
                   __size_of_ADC_GetConversion 0021                        _IOCBF5_InterruptHandler 0120  
                              _TMR1_Initialize 095A                                _PWM3_Initialize 08BD  
                            __Umul8_16@product 0024                                 ?_gerenciamento 0077  
