

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec 12 20:21:06 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     5                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	dabs	1,0x7E,2
    79  0000                     
    80                           ; Version 2.10
    81                           ; Generated 31/07/2019 GMT
    82                           ; 
    83                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC16F1827 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  008C                     	;# 
   144  008D                     	;# 
   145  0091                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0095                     	;# 
   150  0096                     	;# 
   151  0097                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009A                     	;# 
   155  009B                     	;# 
   156  009B                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  0111                     	;# 
   163  0112                     	;# 
   164  0113                     	;# 
   165  0114                     	;# 
   166  0115                     	;# 
   167  0116                     	;# 
   168  0117                     	;# 
   169  0118                     	;# 
   170  0119                     	;# 
   171  011A                     	;# 
   172  011B                     	;# 
   173  011D                     	;# 
   174  011E                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  0191                     	;# 
   178  0191                     	;# 
   179  0192                     	;# 
   180  0193                     	;# 
   181  0193                     	;# 
   182  0193                     	;# 
   183  0194                     	;# 
   184  0195                     	;# 
   185  0196                     	;# 
   186  0199                     	;# 
   187  019A                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019B                     	;# 
   192  019C                     	;# 
   193  019C                     	;# 
   194  019D                     	;# 
   195  019E                     	;# 
   196  019F                     	;# 
   197  020C                     	;# 
   198  020D                     	;# 
   199  0211                     	;# 
   200  0211                     	;# 
   201  0212                     	;# 
   202  0212                     	;# 
   203  0213                     	;# 
   204  0213                     	;# 
   205  0214                     	;# 
   206  0214                     	;# 
   207  0215                     	;# 
   208  0215                     	;# 
   209  0215                     	;# 
   210  0216                     	;# 
   211  0216                     	;# 
   212  0217                     	;# 
   213  0217                     	;# 
   214  0219                     	;# 
   215  021A                     	;# 
   216  021B                     	;# 
   217  021C                     	;# 
   218  021D                     	;# 
   219  021E                     	;# 
   220  021F                     	;# 
   221  0291                     	;# 
   222  0291                     	;# 
   223  0292                     	;# 
   224  0293                     	;# 
   225  0294                     	;# 
   226  0295                     	;# 
   227  0295                     	;# 
   228  0296                     	;# 
   229  0298                     	;# 
   230  0298                     	;# 
   231  0299                     	;# 
   232  029A                     	;# 
   233  029B                     	;# 
   234  029C                     	;# 
   235  029C                     	;# 
   236  029D                     	;# 
   237  029E                     	;# 
   238  029E                     	;# 
   239  0311                     	;# 
   240  0311                     	;# 
   241  0312                     	;# 
   242  0313                     	;# 
   243  0318                     	;# 
   244  0318                     	;# 
   245  0319                     	;# 
   246  031A                     	;# 
   247  0394                     	;# 
   248  0395                     	;# 
   249  0396                     	;# 
   250  039A                     	;# 
   251  039C                     	;# 
   252  039D                     	;# 
   253  039E                     	;# 
   254  039F                     	;# 
   255  0415                     	;# 
   256  0416                     	;# 
   257  0417                     	;# 
   258  041C                     	;# 
   259  041D                     	;# 
   260  041E                     	;# 
   261  0FE4                     	;# 
   262  0FE5                     	;# 
   263  0FE6                     	;# 
   264  0FE7                     	;# 
   265  0FE8                     	;# 
   266  0FE9                     	;# 
   267  0FEA                     	;# 
   268  0FEB                     	;# 
   269  0FED                     	;# 
   270  0FEE                     	;# 
   271  0FEF                     	;# 
   272  0000                     	;# 
   273  0001                     	;# 
   274  0002                     	;# 
   275  0003                     	;# 
   276  0004                     	;# 
   277  0005                     	;# 
   278  0006                     	;# 
   279  0007                     	;# 
   280  0008                     	;# 
   281  0009                     	;# 
   282  000A                     	;# 
   283  000B                     	;# 
   284  000C                     	;# 
   285  000D                     	;# 
   286  0011                     	;# 
   287  0012                     	;# 
   288  0013                     	;# 
   289  0014                     	;# 
   290  0015                     	;# 
   291  0016                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  001A                     	;# 
   297  001B                     	;# 
   298  001C                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  0091                     	;# 
   304  0092                     	;# 
   305  0093                     	;# 
   306  0094                     	;# 
   307  0095                     	;# 
   308  0096                     	;# 
   309  0097                     	;# 
   310  0098                     	;# 
   311  0099                     	;# 
   312  009A                     	;# 
   313  009B                     	;# 
   314  009B                     	;# 
   315  009C                     	;# 
   316  009D                     	;# 
   317  009E                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  0111                     	;# 
   321  0112                     	;# 
   322  0113                     	;# 
   323  0114                     	;# 
   324  0115                     	;# 
   325  0116                     	;# 
   326  0117                     	;# 
   327  0118                     	;# 
   328  0119                     	;# 
   329  011A                     	;# 
   330  011B                     	;# 
   331  011D                     	;# 
   332  011E                     	;# 
   333  018C                     	;# 
   334  018D                     	;# 
   335  0191                     	;# 
   336  0191                     	;# 
   337  0192                     	;# 
   338  0193                     	;# 
   339  0193                     	;# 
   340  0193                     	;# 
   341  0194                     	;# 
   342  0195                     	;# 
   343  0196                     	;# 
   344  0199                     	;# 
   345  019A                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019B                     	;# 
   350  019C                     	;# 
   351  019C                     	;# 
   352  019D                     	;# 
   353  019E                     	;# 
   354  019F                     	;# 
   355  020C                     	;# 
   356  020D                     	;# 
   357  0211                     	;# 
   358  0211                     	;# 
   359  0212                     	;# 
   360  0212                     	;# 
   361  0213                     	;# 
   362  0213                     	;# 
   363  0214                     	;# 
   364  0214                     	;# 
   365  0215                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0216                     	;# 
   369  0216                     	;# 
   370  0217                     	;# 
   371  0217                     	;# 
   372  0219                     	;# 
   373  021A                     	;# 
   374  021B                     	;# 
   375  021C                     	;# 
   376  021D                     	;# 
   377  021E                     	;# 
   378  021F                     	;# 
   379  0291                     	;# 
   380  0291                     	;# 
   381  0292                     	;# 
   382  0293                     	;# 
   383  0294                     	;# 
   384  0295                     	;# 
   385  0295                     	;# 
   386  0296                     	;# 
   387  0298                     	;# 
   388  0298                     	;# 
   389  0299                     	;# 
   390  029A                     	;# 
   391  029B                     	;# 
   392  029C                     	;# 
   393  029C                     	;# 
   394  029D                     	;# 
   395  029E                     	;# 
   396  029E                     	;# 
   397  0311                     	;# 
   398  0311                     	;# 
   399  0312                     	;# 
   400  0313                     	;# 
   401  0318                     	;# 
   402  0318                     	;# 
   403  0319                     	;# 
   404  031A                     	;# 
   405  0394                     	;# 
   406  0395                     	;# 
   407  0396                     	;# 
   408  039A                     	;# 
   409  039C                     	;# 
   410  039D                     	;# 
   411  039E                     	;# 
   412  039F                     	;# 
   413  0415                     	;# 
   414  0416                     	;# 
   415  0417                     	;# 
   416  041C                     	;# 
   417  041D                     	;# 
   418  041E                     	;# 
   419  0FE4                     	;# 
   420  0FE5                     	;# 
   421  0FE6                     	;# 
   422  0FE7                     	;# 
   423  0FE8                     	;# 
   424  0FE9                     	;# 
   425  0FEA                     	;# 
   426  0FEB                     	;# 
   427  0FED                     	;# 
   428  0FEE                     	;# 
   429  0FEF                     	;# 
   430  0000                     	;# 
   431  0001                     	;# 
   432  0002                     	;# 
   433  0003                     	;# 
   434  0004                     	;# 
   435  0005                     	;# 
   436  0006                     	;# 
   437  0007                     	;# 
   438  0008                     	;# 
   439  0009                     	;# 
   440  000A                     	;# 
   441  000B                     	;# 
   442  000C                     	;# 
   443  000D                     	;# 
   444  0011                     	;# 
   445  0012                     	;# 
   446  0013                     	;# 
   447  0014                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0016                     	;# 
   451  0017                     	;# 
   452  0018                     	;# 
   453  0019                     	;# 
   454  001A                     	;# 
   455  001B                     	;# 
   456  001C                     	;# 
   457  001E                     	;# 
   458  001F                     	;# 
   459  008C                     	;# 
   460  008D                     	;# 
   461  0091                     	;# 
   462  0092                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0095                     	;# 
   466  0096                     	;# 
   467  0097                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009A                     	;# 
   471  009B                     	;# 
   472  009B                     	;# 
   473  009C                     	;# 
   474  009D                     	;# 
   475  009E                     	;# 
   476  010C                     	;# 
   477  010D                     	;# 
   478  0111                     	;# 
   479  0112                     	;# 
   480  0113                     	;# 
   481  0114                     	;# 
   482  0115                     	;# 
   483  0116                     	;# 
   484  0117                     	;# 
   485  0118                     	;# 
   486  0119                     	;# 
   487  011A                     	;# 
   488  011B                     	;# 
   489  011D                     	;# 
   490  011E                     	;# 
   491  018C                     	;# 
   492  018D                     	;# 
   493  0191                     	;# 
   494  0191                     	;# 
   495  0192                     	;# 
   496  0193                     	;# 
   497  0193                     	;# 
   498  0193                     	;# 
   499  0194                     	;# 
   500  0195                     	;# 
   501  0196                     	;# 
   502  0199                     	;# 
   503  019A                     	;# 
   504  019B                     	;# 
   505  019B                     	;# 
   506  019B                     	;# 
   507  019B                     	;# 
   508  019C                     	;# 
   509  019C                     	;# 
   510  019D                     	;# 
   511  019E                     	;# 
   512  019F                     	;# 
   513  020C                     	;# 
   514  020D                     	;# 
   515  0211                     	;# 
   516  0211                     	;# 
   517  0212                     	;# 
   518  0212                     	;# 
   519  0213                     	;# 
   520  0213                     	;# 
   521  0214                     	;# 
   522  0214                     	;# 
   523  0215                     	;# 
   524  0215                     	;# 
   525  0215                     	;# 
   526  0216                     	;# 
   527  0216                     	;# 
   528  0217                     	;# 
   529  0217                     	;# 
   530  0219                     	;# 
   531  021A                     	;# 
   532  021B                     	;# 
   533  021C                     	;# 
   534  021D                     	;# 
   535  021E                     	;# 
   536  021F                     	;# 
   537  0291                     	;# 
   538  0291                     	;# 
   539  0292                     	;# 
   540  0293                     	;# 
   541  0294                     	;# 
   542  0295                     	;# 
   543  0295                     	;# 
   544  0296                     	;# 
   545  0298                     	;# 
   546  0298                     	;# 
   547  0299                     	;# 
   548  029A                     	;# 
   549  029B                     	;# 
   550  029C                     	;# 
   551  029C                     	;# 
   552  029D                     	;# 
   553  029E                     	;# 
   554  029E                     	;# 
   555  0311                     	;# 
   556  0311                     	;# 
   557  0312                     	;# 
   558  0313                     	;# 
   559  0318                     	;# 
   560  0318                     	;# 
   561  0319                     	;# 
   562  031A                     	;# 
   563  0394                     	;# 
   564  0395                     	;# 
   565  0396                     	;# 
   566  039A                     	;# 
   567  039C                     	;# 
   568  039D                     	;# 
   569  039E                     	;# 
   570  039F                     	;# 
   571  0415                     	;# 
   572  0416                     	;# 
   573  0417                     	;# 
   574  041C                     	;# 
   575  041D                     	;# 
   576  041E                     	;# 
   577  0FE4                     	;# 
   578  0FE5                     	;# 
   579  0FE6                     	;# 
   580  0FE7                     	;# 
   581  0FE8                     	;# 
   582  0FE9                     	;# 
   583  0FEA                     	;# 
   584  0FEB                     	;# 
   585  0FED                     	;# 
   586  0FEE                     	;# 
   587  0FEF                     	;# 
   588  0000                     	;# 
   589  0001                     	;# 
   590  0002                     	;# 
   591  0003                     	;# 
   592  0004                     	;# 
   593  0005                     	;# 
   594  0006                     	;# 
   595  0007                     	;# 
   596  0008                     	;# 
   597  0009                     	;# 
   598  000A                     	;# 
   599  000B                     	;# 
   600  000C                     	;# 
   601  000D                     	;# 
   602  0011                     	;# 
   603  0012                     	;# 
   604  0013                     	;# 
   605  0014                     	;# 
   606  0015                     	;# 
   607  0016                     	;# 
   608  0016                     	;# 
   609  0017                     	;# 
   610  0018                     	;# 
   611  0019                     	;# 
   612  001A                     	;# 
   613  001B                     	;# 
   614  001C                     	;# 
   615  001E                     	;# 
   616  001F                     	;# 
   617  008C                     	;# 
   618  008D                     	;# 
   619  0091                     	;# 
   620  0092                     	;# 
   621  0093                     	;# 
   622  0094                     	;# 
   623  0095                     	;# 
   624  0096                     	;# 
   625  0097                     	;# 
   626  0098                     	;# 
   627  0099                     	;# 
   628  009A                     	;# 
   629  009B                     	;# 
   630  009B                     	;# 
   631  009C                     	;# 
   632  009D                     	;# 
   633  009E                     	;# 
   634  010C                     	;# 
   635  010D                     	;# 
   636  0111                     	;# 
   637  0112                     	;# 
   638  0113                     	;# 
   639  0114                     	;# 
   640  0115                     	;# 
   641  0116                     	;# 
   642  0117                     	;# 
   643  0118                     	;# 
   644  0119                     	;# 
   645  011A                     	;# 
   646  011B                     	;# 
   647  011D                     	;# 
   648  011E                     	;# 
   649  018C                     	;# 
   650  018D                     	;# 
   651  0191                     	;# 
   652  0191                     	;# 
   653  0192                     	;# 
   654  0193                     	;# 
   655  0193                     	;# 
   656  0193                     	;# 
   657  0194                     	;# 
   658  0195                     	;# 
   659  0196                     	;# 
   660  0199                     	;# 
   661  019A                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019B                     	;# 
   665  019B                     	;# 
   666  019C                     	;# 
   667  019C                     	;# 
   668  019D                     	;# 
   669  019E                     	;# 
   670  019F                     	;# 
   671  020C                     	;# 
   672  020D                     	;# 
   673  0211                     	;# 
   674  0211                     	;# 
   675  0212                     	;# 
   676  0212                     	;# 
   677  0213                     	;# 
   678  0213                     	;# 
   679  0214                     	;# 
   680  0214                     	;# 
   681  0215                     	;# 
   682  0215                     	;# 
   683  0215                     	;# 
   684  0216                     	;# 
   685  0216                     	;# 
   686  0217                     	;# 
   687  0217                     	;# 
   688  0219                     	;# 
   689  021A                     	;# 
   690  021B                     	;# 
   691  021C                     	;# 
   692  021D                     	;# 
   693  021E                     	;# 
   694  021F                     	;# 
   695  0291                     	;# 
   696  0291                     	;# 
   697  0292                     	;# 
   698  0293                     	;# 
   699  0294                     	;# 
   700  0295                     	;# 
   701  0295                     	;# 
   702  0296                     	;# 
   703  0298                     	;# 
   704  0298                     	;# 
   705  0299                     	;# 
   706  029A                     	;# 
   707  029B                     	;# 
   708  029C                     	;# 
   709  029C                     	;# 
   710  029D                     	;# 
   711  029E                     	;# 
   712  029E                     	;# 
   713  0311                     	;# 
   714  0311                     	;# 
   715  0312                     	;# 
   716  0313                     	;# 
   717  0318                     	;# 
   718  0318                     	;# 
   719  0319                     	;# 
   720  031A                     	;# 
   721  0394                     	;# 
   722  0395                     	;# 
   723  0396                     	;# 
   724  039A                     	;# 
   725  039C                     	;# 
   726  039D                     	;# 
   727  039E                     	;# 
   728  039F                     	;# 
   729  0415                     	;# 
   730  0416                     	;# 
   731  0417                     	;# 
   732  041C                     	;# 
   733  041D                     	;# 
   734  041E                     	;# 
   735  0FE4                     	;# 
   736  0FE5                     	;# 
   737  0FE6                     	;# 
   738  0FE7                     	;# 
   739  0FE8                     	;# 
   740  0FE9                     	;# 
   741  0FEA                     	;# 
   742  0FEB                     	;# 
   743  0FED                     	;# 
   744  0FEE                     	;# 
   745  0FEF                     	;# 
   746  0000                     	;# 
   747  0001                     	;# 
   748  0002                     	;# 
   749  0003                     	;# 
   750  0004                     	;# 
   751  0005                     	;# 
   752  0006                     	;# 
   753  0007                     	;# 
   754  0008                     	;# 
   755  0009                     	;# 
   756  000A                     	;# 
   757  000B                     	;# 
   758  000C                     	;# 
   759  000D                     	;# 
   760  0011                     	;# 
   761  0012                     	;# 
   762  0013                     	;# 
   763  0014                     	;# 
   764  0015                     	;# 
   765  0016                     	;# 
   766  0016                     	;# 
   767  0017                     	;# 
   768  0018                     	;# 
   769  0019                     	;# 
   770  001A                     	;# 
   771  001B                     	;# 
   772  001C                     	;# 
   773  001E                     	;# 
   774  001F                     	;# 
   775  008C                     	;# 
   776  008D                     	;# 
   777  0091                     	;# 
   778  0092                     	;# 
   779  0093                     	;# 
   780  0094                     	;# 
   781  0095                     	;# 
   782  0096                     	;# 
   783  0097                     	;# 
   784  0098                     	;# 
   785  0099                     	;# 
   786  009A                     	;# 
   787  009B                     	;# 
   788  009B                     	;# 
   789  009C                     	;# 
   790  009D                     	;# 
   791  009E                     	;# 
   792  010C                     	;# 
   793  010D                     	;# 
   794  0111                     	;# 
   795  0112                     	;# 
   796  0113                     	;# 
   797  0114                     	;# 
   798  0115                     	;# 
   799  0116                     	;# 
   800  0117                     	;# 
   801  0118                     	;# 
   802  0119                     	;# 
   803  011A                     	;# 
   804  011B                     	;# 
   805  011D                     	;# 
   806  011E                     	;# 
   807  018C                     	;# 
   808  018D                     	;# 
   809  0191                     	;# 
   810  0191                     	;# 
   811  0192                     	;# 
   812  0193                     	;# 
   813  0193                     	;# 
   814  0193                     	;# 
   815  0194                     	;# 
   816  0195                     	;# 
   817  0196                     	;# 
   818  0199                     	;# 
   819  019A                     	;# 
   820  019B                     	;# 
   821  019B                     	;# 
   822  019B                     	;# 
   823  019B                     	;# 
   824  019C                     	;# 
   825  019C                     	;# 
   826  019D                     	;# 
   827  019E                     	;# 
   828  019F                     	;# 
   829  020C                     	;# 
   830  020D                     	;# 
   831  0211                     	;# 
   832  0211                     	;# 
   833  0212                     	;# 
   834  0212                     	;# 
   835  0213                     	;# 
   836  0213                     	;# 
   837  0214                     	;# 
   838  0214                     	;# 
   839  0215                     	;# 
   840  0215                     	;# 
   841  0215                     	;# 
   842  0216                     	;# 
   843  0216                     	;# 
   844  0217                     	;# 
   845  0217                     	;# 
   846  0219                     	;# 
   847  021A                     	;# 
   848  021B                     	;# 
   849  021C                     	;# 
   850  021D                     	;# 
   851  021E                     	;# 
   852  021F                     	;# 
   853  0291                     	;# 
   854  0291                     	;# 
   855  0292                     	;# 
   856  0293                     	;# 
   857  0294                     	;# 
   858  0295                     	;# 
   859  0295                     	;# 
   860  0296                     	;# 
   861  0298                     	;# 
   862  0298                     	;# 
   863  0299                     	;# 
   864  029A                     	;# 
   865  029B                     	;# 
   866  029C                     	;# 
   867  029C                     	;# 
   868  029D                     	;# 
   869  029E                     	;# 
   870  029E                     	;# 
   871  0311                     	;# 
   872  0311                     	;# 
   873  0312                     	;# 
   874  0313                     	;# 
   875  0318                     	;# 
   876  0318                     	;# 
   877  0319                     	;# 
   878  031A                     	;# 
   879  0394                     	;# 
   880  0395                     	;# 
   881  0396                     	;# 
   882  039A                     	;# 
   883  039C                     	;# 
   884  039D                     	;# 
   885  039E                     	;# 
   886  039F                     	;# 
   887  0415                     	;# 
   888  0416                     	;# 
   889  0417                     	;# 
   890  041C                     	;# 
   891  041D                     	;# 
   892  041E                     	;# 
   893  0FE4                     	;# 
   894  0FE5                     	;# 
   895  0FE6                     	;# 
   896  0FE7                     	;# 
   897  0FE8                     	;# 
   898  0FE9                     	;# 
   899  0FEA                     	;# 
   900  0FEB                     	;# 
   901  0FED                     	;# 
   902  0FEE                     	;# 
   903  0FEF                     	;# 
   904  0000                     	;# 
   905  0001                     	;# 
   906  0002                     	;# 
   907  0003                     	;# 
   908  0004                     	;# 
   909  0005                     	;# 
   910  0006                     	;# 
   911  0007                     	;# 
   912  0008                     	;# 
   913  0009                     	;# 
   914  000A                     	;# 
   915  000B                     	;# 
   916  000C                     	;# 
   917  000D                     	;# 
   918  0011                     	;# 
   919  0012                     	;# 
   920  0013                     	;# 
   921  0014                     	;# 
   922  0015                     	;# 
   923  0016                     	;# 
   924  0016                     	;# 
   925  0017                     	;# 
   926  0018                     	;# 
   927  0019                     	;# 
   928  001A                     	;# 
   929  001B                     	;# 
   930  001C                     	;# 
   931  001E                     	;# 
   932  001F                     	;# 
   933  008C                     	;# 
   934  008D                     	;# 
   935  0091                     	;# 
   936  0092                     	;# 
   937  0093                     	;# 
   938  0094                     	;# 
   939  0095                     	;# 
   940  0096                     	;# 
   941  0097                     	;# 
   942  0098                     	;# 
   943  0099                     	;# 
   944  009A                     	;# 
   945  009B                     	;# 
   946  009B                     	;# 
   947  009C                     	;# 
   948  009D                     	;# 
   949  009E                     	;# 
   950  010C                     	;# 
   951  010D                     	;# 
   952  0111                     	;# 
   953  0112                     	;# 
   954  0113                     	;# 
   955  0114                     	;# 
   956  0115                     	;# 
   957  0116                     	;# 
   958  0117                     	;# 
   959  0118                     	;# 
   960  0119                     	;# 
   961  011A                     	;# 
   962  011B                     	;# 
   963  011D                     	;# 
   964  011E                     	;# 
   965  018C                     	;# 
   966  018D                     	;# 
   967  0191                     	;# 
   968  0191                     	;# 
   969  0192                     	;# 
   970  0193                     	;# 
   971  0193                     	;# 
   972  0193                     	;# 
   973  0194                     	;# 
   974  0195                     	;# 
   975  0196                     	;# 
   976  0199                     	;# 
   977  019A                     	;# 
   978  019B                     	;# 
   979  019B                     	;# 
   980  019B                     	;# 
   981  019B                     	;# 
   982  019C                     	;# 
   983  019C                     	;# 
   984  019D                     	;# 
   985  019E                     	;# 
   986  019F                     	;# 
   987  020C                     	;# 
   988  020D                     	;# 
   989  0211                     	;# 
   990  0211                     	;# 
   991  0212                     	;# 
   992  0212                     	;# 
   993  0213                     	;# 
   994  0213                     	;# 
   995  0214                     	;# 
   996  0214                     	;# 
   997  0215                     	;# 
   998  0215                     	;# 
   999  0215                     	;# 
  1000  0216                     	;# 
  1001  0216                     	;# 
  1002  0217                     	;# 
  1003  0217                     	;# 
  1004  0219                     	;# 
  1005  021A                     	;# 
  1006  021B                     	;# 
  1007  021C                     	;# 
  1008  021D                     	;# 
  1009  021E                     	;# 
  1010  021F                     	;# 
  1011  0291                     	;# 
  1012  0291                     	;# 
  1013  0292                     	;# 
  1014  0293                     	;# 
  1015  0294                     	;# 
  1016  0295                     	;# 
  1017  0295                     	;# 
  1018  0296                     	;# 
  1019  0298                     	;# 
  1020  0298                     	;# 
  1021  0299                     	;# 
  1022  029A                     	;# 
  1023  029B                     	;# 
  1024  029C                     	;# 
  1025  029C                     	;# 
  1026  029D                     	;# 
  1027  029E                     	;# 
  1028  029E                     	;# 
  1029  0311                     	;# 
  1030  0311                     	;# 
  1031  0312                     	;# 
  1032  0313                     	;# 
  1033  0318                     	;# 
  1034  0318                     	;# 
  1035  0319                     	;# 
  1036  031A                     	;# 
  1037  0394                     	;# 
  1038  0395                     	;# 
  1039  0396                     	;# 
  1040  039A                     	;# 
  1041  039C                     	;# 
  1042  039D                     	;# 
  1043  039E                     	;# 
  1044  039F                     	;# 
  1045  0415                     	;# 
  1046  0416                     	;# 
  1047  0417                     	;# 
  1048  041C                     	;# 
  1049  041D                     	;# 
  1050  041E                     	;# 
  1051  0FE4                     	;# 
  1052  0FE5                     	;# 
  1053  0FE6                     	;# 
  1054  0FE7                     	;# 
  1055  0FE8                     	;# 
  1056  0FE9                     	;# 
  1057  0FEA                     	;# 
  1058  0FEB                     	;# 
  1059  0FED                     	;# 
  1060  0FEE                     	;# 
  1061  0FEF                     	;# 
  1062  0000                     	;# 
  1063  0001                     	;# 
  1064  0002                     	;# 
  1065  0003                     	;# 
  1066  0004                     	;# 
  1067  0005                     	;# 
  1068  0006                     	;# 
  1069  0007                     	;# 
  1070  0008                     	;# 
  1071  0009                     	;# 
  1072  000A                     	;# 
  1073  000B                     	;# 
  1074  000C                     	;# 
  1075  000D                     	;# 
  1076  0011                     	;# 
  1077  0012                     	;# 
  1078  0013                     	;# 
  1079  0014                     	;# 
  1080  0015                     	;# 
  1081  0016                     	;# 
  1082  0016                     	;# 
  1083  0017                     	;# 
  1084  0018                     	;# 
  1085  0019                     	;# 
  1086  001A                     	;# 
  1087  001B                     	;# 
  1088  001C                     	;# 
  1089  001E                     	;# 
  1090  001F                     	;# 
  1091  008C                     	;# 
  1092  008D                     	;# 
  1093  0091                     	;# 
  1094  0092                     	;# 
  1095  0093                     	;# 
  1096  0094                     	;# 
  1097  0095                     	;# 
  1098  0096                     	;# 
  1099  0097                     	;# 
  1100  0098                     	;# 
  1101  0099                     	;# 
  1102  009A                     	;# 
  1103  009B                     	;# 
  1104  009B                     	;# 
  1105  009C                     	;# 
  1106  009D                     	;# 
  1107  009E                     	;# 
  1108  010C                     	;# 
  1109  010D                     	;# 
  1110  0111                     	;# 
  1111  0112                     	;# 
  1112  0113                     	;# 
  1113  0114                     	;# 
  1114  0115                     	;# 
  1115  0116                     	;# 
  1116  0117                     	;# 
  1117  0118                     	;# 
  1118  0119                     	;# 
  1119  011A                     	;# 
  1120  011B                     	;# 
  1121  011D                     	;# 
  1122  011E                     	;# 
  1123  018C                     	;# 
  1124  018D                     	;# 
  1125  0191                     	;# 
  1126  0191                     	;# 
  1127  0192                     	;# 
  1128  0193                     	;# 
  1129  0193                     	;# 
  1130  0193                     	;# 
  1131  0194                     	;# 
  1132  0195                     	;# 
  1133  0196                     	;# 
  1134  0199                     	;# 
  1135  019A                     	;# 
  1136  019B                     	;# 
  1137  019B                     	;# 
  1138  019B                     	;# 
  1139  019B                     	;# 
  1140  019C                     	;# 
  1141  019C                     	;# 
  1142  019D                     	;# 
  1143  019E                     	;# 
  1144  019F                     	;# 
  1145  020C                     	;# 
  1146  020D                     	;# 
  1147  0211                     	;# 
  1148  0211                     	;# 
  1149  0212                     	;# 
  1150  0212                     	;# 
  1151  0213                     	;# 
  1152  0213                     	;# 
  1153  0214                     	;# 
  1154  0214                     	;# 
  1155  0215                     	;# 
  1156  0215                     	;# 
  1157  0215                     	;# 
  1158  0216                     	;# 
  1159  0216                     	;# 
  1160  0217                     	;# 
  1161  0217                     	;# 
  1162  0219                     	;# 
  1163  021A                     	;# 
  1164  021B                     	;# 
  1165  021C                     	;# 
  1166  021D                     	;# 
  1167  021E                     	;# 
  1168  021F                     	;# 
  1169  0291                     	;# 
  1170  0291                     	;# 
  1171  0292                     	;# 
  1172  0293                     	;# 
  1173  0294                     	;# 
  1174  0295                     	;# 
  1175  0295                     	;# 
  1176  0296                     	;# 
  1177  0298                     	;# 
  1178  0298                     	;# 
  1179  0299                     	;# 
  1180  029A                     	;# 
  1181  029B                     	;# 
  1182  029C                     	;# 
  1183  029C                     	;# 
  1184  029D                     	;# 
  1185  029E                     	;# 
  1186  029E                     	;# 
  1187  0311                     	;# 
  1188  0311                     	;# 
  1189  0312                     	;# 
  1190  0313                     	;# 
  1191  0318                     	;# 
  1192  0318                     	;# 
  1193  0319                     	;# 
  1194  031A                     	;# 
  1195  0394                     	;# 
  1196  0395                     	;# 
  1197  0396                     	;# 
  1198  039A                     	;# 
  1199  039C                     	;# 
  1200  039D                     	;# 
  1201  039E                     	;# 
  1202  039F                     	;# 
  1203  0415                     	;# 
  1204  0416                     	;# 
  1205  0417                     	;# 
  1206  041C                     	;# 
  1207  041D                     	;# 
  1208  041E                     	;# 
  1209  0FE4                     	;# 
  1210  0FE5                     	;# 
  1211  0FE6                     	;# 
  1212  0FE7                     	;# 
  1213  0FE8                     	;# 
  1214  0FE9                     	;# 
  1215  0FEA                     	;# 
  1216  0FEB                     	;# 
  1217  0FED                     	;# 
  1218  0FEE                     	;# 
  1219  0FEF                     	;# 
  1220  0000                     	;# 
  1221  0001                     	;# 
  1222  0002                     	;# 
  1223  0003                     	;# 
  1224  0004                     	;# 
  1225  0005                     	;# 
  1226  0006                     	;# 
  1227  0007                     	;# 
  1228  0008                     	;# 
  1229  0009                     	;# 
  1230  000A                     	;# 
  1231  000B                     	;# 
  1232  000C                     	;# 
  1233  000D                     	;# 
  1234  0011                     	;# 
  1235  0012                     	;# 
  1236  0013                     	;# 
  1237  0014                     	;# 
  1238  0015                     	;# 
  1239  0016                     	;# 
  1240  0016                     	;# 
  1241  0017                     	;# 
  1242  0018                     	;# 
  1243  0019                     	;# 
  1244  001A                     	;# 
  1245  001B                     	;# 
  1246  001C                     	;# 
  1247  001E                     	;# 
  1248  001F                     	;# 
  1249  008C                     	;# 
  1250  008D                     	;# 
  1251  0091                     	;# 
  1252  0092                     	;# 
  1253  0093                     	;# 
  1254  0094                     	;# 
  1255  0095                     	;# 
  1256  0096                     	;# 
  1257  0097                     	;# 
  1258  0098                     	;# 
  1259  0099                     	;# 
  1260  009A                     	;# 
  1261  009B                     	;# 
  1262  009B                     	;# 
  1263  009C                     	;# 
  1264  009D                     	;# 
  1265  009E                     	;# 
  1266  010C                     	;# 
  1267  010D                     	;# 
  1268  0111                     	;# 
  1269  0112                     	;# 
  1270  0113                     	;# 
  1271  0114                     	;# 
  1272  0115                     	;# 
  1273  0116                     	;# 
  1274  0117                     	;# 
  1275  0118                     	;# 
  1276  0119                     	;# 
  1277  011A                     	;# 
  1278  011B                     	;# 
  1279  011D                     	;# 
  1280  011E                     	;# 
  1281  018C                     	;# 
  1282  018D                     	;# 
  1283  0191                     	;# 
  1284  0191                     	;# 
  1285  0192                     	;# 
  1286  0193                     	;# 
  1287  0193                     	;# 
  1288  0193                     	;# 
  1289  0194                     	;# 
  1290  0195                     	;# 
  1291  0196                     	;# 
  1292  0199                     	;# 
  1293  019A                     	;# 
  1294  019B                     	;# 
  1295  019B                     	;# 
  1296  019B                     	;# 
  1297  019B                     	;# 
  1298  019C                     	;# 
  1299  019C                     	;# 
  1300  019D                     	;# 
  1301  019E                     	;# 
  1302  019F                     	;# 
  1303  020C                     	;# 
  1304  020D                     	;# 
  1305  0211                     	;# 
  1306  0211                     	;# 
  1307  0212                     	;# 
  1308  0212                     	;# 
  1309  0213                     	;# 
  1310  0213                     	;# 
  1311  0214                     	;# 
  1312  0214                     	;# 
  1313  0215                     	;# 
  1314  0215                     	;# 
  1315  0215                     	;# 
  1316  0216                     	;# 
  1317  0216                     	;# 
  1318  0217                     	;# 
  1319  0217                     	;# 
  1320  0219                     	;# 
  1321  021A                     	;# 
  1322  021B                     	;# 
  1323  021C                     	;# 
  1324  021D                     	;# 
  1325  021E                     	;# 
  1326  021F                     	;# 
  1327  0291                     	;# 
  1328  0291                     	;# 
  1329  0292                     	;# 
  1330  0293                     	;# 
  1331  0294                     	;# 
  1332  0295                     	;# 
  1333  0295                     	;# 
  1334  0296                     	;# 
  1335  0298                     	;# 
  1336  0298                     	;# 
  1337  0299                     	;# 
  1338  029A                     	;# 
  1339  029B                     	;# 
  1340  029C                     	;# 
  1341  029C                     	;# 
  1342  029D                     	;# 
  1343  029E                     	;# 
  1344  029E                     	;# 
  1345  0311                     	;# 
  1346  0311                     	;# 
  1347  0312                     	;# 
  1348  0313                     	;# 
  1349  0318                     	;# 
  1350  0318                     	;# 
  1351  0319                     	;# 
  1352  031A                     	;# 
  1353  0394                     	;# 
  1354  0395                     	;# 
  1355  0396                     	;# 
  1356  039A                     	;# 
  1357  039C                     	;# 
  1358  039D                     	;# 
  1359  039E                     	;# 
  1360  039F                     	;# 
  1361  0415                     	;# 
  1362  0416                     	;# 
  1363  0417                     	;# 
  1364  041C                     	;# 
  1365  041D                     	;# 
  1366  041E                     	;# 
  1367  0FE4                     	;# 
  1368  0FE5                     	;# 
  1369  0FE6                     	;# 
  1370  0FE7                     	;# 
  1371  0FE8                     	;# 
  1372  0FE9                     	;# 
  1373  0FEA                     	;# 
  1374  0FEB                     	;# 
  1375  0FED                     	;# 
  1376  0FEE                     	;# 
  1377  0FEF                     	;# 
  1378  0000                     	;# 
  1379  0001                     	;# 
  1380  0002                     	;# 
  1381  0003                     	;# 
  1382  0004                     	;# 
  1383  0005                     	;# 
  1384  0006                     	;# 
  1385  0007                     	;# 
  1386  0008                     	;# 
  1387  0009                     	;# 
  1388  000A                     	;# 
  1389  000B                     	;# 
  1390  000C                     	;# 
  1391  000D                     	;# 
  1392  0011                     	;# 
  1393  0012                     	;# 
  1394  0013                     	;# 
  1395  0014                     	;# 
  1396  0015                     	;# 
  1397  0016                     	;# 
  1398  0016                     	;# 
  1399  0017                     	;# 
  1400  0018                     	;# 
  1401  0019                     	;# 
  1402  001A                     	;# 
  1403  001B                     	;# 
  1404  001C                     	;# 
  1405  001E                     	;# 
  1406  001F                     	;# 
  1407  008C                     	;# 
  1408  008D                     	;# 
  1409  0091                     	;# 
  1410  0092                     	;# 
  1411  0093                     	;# 
  1412  0094                     	;# 
  1413  0095                     	;# 
  1414  0096                     	;# 
  1415  0097                     	;# 
  1416  0098                     	;# 
  1417  0099                     	;# 
  1418  009A                     	;# 
  1419  009B                     	;# 
  1420  009B                     	;# 
  1421  009C                     	;# 
  1422  009D                     	;# 
  1423  009E                     	;# 
  1424  010C                     	;# 
  1425  010D                     	;# 
  1426  0111                     	;# 
  1427  0112                     	;# 
  1428  0113                     	;# 
  1429  0114                     	;# 
  1430  0115                     	;# 
  1431  0116                     	;# 
  1432  0117                     	;# 
  1433  0118                     	;# 
  1434  0119                     	;# 
  1435  011A                     	;# 
  1436  011B                     	;# 
  1437  011D                     	;# 
  1438  011E                     	;# 
  1439  018C                     	;# 
  1440  018D                     	;# 
  1441  0191                     	;# 
  1442  0191                     	;# 
  1443  0192                     	;# 
  1444  0193                     	;# 
  1445  0193                     	;# 
  1446  0193                     	;# 
  1447  0194                     	;# 
  1448  0195                     	;# 
  1449  0196                     	;# 
  1450  0199                     	;# 
  1451  019A                     	;# 
  1452  019B                     	;# 
  1453  019B                     	;# 
  1454  019B                     	;# 
  1455  019B                     	;# 
  1456  019C                     	;# 
  1457  019C                     	;# 
  1458  019D                     	;# 
  1459  019E                     	;# 
  1460  019F                     	;# 
  1461  020C                     	;# 
  1462  020D                     	;# 
  1463  0211                     	;# 
  1464  0211                     	;# 
  1465  0212                     	;# 
  1466  0212                     	;# 
  1467  0213                     	;# 
  1468  0213                     	;# 
  1469  0214                     	;# 
  1470  0214                     	;# 
  1471  0215                     	;# 
  1472  0215                     	;# 
  1473  0215                     	;# 
  1474  0216                     	;# 
  1475  0216                     	;# 
  1476  0217                     	;# 
  1477  0217                     	;# 
  1478  0219                     	;# 
  1479  021A                     	;# 
  1480  021B                     	;# 
  1481  021C                     	;# 
  1482  021D                     	;# 
  1483  021E                     	;# 
  1484  021F                     	;# 
  1485  0291                     	;# 
  1486  0291                     	;# 
  1487  0292                     	;# 
  1488  0293                     	;# 
  1489  0294                     	;# 
  1490  0295                     	;# 
  1491  0295                     	;# 
  1492  0296                     	;# 
  1493  0298                     	;# 
  1494  0298                     	;# 
  1495  0299                     	;# 
  1496  029A                     	;# 
  1497  029B                     	;# 
  1498  029C                     	;# 
  1499  029C                     	;# 
  1500  029D                     	;# 
  1501  029E                     	;# 
  1502  029E                     	;# 
  1503  0311                     	;# 
  1504  0311                     	;# 
  1505  0312                     	;# 
  1506  0313                     	;# 
  1507  0318                     	;# 
  1508  0318                     	;# 
  1509  0319                     	;# 
  1510  031A                     	;# 
  1511  0394                     	;# 
  1512  0395                     	;# 
  1513  0396                     	;# 
  1514  039A                     	;# 
  1515  039C                     	;# 
  1516  039D                     	;# 
  1517  039E                     	;# 
  1518  039F                     	;# 
  1519  0415                     	;# 
  1520  0416                     	;# 
  1521  0417                     	;# 
  1522  041C                     	;# 
  1523  041D                     	;# 
  1524  041E                     	;# 
  1525  0FE4                     	;# 
  1526  0FE5                     	;# 
  1527  0FE6                     	;# 
  1528  0FE7                     	;# 
  1529  0FE8                     	;# 
  1530  0FE9                     	;# 
  1531  0FEA                     	;# 
  1532  0FEB                     	;# 
  1533  0FED                     	;# 
  1534  0FEE                     	;# 
  1535  0FEF                     	;# 
  1536  0000                     	;# 
  1537  0001                     	;# 
  1538  0002                     	;# 
  1539  0003                     	;# 
  1540  0004                     	;# 
  1541  0005                     	;# 
  1542  0006                     	;# 
  1543  0007                     	;# 
  1544  0008                     	;# 
  1545  0009                     	;# 
  1546  000A                     	;# 
  1547  000B                     	;# 
  1548  000C                     	;# 
  1549  000D                     	;# 
  1550  0011                     	;# 
  1551  0012                     	;# 
  1552  0013                     	;# 
  1553  0014                     	;# 
  1554  0015                     	;# 
  1555  0016                     	;# 
  1556  0016                     	;# 
  1557  0017                     	;# 
  1558  0018                     	;# 
  1559  0019                     	;# 
  1560  001A                     	;# 
  1561  001B                     	;# 
  1562  001C                     	;# 
  1563  001E                     	;# 
  1564  001F                     	;# 
  1565  008C                     	;# 
  1566  008D                     	;# 
  1567  0091                     	;# 
  1568  0092                     	;# 
  1569  0093                     	;# 
  1570  0094                     	;# 
  1571  0095                     	;# 
  1572  0096                     	;# 
  1573  0097                     	;# 
  1574  0098                     	;# 
  1575  0099                     	;# 
  1576  009A                     	;# 
  1577  009B                     	;# 
  1578  009B                     	;# 
  1579  009C                     	;# 
  1580  009D                     	;# 
  1581  009E                     	;# 
  1582  010C                     	;# 
  1583  010D                     	;# 
  1584  0111                     	;# 
  1585  0112                     	;# 
  1586  0113                     	;# 
  1587  0114                     	;# 
  1588  0115                     	;# 
  1589  0116                     	;# 
  1590  0117                     	;# 
  1591  0118                     	;# 
  1592  0119                     	;# 
  1593  011A                     	;# 
  1594  011B                     	;# 
  1595  011D                     	;# 
  1596  011E                     	;# 
  1597  018C                     	;# 
  1598  018D                     	;# 
  1599  0191                     	;# 
  1600  0191                     	;# 
  1601  0192                     	;# 
  1602  0193                     	;# 
  1603  0193                     	;# 
  1604  0193                     	;# 
  1605  0194                     	;# 
  1606  0195                     	;# 
  1607  0196                     	;# 
  1608  0199                     	;# 
  1609  019A                     	;# 
  1610  019B                     	;# 
  1611  019B                     	;# 
  1612  019B                     	;# 
  1613  019B                     	;# 
  1614  019C                     	;# 
  1615  019C                     	;# 
  1616  019D                     	;# 
  1617  019E                     	;# 
  1618  019F                     	;# 
  1619  020C                     	;# 
  1620  020D                     	;# 
  1621  0211                     	;# 
  1622  0211                     	;# 
  1623  0212                     	;# 
  1624  0212                     	;# 
  1625  0213                     	;# 
  1626  0213                     	;# 
  1627  0214                     	;# 
  1628  0214                     	;# 
  1629  0215                     	;# 
  1630  0215                     	;# 
  1631  0215                     	;# 
  1632  0216                     	;# 
  1633  0216                     	;# 
  1634  0217                     	;# 
  1635  0217                     	;# 
  1636  0219                     	;# 
  1637  021A                     	;# 
  1638  021B                     	;# 
  1639  021C                     	;# 
  1640  021D                     	;# 
  1641  021E                     	;# 
  1642  021F                     	;# 
  1643  0291                     	;# 
  1644  0291                     	;# 
  1645  0292                     	;# 
  1646  0293                     	;# 
  1647  0294                     	;# 
  1648  0295                     	;# 
  1649  0295                     	;# 
  1650  0296                     	;# 
  1651  0298                     	;# 
  1652  0298                     	;# 
  1653  0299                     	;# 
  1654  029A                     	;# 
  1655  029B                     	;# 
  1656  029C                     	;# 
  1657  029C                     	;# 
  1658  029D                     	;# 
  1659  029E                     	;# 
  1660  029E                     	;# 
  1661  0311                     	;# 
  1662  0311                     	;# 
  1663  0312                     	;# 
  1664  0313                     	;# 
  1665  0318                     	;# 
  1666  0318                     	;# 
  1667  0319                     	;# 
  1668  031A                     	;# 
  1669  0394                     	;# 
  1670  0395                     	;# 
  1671  0396                     	;# 
  1672  039A                     	;# 
  1673  039C                     	;# 
  1674  039D                     	;# 
  1675  039E                     	;# 
  1676  039F                     	;# 
  1677  0415                     	;# 
  1678  0416                     	;# 
  1679  0417                     	;# 
  1680  041C                     	;# 
  1681  041D                     	;# 
  1682  041E                     	;# 
  1683  0FE4                     	;# 
  1684  0FE5                     	;# 
  1685  0FE6                     	;# 
  1686  0FE7                     	;# 
  1687  0FE8                     	;# 
  1688  0FE9                     	;# 
  1689  0FEA                     	;# 
  1690  0FEB                     	;# 
  1691  0FED                     	;# 
  1692  0FEE                     	;# 
  1693  0FEF                     	;# 
  1694  0000                     	;# 
  1695  0001                     	;# 
  1696  0002                     	;# 
  1697  0003                     	;# 
  1698  0004                     	;# 
  1699  0005                     	;# 
  1700  0006                     	;# 
  1701  0007                     	;# 
  1702  0008                     	;# 
  1703  0009                     	;# 
  1704  000A                     	;# 
  1705  000B                     	;# 
  1706  000C                     	;# 
  1707  000D                     	;# 
  1708  0011                     	;# 
  1709  0012                     	;# 
  1710  0013                     	;# 
  1711  0014                     	;# 
  1712  0015                     	;# 
  1713  0016                     	;# 
  1714  0016                     	;# 
  1715  0017                     	;# 
  1716  0018                     	;# 
  1717  0019                     	;# 
  1718  001A                     	;# 
  1719  001B                     	;# 
  1720  001C                     	;# 
  1721  001E                     	;# 
  1722  001F                     	;# 
  1723  008C                     	;# 
  1724  008D                     	;# 
  1725  0091                     	;# 
  1726  0092                     	;# 
  1727  0093                     	;# 
  1728  0094                     	;# 
  1729  0095                     	;# 
  1730  0096                     	;# 
  1731  0097                     	;# 
  1732  0098                     	;# 
  1733  0099                     	;# 
  1734  009A                     	;# 
  1735  009B                     	;# 
  1736  009B                     	;# 
  1737  009C                     	;# 
  1738  009D                     	;# 
  1739  009E                     	;# 
  1740  010C                     	;# 
  1741  010D                     	;# 
  1742  0111                     	;# 
  1743  0112                     	;# 
  1744  0113                     	;# 
  1745  0114                     	;# 
  1746  0115                     	;# 
  1747  0116                     	;# 
  1748  0117                     	;# 
  1749  0118                     	;# 
  1750  0119                     	;# 
  1751  011A                     	;# 
  1752  011B                     	;# 
  1753  011D                     	;# 
  1754  011E                     	;# 
  1755  018C                     	;# 
  1756  018D                     	;# 
  1757  0191                     	;# 
  1758  0191                     	;# 
  1759  0192                     	;# 
  1760  0193                     	;# 
  1761  0193                     	;# 
  1762  0193                     	;# 
  1763  0194                     	;# 
  1764  0195                     	;# 
  1765  0196                     	;# 
  1766  0199                     	;# 
  1767  019A                     	;# 
  1768  019B                     	;# 
  1769  019B                     	;# 
  1770  019B                     	;# 
  1771  019B                     	;# 
  1772  019C                     	;# 
  1773  019C                     	;# 
  1774  019D                     	;# 
  1775  019E                     	;# 
  1776  019F                     	;# 
  1777  020C                     	;# 
  1778  020D                     	;# 
  1779  0211                     	;# 
  1780  0211                     	;# 
  1781  0212                     	;# 
  1782  0212                     	;# 
  1783  0213                     	;# 
  1784  0213                     	;# 
  1785  0214                     	;# 
  1786  0214                     	;# 
  1787  0215                     	;# 
  1788  0215                     	;# 
  1789  0215                     	;# 
  1790  0216                     	;# 
  1791  0216                     	;# 
  1792  0217                     	;# 
  1793  0217                     	;# 
  1794  0219                     	;# 
  1795  021A                     	;# 
  1796  021B                     	;# 
  1797  021C                     	;# 
  1798  021D                     	;# 
  1799  021E                     	;# 
  1800  021F                     	;# 
  1801  0291                     	;# 
  1802  0291                     	;# 
  1803  0292                     	;# 
  1804  0293                     	;# 
  1805  0294                     	;# 
  1806  0295                     	;# 
  1807  0295                     	;# 
  1808  0296                     	;# 
  1809  0298                     	;# 
  1810  0298                     	;# 
  1811  0299                     	;# 
  1812  029A                     	;# 
  1813  029B                     	;# 
  1814  029C                     	;# 
  1815  029C                     	;# 
  1816  029D                     	;# 
  1817  029E                     	;# 
  1818  029E                     	;# 
  1819  0311                     	;# 
  1820  0311                     	;# 
  1821  0312                     	;# 
  1822  0313                     	;# 
  1823  0318                     	;# 
  1824  0318                     	;# 
  1825  0319                     	;# 
  1826  031A                     	;# 
  1827  0394                     	;# 
  1828  0395                     	;# 
  1829  0396                     	;# 
  1830  039A                     	;# 
  1831  039C                     	;# 
  1832  039D                     	;# 
  1833  039E                     	;# 
  1834  039F                     	;# 
  1835  0415                     	;# 
  1836  0416                     	;# 
  1837  0417                     	;# 
  1838  041C                     	;# 
  1839  041D                     	;# 
  1840  041E                     	;# 
  1841  0FE4                     	;# 
  1842  0FE5                     	;# 
  1843  0FE6                     	;# 
  1844  0FE7                     	;# 
  1845  0FE8                     	;# 
  1846  0FE9                     	;# 
  1847  0FEA                     	;# 
  1848  0FEB                     	;# 
  1849  0FED                     	;# 
  1850  0FEE                     	;# 
  1851  0FEF                     	;# 
  1852  0000                     	;# 
  1853  0001                     	;# 
  1854  0002                     	;# 
  1855  0003                     	;# 
  1856  0004                     	;# 
  1857  0005                     	;# 
  1858  0006                     	;# 
  1859  0007                     	;# 
  1860  0008                     	;# 
  1861  0009                     	;# 
  1862  000A                     	;# 
  1863  000B                     	;# 
  1864  000C                     	;# 
  1865  000D                     	;# 
  1866  0011                     	;# 
  1867  0012                     	;# 
  1868  0013                     	;# 
  1869  0014                     	;# 
  1870  0015                     	;# 
  1871  0016                     	;# 
  1872  0016                     	;# 
  1873  0017                     	;# 
  1874  0018                     	;# 
  1875  0019                     	;# 
  1876  001A                     	;# 
  1877  001B                     	;# 
  1878  001C                     	;# 
  1879  001E                     	;# 
  1880  001F                     	;# 
  1881  008C                     	;# 
  1882  008D                     	;# 
  1883  0091                     	;# 
  1884  0092                     	;# 
  1885  0093                     	;# 
  1886  0094                     	;# 
  1887  0095                     	;# 
  1888  0096                     	;# 
  1889  0097                     	;# 
  1890  0098                     	;# 
  1891  0099                     	;# 
  1892  009A                     	;# 
  1893  009B                     	;# 
  1894  009B                     	;# 
  1895  009C                     	;# 
  1896  009D                     	;# 
  1897  009E                     	;# 
  1898  010C                     	;# 
  1899  010D                     	;# 
  1900  0111                     	;# 
  1901  0112                     	;# 
  1902  0113                     	;# 
  1903  0114                     	;# 
  1904  0115                     	;# 
  1905  0116                     	;# 
  1906  0117                     	;# 
  1907  0118                     	;# 
  1908  0119                     	;# 
  1909  011A                     	;# 
  1910  011B                     	;# 
  1911  011D                     	;# 
  1912  011E                     	;# 
  1913  018C                     	;# 
  1914  018D                     	;# 
  1915  0191                     	;# 
  1916  0191                     	;# 
  1917  0192                     	;# 
  1918  0193                     	;# 
  1919  0193                     	;# 
  1920  0193                     	;# 
  1921  0194                     	;# 
  1922  0195                     	;# 
  1923  0196                     	;# 
  1924  0199                     	;# 
  1925  019A                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019C                     	;# 
  1931  019C                     	;# 
  1932  019D                     	;# 
  1933  019E                     	;# 
  1934  019F                     	;# 
  1935  020C                     	;# 
  1936  020D                     	;# 
  1937  0211                     	;# 
  1938  0211                     	;# 
  1939  0212                     	;# 
  1940  0212                     	;# 
  1941  0213                     	;# 
  1942  0213                     	;# 
  1943  0214                     	;# 
  1944  0214                     	;# 
  1945  0215                     	;# 
  1946  0215                     	;# 
  1947  0215                     	;# 
  1948  0216                     	;# 
  1949  0216                     	;# 
  1950  0217                     	;# 
  1951  0217                     	;# 
  1952  0219                     	;# 
  1953  021A                     	;# 
  1954  021B                     	;# 
  1955  021C                     	;# 
  1956  021D                     	;# 
  1957  021E                     	;# 
  1958  021F                     	;# 
  1959  0291                     	;# 
  1960  0291                     	;# 
  1961  0292                     	;# 
  1962  0293                     	;# 
  1963  0294                     	;# 
  1964  0295                     	;# 
  1965  0295                     	;# 
  1966  0296                     	;# 
  1967  0298                     	;# 
  1968  0298                     	;# 
  1969  0299                     	;# 
  1970  029A                     	;# 
  1971  029B                     	;# 
  1972  029C                     	;# 
  1973  029C                     	;# 
  1974  029D                     	;# 
  1975  029E                     	;# 
  1976  029E                     	;# 
  1977  0311                     	;# 
  1978  0311                     	;# 
  1979  0312                     	;# 
  1980  0313                     	;# 
  1981  0318                     	;# 
  1982  0318                     	;# 
  1983  0319                     	;# 
  1984  031A                     	;# 
  1985  0394                     	;# 
  1986  0395                     	;# 
  1987  0396                     	;# 
  1988  039A                     	;# 
  1989  039C                     	;# 
  1990  039D                     	;# 
  1991  039E                     	;# 
  1992  039F                     	;# 
  1993  0415                     	;# 
  1994  0416                     	;# 
  1995  0417                     	;# 
  1996  041C                     	;# 
  1997  041D                     	;# 
  1998  041E                     	;# 
  1999  0FE4                     	;# 
  2000  0FE5                     	;# 
  2001  0FE6                     	;# 
  2002  0FE7                     	;# 
  2003  0FE8                     	;# 
  2004  0FE9                     	;# 
  2005  0FEA                     	;# 
  2006  0FEB                     	;# 
  2007  0FED                     	;# 
  2008  0FEE                     	;# 
  2009  0FEF                     	;# 
  2010  0000                     	;# 
  2011  0001                     	;# 
  2012  0002                     	;# 
  2013  0003                     	;# 
  2014  0004                     	;# 
  2015  0005                     	;# 
  2016  0006                     	;# 
  2017  0007                     	;# 
  2018  0008                     	;# 
  2019  0009                     	;# 
  2020  000A                     	;# 
  2021  000B                     	;# 
  2022  000C                     	;# 
  2023  000D                     	;# 
  2024  0011                     	;# 
  2025  0012                     	;# 
  2026  0013                     	;# 
  2027  0014                     	;# 
  2028  0015                     	;# 
  2029  0016                     	;# 
  2030  0016                     	;# 
  2031  0017                     	;# 
  2032  0018                     	;# 
  2033  0019                     	;# 
  2034  001A                     	;# 
  2035  001B                     	;# 
  2036  001C                     	;# 
  2037  001E                     	;# 
  2038  001F                     	;# 
  2039  008C                     	;# 
  2040  008D                     	;# 
  2041  0091                     	;# 
  2042  0092                     	;# 
  2043  0093                     	;# 
  2044  0094                     	;# 
  2045  0095                     	;# 
  2046  0096                     	;# 
  2047  0097                     	;# 
  2048  0098                     	;# 
  2049  0099                     	;# 
  2050  009A                     	;# 
  2051  009B                     	;# 
  2052  009B                     	;# 
  2053  009C                     	;# 
  2054  009D                     	;# 
  2055  009E                     	;# 
  2056  010C                     	;# 
  2057  010D                     	;# 
  2058  0111                     	;# 
  2059  0112                     	;# 
  2060  0113                     	;# 
  2061  0114                     	;# 
  2062  0115                     	;# 
  2063  0116                     	;# 
  2064  0117                     	;# 
  2065  0118                     	;# 
  2066  0119                     	;# 
  2067  011A                     	;# 
  2068  011B                     	;# 
  2069  011D                     	;# 
  2070  011E                     	;# 
  2071  018C                     	;# 
  2072  018D                     	;# 
  2073  0191                     	;# 
  2074  0191                     	;# 
  2075  0192                     	;# 
  2076  0193                     	;# 
  2077  0193                     	;# 
  2078  0193                     	;# 
  2079  0194                     	;# 
  2080  0195                     	;# 
  2081  0196                     	;# 
  2082  0199                     	;# 
  2083  019A                     	;# 
  2084  019B                     	;# 
  2085  019B                     	;# 
  2086  019B                     	;# 
  2087  019B                     	;# 
  2088  019C                     	;# 
  2089  019C                     	;# 
  2090  019D                     	;# 
  2091  019E                     	;# 
  2092  019F                     	;# 
  2093  020C                     	;# 
  2094  020D                     	;# 
  2095  0211                     	;# 
  2096  0211                     	;# 
  2097  0212                     	;# 
  2098  0212                     	;# 
  2099  0213                     	;# 
  2100  0213                     	;# 
  2101  0214                     	;# 
  2102  0214                     	;# 
  2103  0215                     	;# 
  2104  0215                     	;# 
  2105  0215                     	;# 
  2106  0216                     	;# 
  2107  0216                     	;# 
  2108  0217                     	;# 
  2109  0217                     	;# 
  2110  0219                     	;# 
  2111  021A                     	;# 
  2112  021B                     	;# 
  2113  021C                     	;# 
  2114  021D                     	;# 
  2115  021E                     	;# 
  2116  021F                     	;# 
  2117  0291                     	;# 
  2118  0291                     	;# 
  2119  0292                     	;# 
  2120  0293                     	;# 
  2121  0294                     	;# 
  2122  0295                     	;# 
  2123  0295                     	;# 
  2124  0296                     	;# 
  2125  0298                     	;# 
  2126  0298                     	;# 
  2127  0299                     	;# 
  2128  029A                     	;# 
  2129  029B                     	;# 
  2130  029C                     	;# 
  2131  029C                     	;# 
  2132  029D                     	;# 
  2133  029E                     	;# 
  2134  029E                     	;# 
  2135  0311                     	;# 
  2136  0311                     	;# 
  2137  0312                     	;# 
  2138  0313                     	;# 
  2139  0318                     	;# 
  2140  0318                     	;# 
  2141  0319                     	;# 
  2142  031A                     	;# 
  2143  0394                     	;# 
  2144  0395                     	;# 
  2145  0396                     	;# 
  2146  039A                     	;# 
  2147  039C                     	;# 
  2148  039D                     	;# 
  2149  039E                     	;# 
  2150  039F                     	;# 
  2151  0415                     	;# 
  2152  0416                     	;# 
  2153  0417                     	;# 
  2154  041C                     	;# 
  2155  041D                     	;# 
  2156  041E                     	;# 
  2157  0FE4                     	;# 
  2158  0FE5                     	;# 
  2159  0FE6                     	;# 
  2160  0FE7                     	;# 
  2161  0FE8                     	;# 
  2162  0FE9                     	;# 
  2163  0FEA                     	;# 
  2164  0FEB                     	;# 
  2165  0FED                     	;# 
  2166  0FEE                     	;# 
  2167  0FEF                     	;# 
  2168                           
  2169 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2170  0000                     
  2171 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2172  0000                     
  2173 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2174  0000                     
  2175                           	psect	nvBANK1
  2176  00E3                     __pnvBANK1:	
  2177  00E3                     _IOCBF5_InterruptHandler:	
  2178  00E3                     	ds	2
  2179  00E5                     _IOCBF4_InterruptHandler:	
  2180  00E5                     	ds	2
  2181  00E7                     _IOCBF3_InterruptHandler:	
  2182  00E7                     	ds	2
  2183  00E9                     _IOCBF0_InterruptHandler:	
  2184  00E9                     	ds	2
  2185  00EB                     _TMR4_InterruptHandler:	
  2186  00EB                     	ds	2
  2187  00ED                     _timer1ReloadVal:	
  2188  00ED                     	ds	2
  2189                           
  2190                           	psect	nvBANK2
  2191  014D                     __pnvBANK2:	
  2192  014D                     _CCP4_CallBack:	
  2193  014D                     	ds	2
  2194  014F                     _EUSART_ErrorHandler:	
  2195  014F                     	ds	2
  2196  0151                     _EUSART_OverrunErrorHandler:	
  2197  0151                     	ds	2
  2198  0153                     _EUSART_FramingErrorHandler:	
  2199  0153                     	ds	2
  2200  0155                     _temp_mt:	
  2201  0155                     	ds	4
  2202  0159                     _I_m:	
  2203  0159                     	ds	4
  2204  000B                     _INTCONbits	set	11
  2205  0013                     _PIR3bits	set	19
  2206  001C                     _T2CONbits	set	28
  2207  001C                     _T2CON	set	28
  2208  001A                     _TMR2	set	26
  2209  001B                     _PR2	set	27
  2210  0019                     _T1GCONbits	set	25
  2211  0018                     _T1CONbits	set	24
  2212  0018                     _T1CON	set	24
  2213  0016                     _TMR1L	set	22
  2214  0017                     _TMR1H	set	23
  2215  0019                     _T1GCON	set	25
  2216  0011                     _PIR1bits	set	17
  2217  0095                     _OPTION_REGbits	set	149
  2218  008D                     _TRISB	set	141
  2219  008C                     _TRISA	set	140
  2220  009D                     _ADCON0bits	set	157
  2221  009D                     _ADCON0	set	157
  2222  009C                     _ADRESH	set	156
  2223  009B                     _ADRESL	set	155
  2224  009E                     _ADCON1	set	158
  2225  0093                     _PIE3bits	set	147
  2226  0097                     _WDTCON	set	151
  2227  0098                     _OSCTUNE	set	152
  2228  0099                     _OSCCON	set	153
  2229  010C                     _LATAbits	set	268
  2230  011E                     _APFCON1	set	286
  2231  011D                     _APFCON0	set	285
  2232  010D                     _LATB	set	269
  2233  010C                     _LATA	set	268
  2234  0117                     _FVRCONbits	set	279
  2235  0117                     _FVRCON	set	279
  2236  0116                     _BORCON	set	278
  2237  018C                     _ANSELA	set	396
  2238  018D                     _ANSELB	set	397
  2239  019A                     _TXREG	set	410
  2240  0199                     _RCREG	set	409
  2241  019D                     _RCSTAbits	set	413
  2242  019E                     _TXSTAbits	set	414
  2243  019C                     _SPBRGH	set	412
  2244  019B                     _SPBRGL	set	411
  2245  019E                     _TXSTA	set	414
  2246  019D                     _RCSTA	set	413
  2247  019F                     _BAUDCON	set	415
  2248  020C                     _WPUA	set	524
  2249  020D                     _WPUB	set	525
  2250  029E                     _CCPTMRS0bits	set	670
  2251  0312                     _CCPR3H	set	786
  2252  0311                     _CCPR3L	set	785
  2253  0313                     _CCP3CON	set	787
  2254  0319                     _CCPR4H	set	793
  2255  0318                     _CCPR4L	set	792
  2256  031A                     _CCP4CON	set	794
  2257  0394                     _IOCBPbits	set	916
  2258  0395                     _IOCBNbits	set	917
  2259  0396                     _IOCBFbits	set	918
  2260  0417                     _T4CONbits	set	1047
  2261  0417                     _T4CON	set	1047
  2262  0415                     _TMR4	set	1045
  2263  0416                     _PR4	set	1046
  2264                           
  2265                           ; #config settings
  2266  0000                     
  2267                           	psect	cinit
  2268  0036                     start_initialization:	
  2269  0036                     __initialization:	
  2270                           
  2271                           ; Clear objects allocated to COMMON
  2272  0036  01F0               	clrf	__pbssCOMMON& (0+127)
  2273  0037  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2274  0038  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2275  0039  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2276  003A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2277  003B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2278  003C  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  2279                           
  2280                           ; Clear objects allocated to BANK0
  2281  003D  0020               	movlb	0	; select bank0
  2282  003E  01EF               	clrf	__pbssBANK0& (0+127)
  2283                           
  2284                           ; Clear objects allocated to BANK1
  2285  003F  30A0               	movlw	low __pbssBANK1
  2286  0040  0084               	movwf	4
  2287  0041  3000               	movlw	high __pbssBANK1
  2288  0042  0085               	movwf	5
  2289  0043  3043               	movlw	67
  2290  0044  3188  203B  3180   	fcall	clear_ram0
  2291                           
  2292                           ; Clear objects allocated to BANK2
  2293  0047  3020               	movlw	low __pbssBANK2
  2294  0048  0084               	movwf	4
  2295  0049  3001               	movlw	high __pbssBANK2
  2296  004A  0085               	movwf	5
  2297  004B  302D               	movlw	45
  2298  004C  3188  203B  3180   	fcall	clear_ram0
  2299  004F                     end_of_initialization:	
  2300                           ;End of C runtime variable initialization code
  2301                           
  2302  004F                     __end_of__initialization:	
  2303  004F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2304  0050  0020               	movlb	0
  2305  0051  318A  2AF8         	ljmp	_main	;jump to C main() function
  2306                           
  2307                           	psect	bssCOMMON
  2308  0070                     __pbssCOMMON:	
  2309  0070                     _min_origem_up:	
  2310  0070                     	ds	2
  2311  0072                     _max_origem_down:	
  2312  0072                     	ds	2
  2313  0074                     _and_dst:	
  2314  0074                     	ds	2
  2315  0076                     _eusartRxLastError:	
  2316  0076                     	ds	1
  2317                           
  2318                           	psect	bssBANK0
  2319  006F                     __pbssBANK0:	
  2320  006F                     _and_ating:	
  2321  006F                     	ds	1
  2322                           
  2323                           	psect	bssBANK1
  2324  00A0                     __pbssBANK1:	
  2325  00A0                     _origem_down:	
  2326  00A0                     	ds	20
  2327  00B4                     _fila_up:	
  2328  00B4                     	ds	20
  2329  00C8                     _and_ating2:	
  2330  00C8                     	ds	2
  2331  00CA                     _out_value:	
  2332  00CA                     	ds	2
  2333  00CC                     _min_fila_down:	
  2334  00CC                     	ds	2
  2335  00CE                     _max_fila_up:	
  2336  00CE                     	ds	2
  2337  00D0                     _distancia:	
  2338  00D0                     	ds	2
  2339  00D2                     _andar:	
  2340  00D2                     	ds	2
  2341  00D4                     _sentido2:	
  2342  00D4                     	ds	2
  2343  00D6                     _aux_tempo:	
  2344  00D6                     	ds	2
  2345  00D8                     _sentido:	
  2346  00D8                     	ds	2
  2347  00DA                     _and_origem:	
  2348  00DA                     	ds	2
  2349  00DC                     _ADC_InterruptHandler:	
  2350  00DC                     	ds	2
  2351  00DE                     _state_motor:	
  2352  00DE                     	ds	1
  2353  00DF                     _ccp_value:	
  2354  00DF                     	ds	2
  2355  00E1                     _pulses:	
  2356  00E1                     	ds	2
  2357                           
  2358                           	psect	bssBANK2
  2359  0120                     __pbssBANK2:	
  2360  0120                     _origem_up:	
  2361  0120                     	ds	20
  2362  0134                     _fila_down:	
  2363  0134                     	ds	20
  2364  0148                     _byte:	
  2365  0148                     	ds	5
  2366                           
  2367                           	psect	clrtext
  2368  083B                     clear_ram0:	
  2369                           ;	Called with FSR0 containing the base address, and
  2370                           ;	WREG with the size to clear
  2371                           
  2372  083B  0064               	clrwdt	;clear the watchdog before getting into this loop
  2373  083C                     clrloop0:	
  2374  083C  0180               	clrf	0	;clear RAM location pointed to by FSR
  2375  083D  3101               	addfsr 0,1
  2376  083E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2377  083F  283C               	goto	clrloop0	;have we reached the end yet?
  2378  0840  3400               	retlw	0	;all done for this memory range, return
  2379                           
  2380                           	psect	cstackCOMMON
  2381  0077                     __pcstackCOMMON:	
  2382  0077                     ?_PIN_MANAGER_Initialize:	
  2383  0077                     ?_OSCILLATOR_Initialize:	
  2384                           ; 1 bytes @ 0x0
  2385                           
  2386  0077                     ?_WDT_Initialize:	
  2387                           ; 1 bytes @ 0x0
  2388                           
  2389  0077                     ?_FVR_Initialize:	
  2390                           ; 1 bytes @ 0x0
  2391                           
  2392  0077                     ?_CCP4_Initialize:	
  2393                           ; 1 bytes @ 0x0
  2394                           
  2395  0077                     ?_ADC_Initialize:	
  2396                           ; 1 bytes @ 0x0
  2397                           
  2398  0077                     ?_TMR4_Initialize:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401  0077                     ?_PWM3_Initialize:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404  0077                     ?_TMR2_Initialize:	
  2405                           ; 1 bytes @ 0x0
  2406                           
  2407  0077                     ?_TMR1_Initialize:	
  2408                           ; 1 bytes @ 0x0
  2409                           
  2410  0077                     ?_TMR4_DefaultInterruptHandler:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413  0077                     ??_TMR4_DefaultInterruptHandler:	
  2414                           ; 1 bytes @ 0x0
  2415                           
  2416  0077                     ?_PIN_MANAGER_IOC:	
  2417                           ; 1 bytes @ 0x0
  2418                           
  2419  0077                     ?_CCP4_CaptureISR:	
  2420                           ; 1 bytes @ 0x0
  2421                           
  2422  0077                     ?_IOCBF0_DefaultInterruptHandler:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  0077                     ??_IOCBF0_DefaultInterruptHandler:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428  0077                     ?_IOCBF3_DefaultInterruptHandler:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431  0077                     ??_IOCBF3_DefaultInterruptHandler:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434  0077                     ?_IOCBF4_DefaultInterruptHandler:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  0077                     ??_IOCBF4_DefaultInterruptHandler:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0077                     ?_IOCBF5_DefaultInterruptHandler:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  0077                     ??_IOCBF5_DefaultInterruptHandler:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446  0077                     ?_IOCBF0_ISR:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449  0077                     ??_IOCBF0_ISR:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  0077                     ?_IOCBF3_ISR:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455  0077                     ?_IOCBF4_ISR:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458  0077                     ?_IOCBF5_ISR:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461  0077                     ?_comunicacao:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464  0077                     ?_controle:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  0077                     ?_gerenciamento:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  0077                     ?_update:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473  0077                     ?_col_up:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476  0077                     ?_col_down:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479  0077                     ?_min_up:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482  0077                     ?_max_down:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485  0077                     ?_EUSART_Initialize:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488  0077                     ?_EUSART_is_tx_ready:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491  0077                     ??_EUSART_is_tx_ready:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494  0077                     ?_EUSART_is_rx_ready:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497  0077                     ?_EUSART_Read:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500  0077                     ?_EUSART_Write:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503  0077                     ??_EUSART_Write:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506  0077                     ?_SYSTEM_Initialize:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509  0077                     ?_TMR1_WriteTimer:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512  0077                     ?_TMR4_ISR:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515  0077                     ?_INTERRUPT_InterruptManager:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518  0077                     ?_send_data:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521  0077                     ?_sensor1:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524  0077                     ??_sensor1:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527  0077                     ?_sensor2:	
  2528                           ; 1 bytes @ 0x0
  2529                           
  2530  0077                     ??_sensor2:	
  2531                           ; 1 bytes @ 0x0
  2532                           
  2533  0077                     ?_sensor3:	
  2534                           ; 1 bytes @ 0x0
  2535                           
  2536  0077                     ??_sensor3:	
  2537                           ; 1 bytes @ 0x0
  2538                           
  2539  0077                     ?_sensor4:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542  0077                     ??_sensor4:	
  2543                           ; 1 bytes @ 0x0
  2544                           
  2545  0077                     ?_main:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548  0077                     _EUSART_is_tx_ready$167:	
  2549                           ; 1 bytes @ 0x0
  2550                           
  2551  0077                     EUSART_Write@txData:	
  2552                           ; 1 bytes @ 0x0
  2553                           
  2554  0077                     TMR1_WriteTimer@timerVal:	
  2555                           ; 1 bytes @ 0x0
  2556                           
  2557                           
  2558                           ; 2 bytes @ 0x0
  2559  0077                     	ds	1
  2560  0078                     ??_PIN_MANAGER_IOC:	
  2561  0078                     ??_IOCBF3_ISR:	
  2562                           ; 1 bytes @ 0x1
  2563                           
  2564  0078                     ??_IOCBF4_ISR:	
  2565                           ; 1 bytes @ 0x1
  2566                           
  2567  0078                     ??_IOCBF5_ISR:	
  2568                           ; 1 bytes @ 0x1
  2569                           
  2570  0078                     ??_send_data:	
  2571                           ; 1 bytes @ 0x1
  2572                           
  2573                           
  2574                           ; 1 bytes @ 0x1
  2575  0078                     	ds	1
  2576  0079                     ??_TMR1_WriteTimer:	
  2577  0079                     ?_CCP4_DefaultCallBack:	
  2578                           ; 1 bytes @ 0x2
  2579                           
  2580  0079                     ?_get_pulse:	
  2581                           ; 1 bytes @ 0x2
  2582                           
  2583  0079                     CCP4_DefaultCallBack@capturedValue:	
  2584                           ; 1 bytes @ 0x2
  2585                           
  2586  0079                     send_data@i:	
  2587                           ; 2 bytes @ 0x2
  2588                           
  2589  0079                     get_pulse@capturedValue:	
  2590                           ; 2 bytes @ 0x2
  2591                           
  2592                           
  2593                           ; 2 bytes @ 0x2
  2594  0079                     	ds	2
  2595  007B                     ??_CCP4_CaptureISR:	
  2596  007B                     ??_TMR4_ISR:	
  2597                           ; 1 bytes @ 0x4
  2598                           
  2599  007B                     ??_CCP4_DefaultCallBack:	
  2600                           ; 1 bytes @ 0x4
  2601                           
  2602  007B                     ??_get_pulse:	
  2603                           ; 1 bytes @ 0x4
  2604                           
  2605                           
  2606                           ; 1 bytes @ 0x4
  2607  007B                     	ds	1
  2608  007C                     CCP4_CaptureISR@module:	
  2609                           
  2610                           ; 2 bytes @ 0x5
  2611  007C                     	ds	2
  2612  007E                     ??_INTERRUPT_InterruptManager:	
  2613                           
  2614                           	psect	cstackBANK0
  2615  0020                     __pcstackBANK0:	
  2616                           ; 1 bytes @ 0x7
  2617                           
  2618  0020                     ?_EUSART_SetFramingErrorHandler:	
  2619  0020                     ?_EUSART_SetOverrunErrorHandler:	
  2620                           ; 1 bytes @ 0x0
  2621                           
  2622  0020                     ?_EUSART_SetErrorHandler:	
  2623                           ; 1 bytes @ 0x0
  2624                           
  2625  0020                     ??_OSCILLATOR_Initialize:	
  2626                           ; 1 bytes @ 0x0
  2627                           
  2628  0020                     ??_WDT_Initialize:	
  2629                           ; 1 bytes @ 0x0
  2630                           
  2631  0020                     ??_FVR_Initialize:	
  2632                           ; 1 bytes @ 0x0
  2633                           
  2634  0020                     ??_ADC_Initialize:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637  0020                     ??_PWM3_Initialize:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640  0020                     ??_TMR2_Initialize:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643  0020                     ??_TMR1_Initialize:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646  0020                     ?_TMR4_SetInterruptHandler:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649  0020                     ?_CCP4_SetCallBack:	
  2650                           ; 1 bytes @ 0x0
  2651                           
  2652  0020                     ?_IOCBF0_SetInterruptHandler:	
  2653                           ; 1 bytes @ 0x0
  2654                           
  2655  0020                     ?_IOCBF3_SetInterruptHandler:	
  2656                           ; 1 bytes @ 0x0
  2657                           
  2658  0020                     ?_IOCBF4_SetInterruptHandler:	
  2659                           ; 1 bytes @ 0x0
  2660                           
  2661  0020                     ?_IOCBF5_SetInterruptHandler:	
  2662                           ; 1 bytes @ 0x0
  2663                           
  2664  0020                     ??_update:	
  2665                           ; 1 bytes @ 0x0
  2666                           
  2667  0020                     ??_min_up:	
  2668                           ; 1 bytes @ 0x0
  2669                           
  2670  0020                     ??_max_down:	
  2671                           ; 1 bytes @ 0x0
  2672                           
  2673  0020                     ??_EUSART_is_rx_ready:	
  2674                           ; 1 bytes @ 0x0
  2675                           
  2676  0020                     ??_EUSART_Read:	
  2677                           ; 1 bytes @ 0x0
  2678                           
  2679  0020                     ?_PWM3_LoadDutyValue:	
  2680                           ; 1 bytes @ 0x0
  2681                           
  2682  0020                     ?_abs:	
  2683                           ; 1 bytes @ 0x0
  2684                           
  2685  0020                     ?__Umul8_16:	
  2686                           ; 2 bytes @ 0x0
  2687                           
  2688  0020                     ?_ADC_GetConversion:	
  2689                           ; 2 bytes @ 0x0
  2690                           
  2691  0020                     ?___wmul:	
  2692                           ; 2 bytes @ 0x0
  2693                           
  2694  0020                     ?___fltol:	
  2695                           ; 2 bytes @ 0x0
  2696                           
  2697  0020                     __Umul8_16@multiplicand:	
  2698                           ; 4 bytes @ 0x0
  2699                           
  2700  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2701                           ; 1 bytes @ 0x0
  2702                           
  2703  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2704                           ; 2 bytes @ 0x0
  2705                           
  2706  0020                     EUSART_SetErrorHandler@interruptHandler:	
  2707                           ; 2 bytes @ 0x0
  2708                           
  2709  0020                     TMR4_SetInterruptHandler@InterruptHandler:	
  2710                           ; 2 bytes @ 0x0
  2711                           
  2712  0020                     CCP4_SetCallBack@customCallBack:	
  2713                           ; 2 bytes @ 0x0
  2714                           
  2715  0020                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  2716                           ; 2 bytes @ 0x0
  2717                           
  2718  0020                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  2719                           ; 2 bytes @ 0x0
  2720                           
  2721  0020                     IOCBF4_SetInterruptHandler@InterruptHandler:	
  2722                           ; 2 bytes @ 0x0
  2723                           
  2724  0020                     IOCBF5_SetInterruptHandler@InterruptHandler:	
  2725                           ; 2 bytes @ 0x0
  2726                           
  2727  0020                     PWM3_LoadDutyValue@dutyValue:	
  2728                           ; 2 bytes @ 0x0
  2729                           
  2730  0020                     ___wmul@multiplier:	
  2731                           ; 2 bytes @ 0x0
  2732                           
  2733  0020                     abs@a:	
  2734                           ; 2 bytes @ 0x0
  2735                           
  2736  0020                     ___fltol@f1:	
  2737                           ; 2 bytes @ 0x0
  2738                           
  2739                           
  2740                           ; 4 bytes @ 0x0
  2741  0020                     	ds	2
  2742  0022                     ??_EUSART_SetFramingErrorHandler:	
  2743  0022                     ??_EUSART_SetOverrunErrorHandler:	
  2744                           ; 1 bytes @ 0x2
  2745                           
  2746  0022                     ??_EUSART_SetErrorHandler:	
  2747                           ; 1 bytes @ 0x2
  2748                           
  2749  0022                     ??_PIN_MANAGER_Initialize:	
  2750                           ; 1 bytes @ 0x2
  2751                           
  2752  0022                     ??_CCP4_Initialize:	
  2753                           ; 1 bytes @ 0x2
  2754                           
  2755  0022                     ??_TMR4_Initialize:	
  2756                           ; 1 bytes @ 0x2
  2757                           
  2758  0022                     ??_TMR4_SetInterruptHandler:	
  2759                           ; 1 bytes @ 0x2
  2760                           
  2761  0022                     ??_CCP4_SetCallBack:	
  2762                           ; 1 bytes @ 0x2
  2763                           
  2764  0022                     ??_IOCBF0_SetInterruptHandler:	
  2765                           ; 1 bytes @ 0x2
  2766                           
  2767  0022                     ??_IOCBF3_SetInterruptHandler:	
  2768                           ; 1 bytes @ 0x2
  2769                           
  2770  0022                     ??_IOCBF4_SetInterruptHandler:	
  2771                           ; 1 bytes @ 0x2
  2772                           
  2773  0022                     ??_IOCBF5_SetInterruptHandler:	
  2774                           ; 1 bytes @ 0x2
  2775                           
  2776  0022                     ??_abs:	
  2777                           ; 1 bytes @ 0x2
  2778                           
  2779  0022                     ??__Umul8_16:	
  2780                           ; 1 bytes @ 0x2
  2781                           
  2782  0022                     ??_EUSART_Initialize:	
  2783                           ; 1 bytes @ 0x2
  2784                           
  2785  0022                     ??_SYSTEM_Initialize:	
  2786                           ; 1 bytes @ 0x2
  2787                           
  2788  0022                     ??_ADC_GetConversion:	
  2789                           ; 1 bytes @ 0x2
  2790                           
  2791  0022                     ??_PWM3_LoadDutyValue:	
  2792                           ; 1 bytes @ 0x2
  2793                           
  2794  0022                     ___wmul@multiplicand:	
  2795                           ; 1 bytes @ 0x2
  2796                           
  2797                           
  2798                           ; 2 bytes @ 0x2
  2799  0022                     	ds	1
  2800  0023                     ADC_GetConversion@channel:	
  2801  0023                     update@aux:	
  2802                           ; 1 bytes @ 0x3
  2803                           
  2804  0023                     min_up@i:	
  2805                           ; 1 bytes @ 0x3
  2806                           
  2807  0023                     max_down@i:	
  2808                           ; 2 bytes @ 0x3
  2809                           
  2810                           
  2811                           ; 2 bytes @ 0x3
  2812  0023                     	ds	1
  2813  0024                     ??___wmul:	
  2814  0024                     ??___fltol:	
  2815                           ; 1 bytes @ 0x4
  2816                           
  2817  0024                     ?___xxtofl:	
  2818                           ; 1 bytes @ 0x4
  2819                           
  2820  0024                     update@i_1261:	
  2821                           ; 4 bytes @ 0x4
  2822                           
  2823  0024                     ___wmul@product:	
  2824                           ; 2 bytes @ 0x4
  2825                           
  2826  0024                     __Umul8_16@product:	
  2827                           ; 2 bytes @ 0x4
  2828                           
  2829  0024                     ___xxtofl@val:	
  2830                           ; 2 bytes @ 0x4
  2831                           
  2832                           
  2833                           ; 4 bytes @ 0x4
  2834  0024                     	ds	1
  2835  0025                     ??_col_up:	
  2836  0025                     ??_col_down:	
  2837                           ; 1 bytes @ 0x5
  2838                           
  2839                           
  2840                           ; 1 bytes @ 0x5
  2841  0025                     	ds	1
  2842  0026                     update@i:	
  2843  0026                     __Umul8_16@word_mpld:	
  2844                           ; 2 bytes @ 0x6
  2845                           
  2846                           
  2847                           ; 2 bytes @ 0x6
  2848  0026                     	ds	2
  2849  0028                     ??___xxtofl:	
  2850  0028                     __Umul8_16@multiplier:	
  2851                           ; 1 bytes @ 0x8
  2852                           
  2853  0028                     update@i_1262:	
  2854                           ; 1 bytes @ 0x8
  2855                           
  2856                           
  2857                           ; 2 bytes @ 0x8
  2858  0028                     	ds	1
  2859  0029                     ___fltol@sign1:	
  2860                           
  2861                           ; 1 bytes @ 0x9
  2862  0029                     	ds	1
  2863  002A                     ??_gerenciamento:	
  2864  002A                     ___fltol@exp1:	
  2865                           ; 1 bytes @ 0xA
  2866                           
  2867                           
  2868                           ; 1 bytes @ 0xA
  2869  002A                     	ds	2
  2870  002C                     ___xxtofl@sign:	
  2871                           
  2872                           ; 1 bytes @ 0xC
  2873  002C                     	ds	1
  2874  002D                     ___xxtofl@exp:	
  2875                           
  2876                           ; 1 bytes @ 0xD
  2877  002D                     	ds	1
  2878  002E                     ___xxtofl@arg:	
  2879                           
  2880                           ; 4 bytes @ 0xE
  2881  002E                     	ds	4
  2882  0032                     ?___flmul:	
  2883  0032                     ___flmul@b:	
  2884                           ; 4 bytes @ 0x12
  2885                           
  2886                           
  2887                           ; 4 bytes @ 0x12
  2888  0032                     	ds	4
  2889  0036                     ___flmul@a:	
  2890                           
  2891                           ; 4 bytes @ 0x16
  2892  0036                     	ds	4
  2893  003A                     ??___flmul:	
  2894                           
  2895                           ; 1 bytes @ 0x1A
  2896  003A                     	ds	5
  2897  003F                     ___flmul@sign:	
  2898                           
  2899                           ; 1 bytes @ 0x1F
  2900  003F                     	ds	1
  2901  0040                     ___flmul@grs:	
  2902                           
  2903                           ; 4 bytes @ 0x20
  2904  0040                     	ds	4
  2905  0044                     ___flmul@aexp:	
  2906                           
  2907                           ; 1 bytes @ 0x24
  2908  0044                     	ds	1
  2909  0045                     ___flmul@bexp:	
  2910                           
  2911                           ; 1 bytes @ 0x25
  2912  0045                     	ds	1
  2913  0046                     ___flmul@prod:	
  2914                           
  2915                           ; 4 bytes @ 0x26
  2916  0046                     	ds	4
  2917  004A                     ___flmul@temp:	
  2918                           
  2919                           ; 2 bytes @ 0x2A
  2920  004A                     	ds	2
  2921  004C                     ??_controle:	
  2922  004C                     ?___fldiv:	
  2923                           ; 1 bytes @ 0x2C
  2924                           
  2925  004C                     ___fldiv@a:	
  2926                           ; 4 bytes @ 0x2C
  2927                           
  2928                           
  2929                           ; 4 bytes @ 0x2C
  2930  004C                     	ds	4
  2931  0050                     controle@destiny:	
  2932  0050                     ___fldiv@b:	
  2933                           ; 2 bytes @ 0x30
  2934                           
  2935                           
  2936                           ; 4 bytes @ 0x30
  2937  0050                     	ds	2
  2938  0052                     controle@route:	
  2939                           
  2940                           ; 2 bytes @ 0x32
  2941  0052                     	ds	2
  2942  0054                     ??___fldiv:	
  2943  0054                     controle@a:	
  2944                           ; 1 bytes @ 0x34
  2945                           
  2946                           
  2947                           ; 2 bytes @ 0x34
  2948  0054                     	ds	2
  2949  0056                     controle@min_dutyValue:	
  2950                           
  2951                           ; 2 bytes @ 0x36
  2952  0056                     	ds	2
  2953  0058                     controle@max_dutyValue:	
  2954                           
  2955                           ; 2 bytes @ 0x38
  2956  0058                     	ds	1
  2957  0059                     ___fldiv@rem:	
  2958                           
  2959                           ; 4 bytes @ 0x39
  2960  0059                     	ds	1
  2961  005A                     controle@dutyValue:	
  2962                           
  2963                           ; 2 bytes @ 0x3A
  2964  005A                     	ds	2
  2965  005C                     controle@count:	
  2966                           
  2967                           ; 2 bytes @ 0x3C
  2968  005C                     	ds	1
  2969  005D                     ___fldiv@sign:	
  2970                           
  2971                           ; 1 bytes @ 0x3D
  2972  005D                     	ds	1
  2973  005E                     ___fldiv@new_exp:	
  2974                           
  2975                           ; 2 bytes @ 0x3E
  2976  005E                     	ds	2
  2977  0060                     ___fldiv@grs:	
  2978                           
  2979                           ; 4 bytes @ 0x40
  2980  0060                     	ds	4
  2981  0064                     ___fldiv@bexp:	
  2982                           
  2983                           ; 1 bytes @ 0x44
  2984  0064                     	ds	1
  2985  0065                     ___fldiv@aexp:	
  2986                           
  2987                           ; 1 bytes @ 0x45
  2988  0065                     	ds	1
  2989  0066                     ??_comunicacao:	
  2990                           
  2991                           ; 1 bytes @ 0x46
  2992  0066                     	ds	1
  2993  0067                     comunicacao@speed:	
  2994                           
  2995                           ; 4 bytes @ 0x47
  2996  0067                     	ds	4
  2997  006B                     comunicacao@position:	
  2998                           
  2999                           ; 4 bytes @ 0x4B
  3000  006B                     	ds	4
  3001  006F                     ??_main:	
  3002                           
  3003                           	psect	maintext
  3004  0AF8                     __pmaintext:	
  3005                           ; 1 bytes @ 0x4F
  3006 ;;
  3007 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3008 ;;
  3009 ;; *************** function _main *****************
  3010 ;; Defined at:
  3011 ;;		line 125 in file "main.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : B1F/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3025 ;;      Params:         0       0       0       0       0       0
  3026 ;;      Locals:         0       0       0       0       0       0
  3027 ;;      Temps:          0       0       0       0       0       0
  3028 ;;      Totals:         0       0       0       0       0       0
  3029 ;;Total ram usage:        0 bytes
  3030 ;; Hardware stack levels required when called:    7
  3031 ;; This function calls:
  3032 ;;		_CCP4_SetCallBack
  3033 ;;		_IOCBF0_SetInterruptHandler
  3034 ;;		_IOCBF3_SetInterruptHandler
  3035 ;;		_IOCBF4_SetInterruptHandler
  3036 ;;		_IOCBF5_SetInterruptHandler
  3037 ;;		_SYSTEM_Initialize
  3038 ;;		_TMR4_SetInterruptHandler
  3039 ;;		_comunicacao
  3040 ;;		_controle
  3041 ;;		_gerenciamento
  3042 ;; This function is called by:
  3043 ;;		Startup code after reset
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           
  3048                           ;psect for function _main
  3049  0AF8                     _main:	
  3050  0AF8                     l3896:	
  3051                           ;incstack = 0
  3052                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3053                           
  3054                           
  3055                           ;main.c: 129:     SYSTEM_Initialize();
  3056  0AF8  318A  2234  318A   	fcall	_SYSTEM_Initialize
  3057  0AFB                     l3898:	
  3058                           
  3059                           ;main.c: 130:     (INTCONbits.GIE = 1);
  3060  0AFB  178B               	bsf	11,7	;volatile
  3061  0AFC                     l3900:	
  3062                           
  3063                           ;main.c: 131:     (INTCONbits.PEIE = 1);
  3064  0AFC  170B               	bsf	11,6	;volatile
  3065                           
  3066                           ;main.c: 134:     TMR4_SetInterruptHandler(send_data);
  3067  0AFD  30C3               	movlw	low _send_data
  3068  0AFE  0020               	movlb	0	; select bank0
  3069  0AFF  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  3070  0B00  300A               	movlw	high _send_data
  3071  0B01  00A1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  3072  0B02  3188  20B0  318A   	fcall	_TMR4_SetInterruptHandler
  3073                           
  3074                           ;main.c: 135:     IOCBF0_SetInterruptHandler(sensor1);
  3075  0B05  3041               	movlw	low _sensor1
  3076  0B06  0020               	movlb	0	; select bank0
  3077  0B07  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler
  3078  0B08  3008               	movlw	high _sensor1
  3079  0B09  00A1               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler+1
  3080  0B0A  3188  2083  318A   	fcall	_IOCBF0_SetInterruptHandler
  3081                           
  3082                           ;main.c: 136:     IOCBF3_SetInterruptHandler(sensor2);
  3083  0B0D  30C3               	movlw	low _sensor2
  3084  0B0E  0020               	movlb	0	; select bank0
  3085  0B0F  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler
  3086  0B10  3008               	movlw	high _sensor2
  3087  0B11  00A1               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler+1
  3088  0B12  3188  208C  318A   	fcall	_IOCBF3_SetInterruptHandler
  3089                           
  3090                           ;main.c: 137:     IOCBF4_SetInterruptHandler(sensor3);
  3091  0B15  30CE               	movlw	low _sensor3
  3092  0B16  0020               	movlb	0	; select bank0
  3093  0B17  00A0               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
  3094  0B18  3008               	movlw	high _sensor3
  3095  0B19  00A1               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
  3096  0B1A  3188  2095  318A   	fcall	_IOCBF4_SetInterruptHandler
  3097                           
  3098                           ;main.c: 138:     IOCBF5_SetInterruptHandler(sensor4);
  3099  0B1D  30D9               	movlw	low _sensor4
  3100  0B1E  0020               	movlb	0	; select bank0
  3101  0B1F  00A0               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler
  3102  0B20  3008               	movlw	high _sensor4
  3103  0B21  00A1               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler+1
  3104  0B22  3188  209E  318A   	fcall	_IOCBF5_SetInterruptHandler
  3105                           
  3106                           ;main.c: 139:     CCP4_SetCallBack(get_pulse);
  3107  0B25  309E               	movlw	low _get_pulse
  3108  0B26  0020               	movlb	0	; select bank0
  3109  0B27  00A0               	movwf	CCP4_SetCallBack@customCallBack
  3110  0B28  300A               	movlw	high _get_pulse
  3111  0B29  00A1               	movwf	CCP4_SetCallBack@customCallBack+1
  3112  0B2A  3188  205F  318A   	fcall	_CCP4_SetCallBack
  3113  0B2D                     l604:	
  3114                           ;main.c: 147:     while (1)
  3115                           
  3116                           
  3117                           ;main.c: 148:     {;main.c: 149:        comunicacao ();
  3118  0B2D  318F  272D  318A   	fcall	_comunicacao
  3119  0B30                     l3902:	
  3120                           
  3121                           ;main.c: 150:        controle();
  3122  0B30  3186  2634  318A   	fcall	_controle
  3123  0B33                     l3904:	
  3124                           
  3125                           ;main.c: 151:        gerenciamento();
  3126  0B33  318C  246E  318A   	fcall	_gerenciamento
  3127  0B36  2B2D               	goto	l604
  3128  0B37  3180  2834         	ljmp	start
  3129  0B39                     __end_of_main:	
  3130                           
  3131                           	psect	text1
  3132  0C6E                     __ptext1:	
  3133 ;; *************** function _gerenciamento *****************
  3134 ;; Defined at:
  3135 ;;		line 229 in file "main.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;		None
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;		None
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3149 ;;      Params:         0       0       0       0       0       0
  3150 ;;      Locals:         0       0       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0
  3152 ;;      Totals:         0       0       0       0       0       0
  3153 ;;Total ram usage:        0 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    6
  3156 ;; This function calls:
  3157 ;;		_col_down
  3158 ;;		_col_up
  3159 ;;		_update
  3160 ;; This function is called by:
  3161 ;;		_main
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           
  3166                           ;psect for function _gerenciamento
  3167  0C6E                     _gerenciamento:	
  3168  0C6E                     l3844:	
  3169                           ;incstack = 0
  3170                           ; Regs used in _gerenciamento: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3171                           
  3172                           
  3173                           ;main.c: 231:     update();
  3174  0C6E  3182  22AA  318C   	fcall	_update
  3175  0C71                     l3846:	
  3176                           
  3177                           ;main.c: 318:           if(fila_up[0]!=out_value||fila_up[1]!=out_value||fila_up[2]!=out
      +                          _value||fila_up[3]!=out_value||fila_up[4]!=out_value||fila_up[5]!=out_value||fila_up[6]!
      +                          =out_value||fila_up[7]!=out_value||fila_up[8]!=out_value||fila_up[9]!=out_value)
  3178  0C71  0021               	movlb	1	; select bank1
  3179  0C72  0834               	movf	_fila_up^(0+128),w
  3180  0C73  0435               	iorwf	(_fila_up+1)^(0+128),w
  3181  0C74  1D03               	btfss	3,2
  3182  0C75  2C77               	goto	u4131
  3183  0C76  2C78               	goto	u4130
  3184  0C77                     u4131:	
  3185  0C77  2CAE               	goto	l3866
  3186  0C78                     u4130:	
  3187  0C78                     l3848:	
  3188  0C78  0836               	movf	(_fila_up^(0+128)+2),w
  3189  0C79  0437               	iorwf	((_fila_up+1)^(0+128)+2),w
  3190  0C7A  1D03               	btfss	3,2
  3191  0C7B  2C7D               	goto	u4141
  3192  0C7C  2C7E               	goto	u4140
  3193  0C7D                     u4141:	
  3194  0C7D  2CAE               	goto	l3866
  3195  0C7E                     u4140:	
  3196  0C7E                     l3850:	
  3197  0C7E  0838               	movf	(_fila_up^(0+128)+4),w
  3198  0C7F  0439               	iorwf	((_fila_up+1)^(0+128)+4),w
  3199  0C80  1D03               	btfss	3,2
  3200  0C81  2C83               	goto	u4151
  3201  0C82  2C84               	goto	u4150
  3202  0C83                     u4151:	
  3203  0C83  2CAE               	goto	l3866
  3204  0C84                     u4150:	
  3205  0C84                     l3852:	
  3206  0C84  083A               	movf	(_fila_up^(0+128)+6),w
  3207  0C85  043B               	iorwf	((_fila_up+1)^(0+128)+6),w
  3208  0C86  1D03               	btfss	3,2
  3209  0C87  2C89               	goto	u4161
  3210  0C88  2C8A               	goto	u4160
  3211  0C89                     u4161:	
  3212  0C89  2CAE               	goto	l3866
  3213  0C8A                     u4160:	
  3214  0C8A                     l3854:	
  3215  0C8A  083C               	movf	(_fila_up^(0+128)+8),w
  3216  0C8B  043D               	iorwf	((_fila_up+1)^(0+128)+8),w
  3217  0C8C  1D03               	btfss	3,2
  3218  0C8D  2C8F               	goto	u4171
  3219  0C8E  2C90               	goto	u4170
  3220  0C8F                     u4171:	
  3221  0C8F  2CAE               	goto	l3866
  3222  0C90                     u4170:	
  3223  0C90                     l3856:	
  3224  0C90  083E               	movf	(_fila_up^(0+128)+10),w
  3225  0C91  043F               	iorwf	((_fila_up+1)^(0+128)+10),w
  3226  0C92  1D03               	btfss	3,2
  3227  0C93  2C95               	goto	u4181
  3228  0C94  2C96               	goto	u4180
  3229  0C95                     u4181:	
  3230  0C95  2CAE               	goto	l3866
  3231  0C96                     u4180:	
  3232  0C96                     l3858:	
  3233  0C96  0840               	movf	(_fila_up^(0+128)+12),w
  3234  0C97  0441               	iorwf	((_fila_up+1)^(0+128)+12),w
  3235  0C98  1D03               	btfss	3,2
  3236  0C99  2C9B               	goto	u4191
  3237  0C9A  2C9C               	goto	u4190
  3238  0C9B                     u4191:	
  3239  0C9B  2CAE               	goto	l3866
  3240  0C9C                     u4190:	
  3241  0C9C                     l3860:	
  3242  0C9C  0842               	movf	(_fila_up^(0+128)+14),w
  3243  0C9D  0443               	iorwf	((_fila_up+1)^(0+128)+14),w
  3244  0C9E  1D03               	btfss	3,2
  3245  0C9F  2CA1               	goto	u4201
  3246  0CA0  2CA2               	goto	u4200
  3247  0CA1                     u4201:	
  3248  0CA1  2CAE               	goto	l3866
  3249  0CA2                     u4200:	
  3250  0CA2                     l3862:	
  3251  0CA2  0844               	movf	(_fila_up^(0+128)+16),w
  3252  0CA3  0445               	iorwf	((_fila_up+1)^(0+128)+16),w
  3253  0CA4  1D03               	btfss	3,2
  3254  0CA5  2CA7               	goto	u4211
  3255  0CA6  2CA8               	goto	u4210
  3256  0CA7                     u4211:	
  3257  0CA7  2CAE               	goto	l3866
  3258  0CA8                     u4210:	
  3259  0CA8                     l3864:	
  3260  0CA8  0846               	movf	(_fila_up^(0+128)+18),w
  3261  0CA9  0447               	iorwf	((_fila_up+1)^(0+128)+18),w
  3262  0CAA  1903               	btfsc	3,2
  3263  0CAB  2CAD               	goto	u4221
  3264  0CAC  2CAE               	goto	u4220
  3265  0CAD                     u4221:	
  3266  0CAD  2CB6               	goto	l3870
  3267  0CAE                     u4220:	
  3268  0CAE                     l3866:	
  3269                           
  3270                           ;main.c: 319:           {;main.c: 320:             sentido2=1;
  3271  0CAE  3001               	movlw	1
  3272  0CAF  00D4               	movwf	_sentido2^(0+128)
  3273  0CB0  3000               	movlw	0
  3274  0CB1  00D5               	movwf	(_sentido2^(0+128)+1)
  3275  0CB2                     l3868:	
  3276                           
  3277                           ;main.c: 321:             col_up();
  3278  0CB2  3187  2774  318C   	fcall	_col_up
  3279                           
  3280                           ;main.c: 322:           }
  3281  0CB5  2CFC               	goto	l635
  3282  0CB6                     l3870:	
  3283  0CB6  0820               	movf	_origem_down^(0+128),w
  3284  0CB7  0421               	iorwf	(_origem_down+1)^(0+128),w
  3285  0CB8  1D03               	btfss	3,2
  3286  0CB9  2CBB               	goto	u4231
  3287  0CBA  2CBC               	goto	u4230
  3288  0CBB                     u4231:	
  3289  0CBB  2CF2               	goto	l3890
  3290  0CBC                     u4230:	
  3291  0CBC                     l3872:	
  3292  0CBC  0822               	movf	(_origem_down^(0+128)+2),w
  3293  0CBD  0423               	iorwf	((_origem_down+1)^(0+128)+2),w
  3294  0CBE  1D03               	btfss	3,2
  3295  0CBF  2CC1               	goto	u4241
  3296  0CC0  2CC2               	goto	u4240
  3297  0CC1                     u4241:	
  3298  0CC1  2CF2               	goto	l3890
  3299  0CC2                     u4240:	
  3300  0CC2                     l3874:	
  3301  0CC2  0824               	movf	(_origem_down^(0+128)+4),w
  3302  0CC3  0425               	iorwf	((_origem_down+1)^(0+128)+4),w
  3303  0CC4  1D03               	btfss	3,2
  3304  0CC5  2CC7               	goto	u4251
  3305  0CC6  2CC8               	goto	u4250
  3306  0CC7                     u4251:	
  3307  0CC7  2CF2               	goto	l3890
  3308  0CC8                     u4250:	
  3309  0CC8                     l3876:	
  3310  0CC8  0826               	movf	(_origem_down^(0+128)+6),w
  3311  0CC9  0427               	iorwf	((_origem_down+1)^(0+128)+6),w
  3312  0CCA  1D03               	btfss	3,2
  3313  0CCB  2CCD               	goto	u4261
  3314  0CCC  2CCE               	goto	u4260
  3315  0CCD                     u4261:	
  3316  0CCD  2CF2               	goto	l3890
  3317  0CCE                     u4260:	
  3318  0CCE                     l3878:	
  3319  0CCE  0828               	movf	(_origem_down^(0+128)+8),w
  3320  0CCF  0429               	iorwf	((_origem_down+1)^(0+128)+8),w
  3321  0CD0  1D03               	btfss	3,2
  3322  0CD1  2CD3               	goto	u4271
  3323  0CD2  2CD4               	goto	u4270
  3324  0CD3                     u4271:	
  3325  0CD3  2CF2               	goto	l3890
  3326  0CD4                     u4270:	
  3327  0CD4                     l3880:	
  3328  0CD4  082A               	movf	(_origem_down^(0+128)+10),w
  3329  0CD5  042B               	iorwf	((_origem_down+1)^(0+128)+10),w
  3330  0CD6  1D03               	btfss	3,2
  3331  0CD7  2CD9               	goto	u4281
  3332  0CD8  2CDA               	goto	u4280
  3333  0CD9                     u4281:	
  3334  0CD9  2CF2               	goto	l3890
  3335  0CDA                     u4280:	
  3336  0CDA                     l3882:	
  3337  0CDA  082C               	movf	(_origem_down^(0+128)+12),w
  3338  0CDB  042D               	iorwf	((_origem_down+1)^(0+128)+12),w
  3339  0CDC  1D03               	btfss	3,2
  3340  0CDD  2CDF               	goto	u4291
  3341  0CDE  2CE0               	goto	u4290
  3342  0CDF                     u4291:	
  3343  0CDF  2CF2               	goto	l3890
  3344  0CE0                     u4290:	
  3345  0CE0                     l3884:	
  3346  0CE0  082E               	movf	(_origem_down^(0+128)+14),w
  3347  0CE1  042F               	iorwf	((_origem_down+1)^(0+128)+14),w
  3348  0CE2  1D03               	btfss	3,2
  3349  0CE3  2CE5               	goto	u4301
  3350  0CE4  2CE6               	goto	u4300
  3351  0CE5                     u4301:	
  3352  0CE5  2CF2               	goto	l3890
  3353  0CE6                     u4300:	
  3354  0CE6                     l3886:	
  3355  0CE6  0830               	movf	(_origem_down^(0+128)+16),w
  3356  0CE7  0431               	iorwf	((_origem_down+1)^(0+128)+16),w
  3357  0CE8  1D03               	btfss	3,2
  3358  0CE9  2CEB               	goto	u4311
  3359  0CEA  2CEC               	goto	u4310
  3360  0CEB                     u4311:	
  3361  0CEB  2CF2               	goto	l3890
  3362  0CEC                     u4310:	
  3363  0CEC                     l3888:	
  3364  0CEC  0832               	movf	(_origem_down^(0+128)+18),w
  3365  0CED  0433               	iorwf	((_origem_down+1)^(0+128)+18),w
  3366  0CEE  1903               	btfsc	3,2
  3367  0CEF  2CF1               	goto	u4321
  3368  0CF0  2CF2               	goto	u4320
  3369  0CF1                     u4321:	
  3370  0CF1  2CF8               	goto	l3894
  3371  0CF2                     u4320:	
  3372  0CF2                     l3890:	
  3373                           
  3374                           ;main.c: 326:           {;main.c: 327:             sentido2=0;
  3375  0CF2  01D4               	clrf	_sentido2^(0+128)
  3376  0CF3  01D5               	clrf	(_sentido2+1)^(0+128)
  3377  0CF4                     l3892:	
  3378                           
  3379                           ;main.c: 328:             col_down();
  3380  0CF4  318B  23F2  318C   	fcall	_col_down
  3381                           
  3382                           ;main.c: 329:           }
  3383  0CF7  2CFC               	goto	l635
  3384  0CF8                     l3894:	
  3385                           
  3386                           ;main.c: 333:           {;main.c: 334:             sentido2=2;
  3387  0CF8  3002               	movlw	2
  3388  0CF9  00D4               	movwf	_sentido2^(0+128)
  3389  0CFA  3000               	movlw	0
  3390  0CFB  00D5               	movwf	(_sentido2^(0+128)+1)
  3391  0CFC                     l635:	
  3392  0CFC  0008               	return
  3393  0CFD                     __end_of_gerenciamento:	
  3394                           
  3395                           	psect	text2
  3396  0774                     __ptext2:	
  3397 ;; *************** function _col_up *****************
  3398 ;; Defined at:
  3399 ;;		line 339 in file "main.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3413 ;;      Params:         0       0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0       0
  3415 ;;      Temps:          0       2       0       0       0       0
  3416 ;;      Totals:         0       2       0       0       0       0
  3417 ;;Total ram usage:        2 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    5
  3420 ;; This function calls:
  3421 ;;		_abs
  3422 ;;		_min_up
  3423 ;; This function is called by:
  3424 ;;		_gerenciamento
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           
  3429                           ;psect for function _col_up
  3430  0774                     _col_up:	
  3431  0774                     l2900:	
  3432                           ;incstack = 0
  3433                           ; Regs used in _col_up: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3434                           
  3435                           
  3436                           ;main.c: 341:         while(and_ating!=min_origem_up)
  3437  0774  2FA7               	goto	l2912
  3438  0775                     l2902:	
  3439                           
  3440                           ;main.c: 342:         {;main.c: 343:             distancia=abs(and_ating-min_origem_up);
  3441  0775  086F               	movf	_and_ating,w
  3442  0776  00A5               	movwf	??_col_up
  3443  0777  0870               	movf	_min_origem_up,w
  3444  0778  0225               	subwf	??_col_up,w
  3445  0779  00A0               	movwf	abs@a
  3446  077A  0971               	comf	_min_origem_up+1,w
  3447  077B  1803               	skipnc
  3448  077C  0A89               	incf	9,f
  3449  077D  00A1               	movwf	abs@a+1
  3450  077E  3189  21B6  3187   	fcall	_abs
  3451  0781  0020               	movlb	0	; select bank0
  3452  0782  0821               	movf	?_abs+1,w
  3453  0783  0021               	movlb	1	; select bank1
  3454  0784  00D1               	movwf	(_distancia+1)^(0+128)
  3455  0785  0020               	movlb	0	; select bank0
  3456  0786  0820               	movf	?_abs,w
  3457  0787  0021               	movlb	1	; select bank1
  3458  0788  00D0               	movwf	_distancia^(0+128)
  3459  0789                     l2904:	
  3460                           
  3461                           ;main.c: 344:             if(and_ating>min_origem_up)
  3462  0789  0871               	movf	_min_origem_up+1,w
  3463  078A  3A80               	xorlw	128
  3464  078B  0020               	movlb	0	; select bank0
  3465  078C  00A5               	movwf	??_col_up
  3466  078D  3080               	movlw	128
  3467  078E  0225               	subwf	??_col_up,w
  3468  078F  1D03               	skipz
  3469  0790  2F93               	goto	u2505
  3470  0791  086F               	movf	_and_ating,w
  3471  0792  0270               	subwf	_min_origem_up,w
  3472  0793                     u2505:	
  3473  0793  1803               	skipnc
  3474  0794  2F96               	goto	u2501
  3475  0795  2F97               	goto	u2500
  3476  0796                     u2501:	
  3477  0796  2F99               	goto	l2908
  3478  0797                     u2500:	
  3479  0797                     l2906:	
  3480                           
  3481                           ;main.c: 345:             {;main.c: 346:                 LATAbits.LATA2 = 0;
  3482  0797  0022               	movlb	2	; select bank2
  3483  0798  110C               	bcf	12,2	;volatile
  3484  0799                     l2908:	
  3485                           
  3486                           ;main.c: 348:             if(and_ating<min_origem_up)
  3487  0799  0871               	movf	_min_origem_up+1,w
  3488  079A  3A80               	xorlw	128
  3489  079B  3C80               	sublw	128
  3490  079C  1D03               	skipz
  3491  079D  2FA1               	goto	u2515
  3492  079E  0870               	movf	_min_origem_up,w
  3493  079F  0020               	movlb	0	; select bank0
  3494  07A0  026F               	subwf	_and_ating,w
  3495  07A1                     u2515:	
  3496  07A1  1803               	skipnc
  3497  07A2  2FA4               	goto	u2511
  3498  07A3  2FA5               	goto	u2510
  3499  07A4                     u2511:	
  3500  07A4  2FA7               	goto	l2912
  3501  07A5                     u2510:	
  3502  07A5                     l2910:	
  3503                           
  3504                           ;main.c: 349:             {;main.c: 351:                 LATAbits.LATA2 = 1;
  3505  07A5  0022               	movlb	2	; select bank2
  3506  07A6  150C               	bsf	12,2	;volatile
  3507  07A7                     l2912:	
  3508                           
  3509                           ;main.c: 341:         while(and_ating!=min_origem_up)
  3510  07A7  0020               	movlb	0	; select bank0
  3511  07A8  086F               	movf	_and_ating,w
  3512  07A9  00A5               	movwf	??_col_up
  3513  07AA  01A6               	clrf	??_col_up+1
  3514  07AB  0871               	movf	_min_origem_up+1,w
  3515  07AC  0626               	xorwf	??_col_up+1,w
  3516  07AD  1D03               	skipz
  3517  07AE  2FB1               	goto	u2525
  3518  07AF  0870               	movf	_min_origem_up,w
  3519  07B0  0625               	xorwf	??_col_up,w
  3520  07B1                     u2525:	
  3521  07B1  1D03               	skipz
  3522  07B2  2FB4               	goto	u2521
  3523  07B3  2FB5               	goto	u2520
  3524  07B4                     u2521:	
  3525  07B4  2F75               	goto	l2902
  3526  07B5                     u2520:	
  3527  07B5                     l642:	
  3528                           
  3529                           ;main.c: 354:         LATAbits.LATA2 = 1;
  3530  07B5  0022               	movlb	2	; select bank2
  3531  07B6  150C               	bsf	12,2	;volatile
  3532  07B7                     l2914:	
  3533                           
  3534                           ;main.c: 356:         {;main.c: 357:             if(and_ating==min_origem_up)
  3535  07B7  0020               	movlb	0	; select bank0
  3536  07B8  086F               	movf	_and_ating,w
  3537  07B9  00A5               	movwf	??_col_up
  3538  07BA  01A6               	clrf	??_col_up+1
  3539  07BB  0871               	movf	_min_origem_up+1,w
  3540  07BC  0626               	xorwf	??_col_up+1,w
  3541  07BD  1D03               	skipz
  3542  07BE  2FC1               	goto	u2535
  3543  07BF  0870               	movf	_min_origem_up,w
  3544  07C0  0625               	xorwf	??_col_up,w
  3545  07C1                     u2535:	
  3546  07C1  1D03               	skipz
  3547  07C2  2FC4               	goto	u2531
  3548  07C3  2FC5               	goto	u2530
  3549  07C4                     u2531:	
  3550  07C4  2FDD               	goto	l2920
  3551  07C5                     u2530:	
  3552  07C5                     l2916:	
  3553                           
  3554                           ;main.c: 358:             {;main.c: 359:                 min_up();
  3555  07C5  318E  265B  3187   	fcall	_min_up
  3556  07C8                     l2918:	
  3557                           
  3558                           ;main.c: 360:                 distancia=abs(and_ating-min_origem_up);
  3559  07C8  0020               	movlb	0	; select bank0
  3560  07C9  086F               	movf	_and_ating,w
  3561  07CA  00A5               	movwf	??_col_up
  3562  07CB  0870               	movf	_min_origem_up,w
  3563  07CC  0225               	subwf	??_col_up,w
  3564  07CD  00A0               	movwf	abs@a
  3565  07CE  0971               	comf	_min_origem_up+1,w
  3566  07CF  1803               	skipnc
  3567  07D0  0A89               	incf	9,f
  3568  07D1  00A1               	movwf	abs@a+1
  3569  07D2  3189  21B6  3187   	fcall	_abs
  3570  07D5  0020               	movlb	0	; select bank0
  3571  07D6  0821               	movf	?_abs+1,w
  3572  07D7  0021               	movlb	1	; select bank1
  3573  07D8  00D1               	movwf	(_distancia+1)^(0+128)
  3574  07D9  0020               	movlb	0	; select bank0
  3575  07DA  0820               	movf	?_abs,w
  3576  07DB  0021               	movlb	1	; select bank1
  3577  07DC  00D0               	movwf	_distancia^(0+128)
  3578  07DD                     l2920:	
  3579                           
  3580                           ;main.c: 362:         }while (and_ating!=max_fila_up);
  3581  07DD  0020               	movlb	0	; select bank0
  3582  07DE  086F               	movf	_and_ating,w
  3583  07DF  00A5               	movwf	??_col_up
  3584  07E0  01A6               	clrf	??_col_up+1
  3585  07E1  0021               	movlb	1	; select bank1
  3586  07E2  084F               	movf	(_max_fila_up+1)^(0+128),w
  3587  07E3  0020               	movlb	0	; select bank0
  3588  07E4  0626               	xorwf	??_col_up+1,w
  3589  07E5  1D03               	skipz
  3590  07E6  2FEB               	goto	u2545
  3591  07E7  0021               	movlb	1	; select bank1
  3592  07E8  084E               	movf	_max_fila_up^(0+128),w
  3593  07E9  0020               	movlb	0	; select bank0
  3594  07EA  0625               	xorwf	??_col_up,w
  3595  07EB                     u2545:	
  3596  07EB  1D03               	skipz
  3597  07EC  2FEE               	goto	u2541
  3598  07ED  2FEF               	goto	u2540
  3599  07EE                     u2541:	
  3600  07EE  2FB7               	goto	l2914
  3601  07EF                     u2540:	
  3602  07EF                     l646:	
  3603  07EF  0008               	return
  3604  07F0                     __end_of_col_up:	
  3605                           
  3606                           	psect	text3
  3607  0E5B                     __ptext3:	
  3608 ;; *************** function _min_up *****************
  3609 ;; Defined at:
  3610 ;;		line 400 in file "main.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  i               2    3[BANK0 ] int 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3624 ;;      Params:         0       0       0       0       0       0
  3625 ;;      Locals:         0       2       0       0       0       0
  3626 ;;      Temps:          0       3       0       0       0       0
  3627 ;;      Totals:         0       5       0       0       0       0
  3628 ;;Total ram usage:        5 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    4
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_col_up
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           
  3639                           ;psect for function _min_up
  3640  0E5B                     _min_up:	
  3641  0E5B                     l2544:	
  3642                           ;incstack = 0
  3643                           ; Regs used in _min_up: [wreg+fsr1l+fsr1h+status,2+status,0]
  3644                           
  3645                           
  3646                           ;main.c: 403:     min_origem_up = 4;
  3647  0E5B  3004               	movlw	4
  3648  0E5C  00F0               	movwf	_min_origem_up
  3649  0E5D  3000               	movlw	0
  3650  0E5E  00F1               	movwf	_min_origem_up+1
  3651  0E5F                     l2546:	
  3652                           
  3653                           ;main.c: 404:     int i;;main.c: 405:     for(i=0;i<=9;i++)
  3654  0E5F  0020               	movlb	0	; select bank0
  3655  0E60  01A3               	clrf	min_up@i
  3656  0E61  01A4               	clrf	min_up@i+1
  3657  0E62                     l2552:	
  3658                           
  3659                           ;main.c: 406:     {;main.c: 407:         if(origem_up[i]<min_origem_up&&origem_up[i]>0)
  3660  0E62  0020               	movlb	0	; select bank0
  3661  0E63  3523               	lslf	min_up@i,w
  3662  0E64  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  3663  0E65  0086               	movwf	6
  3664  0E66  3001               	movlw	1	; select bank2/3
  3665  0E67  0087               	movwf	7
  3666  0E68  3F40               	moviw [0]fsr1
  3667  0E69  00A0               	movwf	??_min_up
  3668  0E6A  3F41               	moviw [1]fsr1
  3669  0E6B  00A1               	movwf	??_min_up+1
  3670  0E6C  0821               	movf	??_min_up+1,w
  3671  0E6D  3A80               	xorlw	128
  3672  0E6E  00A2               	movwf	??_min_up+2
  3673  0E6F  0871               	movf	_min_origem_up+1,w
  3674  0E70  3A80               	xorlw	128
  3675  0E71  0222               	subwf	??_min_up+2,w
  3676  0E72  1D03               	skipz
  3677  0E73  2E76               	goto	u1985
  3678  0E74  0870               	movf	_min_origem_up,w
  3679  0E75  0220               	subwf	??_min_up,w
  3680  0E76                     u1985:	
  3681  0E76  1803               	skipnc
  3682  0E77  2E79               	goto	u1981
  3683  0E78  2E7A               	goto	u1980
  3684  0E79                     u1981:	
  3685  0E79  2E9B               	goto	l662
  3686  0E7A                     u1980:	
  3687  0E7A                     l2554:	
  3688  0E7A  0020               	movlb	0	; select bank0
  3689  0E7B  3523               	lslf	min_up@i,w
  3690  0E7C  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  3691  0E7D  0086               	movwf	6
  3692  0E7E  3001               	movlw	1	; select bank2/3
  3693  0E7F  0087               	movwf	7
  3694  0E80  3F40               	moviw [0]fsr1
  3695  0E81  00A0               	movwf	??_min_up
  3696  0E82  3F41               	moviw [1]fsr1
  3697  0E83  00A1               	movwf	??_min_up+1
  3698  0E84  0821               	movf	??_min_up+1,w
  3699  0E85  3A80               	xorlw	128
  3700  0E86  00A2               	movwf	??_min_up+2
  3701  0E87  3080               	movlw	128
  3702  0E88  0222               	subwf	??_min_up+2,w
  3703  0E89  1D03               	skipz
  3704  0E8A  2E8D               	goto	u1995
  3705  0E8B  3001               	movlw	1
  3706  0E8C  0220               	subwf	??_min_up,w
  3707  0E8D                     u1995:	
  3708  0E8D  1C03               	skipc
  3709  0E8E  2E90               	goto	u1991
  3710  0E8F  2E91               	goto	u1990
  3711  0E90                     u1991:	
  3712  0E90  2E9B               	goto	l662
  3713  0E91                     u1990:	
  3714  0E91                     l2556:	
  3715                           
  3716                           ;main.c: 408:         {;main.c: 409:             min_origem_up = origem_up[i];
  3717  0E91  0020               	movlb	0	; select bank0
  3718  0E92  3523               	lslf	min_up@i,w
  3719  0E93  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  3720  0E94  0086               	movwf	6
  3721  0E95  3001               	movlw	1	; select bank2/3
  3722  0E96  0087               	movwf	7
  3723  0E97  3F40               	moviw [0]fsr1
  3724  0E98  00F0               	movwf	_min_origem_up
  3725  0E99  3F41               	moviw [1]fsr1
  3726  0E9A  00F1               	movwf	_min_origem_up+1
  3727  0E9B                     l662:	
  3728                           ;main.c: 410:         }
  3729                           
  3730                           
  3731                           ;main.c: 411:         if(fila_up[i]<min_origem_up&&fila_up[i]>0)
  3732  0E9B  0020               	movlb	0	; select bank0
  3733  0E9C  3523               	lslf	min_up@i,w
  3734  0E9D  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  3735  0E9E  0086               	movwf	6
  3736  0E9F  0187               	clrf	7
  3737  0EA0  3F40               	moviw [0]fsr1
  3738  0EA1  00A0               	movwf	??_min_up
  3739  0EA2  3F41               	moviw [1]fsr1
  3740  0EA3  00A1               	movwf	??_min_up+1
  3741  0EA4  0821               	movf	??_min_up+1,w
  3742  0EA5  3A80               	xorlw	128
  3743  0EA6  00A2               	movwf	??_min_up+2
  3744  0EA7  0871               	movf	_min_origem_up+1,w
  3745  0EA8  3A80               	xorlw	128
  3746  0EA9  0222               	subwf	??_min_up+2,w
  3747  0EAA  1D03               	skipz
  3748  0EAB  2EAE               	goto	u2005
  3749  0EAC  0870               	movf	_min_origem_up,w
  3750  0EAD  0220               	subwf	??_min_up,w
  3751  0EAE                     u2005:	
  3752  0EAE  1803               	skipnc
  3753  0EAF  2EB1               	goto	u2001
  3754  0EB0  2EB2               	goto	u2000
  3755  0EB1                     u2001:	
  3756  0EB1  2ED1               	goto	l2562
  3757  0EB2                     u2000:	
  3758  0EB2                     l2558:	
  3759  0EB2  0020               	movlb	0	; select bank0
  3760  0EB3  3523               	lslf	min_up@i,w
  3761  0EB4  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  3762  0EB5  0086               	movwf	6
  3763  0EB6  0187               	clrf	7
  3764  0EB7  3F40               	moviw [0]fsr1
  3765  0EB8  00A0               	movwf	??_min_up
  3766  0EB9  3F41               	moviw [1]fsr1
  3767  0EBA  00A1               	movwf	??_min_up+1
  3768  0EBB  0821               	movf	??_min_up+1,w
  3769  0EBC  3A80               	xorlw	128
  3770  0EBD  00A2               	movwf	??_min_up+2
  3771  0EBE  3080               	movlw	128
  3772  0EBF  0222               	subwf	??_min_up+2,w
  3773  0EC0  1D03               	skipz
  3774  0EC1  2EC4               	goto	u2015
  3775  0EC2  3001               	movlw	1
  3776  0EC3  0220               	subwf	??_min_up,w
  3777  0EC4                     u2015:	
  3778  0EC4  1C03               	skipc
  3779  0EC5  2EC7               	goto	u2011
  3780  0EC6  2EC8               	goto	u2010
  3781  0EC7                     u2011:	
  3782  0EC7  2ED1               	goto	l2562
  3783  0EC8                     u2010:	
  3784  0EC8                     l2560:	
  3785                           
  3786                           ;main.c: 412:         {;main.c: 413:             min_origem_up = fila_up[i];
  3787  0EC8  0020               	movlb	0	; select bank0
  3788  0EC9  3523               	lslf	min_up@i,w
  3789  0ECA  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  3790  0ECB  0086               	movwf	6
  3791  0ECC  0187               	clrf	7
  3792  0ECD  3F40               	moviw [0]fsr1
  3793  0ECE  00F0               	movwf	_min_origem_up
  3794  0ECF  3F41               	moviw [1]fsr1
  3795  0ED0  00F1               	movwf	_min_origem_up+1
  3796  0ED1                     l2562:	
  3797                           
  3798                           ;main.c: 415:     }
  3799  0ED1  3001               	movlw	1
  3800  0ED2  0020               	movlb	0	; select bank0
  3801  0ED3  07A3               	addwf	min_up@i,f
  3802  0ED4  3000               	movlw	0
  3803  0ED5  3DA4               	addwfc	min_up@i+1,f
  3804  0ED6                     l2564:	
  3805  0ED6  0824               	movf	min_up@i+1,w
  3806  0ED7  3A80               	xorlw	128
  3807  0ED8  00A0               	movwf	??_min_up
  3808  0ED9  3080               	movlw	128
  3809  0EDA  0220               	subwf	??_min_up,w
  3810  0EDB  1D03               	skipz
  3811  0EDC  2EDF               	goto	u2025
  3812  0EDD  300A               	movlw	10
  3813  0EDE  0223               	subwf	min_up@i,w
  3814  0EDF                     u2025:	
  3815  0EDF  1C03               	skipc
  3816  0EE0  2EE2               	goto	u2021
  3817  0EE1  2EE3               	goto	u2020
  3818  0EE2                     u2021:	
  3819  0EE2  2E62               	goto	l2552
  3820  0EE3                     u2020:	
  3821  0EE3                     l2566:	
  3822                           
  3823                           ;main.c: 417:     for(i=0;i<=9;i++)
  3824  0EE3  0020               	movlb	0	; select bank0
  3825  0EE4  01A3               	clrf	min_up@i
  3826  0EE5  01A4               	clrf	min_up@i+1
  3827  0EE6                     l2572:	
  3828                           
  3829                           ;main.c: 418:     {;main.c: 419:         if(origem_up[i]==min_origem_up)
  3830  0EE6  0020               	movlb	0	; select bank0
  3831  0EE7  3523               	lslf	min_up@i,w
  3832  0EE8  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  3833  0EE9  0086               	movwf	6
  3834  0EEA  3001               	movlw	1	; select bank2/3
  3835  0EEB  0087               	movwf	7
  3836  0EEC  3F40               	moviw [0]fsr1
  3837  0EED  00A0               	movwf	??_min_up
  3838  0EEE  3F41               	moviw [1]fsr1
  3839  0EEF  00A1               	movwf	??_min_up+1
  3840  0EF0  0871               	movf	_min_origem_up+1,w
  3841  0EF1  0621               	xorwf	??_min_up+1,w
  3842  0EF2  1D03               	skipz
  3843  0EF3  2EF6               	goto	u2035
  3844  0EF4  0870               	movf	_min_origem_up,w
  3845  0EF5  0620               	xorwf	??_min_up,w
  3846  0EF6                     u2035:	
  3847  0EF6  1D03               	skipz
  3848  0EF7  2EF9               	goto	u2031
  3849  0EF8  2EFA               	goto	u2030
  3850  0EF9                     u2031:	
  3851  0EF9  2F02               	goto	l666
  3852  0EFA                     u2030:	
  3853  0EFA                     l2574:	
  3854                           
  3855                           ;main.c: 420:         {;main.c: 421:             origem_up[i]=out_value;
  3856  0EFA  3523               	lslf	min_up@i,w
  3857  0EFB  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  3858  0EFC  0086               	movwf	6
  3859  0EFD  3001               	movlw	1	; select bank2/3
  3860  0EFE  0087               	movwf	7
  3861  0EFF  3000               	movlw	0
  3862  0F00  3FC0               	movwi [0]fsr1
  3863  0F01  3FC1               	movwi [1]fsr1
  3864  0F02                     l666:	
  3865                           ;main.c: 422:         }
  3866                           
  3867                           
  3868                           ;main.c: 423:         if(fila_up[i]==min_origem_up)
  3869  0F02  3523               	lslf	min_up@i,w
  3870  0F03  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  3871  0F04  0086               	movwf	6
  3872  0F05  0187               	clrf	7
  3873  0F06  3F40               	moviw [0]fsr1
  3874  0F07  00A0               	movwf	??_min_up
  3875  0F08  3F41               	moviw [1]fsr1
  3876  0F09  00A1               	movwf	??_min_up+1
  3877  0F0A  0871               	movf	_min_origem_up+1,w
  3878  0F0B  0621               	xorwf	??_min_up+1,w
  3879  0F0C  1D03               	skipz
  3880  0F0D  2F10               	goto	u2045
  3881  0F0E  0870               	movf	_min_origem_up,w
  3882  0F0F  0620               	xorwf	??_min_up,w
  3883  0F10                     u2045:	
  3884  0F10  1D03               	skipz
  3885  0F11  2F13               	goto	u2041
  3886  0F12  2F14               	goto	u2040
  3887  0F13                     u2041:	
  3888  0F13  2F1B               	goto	l2578
  3889  0F14                     u2040:	
  3890  0F14                     l2576:	
  3891                           
  3892                           ;main.c: 424:         {;main.c: 425:             fila_up[i]=out_value;
  3893  0F14  3523               	lslf	min_up@i,w
  3894  0F15  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  3895  0F16  0086               	movwf	6
  3896  0F17  0187               	clrf	7
  3897  0F18  3000               	movlw	0
  3898  0F19  3FC0               	movwi [0]fsr1
  3899  0F1A  3FC1               	movwi [1]fsr1
  3900  0F1B                     l2578:	
  3901                           
  3902                           ;main.c: 427:     }
  3903  0F1B  3001               	movlw	1
  3904  0F1C  07A3               	addwf	min_up@i,f
  3905  0F1D  3000               	movlw	0
  3906  0F1E  3DA4               	addwfc	min_up@i+1,f
  3907  0F1F                     l2580:	
  3908  0F1F  0824               	movf	min_up@i+1,w
  3909  0F20  3A80               	xorlw	128
  3910  0F21  00A0               	movwf	??_min_up
  3911  0F22  3080               	movlw	128
  3912  0F23  0220               	subwf	??_min_up,w
  3913  0F24  1D03               	skipz
  3914  0F25  2F28               	goto	u2055
  3915  0F26  300A               	movlw	10
  3916  0F27  0223               	subwf	min_up@i,w
  3917  0F28                     u2055:	
  3918  0F28  1C03               	skipc
  3919  0F29  2F2B               	goto	u2051
  3920  0F2A  2F2C               	goto	u2050
  3921  0F2B                     u2051:	
  3922  0F2B  2EE6               	goto	l2572
  3923  0F2C                     u2050:	
  3924  0F2C                     l668:	
  3925  0F2C  0008               	return
  3926  0F2D                     __end_of_min_up:	
  3927                           
  3928                           	psect	text4
  3929  0BF2                     __ptext4:	
  3930 ;; *************** function _col_down *****************
  3931 ;; Defined at:
  3932 ;;		line 365 in file "main.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;		None
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;		None
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      void 
  3939 ;; Registers used:
  3940 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3946 ;;      Params:         0       0       0       0       0       0
  3947 ;;      Locals:         0       0       0       0       0       0
  3948 ;;      Temps:          0       2       0       0       0       0
  3949 ;;      Totals:         0       2       0       0       0       0
  3950 ;;Total ram usage:        2 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    5
  3953 ;; This function calls:
  3954 ;;		_abs
  3955 ;;		_max_down
  3956 ;; This function is called by:
  3957 ;;		_gerenciamento
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           
  3962                           ;psect for function _col_down
  3963  0BF2                     _col_down:	
  3964  0BF2                     l2922:	
  3965                           ;incstack = 0
  3966                           ; Regs used in _col_down: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3967                           
  3968                           
  3969                           ;main.c: 367:         while(and_ating!=max_origem_down)
  3970  0BF2  2C25               	goto	l2934
  3971  0BF3                     l2924:	
  3972                           
  3973                           ;main.c: 368:         {;main.c: 369:             distancia = abs(and_ating-max_origem_do
      +                          wn);
  3974  0BF3  086F               	movf	_and_ating,w
  3975  0BF4  00A5               	movwf	??_col_down
  3976  0BF5  0872               	movf	_max_origem_down,w
  3977  0BF6  0225               	subwf	??_col_down,w
  3978  0BF7  00A0               	movwf	abs@a
  3979  0BF8  0973               	comf	_max_origem_down+1,w
  3980  0BF9  1803               	skipnc
  3981  0BFA  0A89               	incf	9,f
  3982  0BFB  00A1               	movwf	abs@a+1
  3983  0BFC  3189  21B6  318B   	fcall	_abs
  3984  0BFF  0020               	movlb	0	; select bank0
  3985  0C00  0821               	movf	?_abs+1,w
  3986  0C01  0021               	movlb	1	; select bank1
  3987  0C02  00D1               	movwf	(_distancia+1)^(0+128)
  3988  0C03  0020               	movlb	0	; select bank0
  3989  0C04  0820               	movf	?_abs,w
  3990  0C05  0021               	movlb	1	; select bank1
  3991  0C06  00D0               	movwf	_distancia^(0+128)
  3992  0C07                     l2926:	
  3993                           
  3994                           ;main.c: 370:             if(and_ating>max_origem_down)
  3995  0C07  0873               	movf	_max_origem_down+1,w
  3996  0C08  3A80               	xorlw	128
  3997  0C09  0020               	movlb	0	; select bank0
  3998  0C0A  00A5               	movwf	??_col_down
  3999  0C0B  3080               	movlw	128
  4000  0C0C  0225               	subwf	??_col_down,w
  4001  0C0D  1D03               	skipz
  4002  0C0E  2C11               	goto	u2555
  4003  0C0F  086F               	movf	_and_ating,w
  4004  0C10  0272               	subwf	_max_origem_down,w
  4005  0C11                     u2555:	
  4006  0C11  1803               	skipnc
  4007  0C12  2C14               	goto	u2551
  4008  0C13  2C15               	goto	u2550
  4009  0C14                     u2551:	
  4010  0C14  2C17               	goto	l2930
  4011  0C15                     u2550:	
  4012  0C15                     l2928:	
  4013                           
  4014                           ;main.c: 371:             {;main.c: 372:                 LATAbits.LATA2 = 0;
  4015  0C15  0022               	movlb	2	; select bank2
  4016  0C16  110C               	bcf	12,2	;volatile
  4017  0C17                     l2930:	
  4018                           
  4019                           ;main.c: 374:             if(and_ating<max_origem_down)
  4020  0C17  0873               	movf	_max_origem_down+1,w
  4021  0C18  3A80               	xorlw	128
  4022  0C19  3C80               	sublw	128
  4023  0C1A  1D03               	skipz
  4024  0C1B  2C1F               	goto	u2565
  4025  0C1C  0872               	movf	_max_origem_down,w
  4026  0C1D  0020               	movlb	0	; select bank0
  4027  0C1E  026F               	subwf	_and_ating,w
  4028  0C1F                     u2565:	
  4029  0C1F  1803               	skipnc
  4030  0C20  2C22               	goto	u2561
  4031  0C21  2C23               	goto	u2560
  4032  0C22                     u2561:	
  4033  0C22  2C25               	goto	l2934
  4034  0C23                     u2560:	
  4035  0C23                     l2932:	
  4036                           
  4037                           ;main.c: 375:             {;main.c: 376:                 LATAbits.LATA2 = 1;
  4038  0C23  0022               	movlb	2	; select bank2
  4039  0C24  150C               	bsf	12,2	;volatile
  4040  0C25                     l2934:	
  4041                           
  4042                           ;main.c: 367:         while(and_ating!=max_origem_down)
  4043  0C25  0020               	movlb	0	; select bank0
  4044  0C26  086F               	movf	_and_ating,w
  4045  0C27  00A5               	movwf	??_col_down
  4046  0C28  01A6               	clrf	??_col_down+1
  4047  0C29  0873               	movf	_max_origem_down+1,w
  4048  0C2A  0626               	xorwf	??_col_down+1,w
  4049  0C2B  1D03               	skipz
  4050  0C2C  2C2F               	goto	u2575
  4051  0C2D  0872               	movf	_max_origem_down,w
  4052  0C2E  0625               	xorwf	??_col_down,w
  4053  0C2F                     u2575:	
  4054  0C2F  1D03               	skipz
  4055  0C30  2C32               	goto	u2571
  4056  0C31  2C33               	goto	u2570
  4057  0C32                     u2571:	
  4058  0C32  2BF3               	goto	l2924
  4059  0C33                     u2570:	
  4060  0C33                     l653:	
  4061                           
  4062                           ;main.c: 379:         LATAbits.LATA2 = 0;
  4063  0C33  0022               	movlb	2	; select bank2
  4064  0C34  110C               	bcf	12,2	;volatile
  4065  0C35                     l2936:	
  4066                           
  4067                           ;main.c: 381:         {;main.c: 382:             if(and_ating==max_origem_down)
  4068  0C35  0020               	movlb	0	; select bank0
  4069  0C36  086F               	movf	_and_ating,w
  4070  0C37  00A5               	movwf	??_col_down
  4071  0C38  01A6               	clrf	??_col_down+1
  4072  0C39  0873               	movf	_max_origem_down+1,w
  4073  0C3A  0626               	xorwf	??_col_down+1,w
  4074  0C3B  1D03               	skipz
  4075  0C3C  2C3F               	goto	u2585
  4076  0C3D  0872               	movf	_max_origem_down,w
  4077  0C3E  0625               	xorwf	??_col_down,w
  4078  0C3F                     u2585:	
  4079  0C3F  1D03               	skipz
  4080  0C40  2C42               	goto	u2581
  4081  0C41  2C43               	goto	u2580
  4082  0C42                     u2581:	
  4083  0C42  2C5B               	goto	l2942
  4084  0C43                     u2580:	
  4085  0C43                     l2938:	
  4086                           
  4087                           ;main.c: 383:             {;main.c: 384:                 max_down();
  4088  0C43  318D  25AA  318B   	fcall	_max_down
  4089  0C46                     l2940:	
  4090                           
  4091                           ;main.c: 385:                 distancia=abs(and_ating-max_origem_down);
  4092  0C46  0020               	movlb	0	; select bank0
  4093  0C47  086F               	movf	_and_ating,w
  4094  0C48  00A5               	movwf	??_col_down
  4095  0C49  0872               	movf	_max_origem_down,w
  4096  0C4A  0225               	subwf	??_col_down,w
  4097  0C4B  00A0               	movwf	abs@a
  4098  0C4C  0973               	comf	_max_origem_down+1,w
  4099  0C4D  1803               	skipnc
  4100  0C4E  0A89               	incf	9,f
  4101  0C4F  00A1               	movwf	abs@a+1
  4102  0C50  3189  21B6  318B   	fcall	_abs
  4103  0C53  0020               	movlb	0	; select bank0
  4104  0C54  0821               	movf	?_abs+1,w
  4105  0C55  0021               	movlb	1	; select bank1
  4106  0C56  00D1               	movwf	(_distancia+1)^(0+128)
  4107  0C57  0020               	movlb	0	; select bank0
  4108  0C58  0820               	movf	?_abs,w
  4109  0C59  0021               	movlb	1	; select bank1
  4110  0C5A  00D0               	movwf	_distancia^(0+128)
  4111  0C5B                     l2942:	
  4112                           
  4113                           ;main.c: 387:         }while(and_ating!=min_fila_down);
  4114  0C5B  0020               	movlb	0	; select bank0
  4115  0C5C  086F               	movf	_and_ating,w
  4116  0C5D  00A5               	movwf	??_col_down
  4117  0C5E  01A6               	clrf	??_col_down+1
  4118  0C5F  0021               	movlb	1	; select bank1
  4119  0C60  084D               	movf	(_min_fila_down+1)^(0+128),w
  4120  0C61  0020               	movlb	0	; select bank0
  4121  0C62  0626               	xorwf	??_col_down+1,w
  4122  0C63  1D03               	skipz
  4123  0C64  2C69               	goto	u2595
  4124  0C65  0021               	movlb	1	; select bank1
  4125  0C66  084C               	movf	_min_fila_down^(0+128),w
  4126  0C67  0020               	movlb	0	; select bank0
  4127  0C68  0625               	xorwf	??_col_down,w
  4128  0C69                     u2595:	
  4129  0C69  1D03               	skipz
  4130  0C6A  2C6C               	goto	u2591
  4131  0C6B  2C6D               	goto	u2590
  4132  0C6C                     u2591:	
  4133  0C6C  2C35               	goto	l2936
  4134  0C6D                     u2590:	
  4135  0C6D                     l657:	
  4136  0C6D  0008               	return
  4137  0C6E                     __end_of_col_down:	
  4138                           
  4139                           	psect	text5
  4140  0DAA                     __ptext5:	
  4141 ;; *************** function _max_down *****************
  4142 ;; Defined at:
  4143 ;;		line 432 in file "main.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  i               2    3[BANK0 ] int 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  1    wreg      void 
  4150 ;; Registers used:
  4151 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4157 ;;      Params:         0       0       0       0       0       0
  4158 ;;      Locals:         0       2       0       0       0       0
  4159 ;;      Temps:          0       3       0       0       0       0
  4160 ;;      Totals:         0       5       0       0       0       0
  4161 ;;Total ram usage:        5 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    4
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_col_down
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           
  4172                           ;psect for function _max_down
  4173  0DAA                     _max_down:	
  4174  0DAA                     l2582:	
  4175                           ;incstack = 0
  4176                           ; Regs used in _max_down: [wreg+fsr1l+fsr1h+status,2+status,0]
  4177                           
  4178                           
  4179                           ;main.c: 434:     max_origem_down = origem_down[0];
  4180  0DAA  0021               	movlb	1	; select bank1
  4181  0DAB  0821               	movf	(_origem_down+1)^(0+128),w
  4182  0DAC  00F3               	movwf	_max_origem_down+1
  4183  0DAD  0820               	movf	_origem_down^(0+128),w
  4184  0DAE  00F2               	movwf	_max_origem_down
  4185                           
  4186                           ;main.c: 435:     int i;;main.c: 436:     for(i=1;i<=9;i++)
  4187  0DAF  3001               	movlw	1
  4188  0DB0  0020               	movlb	0	; select bank0
  4189  0DB1  00A3               	movwf	max_down@i
  4190  0DB2  3000               	movlw	0
  4191  0DB3  00A4               	movwf	max_down@i+1
  4192  0DB4                     l2586:	
  4193                           
  4194                           ;main.c: 437:     {;main.c: 438:         if(origem_down[i]>max_origem_down)
  4195  0DB4  0020               	movlb	0	; select bank0
  4196  0DB5  3523               	lslf	max_down@i,w
  4197  0DB6  3EA0               	addlw	(low (_origem_down| 0))& (0+255)
  4198  0DB7  0086               	movwf	6
  4199  0DB8  0187               	clrf	7
  4200  0DB9  3F40               	moviw [0]fsr1
  4201  0DBA  00A0               	movwf	??_max_down
  4202  0DBB  3F41               	moviw [1]fsr1
  4203  0DBC  00A1               	movwf	??_max_down+1
  4204  0DBD  0873               	movf	_max_origem_down+1,w
  4205  0DBE  3A80               	xorlw	128
  4206  0DBF  00A2               	movwf	??_max_down+2
  4207  0DC0  0821               	movf	??_max_down+1,w
  4208  0DC1  3A80               	xorlw	128
  4209  0DC2  0222               	subwf	??_max_down+2,w
  4210  0DC3  1D03               	skipz
  4211  0DC4  2DC7               	goto	u2065
  4212  0DC5  0820               	movf	??_max_down,w
  4213  0DC6  0272               	subwf	_max_origem_down,w
  4214  0DC7                     u2065:	
  4215  0DC7  1803               	skipnc
  4216  0DC8  2DCA               	goto	u2061
  4217  0DC9  2DCB               	goto	u2060
  4218  0DCA                     u2061:	
  4219  0DCA  2DD4               	goto	l673
  4220  0DCB                     u2060:	
  4221  0DCB                     l2588:	
  4222                           
  4223                           ;main.c: 439:         {;main.c: 440:             max_origem_down = origem_down[i];
  4224  0DCB  0020               	movlb	0	; select bank0
  4225  0DCC  3523               	lslf	max_down@i,w
  4226  0DCD  3EA0               	addlw	(low (_origem_down| 0))& (0+255)
  4227  0DCE  0086               	movwf	6
  4228  0DCF  0187               	clrf	7
  4229  0DD0  3F40               	moviw [0]fsr1
  4230  0DD1  00F2               	movwf	_max_origem_down
  4231  0DD2  3F41               	moviw [1]fsr1
  4232  0DD3  00F3               	movwf	_max_origem_down+1
  4233  0DD4                     l673:	
  4234                           ;main.c: 441:         }
  4235                           
  4236                           
  4237                           ;main.c: 442:         if(fila_down[i]>max_origem_down)
  4238  0DD4  0020               	movlb	0	; select bank0
  4239  0DD5  3523               	lslf	max_down@i,w
  4240  0DD6  3E34               	addlw	(low (_fila_down| (0+256)))& (0+255)
  4241  0DD7  0086               	movwf	6
  4242  0DD8  3001               	movlw	1	; select bank2/3
  4243  0DD9  0087               	movwf	7
  4244  0DDA  3F40               	moviw [0]fsr1
  4245  0DDB  00A0               	movwf	??_max_down
  4246  0DDC  3F41               	moviw [1]fsr1
  4247  0DDD  00A1               	movwf	??_max_down+1
  4248  0DDE  0873               	movf	_max_origem_down+1,w
  4249  0DDF  3A80               	xorlw	128
  4250  0DE0  00A2               	movwf	??_max_down+2
  4251  0DE1  0821               	movf	??_max_down+1,w
  4252  0DE2  3A80               	xorlw	128
  4253  0DE3  0222               	subwf	??_max_down+2,w
  4254  0DE4  1D03               	skipz
  4255  0DE5  2DE8               	goto	u2075
  4256  0DE6  0820               	movf	??_max_down,w
  4257  0DE7  0272               	subwf	_max_origem_down,w
  4258  0DE8                     u2075:	
  4259  0DE8  1803               	skipnc
  4260  0DE9  2DEB               	goto	u2071
  4261  0DEA  2DEC               	goto	u2070
  4262  0DEB                     u2071:	
  4263  0DEB  2DF6               	goto	l2592
  4264  0DEC                     u2070:	
  4265  0DEC                     l2590:	
  4266                           
  4267                           ;main.c: 443:         {;main.c: 444:             max_origem_down = fila_down[i];
  4268  0DEC  0020               	movlb	0	; select bank0
  4269  0DED  3523               	lslf	max_down@i,w
  4270  0DEE  3E34               	addlw	(low (_fila_down| (0+256)))& (0+255)
  4271  0DEF  0086               	movwf	6
  4272  0DF0  3001               	movlw	1	; select bank2/3
  4273  0DF1  0087               	movwf	7
  4274  0DF2  3F40               	moviw [0]fsr1
  4275  0DF3  00F2               	movwf	_max_origem_down
  4276  0DF4  3F41               	moviw [1]fsr1
  4277  0DF5  00F3               	movwf	_max_origem_down+1
  4278  0DF6                     l2592:	
  4279                           
  4280                           ;main.c: 446:     }
  4281  0DF6  3001               	movlw	1
  4282  0DF7  0020               	movlb	0	; select bank0
  4283  0DF8  07A3               	addwf	max_down@i,f
  4284  0DF9  3000               	movlw	0
  4285  0DFA  3DA4               	addwfc	max_down@i+1,f
  4286  0DFB                     l2594:	
  4287  0DFB  0824               	movf	max_down@i+1,w
  4288  0DFC  3A80               	xorlw	128
  4289  0DFD  00A0               	movwf	??_max_down
  4290  0DFE  3080               	movlw	128
  4291  0DFF  0220               	subwf	??_max_down,w
  4292  0E00  1D03               	skipz
  4293  0E01  2E04               	goto	u2085
  4294  0E02  300A               	movlw	10
  4295  0E03  0223               	subwf	max_down@i,w
  4296  0E04                     u2085:	
  4297  0E04  1C03               	skipc
  4298  0E05  2E07               	goto	u2081
  4299  0E06  2E08               	goto	u2080
  4300  0E07                     u2081:	
  4301  0E07  2DB4               	goto	l2586
  4302  0E08                     u2080:	
  4303  0E08                     l2596:	
  4304                           
  4305                           ;main.c: 448:     for(i=0;i<=9;i++)
  4306  0E08  0020               	movlb	0	; select bank0
  4307  0E09  01A3               	clrf	max_down@i
  4308  0E0A  01A4               	clrf	max_down@i+1
  4309  0E0B                     l2602:	
  4310                           
  4311                           ;main.c: 449:     {;main.c: 450:         if(origem_down[i]==max_origem_down)
  4312  0E0B  0020               	movlb	0	; select bank0
  4313  0E0C  3523               	lslf	max_down@i,w
  4314  0E0D  3EA0               	addlw	(low (_origem_down| 0))& (0+255)
  4315  0E0E  0086               	movwf	6
  4316  0E0F  0187               	clrf	7
  4317  0E10  3F40               	moviw [0]fsr1
  4318  0E11  00A0               	movwf	??_max_down
  4319  0E12  3F41               	moviw [1]fsr1
  4320  0E13  00A1               	movwf	??_max_down+1
  4321  0E14  0873               	movf	_max_origem_down+1,w
  4322  0E15  0621               	xorwf	??_max_down+1,w
  4323  0E16  1D03               	skipz
  4324  0E17  2E1A               	goto	u2095
  4325  0E18  0872               	movf	_max_origem_down,w
  4326  0E19  0620               	xorwf	??_max_down,w
  4327  0E1A                     u2095:	
  4328  0E1A  1D03               	skipz
  4329  0E1B  2E1D               	goto	u2091
  4330  0E1C  2E1E               	goto	u2090
  4331  0E1D                     u2091:	
  4332  0E1D  2E25               	goto	l677
  4333  0E1E                     u2090:	
  4334  0E1E                     l2604:	
  4335                           
  4336                           ;main.c: 451:         {;main.c: 452:             origem_down[i]=out_value;
  4337  0E1E  3523               	lslf	max_down@i,w
  4338  0E1F  3EA0               	addlw	(low (_origem_down| 0))& (0+255)
  4339  0E20  0086               	movwf	6
  4340  0E21  0187               	clrf	7
  4341  0E22  3000               	movlw	0
  4342  0E23  3FC0               	movwi [0]fsr1
  4343  0E24  3FC1               	movwi [1]fsr1
  4344  0E25                     l677:	
  4345                           ;main.c: 453:         }
  4346                           
  4347                           
  4348                           ;main.c: 454:         if(fila_up[i]==max_origem_down)
  4349  0E25  3523               	lslf	max_down@i,w
  4350  0E26  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  4351  0E27  0086               	movwf	6
  4352  0E28  0187               	clrf	7
  4353  0E29  3F40               	moviw [0]fsr1
  4354  0E2A  00A0               	movwf	??_max_down
  4355  0E2B  3F41               	moviw [1]fsr1
  4356  0E2C  00A1               	movwf	??_max_down+1
  4357  0E2D  0873               	movf	_max_origem_down+1,w
  4358  0E2E  0621               	xorwf	??_max_down+1,w
  4359  0E2F  1D03               	skipz
  4360  0E30  2E33               	goto	u2105
  4361  0E31  0872               	movf	_max_origem_down,w
  4362  0E32  0620               	xorwf	??_max_down,w
  4363  0E33                     u2105:	
  4364  0E33  1D03               	skipz
  4365  0E34  2E36               	goto	u2101
  4366  0E35  2E37               	goto	u2100
  4367  0E36                     u2101:	
  4368  0E36  2E3F               	goto	l2608
  4369  0E37                     u2100:	
  4370  0E37                     l2606:	
  4371                           
  4372                           ;main.c: 455:         {;main.c: 456:             fila_down[i]=out_value;
  4373  0E37  3523               	lslf	max_down@i,w
  4374  0E38  3E34               	addlw	(low (_fila_down| (0+256)))& (0+255)
  4375  0E39  0086               	movwf	6
  4376  0E3A  3001               	movlw	1	; select bank2/3
  4377  0E3B  0087               	movwf	7
  4378  0E3C  3000               	movlw	0
  4379  0E3D  3FC0               	movwi [0]fsr1
  4380  0E3E  3FC1               	movwi [1]fsr1
  4381  0E3F                     l2608:	
  4382                           
  4383                           ;main.c: 458:     }
  4384  0E3F  3001               	movlw	1
  4385  0E40  07A3               	addwf	max_down@i,f
  4386  0E41  3000               	movlw	0
  4387  0E42  3DA4               	addwfc	max_down@i+1,f
  4388  0E43                     l2610:	
  4389  0E43  0824               	movf	max_down@i+1,w
  4390  0E44  3A80               	xorlw	128
  4391  0E45  00A0               	movwf	??_max_down
  4392  0E46  3080               	movlw	128
  4393  0E47  0220               	subwf	??_max_down,w
  4394  0E48  1D03               	skipz
  4395  0E49  2E4C               	goto	u2115
  4396  0E4A  300A               	movlw	10
  4397  0E4B  0223               	subwf	max_down@i,w
  4398  0E4C                     u2115:	
  4399  0E4C  1C03               	skipc
  4400  0E4D  2E4F               	goto	u2111
  4401  0E4E  2E50               	goto	u2110
  4402  0E4F                     u2111:	
  4403  0E4F  2E0B               	goto	l2602
  4404  0E50                     u2110:	
  4405  0E50                     l2612:	
  4406                           
  4407                           ;main.c: 460:     if(max_origem_down==0)
  4408  0E50  0872               	movf	_max_origem_down,w
  4409  0E51  0473               	iorwf	_max_origem_down+1,w
  4410  0E52  1D03               	btfss	3,2
  4411  0E53  2E55               	goto	u2121
  4412  0E54  2E56               	goto	u2120
  4413  0E55                     u2121:	
  4414  0E55  2E5A               	goto	l680
  4415  0E56                     u2120:	
  4416  0E56                     l2614:	
  4417                           
  4418                           ;main.c: 461:     {;main.c: 462:         max_origem_down=1;
  4419  0E56  3001               	movlw	1
  4420  0E57  00F2               	movwf	_max_origem_down
  4421  0E58  3000               	movlw	0
  4422  0E59  00F3               	movwf	_max_origem_down+1
  4423  0E5A                     l680:	
  4424  0E5A  0008               	return
  4425  0E5B                     __end_of_max_down:	
  4426                           
  4427                           	psect	text6
  4428  09B6                     __ptext6:	
  4429 ;; *************** function _abs *****************
  4430 ;; Defined at:
  4431 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  a               2    0[BANK0 ] int 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  2    0[BANK0 ] int 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4445 ;;      Params:         0       2       0       0       0       0
  4446 ;;      Locals:         0       0       0       0       0       0
  4447 ;;      Temps:          0       2       0       0       0       0
  4448 ;;      Totals:         0       4       0       0       0       0
  4449 ;;Total ram usage:        4 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    4
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_col_up
  4456 ;;		_col_down
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           
  4461                           ;psect for function _abs
  4462  09B6                     _abs:	
  4463  09B6                     l2540:	
  4464                           ;incstack = 0
  4465                           ; Regs used in _abs: [wreg+status,2+status,0]
  4466                           
  4467  09B6  0020               	movlb	0	; select bank0
  4468  09B7  0821               	movf	abs@a+1,w
  4469  09B8  3A80               	xorlw	128
  4470  09B9  00A2               	movwf	??_abs
  4471  09BA  3080               	movlw	128
  4472  09BB  0222               	subwf	??_abs,w
  4473  09BC  1D03               	skipz
  4474  09BD  29C0               	goto	u1975
  4475  09BE  3001               	movlw	1
  4476  09BF  0220               	subwf	abs@a,w
  4477  09C0                     u1975:	
  4478  09C0  1803               	skipnc
  4479  09C1  29C3               	goto	u1971
  4480  09C2  29C4               	goto	u1970
  4481  09C3                     u1971:	
  4482  09C3  29D1               	goto	l1313
  4483  09C4                     u1970:	
  4484  09C4                     l2542:	
  4485  09C4  0020               	movlb	0	; select bank0
  4486  09C5  0920               	comf	abs@a,w
  4487  09C6  00A2               	movwf	??_abs
  4488  09C7  0921               	comf	abs@a+1,w
  4489  09C8  00A3               	movwf	??_abs+1
  4490  09C9  0AA2               	incf	??_abs,f
  4491  09CA  1903               	skipnz
  4492  09CB  0AA3               	incf	??_abs+1,f
  4493  09CC  0822               	movf	??_abs,w
  4494  09CD  00A0               	movwf	?_abs
  4495  09CE  0823               	movf	??_abs+1,w
  4496  09CF  00A1               	movwf	?_abs+1
  4497  09D0  29D1               	goto	l1316
  4498  09D1                     l1313:	
  4499  09D1                     l1316:	
  4500  09D1  0008               	return
  4501  09D2                     __end_of_abs:	
  4502                           
  4503                           	psect	text7
  4504  0634                     __ptext7:	
  4505 ;; *************** function _controle *****************
  4506 ;; Defined at:
  4507 ;;		line 184 in file "main.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;		None
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  count           2   60[BANK0 ] int 
  4512 ;;  dutyValue       2   58[BANK0 ] int 
  4513 ;;  max_dutyValu    2   56[BANK0 ] int 
  4514 ;;  min_dutyValu    2   54[BANK0 ] int 
  4515 ;;  a               2   52[BANK0 ] int 
  4516 ;;  route           2   50[BANK0 ] int 
  4517 ;;  destiny         2   48[BANK0 ] int 
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      void 
  4520 ;; Registers used:
  4521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4527 ;;      Params:         0       0       0       0       0       0
  4528 ;;      Locals:         0      14       0       0       0       0
  4529 ;;      Temps:          0       4       0       0       0       0
  4530 ;;      Totals:         0      18       0       0       0       0
  4531 ;;Total ram usage:       18 bytes
  4532 ;; Hardware stack levels used:    1
  4533 ;; Hardware stack levels required when called:    6
  4534 ;; This function calls:
  4535 ;;		_ADC_GetConversion
  4536 ;;		_PWM3_LoadDutyValue
  4537 ;;		___flmul
  4538 ;;		___wmul
  4539 ;;		___xxtofl
  4540 ;;		_update
  4541 ;; This function is called by:
  4542 ;;		_main
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           
  4547                           ;psect for function _controle
  4548  0634                     _controle:	
  4549  0634                     l3784:	
  4550                           ;incstack = 0
  4551                           ; Regs used in _controle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4552                           
  4553                           
  4554                           ;main.c: 186:     I_m = 0.1*ADC_GetConversion(0);
  4555  0634  303D               	movlw	61
  4556  0635  0020               	movlb	0	; select bank0
  4557  0636  00B5               	movwf	___flmul@b+3
  4558  0637  30CC               	movlw	204
  4559  0638  00B4               	movwf	___flmul@b+2
  4560  0639  30CC               	movlw	204
  4561  063A  00B3               	movwf	___flmul@b+1
  4562  063B  30CD               	movlw	205
  4563  063C  00B2               	movwf	___flmul@b
  4564  063D  3000               	movlw	0
  4565  063E  318A  2213  3186   	fcall	_ADC_GetConversion
  4566  0641  0020               	movlb	0	; select bank0
  4567  0642  0820               	movf	?_ADC_GetConversion,w
  4568  0643  00CC               	movwf	??_controle
  4569  0644  0821               	movf	?_ADC_GetConversion+1,w
  4570  0645  00CD               	movwf	??_controle+1
  4571  0646  01CE               	clrf	??_controle+2
  4572  0647  01CF               	clrf	??_controle+3
  4573  0648  084F               	movf	??_controle+3,w
  4574  0649  00A7               	movwf	___xxtofl@val+3
  4575  064A  084E               	movf	??_controle+2,w
  4576  064B  00A6               	movwf	___xxtofl@val+2
  4577  064C  084D               	movf	??_controle+1,w
  4578  064D  00A5               	movwf	___xxtofl@val+1
  4579  064E  084C               	movf	??_controle,w
  4580  064F  00A4               	movwf	___xxtofl@val
  4581  0650  3000               	movlw	0
  4582  0651  318C  24FD  3186   	fcall	___xxtofl
  4583  0654  0020               	movlb	0	; select bank0
  4584  0655  0827               	movf	?___xxtofl+3,w
  4585  0656  00B9               	movwf	___flmul@a+3
  4586  0657  0826               	movf	?___xxtofl+2,w
  4587  0658  00B8               	movwf	___flmul@a+2
  4588  0659  0825               	movf	?___xxtofl+1,w
  4589  065A  00B7               	movwf	___flmul@a+1
  4590  065B  0824               	movf	?___xxtofl,w
  4591  065C  00B6               	movwf	___flmul@a
  4592  065D  3180  2053  3186   	fcall	___flmul
  4593  0660  0020               	movlb	0	; select bank0
  4594  0661  0835               	movf	?___flmul+3,w
  4595  0662  0022               	movlb	2	; select bank2
  4596  0663  00DC               	movwf	(_I_m+3)^(0+256)
  4597  0664  0020               	movlb	0	; select bank0
  4598  0665  0834               	movf	?___flmul+2,w
  4599  0666  0022               	movlb	2	; select bank2
  4600  0667  00DB               	movwf	(_I_m+2)^(0+256)
  4601  0668  0020               	movlb	0	; select bank0
  4602  0669  0833               	movf	?___flmul+1,w
  4603  066A  0022               	movlb	2	; select bank2
  4604  066B  00DA               	movwf	(_I_m+1)^(0+256)
  4605  066C  0020               	movlb	0	; select bank0
  4606  066D  0832               	movf	?___flmul,w
  4607  066E  0022               	movlb	2	; select bank2
  4608  066F  00D9               	movwf	_I_m^(0+256)
  4609                           
  4610                           ;main.c: 187:     temp_mt = 0.3*ADC_GetConversion(1);
  4611  0670  303E               	movlw	62
  4612  0671  0020               	movlb	0	; select bank0
  4613  0672  00B5               	movwf	___flmul@b+3
  4614  0673  3099               	movlw	153
  4615  0674  00B4               	movwf	___flmul@b+2
  4616  0675  3099               	movlw	153
  4617  0676  00B3               	movwf	___flmul@b+1
  4618  0677  309A               	movlw	154
  4619  0678  00B2               	movwf	___flmul@b
  4620  0679  3001               	movlw	1
  4621  067A  318A  2213  3186   	fcall	_ADC_GetConversion
  4622  067D  0020               	movlb	0	; select bank0
  4623  067E  0820               	movf	?_ADC_GetConversion,w
  4624  067F  00CC               	movwf	??_controle
  4625  0680  0821               	movf	?_ADC_GetConversion+1,w
  4626  0681  00CD               	movwf	??_controle+1
  4627  0682  01CE               	clrf	??_controle+2
  4628  0683  01CF               	clrf	??_controle+3
  4629  0684  084F               	movf	??_controle+3,w
  4630  0685  00A7               	movwf	___xxtofl@val+3
  4631  0686  084E               	movf	??_controle+2,w
  4632  0687  00A6               	movwf	___xxtofl@val+2
  4633  0688  084D               	movf	??_controle+1,w
  4634  0689  00A5               	movwf	___xxtofl@val+1
  4635  068A  084C               	movf	??_controle,w
  4636  068B  00A4               	movwf	___xxtofl@val
  4637  068C  3000               	movlw	0
  4638  068D  318C  24FD  3186   	fcall	___xxtofl
  4639  0690  0020               	movlb	0	; select bank0
  4640  0691  0827               	movf	?___xxtofl+3,w
  4641  0692  00B9               	movwf	___flmul@a+3
  4642  0693  0826               	movf	?___xxtofl+2,w
  4643  0694  00B8               	movwf	___flmul@a+2
  4644  0695  0825               	movf	?___xxtofl+1,w
  4645  0696  00B7               	movwf	___flmul@a+1
  4646  0697  0824               	movf	?___xxtofl,w
  4647  0698  00B6               	movwf	___flmul@a
  4648  0699  3180  2053  3186   	fcall	___flmul
  4649  069C  0020               	movlb	0	; select bank0
  4650  069D  0835               	movf	?___flmul+3,w
  4651  069E  0022               	movlb	2	; select bank2
  4652  069F  00D8               	movwf	(_temp_mt+3)^(0+256)
  4653  06A0  0020               	movlb	0	; select bank0
  4654  06A1  0834               	movf	?___flmul+2,w
  4655  06A2  0022               	movlb	2	; select bank2
  4656  06A3  00D7               	movwf	(_temp_mt+2)^(0+256)
  4657  06A4  0020               	movlb	0	; select bank0
  4658  06A5  0833               	movf	?___flmul+1,w
  4659  06A6  0022               	movlb	2	; select bank2
  4660  06A7  00D6               	movwf	(_temp_mt+1)^(0+256)
  4661  06A8  0020               	movlb	0	; select bank0
  4662  06A9  0832               	movf	?___flmul,w
  4663  06AA  0022               	movlb	2	; select bank2
  4664  06AB  00D5               	movwf	_temp_mt^(0+256)
  4665  06AC                     l3786:	
  4666  06AC                     l3788:	
  4667                           
  4668                           ;main.c: 189:     int a = 52;
  4669  06AC  3034               	movlw	52
  4670  06AD  0020               	movlb	0	; select bank0
  4671  06AE  00D4               	movwf	controle@a
  4672  06AF  3000               	movlw	0
  4673  06B0  00D5               	movwf	controle@a+1
  4674  06B1                     l3790:	
  4675                           
  4676                           ;main.c: 190:     int max_dutyValue = 1023;
  4677  06B1  30FF               	movlw	255
  4678  06B2  00D8               	movwf	controle@max_dutyValue
  4679  06B3  3003               	movlw	3
  4680  06B4  00D9               	movwf	controle@max_dutyValue+1
  4681  06B5                     l3792:	
  4682                           
  4683                           ;main.c: 191:     int min_dutyValue = 256;
  4684  06B5  3000               	movlw	0
  4685  06B6  00D6               	movwf	controle@min_dutyValue
  4686  06B7  3001               	movlw	1
  4687  06B8  00D7               	movwf	controle@min_dutyValue+1
  4688  06B9                     l3794:	
  4689                           
  4690                           ;main.c: 192:     int destiny = distancia*60;
  4691  06B9  0021               	movlb	1	; select bank1
  4692  06BA  0851               	movf	(_distancia+1)^(0+128),w
  4693  06BB  0020               	movlb	0	; select bank0
  4694  06BC  00A1               	movwf	___wmul@multiplier+1
  4695  06BD  0021               	movlb	1	; select bank1
  4696  06BE  0850               	movf	_distancia^(0+128),w
  4697  06BF  0020               	movlb	0	; select bank0
  4698  06C0  00A0               	movwf	___wmul@multiplier
  4699  06C1  303C               	movlw	60
  4700  06C2  00A2               	movwf	___wmul@multiplicand
  4701  06C3  3000               	movlw	0
  4702  06C4  00A3               	movwf	___wmul@multiplicand+1
  4703  06C5  3189  21D2  3186   	fcall	___wmul
  4704  06C8  0020               	movlb	0	; select bank0
  4705  06C9  0821               	movf	?___wmul+1,w
  4706  06CA  00D1               	movwf	controle@destiny+1
  4707  06CB  0820               	movf	?___wmul,w
  4708  06CC  00D0               	movwf	controle@destiny
  4709  06CD                     l3796:	
  4710                           
  4711                           ;main.c: 193:     int route = destiny - 40;
  4712  06CD  0850               	movf	controle@destiny,w
  4713  06CE  3ED8               	addlw	216
  4714  06CF  00D2               	movwf	controle@route
  4715  06D0  30FF               	movlw	255
  4716  06D1  3D51               	addwfc	controle@destiny+1,w
  4717  06D2  00D3               	movwf	controle@route+1
  4718  06D3                     l3798:	
  4719                           
  4720                           ;main.c: 194:     int dutyValue = 0;
  4721  06D3  01DA               	clrf	controle@dutyValue
  4722  06D4  01DB               	clrf	controle@dutyValue+1
  4723  06D5                     l3800:	
  4724                           
  4725                           ;main.c: 197:     for(count = 0; count < 20; count++){
  4726  06D5  01DC               	clrf	controle@count
  4727  06D6  01DD               	clrf	controle@count+1
  4728  06D7                     l3806:	
  4729                           
  4730                           ;main.c: 199:         dutyValue+=a;
  4731  06D7  0020               	movlb	0	; select bank0
  4732  06D8  0854               	movf	controle@a,w
  4733  06D9  07DA               	addwf	controle@dutyValue,f
  4734  06DA  0855               	movf	controle@a+1,w
  4735  06DB  3DDB               	addwfc	controle@dutyValue+1,f
  4736                           
  4737                           ;main.c: 200:         if(dutyValue > max_dutyValue){
  4738  06DC  0859               	movf	controle@max_dutyValue+1,w
  4739  06DD  3A80               	xorlw	128
  4740  06DE  00CC               	movwf	??_controle
  4741  06DF  085B               	movf	controle@dutyValue+1,w
  4742  06E0  3A80               	xorlw	128
  4743  06E1  024C               	subwf	??_controle,w
  4744  06E2  1D03               	skipz
  4745  06E3  2EE6               	goto	u4085
  4746  06E4  085A               	movf	controle@dutyValue,w
  4747  06E5  0258               	subwf	controle@max_dutyValue,w
  4748  06E6                     u4085:	
  4749  06E6  1803               	skipnc
  4750  06E7  2EE9               	goto	u4081
  4751  06E8  2EEA               	goto	u4080
  4752  06E9                     u4081:	
  4753  06E9  2EF3               	goto	l3810
  4754  06EA                     u4080:	
  4755  06EA                     l3808:	
  4756                           
  4757                           ;main.c: 201:             PWM3_LoadDutyValue(max_dutyValue);
  4758  06EA  0020               	movlb	0	; select bank0
  4759  06EB  0859               	movf	controle@max_dutyValue+1,w
  4760  06EC  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4761  06ED  0858               	movf	controle@max_dutyValue,w
  4762  06EE  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4763  06EF  3189  219A  3186   	fcall	_PWM3_LoadDutyValue
  4764                           
  4765                           ;main.c: 202:         }else{
  4766  06F2  2EFB               	goto	l3812
  4767  06F3                     l3810:	
  4768                           
  4769                           ;main.c: 203:             PWM3_LoadDutyValue(dutyValue);
  4770  06F3  0020               	movlb	0	; select bank0
  4771  06F4  085B               	movf	controle@dutyValue+1,w
  4772  06F5  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4773  06F6  085A               	movf	controle@dutyValue,w
  4774  06F7  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4775  06F8  3189  219A  3186   	fcall	_PWM3_LoadDutyValue
  4776  06FB                     l3812:	
  4777                           
  4778                           ;main.c: 206:     }
  4779  06FB  3001               	movlw	1
  4780  06FC  0020               	movlb	0	; select bank0
  4781  06FD  07DC               	addwf	controle@count,f
  4782  06FE  3000               	movlw	0
  4783  06FF  3DDD               	addwfc	controle@count+1,f
  4784  0700                     l3814:	
  4785  0700  085D               	movf	controle@count+1,w
  4786  0701  3A80               	xorlw	128
  4787  0702  00CC               	movwf	??_controle
  4788  0703  3080               	movlw	128
  4789  0704  024C               	subwf	??_controle,w
  4790  0705  1D03               	skipz
  4791  0706  2F09               	goto	u4095
  4792  0707  3014               	movlw	20
  4793  0708  025C               	subwf	controle@count,w
  4794  0709                     u4095:	
  4795  0709  1C03               	skipc
  4796  070A  2F0C               	goto	u4091
  4797  070B  2F0D               	goto	u4090
  4798  070C                     u4091:	
  4799  070C  2ED7               	goto	l3806
  4800  070D                     u4090:	
  4801  070D                     l3816:	
  4802                           
  4803                           ;main.c: 207:     count = 0;
  4804  070D  0020               	movlb	0	; select bank0
  4805  070E  01DC               	clrf	controle@count
  4806  070F  01DD               	clrf	controle@count+1
  4807                           
  4808                           ;main.c: 208:     for(count = 0; count < route ; count++){
  4809  0710  01DC               	clrf	controle@count
  4810  0711  01DD               	clrf	controle@count+1
  4811  0712  2F20               	goto	l3822
  4812  0713                     l3818:	
  4813                           
  4814                           ;main.c: 210:         PWM3_LoadDutyValue(max_dutyValue);
  4815  0713  0020               	movlb	0	; select bank0
  4816  0714  0859               	movf	controle@max_dutyValue+1,w
  4817  0715  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4818  0716  0858               	movf	controle@max_dutyValue,w
  4819  0717  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4820  0718  3189  219A  3186   	fcall	_PWM3_LoadDutyValue
  4821  071B                     l3820:	
  4822                           
  4823                           ;main.c: 211:     }
  4824  071B  3001               	movlw	1
  4825  071C  0020               	movlb	0	; select bank0
  4826  071D  07DC               	addwf	controle@count,f
  4827  071E  3000               	movlw	0
  4828  071F  3DDD               	addwfc	controle@count+1,f
  4829  0720                     l3822:	
  4830  0720  085D               	movf	controle@count+1,w
  4831  0721  3A80               	xorlw	128
  4832  0722  00CC               	movwf	??_controle
  4833  0723  0853               	movf	controle@route+1,w
  4834  0724  3A80               	xorlw	128
  4835  0725  024C               	subwf	??_controle,w
  4836  0726  1D03               	skipz
  4837  0727  2F2A               	goto	u4105
  4838  0728  0852               	movf	controle@route,w
  4839  0729  025C               	subwf	controle@count,w
  4840  072A                     u4105:	
  4841  072A  1C03               	skipc
  4842  072B  2F2D               	goto	u4101
  4843  072C  2F2E               	goto	u4100
  4844  072D                     u4101:	
  4845  072D  2F13               	goto	l3818
  4846  072E                     u4100:	
  4847  072E                     l3824:	
  4848                           
  4849                           ;main.c: 213:     count = 0;
  4850  072E  0020               	movlb	0	; select bank0
  4851  072F  01DC               	clrf	controle@count
  4852  0730  01DD               	clrf	controle@count+1
  4853                           
  4854                           ;main.c: 214:     for(count = 0; count < 20; count++){
  4855  0731  01DC               	clrf	controle@count
  4856  0732  01DD               	clrf	controle@count+1
  4857  0733                     l3830:	
  4858                           
  4859                           ;main.c: 216:         dutyValue-=a;
  4860  0733  0020               	movlb	0	; select bank0
  4861  0734  0854               	movf	controle@a,w
  4862  0735  02DA               	subwf	controle@dutyValue,f
  4863  0736  0855               	movf	controle@a+1,w
  4864  0737  3BDB               	subwfb	controle@dutyValue+1,f
  4865                           
  4866                           ;main.c: 217:         if(dutyValue < min_dutyValue){
  4867  0738  085B               	movf	controle@dutyValue+1,w
  4868  0739  3A80               	xorlw	128
  4869  073A  00CC               	movwf	??_controle
  4870  073B  0857               	movf	controle@min_dutyValue+1,w
  4871  073C  3A80               	xorlw	128
  4872  073D  024C               	subwf	??_controle,w
  4873  073E  1D03               	skipz
  4874  073F  2F42               	goto	u4115
  4875  0740  0856               	movf	controle@min_dutyValue,w
  4876  0741  025A               	subwf	controle@dutyValue,w
  4877  0742                     u4115:	
  4878  0742  1803               	skipnc
  4879  0743  2F45               	goto	u4111
  4880  0744  2F46               	goto	u4110
  4881  0745                     u4111:	
  4882  0745  2F4F               	goto	l3834
  4883  0746                     u4110:	
  4884  0746                     l3832:	
  4885                           
  4886                           ;main.c: 218:             PWM3_LoadDutyValue(min_dutyValue);
  4887  0746  0020               	movlb	0	; select bank0
  4888  0747  0857               	movf	controle@min_dutyValue+1,w
  4889  0748  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4890  0749  0856               	movf	controle@min_dutyValue,w
  4891  074A  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4892  074B  3189  219A  3186   	fcall	_PWM3_LoadDutyValue
  4893                           
  4894                           ;main.c: 219:         }else{
  4895  074E  2F57               	goto	l3836
  4896  074F                     l3834:	
  4897                           
  4898                           ;main.c: 220:         PWM3_LoadDutyValue(dutyValue);
  4899  074F  0020               	movlb	0	; select bank0
  4900  0750  085B               	movf	controle@dutyValue+1,w
  4901  0751  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4902  0752  085A               	movf	controle@dutyValue,w
  4903  0753  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4904  0754  3189  219A  3186   	fcall	_PWM3_LoadDutyValue
  4905  0757                     l3836:	
  4906                           
  4907                           ;main.c: 222:     }
  4908  0757  3001               	movlw	1
  4909  0758  0020               	movlb	0	; select bank0
  4910  0759  07DC               	addwf	controle@count,f
  4911  075A  3000               	movlw	0
  4912  075B  3DDD               	addwfc	controle@count+1,f
  4913  075C                     l3838:	
  4914  075C  085D               	movf	controle@count+1,w
  4915  075D  3A80               	xorlw	128
  4916  075E  00CC               	movwf	??_controle
  4917  075F  3080               	movlw	128
  4918  0760  024C               	subwf	??_controle,w
  4919  0761  1D03               	skipz
  4920  0762  2F65               	goto	u4125
  4921  0763  3014               	movlw	20
  4922  0764  025C               	subwf	controle@count,w
  4923  0765                     u4125:	
  4924  0765  1C03               	skipc
  4925  0766  2F68               	goto	u4121
  4926  0767  2F69               	goto	u4120
  4927  0768                     u4121:	
  4928  0768  2F33               	goto	l3830
  4929  0769                     u4120:	
  4930  0769                     l3840:	
  4931                           
  4932                           ;main.c: 223:     update();
  4933  0769  3182  22AA  3186   	fcall	_update
  4934  076C                     l3842:	
  4935                           
  4936                           ;main.c: 225:     PWM3_LoadDutyValue(0);
  4937  076C  3000               	movlw	0
  4938  076D  0020               	movlb	0	; select bank0
  4939  076E  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4940  076F  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4941  0770  3189  219A  3186   	fcall	_PWM3_LoadDutyValue
  4942  0773                     l624:	
  4943  0773  0008               	return
  4944  0774                     __end_of_controle:	
  4945                           
  4946                           	psect	text8
  4947  02AA                     __ptext8:	
  4948 ;; *************** function _update *****************
  4949 ;; Defined at:
  4950 ;;		line 468 in file "main.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;  i               2    8[BANK0 ] int 
  4955 ;;  i               2    6[BANK0 ] int 
  4956 ;;  i               2    4[BANK0 ] int 
  4957 ;;  aux             1    3[BANK0 ] unsigned char 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4967 ;;      Params:         0       0       0       0       0       0
  4968 ;;      Locals:         0       7       0       0       0       0
  4969 ;;      Temps:          0       3       0       0       0       0
  4970 ;;      Totals:         0      10       0       0       0       0
  4971 ;;Total ram usage:       10 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    5
  4974 ;; This function calls:
  4975 ;;		_EUSART_Read
  4976 ;;		_EUSART_is_rx_ready
  4977 ;; This function is called by:
  4978 ;;		_controle
  4979 ;;		_gerenciamento
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           
  4984                           ;psect for function _update
  4985  02AA                     _update:	
  4986  02AA                     l3656:	
  4987                           ;incstack = 0
  4988                           ; Regs used in _update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4989                           
  4990                           
  4991                           ;main.c: 470:     uint8_t aux;;main.c: 471:     if(EUSART_is_rx_ready())
  4992  02AA  3188  2036  3182   	fcall	_EUSART_is_rx_ready
  4993  02AD  3A00               	xorlw	0
  4994  02AE  1903               	skipnz
  4995  02AF  2AB1               	goto	u3821
  4996  02B0  2AB2               	goto	u3820
  4997  02B1                     u3821:	
  4998  02B1  2AD3               	goto	l3664
  4999  02B2                     u3820:	
  5000  02B2                     l3658:	
  5001                           
  5002                           ;main.c: 472:         {;main.c: 473:             aux= EUSART_Read();
  5003  02B2  3189  213E  3182   	fcall	_EUSART_Read
  5004  02B5  0020               	movlb	0	; select bank0
  5005  02B6  00A0               	movwf	??_update
  5006  02B7  0820               	movf	??_update,w
  5007  02B8  00A3               	movwf	update@aux
  5008  02B9                     l3660:	
  5009                           
  5010                           ;main.c: 474:             and_origem = (int)((aux & 0x0C)>>2);
  5011  02B9  0823               	movf	update@aux,w
  5012  02BA  00A0               	movwf	??_update
  5013  02BB  3002               	movlw	2
  5014  02BC                     u3835:	
  5015  02BC  36A0               	lsrf	??_update,f
  5016  02BD  0B89               	decfsz	9,f
  5017  02BE  2ABC               	goto	u3835
  5018  02BF  0820               	movf	??_update,w
  5019  02C0  3903               	andlw	3
  5020  02C1  00A1               	movwf	??_update+1
  5021  02C2  01A2               	clrf	??_update+2
  5022  02C3  0821               	movf	??_update+1,w
  5023  02C4  0021               	movlb	1	; select bank1
  5024  02C5  00DA               	movwf	_and_origem^(0+128)
  5025  02C6  0020               	movlb	0	; select bank0
  5026  02C7  0822               	movf	??_update+2,w
  5027  02C8  0021               	movlb	1	; select bank1
  5028  02C9  00DB               	movwf	(_and_origem+1)^(0+128)
  5029  02CA                     l3662:	
  5030                           
  5031                           ;main.c: 475:             and_dst = (int)(aux & 0x02);
  5032  02CA  0020               	movlb	0	; select bank0
  5033  02CB  0823               	movf	update@aux,w
  5034  02CC  3902               	andlw	2
  5035  02CD  00A0               	movwf	??_update
  5036  02CE  01A1               	clrf	??_update+1
  5037  02CF  0820               	movf	??_update,w
  5038  02D0  00F4               	movwf	_and_dst
  5039  02D1  0821               	movf	??_update+1,w
  5040  02D2  00F5               	movwf	_and_dst+1
  5041  02D3                     l3664:	
  5042                           
  5043                           ;main.c: 478:     if(and_dst>and_origem)
  5044  02D3  0021               	movlb	1	; select bank1
  5045  02D4  085B               	movf	(_and_origem+1)^(0+128),w
  5046  02D5  3A80               	xorlw	128
  5047  02D6  0020               	movlb	0	; select bank0
  5048  02D7  00A0               	movwf	??_update
  5049  02D8  0875               	movf	_and_dst+1,w
  5050  02D9  3A80               	xorlw	128
  5051  02DA  0220               	subwf	??_update,w
  5052  02DB  1D03               	skipz
  5053  02DC  2AE0               	goto	u3845
  5054  02DD  0874               	movf	_and_dst,w
  5055  02DE  0021               	movlb	1	; select bank1
  5056  02DF  025A               	subwf	_and_origem^(0+128),w
  5057  02E0                     u3845:	
  5058  02E0  1803               	skipnc
  5059  02E1  2AE3               	goto	u3841
  5060  02E2  2AE4               	goto	u3840
  5061  02E3                     u3841:	
  5062  02E3  2B59               	goto	l3700
  5063  02E4                     u3840:	
  5064  02E4                     l3666:	
  5065  02E4                     l3668:	
  5066                           
  5067                           ;main.c: 481:       for(i=8;i>=0;i--)
  5068  02E4  3008               	movlw	8
  5069  02E5  0020               	movlb	0	; select bank0
  5070  02E6  00A6               	movwf	update@i
  5071  02E7  3000               	movlw	0
  5072  02E8  00A7               	movwf	update@i+1
  5073  02E9                     l3674:	
  5074                           
  5075                           ;main.c: 482:       {;main.c: 483:           if(i==0){
  5076  02E9  0826               	movf	update@i,w
  5077  02EA  0427               	iorwf	update@i+1,w
  5078  02EB  1D03               	btfss	3,2
  5079  02EC  2AEE               	goto	u3851
  5080  02ED  2AEF               	goto	u3850
  5081  02EE                     u3851:	
  5082  02EE  2AF8               	goto	l687
  5083  02EF                     u3850:	
  5084  02EF                     l3676:	
  5085                           
  5086                           ;main.c: 484:               fila_up[1] = fila_up[0];
  5087  02EF  0021               	movlb	1	; select bank1
  5088  02F0  0835               	movf	(_fila_up+1)^(0+128),w
  5089  02F1  00B7               	movwf	((_fila_up+1)^(0+128)+2)
  5090  02F2  0834               	movf	_fila_up^(0+128),w
  5091  02F3  00B6               	movwf	(_fila_up^(0+128)+2)
  5092                           
  5093                           ;main.c: 485:               fila_up[0] = and_dst;
  5094  02F4  0875               	movf	_and_dst+1,w
  5095  02F5  00B5               	movwf	(_fila_up+1)^(0+128)
  5096  02F6  0874               	movf	_and_dst,w
  5097  02F7  00B4               	movwf	_fila_up^(0+128)
  5098  02F8                     l687:	
  5099                           ;main.c: 487:           }
  5100                           
  5101                           
  5102                           ;main.c: 488:           if(i>0){
  5103  02F8  0020               	movlb	0	; select bank0
  5104  02F9  0827               	movf	update@i+1,w
  5105  02FA  3A80               	xorlw	128
  5106  02FB  00A0               	movwf	??_update
  5107  02FC  3080               	movlw	128
  5108  02FD  0220               	subwf	??_update,w
  5109  02FE  1D03               	skipz
  5110  02FF  2B02               	goto	u3865
  5111  0300  3001               	movlw	1
  5112  0301  0226               	subwf	update@i,w
  5113  0302                     u3865:	
  5114  0302  1C03               	skipc
  5115  0303  2B05               	goto	u3861
  5116  0304  2B06               	goto	u3860
  5117  0305                     u3861:	
  5118  0305  2B13               	goto	l3680
  5119  0306                     u3860:	
  5120  0306                     l3678:	
  5121                           
  5122                           ;main.c: 489:               fila_up[i+1] = fila_up[i];
  5123  0306  0020               	movlb	0	; select bank0
  5124  0307  3526               	lslf	update@i,w
  5125  0308  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  5126  0309  0086               	movwf	6
  5127  030A  0187               	clrf	7
  5128  030B  3526               	lslf	update@i,w
  5129  030C  3EB6               	addlw	(low ((_fila_up| 0+2)))& (0+255)
  5130  030D  0084               	movwf	4
  5131  030E  0185               	clrf	5
  5132  030F  3F40               	moviw [0]fsr1
  5133  0310  3F80               	movwi [0]fsr0
  5134  0311  3F41               	moviw [1]fsr1
  5135  0312  3F81               	movwi [1]fsr0
  5136  0313                     l3680:	
  5137                           
  5138                           ;main.c: 491:       }
  5139  0313  30FF               	movlw	255
  5140  0314  0020               	movlb	0	; select bank0
  5141  0315  07A6               	addwf	update@i,f
  5142  0316  30FF               	movlw	255
  5143  0317  3DA7               	addwfc	update@i+1,f
  5144  0318                     l3682:	
  5145  0318  1FA7               	btfss	update@i+1,7
  5146  0319  2B1B               	goto	u3871
  5147  031A  2B1C               	goto	u3870
  5148  031B                     u3871:	
  5149  031B  2AE9               	goto	l3674
  5150  031C                     u3870:	
  5151  031C                     l3684:	
  5152                           
  5153                           ;main.c: 493:       for(i=8;i>=0;i--)
  5154  031C  3008               	movlw	8
  5155  031D  00A6               	movwf	update@i
  5156  031E  3000               	movlw	0
  5157  031F  00A7               	movwf	update@i+1
  5158  0320                     l3690:	
  5159                           
  5160                           ;main.c: 494:       {;main.c: 495:           if(i==0){
  5161  0320  0826               	movf	update@i,w
  5162  0321  0427               	iorwf	update@i+1,w
  5163  0322  1D03               	btfss	3,2
  5164  0323  2B25               	goto	u3881
  5165  0324  2B26               	goto	u3880
  5166  0325                     u3881:	
  5167  0325  2B33               	goto	l691
  5168  0326                     u3880:	
  5169  0326                     l3692:	
  5170                           
  5171                           ;main.c: 496:               origem_up[1] = origem_up[0];
  5172  0326  0022               	movlb	2	; select bank2
  5173  0327  0821               	movf	(_origem_up+1)^(0+256),w
  5174  0328  00A3               	movwf	((_origem_up+1)^(0+256)+2)
  5175  0329  0820               	movf	_origem_up^(0+256),w
  5176  032A  00A2               	movwf	(_origem_up^(0+256)+2)
  5177                           
  5178                           ;main.c: 497:               origem_up[0] = and_origem;
  5179  032B  0021               	movlb	1	; select bank1
  5180  032C  085B               	movf	(_and_origem+1)^(0+128),w
  5181  032D  0022               	movlb	2	; select bank2
  5182  032E  00A1               	movwf	(_origem_up+1)^(0+256)
  5183  032F  0021               	movlb	1	; select bank1
  5184  0330  085A               	movf	_and_origem^(0+128),w
  5185  0331  0022               	movlb	2	; select bank2
  5186  0332  00A0               	movwf	_origem_up^(0+256)
  5187  0333                     l691:	
  5188                           ;main.c: 499:           }
  5189                           
  5190                           
  5191                           ;main.c: 500:           if(i>0){
  5192  0333  0020               	movlb	0	; select bank0
  5193  0334  0827               	movf	update@i+1,w
  5194  0335  3A80               	xorlw	128
  5195  0336  00A0               	movwf	??_update
  5196  0337  3080               	movlw	128
  5197  0338  0220               	subwf	??_update,w
  5198  0339  1D03               	skipz
  5199  033A  2B3D               	goto	u3895
  5200  033B  3001               	movlw	1
  5201  033C  0226               	subwf	update@i,w
  5202  033D                     u3895:	
  5203  033D  1C03               	skipc
  5204  033E  2B40               	goto	u3891
  5205  033F  2B41               	goto	u3890
  5206  0340                     u3891:	
  5207  0340  2B50               	goto	l3696
  5208  0341                     u3890:	
  5209  0341                     l3694:	
  5210                           
  5211                           ;main.c: 501:               origem_up[i+1] = origem_up[i];
  5212  0341  0020               	movlb	0	; select bank0
  5213  0342  3526               	lslf	update@i,w
  5214  0343  3E20               	addlw	(low (_origem_up| (0+256)))& (0+255)
  5215  0344  0086               	movwf	6
  5216  0345  3001               	movlw	1	; select bank2/3
  5217  0346  0087               	movwf	7
  5218  0347  3526               	lslf	update@i,w
  5219  0348  3E22               	addlw	(low ((_origem_up| (0+256)+2)))& (0+255)
  5220  0349  0084               	movwf	4
  5221  034A  3001               	movlw	1	; select bank2/3
  5222  034B  0085               	movwf	5
  5223  034C  3F40               	moviw [0]fsr1
  5224  034D  3F80               	movwi [0]fsr0
  5225  034E  3F41               	moviw [1]fsr1
  5226  034F  3F81               	movwi [1]fsr0
  5227  0350                     l3696:	
  5228                           
  5229                           ;main.c: 503:       }
  5230  0350  30FF               	movlw	255
  5231  0351  0020               	movlb	0	; select bank0
  5232  0352  07A6               	addwf	update@i,f
  5233  0353  30FF               	movlw	255
  5234  0354  3DA7               	addwfc	update@i+1,f
  5235  0355                     l3698:	
  5236  0355  1FA7               	btfss	update@i+1,7
  5237  0356  2B58               	goto	u3901
  5238  0357  2B59               	goto	u3900
  5239  0358                     u3901:	
  5240  0358  2B20               	goto	l3690
  5241  0359                     u3900:	
  5242  0359                     l3700:	
  5243                           
  5244                           ;main.c: 506:     int i;;main.c: 507:     max_fila_up = fila_up[0];
  5245  0359  0021               	movlb	1	; select bank1
  5246  035A  0835               	movf	(_fila_up+1)^(0+128),w
  5247  035B  00CF               	movwf	(_max_fila_up+1)^(0+128)
  5248  035C  0834               	movf	_fila_up^(0+128),w
  5249  035D  00CE               	movwf	_max_fila_up^(0+128)
  5250                           
  5251                           ;main.c: 508:     for(i=1;i<=9;i++)
  5252  035E  3001               	movlw	1
  5253  035F  0020               	movlb	0	; select bank0
  5254  0360  00A4               	movwf	update@i_1261
  5255  0361  3000               	movlw	0
  5256  0362  00A5               	movwf	update@i_1261+1
  5257  0363                     l3704:	
  5258                           
  5259                           ;main.c: 509:     {;main.c: 510:             if(fila_up[i]>max_fila_up)
  5260  0363  0020               	movlb	0	; select bank0
  5261  0364  3524               	lslf	update@i_1261,w
  5262  0365  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  5263  0366  0086               	movwf	6
  5264  0367  0187               	clrf	7
  5265  0368  3F40               	moviw [0]fsr1
  5266  0369  00A0               	movwf	??_update
  5267  036A  3F41               	moviw [1]fsr1
  5268  036B  00A1               	movwf	??_update+1
  5269  036C  0021               	movlb	1	; select bank1
  5270  036D  084F               	movf	(_max_fila_up+1)^(0+128),w
  5271  036E  3A80               	xorlw	128
  5272  036F  0020               	movlb	0	; select bank0
  5273  0370  00A2               	movwf	??_update+2
  5274  0371  0821               	movf	??_update+1,w
  5275  0372  3A80               	xorlw	128
  5276  0373  0222               	subwf	??_update+2,w
  5277  0374  1D03               	skipz
  5278  0375  2B79               	goto	u3915
  5279  0376  0820               	movf	??_update,w
  5280  0377  0021               	movlb	1	; select bank1
  5281  0378  024E               	subwf	_max_fila_up^(0+128),w
  5282  0379                     u3915:	
  5283  0379  1803               	skipnc
  5284  037A  2B7C               	goto	u3911
  5285  037B  2B7D               	goto	u3910
  5286  037C                     u3911:	
  5287  037C  2B87               	goto	l3708
  5288  037D                     u3910:	
  5289  037D                     l3706:	
  5290                           
  5291                           ;main.c: 511:             {;main.c: 512:                 max_fila_up = fila_up[i];
  5292  037D  0020               	movlb	0	; select bank0
  5293  037E  3524               	lslf	update@i_1261,w
  5294  037F  3EB4               	addlw	(low (_fila_up| 0))& (0+255)
  5295  0380  0086               	movwf	6
  5296  0381  0187               	clrf	7
  5297  0382  3F40               	moviw [0]fsr1
  5298  0383  0021               	movlb	1	; select bank1
  5299  0384  00CE               	movwf	_max_fila_up^(0+128)
  5300  0385  3F41               	moviw [1]fsr1
  5301  0386  00CF               	movwf	(_max_fila_up+1)^(0+128)
  5302  0387                     l3708:	
  5303                           
  5304                           ;main.c: 514:     }
  5305  0387  3001               	movlw	1
  5306  0388  0020               	movlb	0	; select bank0
  5307  0389  07A4               	addwf	update@i_1261,f
  5308  038A  3000               	movlw	0
  5309  038B  3DA5               	addwfc	update@i_1261+1,f
  5310  038C                     l3710:	
  5311  038C  0825               	movf	update@i_1261+1,w
  5312  038D  3A80               	xorlw	128
  5313  038E  00A0               	movwf	??_update
  5314  038F  3080               	movlw	128
  5315  0390  0220               	subwf	??_update,w
  5316  0391  1D03               	skipz
  5317  0392  2B95               	goto	u3925
  5318  0393  300A               	movlw	10
  5319  0394  0224               	subwf	update@i_1261,w
  5320  0395                     u3925:	
  5321  0395  1C03               	skipc
  5322  0396  2B98               	goto	u3921
  5323  0397  2B99               	goto	u3920
  5324  0398                     u3921:	
  5325  0398  2B63               	goto	l3704
  5326  0399                     u3920:	
  5327  0399                     l3712:	
  5328                           
  5329                           ;main.c: 515:     if(max_fila_up==0)
  5330  0399  0021               	movlb	1	; select bank1
  5331  039A  084E               	movf	_max_fila_up^(0+128),w
  5332  039B  044F               	iorwf	(_max_fila_up+1)^(0+128),w
  5333  039C  1D03               	btfss	3,2
  5334  039D  2B9F               	goto	u3931
  5335  039E  2BA0               	goto	u3930
  5336  039F                     u3931:	
  5337  039F  2BA4               	goto	l696
  5338  03A0                     u3930:	
  5339  03A0                     l3714:	
  5340                           
  5341                           ;main.c: 516:     {;main.c: 517:         max_fila_up=1;
  5342  03A0  3001               	movlw	1
  5343  03A1  00CE               	movwf	_max_fila_up^(0+128)
  5344  03A2  3000               	movlw	0
  5345  03A3  00CF               	movwf	(_max_fila_up^(0+128)+1)
  5346  03A4                     l696:	
  5347                           ;main.c: 518:     }
  5348                           
  5349                           
  5350                           ;main.c: 520:     if(and_dst<and_origem)
  5351  03A4  0875               	movf	_and_dst+1,w
  5352  03A5  3A80               	xorlw	128
  5353  03A6  0020               	movlb	0	; select bank0
  5354  03A7  00A0               	movwf	??_update
  5355  03A8  0021               	movlb	1	; select bank1
  5356  03A9  085B               	movf	(_and_origem+1)^(0+128),w
  5357  03AA  3A80               	xorlw	128
  5358  03AB  0020               	movlb	0	; select bank0
  5359  03AC  0220               	subwf	??_update,w
  5360  03AD  1D03               	skipz
  5361  03AE  2BB2               	goto	u3945
  5362  03AF  0021               	movlb	1	; select bank1
  5363  03B0  085A               	movf	_and_origem^(0+128),w
  5364  03B1  0274               	subwf	_and_dst,w
  5365  03B2                     u3945:	
  5366  03B2  1803               	skipnc
  5367  03B3  2BB5               	goto	u3941
  5368  03B4  2BB6               	goto	u3940
  5369  03B5                     u3941:	
  5370  03B5  2C27               	goto	l3750
  5371  03B6                     u3940:	
  5372  03B6                     l3716:	
  5373  03B6                     l3718:	
  5374                           
  5375                           ;main.c: 523:       for(i=8;i>=0;i--)
  5376  03B6  3008               	movlw	8
  5377  03B7  0020               	movlb	0	; select bank0
  5378  03B8  00A8               	movwf	update@i_1262
  5379  03B9  3000               	movlw	0
  5380  03BA  00A9               	movwf	update@i_1262+1
  5381  03BB                     l3724:	
  5382                           
  5383                           ;main.c: 524:       {;main.c: 525:           if(i==0){
  5384  03BB  0828               	movf	update@i_1262,w
  5385  03BC  0429               	iorwf	update@i_1262+1,w
  5386  03BD  1D03               	btfss	3,2
  5387  03BE  2BC0               	goto	u3951
  5388  03BF  2BC1               	goto	u3950
  5389  03C0                     u3951:	
  5390  03C0  2BCA               	goto	l700
  5391  03C1                     u3950:	
  5392  03C1                     l3726:	
  5393                           
  5394                           ;main.c: 526:               fila_down[1] = fila_down[0];
  5395  03C1  0022               	movlb	2	; select bank2
  5396  03C2  0835               	movf	(_fila_down+1)^(0+256),w
  5397  03C3  00B7               	movwf	((_fila_down+1)^(0+256)+2)
  5398  03C4  0834               	movf	_fila_down^(0+256),w
  5399  03C5  00B6               	movwf	(_fila_down^(0+256)+2)
  5400                           
  5401                           ;main.c: 527:               fila_down[0] = and_dst;
  5402  03C6  0875               	movf	_and_dst+1,w
  5403  03C7  00B5               	movwf	(_fila_down+1)^(0+256)
  5404  03C8  0874               	movf	_and_dst,w
  5405  03C9  00B4               	movwf	_fila_down^(0+256)
  5406  03CA                     l700:	
  5407                           ;main.c: 529:           }
  5408                           
  5409                           
  5410                           ;main.c: 530:           if(i>0){
  5411  03CA  0020               	movlb	0	; select bank0
  5412  03CB  0829               	movf	update@i_1262+1,w
  5413  03CC  3A80               	xorlw	128
  5414  03CD  00A0               	movwf	??_update
  5415  03CE  3080               	movlw	128
  5416  03CF  0220               	subwf	??_update,w
  5417  03D0  1D03               	skipz
  5418  03D1  2BD4               	goto	u3965
  5419  03D2  3001               	movlw	1
  5420  03D3  0228               	subwf	update@i_1262,w
  5421  03D4                     u3965:	
  5422  03D4  1C03               	skipc
  5423  03D5  2BD7               	goto	u3961
  5424  03D6  2BD8               	goto	u3960
  5425  03D7                     u3961:	
  5426  03D7  2BE7               	goto	l3730
  5427  03D8                     u3960:	
  5428  03D8                     l3728:	
  5429                           
  5430                           ;main.c: 531:               fila_down[i+1] = fila_down[i];
  5431  03D8  0020               	movlb	0	; select bank0
  5432  03D9  3528               	lslf	update@i_1262,w
  5433  03DA  3E34               	addlw	(low (_fila_down| (0+256)))& (0+255)
  5434  03DB  0086               	movwf	6
  5435  03DC  3001               	movlw	1	; select bank2/3
  5436  03DD  0087               	movwf	7
  5437  03DE  3528               	lslf	update@i_1262,w
  5438  03DF  3E36               	addlw	(low ((_fila_down| (0+256)+2)))& (0+255)
  5439  03E0  0084               	movwf	4
  5440  03E1  3001               	movlw	1	; select bank2/3
  5441  03E2  0085               	movwf	5
  5442  03E3  3F40               	moviw [0]fsr1
  5443  03E4  3F80               	movwi [0]fsr0
  5444  03E5  3F41               	moviw [1]fsr1
  5445  03E6  3F81               	movwi [1]fsr0
  5446  03E7                     l3730:	
  5447                           
  5448                           ;main.c: 533:       }
  5449  03E7  30FF               	movlw	255
  5450  03E8  0020               	movlb	0	; select bank0
  5451  03E9  07A8               	addwf	update@i_1262,f
  5452  03EA  30FF               	movlw	255
  5453  03EB  3DA9               	addwfc	update@i_1262+1,f
  5454  03EC                     l3732:	
  5455  03EC  1FA9               	btfss	update@i_1262+1,7
  5456  03ED  2BEF               	goto	u3971
  5457  03EE  2BF0               	goto	u3970
  5458  03EF                     u3971:	
  5459  03EF  2BBB               	goto	l3724
  5460  03F0                     u3970:	
  5461  03F0                     l3734:	
  5462                           
  5463                           ;main.c: 535:       for(i=8;i>=0;i--)
  5464  03F0  3008               	movlw	8
  5465  03F1  00A8               	movwf	update@i_1262
  5466  03F2  3000               	movlw	0
  5467  03F3  00A9               	movwf	update@i_1262+1
  5468  03F4                     l3740:	
  5469                           
  5470                           ;main.c: 536:       {;main.c: 537:           if(i==0){
  5471  03F4  0828               	movf	update@i_1262,w
  5472  03F5  0429               	iorwf	update@i_1262+1,w
  5473  03F6  1D03               	btfss	3,2
  5474  03F7  2BF9               	goto	u3981
  5475  03F8  2BFA               	goto	u3980
  5476  03F9                     u3981:	
  5477  03F9  2C03               	goto	l704
  5478  03FA                     u3980:	
  5479  03FA                     l3742:	
  5480                           
  5481                           ;main.c: 538:               origem_down[1] = origem_down[0];
  5482  03FA  0021               	movlb	1	; select bank1
  5483  03FB  0821               	movf	(_origem_down+1)^(0+128),w
  5484  03FC  00A3               	movwf	((_origem_down+1)^(0+128)+2)
  5485  03FD  0820               	movf	_origem_down^(0+128),w
  5486  03FE  00A2               	movwf	(_origem_down^(0+128)+2)
  5487                           
  5488                           ;main.c: 539:               origem_down[0] = and_origem;
  5489  03FF  085B               	movf	(_and_origem+1)^(0+128),w
  5490  0400  00A1               	movwf	(_origem_down+1)^(0+128)
  5491  0401  085A               	movf	_and_origem^(0+128),w
  5492  0402  00A0               	movwf	_origem_down^(0+128)
  5493  0403                     l704:	
  5494                           ;main.c: 540:           }
  5495                           
  5496                           
  5497                           ;main.c: 541:           if(i>0){
  5498  0403  0020               	movlb	0	; select bank0
  5499  0404  0829               	movf	update@i_1262+1,w
  5500  0405  3A80               	xorlw	128
  5501  0406  00A0               	movwf	??_update
  5502  0407  3080               	movlw	128
  5503  0408  0220               	subwf	??_update,w
  5504  0409  1D03               	skipz
  5505  040A  2C0D               	goto	u3995
  5506  040B  3001               	movlw	1
  5507  040C  0228               	subwf	update@i_1262,w
  5508  040D                     u3995:	
  5509  040D  1C03               	skipc
  5510  040E  2C10               	goto	u3991
  5511  040F  2C11               	goto	u3990
  5512  0410                     u3991:	
  5513  0410  2C1E               	goto	l3746
  5514  0411                     u3990:	
  5515  0411                     l3744:	
  5516                           
  5517                           ;main.c: 542:               origem_down[i+1] = origem_down[i];
  5518  0411  0020               	movlb	0	; select bank0
  5519  0412  3528               	lslf	update@i_1262,w
  5520  0413  3EA0               	addlw	(low (_origem_down| 0))& (0+255)
  5521  0414  0086               	movwf	6
  5522  0415  0187               	clrf	7
  5523  0416  3528               	lslf	update@i_1262,w
  5524  0417  3EA2               	addlw	(low ((_origem_down| 0+2)))& (0+255)
  5525  0418  0084               	movwf	4
  5526  0419  0185               	clrf	5
  5527  041A  3F40               	moviw [0]fsr1
  5528  041B  3F80               	movwi [0]fsr0
  5529  041C  3F41               	moviw [1]fsr1
  5530  041D  3F81               	movwi [1]fsr0
  5531  041E                     l3746:	
  5532                           
  5533                           ;main.c: 544:       }
  5534  041E  30FF               	movlw	255
  5535  041F  0020               	movlb	0	; select bank0
  5536  0420  07A8               	addwf	update@i_1262,f
  5537  0421  30FF               	movlw	255
  5538  0422  3DA9               	addwfc	update@i_1262+1,f
  5539  0423                     l3748:	
  5540  0423  1FA9               	btfss	update@i_1262+1,7
  5541  0424  2C26               	goto	u4001
  5542  0425  2C27               	goto	u4000
  5543  0426                     u4001:	
  5544  0426  2BF4               	goto	l3740
  5545  0427                     u4000:	
  5546  0427                     l3750:	
  5547                           
  5548                           ;main.c: 548:     min_fila_down = 4;
  5549  0427  3004               	movlw	4
  5550  0428  0021               	movlb	1	; select bank1
  5551  0429  00CC               	movwf	_min_fila_down^(0+128)
  5552  042A  3000               	movlw	0
  5553  042B  00CD               	movwf	(_min_fila_down^(0+128)+1)
  5554  042C                     l3752:	
  5555                           
  5556                           ;main.c: 549:     for(i=0;i<=9;i++)
  5557  042C  0020               	movlb	0	; select bank0
  5558  042D  01A4               	clrf	update@i_1261
  5559  042E  01A5               	clrf	update@i_1261+1
  5560  042F                     l3758:	
  5561                           
  5562                           ;main.c: 550:     {;main.c: 551:         if(fila_down[i]<min_fila_down&&fila_down[i]>0)
  5563  042F  0020               	movlb	0	; select bank0
  5564  0430  3524               	lslf	update@i_1261,w
  5565  0431  3E34               	addlw	(low (_fila_down| (0+256)))& (0+255)
  5566  0432  0086               	movwf	6
  5567  0433  3001               	movlw	1	; select bank2/3
  5568  0434  0087               	movwf	7
  5569  0435  3F40               	moviw [0]fsr1
  5570  0436  00A0               	movwf	??_update
  5571  0437  3F41               	moviw [1]fsr1
  5572  0438  00A1               	movwf	??_update+1
  5573  0439  0821               	movf	??_update+1,w
  5574  043A  3A80               	xorlw	128
  5575  043B  00A2               	movwf	??_update+2
  5576  043C  0021               	movlb	1	; select bank1
  5577  043D  084D               	movf	(_min_fila_down+1)^(0+128),w
  5578  043E  3A80               	xorlw	128
  5579  043F  0020               	movlb	0	; select bank0
  5580  0440  0222               	subwf	??_update+2,w
  5581  0441  1D03               	skipz
  5582  0442  2C47               	goto	u4015
  5583  0443  0021               	movlb	1	; select bank1
  5584  0444  084C               	movf	_min_fila_down^(0+128),w
  5585  0445  0020               	movlb	0	; select bank0
  5586  0446  0220               	subwf	??_update,w
  5587  0447                     u4015:	
  5588  0447  1803               	skipnc
  5589  0448  2C4A               	goto	u4011
  5590  0449  2C4B               	goto	u4010
  5591  044A                     u4011:	
  5592  044A  2C6D               	goto	l3764
  5593  044B                     u4010:	
  5594  044B                     l3760:	
  5595  044B  0020               	movlb	0	; select bank0
  5596  044C  3524               	lslf	update@i_1261,w
  5597  044D  3E34               	addlw	(low (_fila_down| (0+256)))& (0+255)
  5598  044E  0086               	movwf	6
  5599  044F  3001               	movlw	1	; select bank2/3
  5600  0450  0087               	movwf	7
  5601  0451  3F40               	moviw [0]fsr1
  5602  0452  00A0               	movwf	??_update
  5603  0453  3F41               	moviw [1]fsr1
  5604  0454  00A1               	movwf	??_update+1
  5605  0455  0821               	movf	??_update+1,w
  5606  0456  3A80               	xorlw	128
  5607  0457  00A2               	movwf	??_update+2
  5608  0458  3080               	movlw	128
  5609  0459  0222               	subwf	??_update+2,w
  5610  045A  1D03               	skipz
  5611  045B  2C5E               	goto	u4025
  5612  045C  3001               	movlw	1
  5613  045D  0220               	subwf	??_update,w
  5614  045E                     u4025:	
  5615  045E  1C03               	skipc
  5616  045F  2C61               	goto	u4021
  5617  0460  2C62               	goto	u4020
  5618  0461                     u4021:	
  5619  0461  2C6D               	goto	l3764
  5620  0462                     u4020:	
  5621  0462                     l3762:	
  5622                           
  5623                           ;main.c: 552:         {;main.c: 553:             min_fila_down = fila_down[i];
  5624  0462  0020               	movlb	0	; select bank0
  5625  0463  3524               	lslf	update@i_1261,w
  5626  0464  3E34               	addlw	(low (_fila_down| (0+256)))& (0+255)
  5627  0465  0086               	movwf	6
  5628  0466  3001               	movlw	1	; select bank2/3
  5629  0467  0087               	movwf	7
  5630  0468  3F40               	moviw [0]fsr1
  5631  0469  0021               	movlb	1	; select bank1
  5632  046A  00CC               	movwf	_min_fila_down^(0+128)
  5633  046B  3F41               	moviw [1]fsr1
  5634  046C  00CD               	movwf	(_min_fila_down+1)^(0+128)
  5635  046D                     l3764:	
  5636                           
  5637                           ;main.c: 555:     }
  5638  046D  3001               	movlw	1
  5639  046E  0020               	movlb	0	; select bank0
  5640  046F  07A4               	addwf	update@i_1261,f
  5641  0470  3000               	movlw	0
  5642  0471  3DA5               	addwfc	update@i_1261+1,f
  5643  0472                     l3766:	
  5644  0472  0825               	movf	update@i_1261+1,w
  5645  0473  3A80               	xorlw	128
  5646  0474  00A0               	movwf	??_update
  5647  0475  3080               	movlw	128
  5648  0476  0220               	subwf	??_update,w
  5649  0477  1D03               	skipz
  5650  0478  2C7B               	goto	u4035
  5651  0479  300A               	movlw	10
  5652  047A  0224               	subwf	update@i_1261,w
  5653  047B                     u4035:	
  5654  047B  1C03               	skipc
  5655  047C  2C7E               	goto	u4031
  5656  047D  2C7F               	goto	u4030
  5657  047E                     u4031:	
  5658  047E  2C2F               	goto	l3758
  5659  047F                     u4030:	
  5660  047F                     l709:	
  5661  047F  0008               	return
  5662  0480                     __end_of_update:	
  5663                           
  5664                           	psect	text9
  5665  0836                     __ptext9:	
  5666 ;; *************** function _EUSART_is_rx_ready *****************
  5667 ;; Defined at:
  5668 ;;		line 99 in file "mcc_generated_files/eusart.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;		None
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;		None
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      _Bool 
  5675 ;; Registers used:
  5676 ;;		wreg, status,2, status,0
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5682 ;;      Params:         0       0       0       0       0       0
  5683 ;;      Locals:         0       0       0       0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0
  5685 ;;      Totals:         0       0       0       0       0       0
  5686 ;;Total ram usage:        0 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:    4
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_update
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           
  5697                           ;psect for function _EUSART_is_rx_ready
  5698  0836                     _EUSART_is_rx_ready:	
  5699  0836                     l3506:	
  5700                           ;incstack = 0
  5701                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  5702                           
  5703                           
  5704                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  5705  0836  0020               	movlb	0	; select bank0
  5706  0837  0E11               	swapf	17,w	;volatile
  5707  0838  0C89               	rrf	9,f
  5708  0839  3901               	andlw	1
  5709  083A                     l51:	
  5710  083A  0008               	return
  5711  083B                     __end_of_EUSART_is_rx_ready:	
  5712                           
  5713                           	psect	text10
  5714  093E                     __ptext10:	
  5715 ;; *************** function _EUSART_Read *****************
  5716 ;; Defined at:
  5717 ;;		line 113 in file "mcc_generated_files/eusart.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;		None
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;		None
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  1    wreg      unsigned char 
  5724 ;; Registers used:
  5725 ;;		wreg, status,2
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5731 ;;      Params:         0       0       0       0       0       0
  5732 ;;      Locals:         0       0       0       0       0       0
  5733 ;;      Temps:          0       0       0       0       0       0
  5734 ;;      Totals:         0       0       0       0       0       0
  5735 ;;Total ram usage:        0 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; Hardware stack levels required when called:    4
  5738 ;; This function calls:
  5739 ;;		Nothing
  5740 ;; This function is called by:
  5741 ;;		_update
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           
  5746                           ;psect for function _EUSART_Read
  5747  093E                     _EUSART_Read:	
  5748  093E                     l3510:	
  5749                           ;incstack = 0
  5750                           ; Regs used in _EUSART_Read: [wreg+status,2]
  5751                           
  5752  093E                     l60:	
  5753                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  5754                           
  5755                           
  5756                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  5757  093E  0020               	movlb	0	; select bank0
  5758  093F  1E91               	btfss	17,5	;volatile
  5759  0940  2942               	goto	u3801
  5760  0941  2943               	goto	u3800
  5761  0942                     u3801:	
  5762  0942  293E               	goto	l60
  5763  0943                     u3800:	
  5764  0943                     l3512:	
  5765                           
  5766                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  5767  0943  01F6               	clrf	_eusartRxLastError	;volatile
  5768  0944                     l3514:	
  5769                           
  5770                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  5771  0944  0023               	movlb	3	; select bank3
  5772  0945  1C9D               	btfss	29,1	;volatile
  5773  0946  2948               	goto	u3811
  5774  0947  2949               	goto	u3810
  5775  0948                     u3811:	
  5776  0948  294B               	goto	l3518
  5777  0949                     u3810:	
  5778  0949                     l3516:	
  5779                           
  5780                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  5781  0949  121D               	bcf	29,4	;volatile
  5782                           
  5783                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  5784  094A  161D               	bsf	29,4	;volatile
  5785  094B                     l3518:	
  5786                           
  5787                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  5788  094B  0819               	movf	25,w	;volatile
  5789  094C                     l64:	
  5790  094C  0008               	return
  5791  094D                     __end_of_EUSART_Read:	
  5792                           
  5793                           	psect	text11
  5794  09D2                     __ptext11:	
  5795 ;; *************** function ___wmul *****************
  5796 ;; Defined at:
  5797 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5800 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;  product         2    4[BANK0 ] unsigned int 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  2    0[BANK0 ] unsigned int 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5812 ;;      Params:         0       4       0       0       0       0
  5813 ;;      Locals:         0       2       0       0       0       0
  5814 ;;      Temps:          0       0       0       0       0       0
  5815 ;;      Totals:         0       6       0       0       0       0
  5816 ;;Total ram usage:        6 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    4
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_controle
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           
  5827                           ;psect for function ___wmul
  5828  09D2                     ___wmul:	
  5829  09D2                     l3768:	
  5830                           ;incstack = 0
  5831                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5832                           
  5833  09D2  0020               	movlb	0	; select bank0
  5834  09D3  01A4               	clrf	___wmul@product
  5835  09D4  01A5               	clrf	___wmul@product+1
  5836  09D5                     l3770:	
  5837  09D5  1C20               	btfss	___wmul@multiplier,0
  5838  09D6  29D8               	goto	u4041
  5839  09D7  29D9               	goto	u4040
  5840  09D8                     u4041:	
  5841  09D8  29DD               	goto	l859
  5842  09D9                     u4040:	
  5843  09D9                     l3772:	
  5844  09D9  0822               	movf	___wmul@multiplicand,w
  5845  09DA  07A4               	addwf	___wmul@product,f
  5846  09DB  0823               	movf	___wmul@multiplicand+1,w
  5847  09DC  3DA5               	addwfc	___wmul@product+1,f
  5848  09DD                     l859:	
  5849  09DD  3001               	movlw	1
  5850  09DE                     u4055:	
  5851  09DE  35A2               	lslf	___wmul@multiplicand,f
  5852  09DF  0DA3               	rlf	___wmul@multiplicand+1,f
  5853  09E0  0B89               	decfsz	9,f
  5854  09E1  29DE               	goto	u4055
  5855  09E2                     l3774:	
  5856  09E2  3001               	movlw	1
  5857  09E3                     u4065:	
  5858  09E3  36A1               	lsrf	___wmul@multiplier+1,f
  5859  09E4  0CA0               	rrf	___wmul@multiplier,f
  5860  09E5  0B89               	decfsz	9,f
  5861  09E6  29E3               	goto	u4065
  5862  09E7                     l3776:	
  5863  09E7  0820               	movf	___wmul@multiplier,w
  5864  09E8  0421               	iorwf	___wmul@multiplier+1,w
  5865  09E9  1D03               	btfss	3,2
  5866  09EA  29EC               	goto	u4071
  5867  09EB  29ED               	goto	u4070
  5868  09EC                     u4071:	
  5869  09EC  29D5               	goto	l3770
  5870  09ED                     u4070:	
  5871  09ED                     l3778:	
  5872  09ED  0825               	movf	___wmul@product+1,w
  5873  09EE  00A1               	movwf	?___wmul+1
  5874  09EF  0824               	movf	___wmul@product,w
  5875  09F0  00A0               	movwf	?___wmul
  5876  09F1                     l861:	
  5877  09F1  0008               	return
  5878  09F2                     __end_of___wmul:	
  5879                           
  5880                           	psect	text12
  5881  099A                     __ptext12:	
  5882 ;; *************** function _PWM3_LoadDutyValue *****************
  5883 ;; Defined at:
  5884 ;;		line 82 in file "mcc_generated_files/pwm3.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  dutyValue       2    0[BANK0 ] unsigned short 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;		None
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  1    wreg      void 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5898 ;;      Params:         0       2       0       0       0       0
  5899 ;;      Locals:         0       0       0       0       0       0
  5900 ;;      Temps:          0       2       0       0       0       0
  5901 ;;      Totals:         0       4       0       0       0       0
  5902 ;;Total ram usage:        4 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    4
  5905 ;; This function calls:
  5906 ;;		Nothing
  5907 ;; This function is called by:
  5908 ;;		_controle
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           
  5913                           ;psect for function _PWM3_LoadDutyValue
  5914  099A                     _PWM3_LoadDutyValue:	
  5915  099A                     l2756:	
  5916                           ;incstack = 0
  5917                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  5918                           
  5919                           
  5920                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
  5921  099A  0020               	movlb	0	; select bank0
  5922  099B  0821               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  5923  099C  00A3               	movwf	??_PWM3_LoadDutyValue+1
  5924  099D  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
  5925  099E  00A2               	movwf	??_PWM3_LoadDutyValue
  5926  099F  36A3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5927  09A0  0CA2               	rrf	??_PWM3_LoadDutyValue,f
  5928  09A1  36A3               	lsrf	??_PWM3_LoadDutyValue+1,f
  5929  09A2  0CA2               	rrf	??_PWM3_LoadDutyValue,f
  5930  09A3  0822               	movf	??_PWM3_LoadDutyValue,w
  5931  09A4  0026               	movlb	6	; select bank6
  5932  09A5  0091               	movwf	17	;volatile
  5933                           
  5934                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
  5935  09A6  0020               	movlb	0	; select bank0
  5936  09A7  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
  5937  09A8  3903               	andlw	3
  5938  09A9  00A2               	movwf	??_PWM3_LoadDutyValue
  5939  09AA  3004               	movlw	4
  5940  09AB                     u2215:	
  5941  09AB  35A2               	lslf	??_PWM3_LoadDutyValue,f
  5942  09AC  0B89               	decfsz	9,f
  5943  09AD  29AB               	goto	u2215
  5944  09AE  0026               	movlb	6	; select bank6
  5945  09AF  0813               	movf	19,w	;volatile
  5946  09B0  39CF               	andlw	207
  5947  09B1  0020               	movlb	0	; select bank0
  5948  09B2  0422               	iorwf	??_PWM3_LoadDutyValue,w
  5949  09B3  0026               	movlb	6	; select bank6
  5950  09B4  0093               	movwf	19	;volatile
  5951  09B5                     l475:	
  5952  09B5  0008               	return
  5953  09B6                     __end_of_PWM3_LoadDutyValue:	
  5954                           
  5955                           	psect	text13
  5956  0A13                     __ptext13:	
  5957 ;; *************** function _ADC_GetConversion *****************
  5958 ;; Defined at:
  5959 ;;		line 112 in file "mcc_generated_files/adc.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;  channel         1    wreg     enum E2474
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;  channel         1    3[BANK0 ] enum E2474
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  2    0[BANK0 ] unsigned short 
  5966 ;; Registers used:
  5967 ;;		wreg, status,2, status,0
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5973 ;;      Params:         0       2       0       0       0       0
  5974 ;;      Locals:         0       1       0       0       0       0
  5975 ;;      Temps:          0       1       0       0       0       0
  5976 ;;      Totals:         0       4       0       0       0       0
  5977 ;;Total ram usage:        4 bytes
  5978 ;; Hardware stack levels used:    1
  5979 ;; Hardware stack levels required when called:    4
  5980 ;; This function calls:
  5981 ;;		Nothing
  5982 ;; This function is called by:
  5983 ;;		_controle
  5984 ;; This function uses a non-reentrant model
  5985 ;;
  5986                           
  5987                           
  5988                           ;psect for function _ADC_GetConversion
  5989  0A13                     _ADC_GetConversion:	
  5990                           
  5991                           ;incstack = 0
  5992                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  5993                           ;ADC_GetConversion@channel stored from wreg
  5994  0A13  0020               	movlb	0	; select bank0
  5995  0A14  00A3               	movwf	ADC_GetConversion@channel
  5996  0A15                     l2720:	
  5997                           
  5998                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  5999  0A15  0823               	movf	ADC_GetConversion@channel,w
  6000  0A16  00A2               	movwf	??_ADC_GetConversion
  6001  0A17  0DA2               	rlf	??_ADC_GetConversion,f
  6002  0A18  0DA2               	rlf	??_ADC_GetConversion,f
  6003  0A19  0021               	movlb	1	; select bank1
  6004  0A1A  081D               	movf	29,w	;volatile
  6005  0A1B  0020               	movlb	0	; select bank0
  6006  0A1C  0622               	xorwf	??_ADC_GetConversion,w
  6007  0A1D  3983               	andlw	-125
  6008  0A1E  0622               	xorwf	??_ADC_GetConversion,w
  6009  0A1F  0021               	movlb	1	; select bank1
  6010  0A20  009D               	movwf	29	;volatile
  6011  0A21                     l2722:	
  6012                           
  6013                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  6014  0A21  141D               	bsf	29,0	;volatile
  6015  0A22                     l2724:	
  6016                           
  6017                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  6018  0A22  3003               	movlw	3
  6019  0A23                     u4337:	
  6020  0A23  0B89               	decfsz	9,f
  6021  0A24  2A23               	goto	u4337
  6022  0A25  0000               	nop
  6023  0A26                     l2726:	
  6024                           
  6025                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  6026  0A26  0021               	movlb	1	; select bank1
  6027  0A27  149D               	bsf	29,1	;volatile
  6028  0A28                     l282:	
  6029                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  6030                           
  6031                           
  6032                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  6033  0A28  189D               	btfsc	29,1	;volatile
  6034  0A29  2A2B               	goto	u2161
  6035  0A2A  2A2C               	goto	u2160
  6036  0A2B                     u2161:	
  6037  0A2B  2A28               	goto	l282
  6038  0A2C                     u2160:	
  6039  0A2C                     l2728:	
  6040                           
  6041                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6042  0A2C  081C               	movf	28,w	;volatile
  6043  0A2D  0020               	movlb	0	; select bank0
  6044  0A2E  00A1               	movwf	?_ADC_GetConversion+1
  6045  0A2F  0021               	movlb	1	; select bank1
  6046  0A30  081B               	movf	27,w	;volatile
  6047  0A31  0020               	movlb	0	; select bank0
  6048  0A32  00A0               	movwf	?_ADC_GetConversion
  6049  0A33                     l285:	
  6050  0A33  0008               	return
  6051  0A34                     __end_of_ADC_GetConversion:	
  6052                           
  6053                           	psect	text14
  6054  0F2D                     __ptext14:	
  6055 ;; *************** function _comunicacao *****************
  6056 ;; Defined at:
  6057 ;;		line 155 in file "main.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;		None
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;  position        4   75[BANK0 ] float 
  6062 ;;  speed           4   71[BANK0 ] float 
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      void 
  6065 ;; Registers used:
  6066 ;;		wreg, status,2, status,0, pclath, cstack
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6072 ;;      Params:         0       0       0       0       0       0
  6073 ;;      Locals:         0       8       0       0       0       0
  6074 ;;      Temps:          0       1       0       0       0       0
  6075 ;;      Totals:         0       9       0       0       0       0
  6076 ;;Total ram usage:        9 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:    6
  6079 ;; This function calls:
  6080 ;;		___fldiv
  6081 ;;		___flmul
  6082 ;;		___fltol
  6083 ;;		___xxtofl
  6084 ;; This function is called by:
  6085 ;;		_main
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           
  6090                           ;psect for function _comunicacao
  6091  0F2D                     _comunicacao:	
  6092  0F2D                     l3348:	
  6093                           ;incstack = 0
  6094                           ; Regs used in _comunicacao: [wreg+status,2+status,0+pclath+cstack]
  6095                           
  6096                           
  6097                           ;main.c: 160:     float speed = 3.75/(((float)ccp_value)*0.0000005);
  6098  0F2D  3035               	movlw	53
  6099  0F2E  0020               	movlb	0	; select bank0
  6100  0F2F  00B5               	movwf	___flmul@b+3
  6101  0F30  3006               	movlw	6
  6102  0F31  00B4               	movwf	___flmul@b+2
  6103  0F32  3037               	movlw	55
  6104  0F33  00B3               	movwf	___flmul@b+1
  6105  0F34  30BD               	movlw	189
  6106  0F35  00B2               	movwf	___flmul@b
  6107  0F36  0021               	movlb	1	; select bank1
  6108  0F37  085F               	movf	_ccp_value^(0+128),w
  6109  0F38  0020               	movlb	0	; select bank0
  6110  0F39  00A4               	movwf	___xxtofl@val
  6111  0F3A  0021               	movlb	1	; select bank1
  6112  0F3B  0860               	movf	(_ccp_value+1)^(0+128),w
  6113  0F3C  0020               	movlb	0	; select bank0
  6114  0F3D  00A5               	movwf	___xxtofl@val+1
  6115  0F3E  01A6               	clrf	___xxtofl@val+2
  6116  0F3F  01A7               	clrf	___xxtofl@val+3
  6117  0F40  3000               	movlw	0
  6118  0F41  318C  24FD  318F   	fcall	___xxtofl
  6119  0F44  0020               	movlb	0	; select bank0
  6120  0F45  0827               	movf	?___xxtofl+3,w
  6121  0F46  00B9               	movwf	___flmul@a+3
  6122  0F47  0826               	movf	?___xxtofl+2,w
  6123  0F48  00B8               	movwf	___flmul@a+2
  6124  0F49  0825               	movf	?___xxtofl+1,w
  6125  0F4A  00B7               	movwf	___flmul@a+1
  6126  0F4B  0824               	movf	?___xxtofl,w
  6127  0F4C  00B6               	movwf	___flmul@a
  6128  0F4D  3180  2053  318F   	fcall	___flmul
  6129  0F50  0020               	movlb	0	; select bank0
  6130  0F51  0835               	movf	?___flmul+3,w
  6131  0F52  00CF               	movwf	___fldiv@a+3
  6132  0F53  0834               	movf	?___flmul+2,w
  6133  0F54  00CE               	movwf	___fldiv@a+2
  6134  0F55  0833               	movf	?___flmul+1,w
  6135  0F56  00CD               	movwf	___fldiv@a+1
  6136  0F57  0832               	movf	?___flmul,w
  6137  0F58  00CC               	movwf	___fldiv@a
  6138  0F59  3040               	movlw	64
  6139  0F5A  00D3               	movwf	___fldiv@b+3
  6140  0F5B  3070               	movlw	112
  6141  0F5C  00D2               	movwf	___fldiv@b+2
  6142  0F5D  3000               	movlw	0
  6143  0F5E  00D1               	movwf	___fldiv@b+1
  6144  0F5F  3000               	movlw	0
  6145  0F60  00D0               	movwf	___fldiv@b
  6146  0F61  3184  2480  318F   	fcall	___fldiv
  6147  0F64  0020               	movlb	0	; select bank0
  6148  0F65  084F               	movf	?___fldiv+3,w
  6149  0F66  00EA               	movwf	comunicacao@speed+3
  6150  0F67  084E               	movf	?___fldiv+2,w
  6151  0F68  00E9               	movwf	comunicacao@speed+2
  6152  0F69  084D               	movf	?___fldiv+1,w
  6153  0F6A  00E8               	movwf	comunicacao@speed+1
  6154  0F6B  084C               	movf	?___fldiv,w
  6155  0F6C  00E7               	movwf	comunicacao@speed
  6156                           
  6157                           ;main.c: 161:     float position = 1.5*pulses;
  6158  0F6D  303F               	movlw	63
  6159  0F6E  00B5               	movwf	___flmul@b+3
  6160  0F6F  30C0               	movlw	192
  6161  0F70  00B4               	movwf	___flmul@b+2
  6162  0F71  3000               	movlw	0
  6163  0F72  00B3               	movwf	___flmul@b+1
  6164  0F73  3000               	movlw	0
  6165  0F74  00B2               	movwf	___flmul@b
  6166  0F75  0021               	movlb	1	; select bank1
  6167  0F76  0861               	movf	_pulses^(0+128),w
  6168  0F77  0020               	movlb	0	; select bank0
  6169  0F78  00A4               	movwf	___xxtofl@val
  6170  0F79  0021               	movlb	1	; select bank1
  6171  0F7A  0862               	movf	(_pulses+1)^(0+128),w
  6172  0F7B  0020               	movlb	0	; select bank0
  6173  0F7C  00A5               	movwf	___xxtofl@val+1
  6174  0F7D  0D89               	rlf	9,f
  6175  0F7E  3B89               	subwfb	9,f
  6176  0F7F  0989               	comf	9,f
  6177  0F80  00A6               	movwf	___xxtofl@val+2
  6178  0F81  00A7               	movwf	___xxtofl@val+3
  6179  0F82  3001               	movlw	1
  6180  0F83  318C  24FD  318F   	fcall	___xxtofl
  6181  0F86  0020               	movlb	0	; select bank0
  6182  0F87  0827               	movf	?___xxtofl+3,w
  6183  0F88  00B9               	movwf	___flmul@a+3
  6184  0F89  0826               	movf	?___xxtofl+2,w
  6185  0F8A  00B8               	movwf	___flmul@a+2
  6186  0F8B  0825               	movf	?___xxtofl+1,w
  6187  0F8C  00B7               	movwf	___flmul@a+1
  6188  0F8D  0824               	movf	?___xxtofl,w
  6189  0F8E  00B6               	movwf	___flmul@a
  6190  0F8F  3180  2053  318F   	fcall	___flmul
  6191  0F92  0020               	movlb	0	; select bank0
  6192  0F93  0835               	movf	?___flmul+3,w
  6193  0F94  00EE               	movwf	comunicacao@position+3
  6194  0F95  0834               	movf	?___flmul+2,w
  6195  0F96  00ED               	movwf	comunicacao@position+2
  6196  0F97  0833               	movf	?___flmul+1,w
  6197  0F98  00EC               	movwf	comunicacao@position+1
  6198  0F99  0832               	movf	?___flmul,w
  6199  0F9A  00EB               	movwf	comunicacao@position
  6200  0F9B                     l3350:	
  6201                           
  6202                           ;main.c: 176:     byte[0] = ((state_motor<<4)& 0x20)|(and_ating2 & 0x02);
  6203  0F9B  0021               	movlb	1	; select bank1
  6204  0F9C  0848               	movf	_and_ating2^(0+128),w
  6205  0F9D  3902               	andlw	2
  6206  0F9E  0020               	movlb	0	; select bank0
  6207  0F9F  00E6               	movwf	??_comunicacao
  6208  0FA0  0866               	movf	??_comunicacao,w
  6209  0FA1  0022               	movlb	2	; select bank2
  6210  0FA2  00C8               	movwf	_byte^(0+256)
  6211  0FA3                     l3352:	
  6212                           
  6213                           ;main.c: 177:     byte[1] = 0x80 |((((uint8_t)position)>>1)& 0x7F);
  6214  0FA3  0020               	movlb	0	; select bank0
  6215  0FA4  086E               	movf	comunicacao@position+3,w
  6216  0FA5  00A3               	movwf	___fltol@f1+3
  6217  0FA6  086D               	movf	comunicacao@position+2,w
  6218  0FA7  00A2               	movwf	___fltol@f1+2
  6219  0FA8  086C               	movf	comunicacao@position+1,w
  6220  0FA9  00A1               	movwf	___fltol@f1+1
  6221  0FAA  086B               	movf	comunicacao@position,w
  6222  0FAB  00A0               	movwf	___fltol@f1
  6223  0FAC  318B  237D  318F   	fcall	___fltol
  6224  0FAF  0020               	movlb	0	; select bank0
  6225  0FB0  3620               	lsrf	?___fltol,w
  6226  0FB1  397F               	andlw	127
  6227  0FB2  3880               	iorlw	128
  6228  0FB3  00E6               	movwf	??_comunicacao
  6229  0FB4  0866               	movf	??_comunicacao,w
  6230  0FB5  0022               	movlb	2	; select bank2
  6231  0FB6  00C9               	movwf	(_byte^(0+256)+1)
  6232  0FB7                     l3354:	
  6233                           
  6234                           ;main.c: 178:     byte[2] = 0x80 |((((uint8_t)speed)>>1)& 0x7F);
  6235  0FB7  0020               	movlb	0	; select bank0
  6236  0FB8  086A               	movf	comunicacao@speed+3,w
  6237  0FB9  00A3               	movwf	___fltol@f1+3
  6238  0FBA  0869               	movf	comunicacao@speed+2,w
  6239  0FBB  00A2               	movwf	___fltol@f1+2
  6240  0FBC  0868               	movf	comunicacao@speed+1,w
  6241  0FBD  00A1               	movwf	___fltol@f1+1
  6242  0FBE  0867               	movf	comunicacao@speed,w
  6243  0FBF  00A0               	movwf	___fltol@f1
  6244  0FC0  318B  237D  318F   	fcall	___fltol
  6245  0FC3  0020               	movlb	0	; select bank0
  6246  0FC4  3620               	lsrf	?___fltol,w
  6247  0FC5  397F               	andlw	127
  6248  0FC6  3880               	iorlw	128
  6249  0FC7  00E6               	movwf	??_comunicacao
  6250  0FC8  0866               	movf	??_comunicacao,w
  6251  0FC9  0022               	movlb	2	; select bank2
  6252  0FCA  00CA               	movwf	(_byte^(0+256)+2)
  6253  0FCB                     l3356:	
  6254                           
  6255                           ;main.c: 179:     byte[3] = 0x80 |((((uint8_t)I_m)>>1)& 0x7F);
  6256  0FCB  085C               	movf	(_I_m+3)^(0+256),w
  6257  0FCC  0020               	movlb	0	; select bank0
  6258  0FCD  00A3               	movwf	___fltol@f1+3
  6259  0FCE  0022               	movlb	2	; select bank2
  6260  0FCF  085B               	movf	(_I_m+2)^(0+256),w
  6261  0FD0  0020               	movlb	0	; select bank0
  6262  0FD1  00A2               	movwf	___fltol@f1+2
  6263  0FD2  0022               	movlb	2	; select bank2
  6264  0FD3  085A               	movf	(_I_m+1)^(0+256),w
  6265  0FD4  0020               	movlb	0	; select bank0
  6266  0FD5  00A1               	movwf	___fltol@f1+1
  6267  0FD6  0022               	movlb	2	; select bank2
  6268  0FD7  0859               	movf	_I_m^(0+256),w
  6269  0FD8  0020               	movlb	0	; select bank0
  6270  0FD9  00A0               	movwf	___fltol@f1
  6271  0FDA  318B  237D  318F   	fcall	___fltol
  6272  0FDD  0020               	movlb	0	; select bank0
  6273  0FDE  3620               	lsrf	?___fltol,w
  6274  0FDF  397F               	andlw	127
  6275  0FE0  3880               	iorlw	128
  6276  0FE1  00E6               	movwf	??_comunicacao
  6277  0FE2  0866               	movf	??_comunicacao,w
  6278  0FE3  0022               	movlb	2	; select bank2
  6279  0FE4  00CB               	movwf	(_byte^(0+256)+3)
  6280  0FE5                     l3358:	
  6281                           
  6282                           ;main.c: 180:     byte[4] = 0x80 |((((uint8_t)temp_mt)>>1)& 0x7F);
  6283  0FE5  0858               	movf	(_temp_mt+3)^(0+256),w
  6284  0FE6  0020               	movlb	0	; select bank0
  6285  0FE7  00A3               	movwf	___fltol@f1+3
  6286  0FE8  0022               	movlb	2	; select bank2
  6287  0FE9  0857               	movf	(_temp_mt+2)^(0+256),w
  6288  0FEA  0020               	movlb	0	; select bank0
  6289  0FEB  00A2               	movwf	___fltol@f1+2
  6290  0FEC  0022               	movlb	2	; select bank2
  6291  0FED  0856               	movf	(_temp_mt+1)^(0+256),w
  6292  0FEE  0020               	movlb	0	; select bank0
  6293  0FEF  00A1               	movwf	___fltol@f1+1
  6294  0FF0  0022               	movlb	2	; select bank2
  6295  0FF1  0855               	movf	_temp_mt^(0+256),w
  6296  0FF2  0020               	movlb	0	; select bank0
  6297  0FF3  00A0               	movwf	___fltol@f1
  6298  0FF4  318B  237D  318F   	fcall	___fltol
  6299  0FF7  0020               	movlb	0	; select bank0
  6300  0FF8  3620               	lsrf	?___fltol,w
  6301  0FF9  397F               	andlw	127
  6302  0FFA  3880               	iorlw	128
  6303  0FFB  00E6               	movwf	??_comunicacao
  6304  0FFC  0866               	movf	??_comunicacao,w
  6305  0FFD  0022               	movlb	2	; select bank2
  6306  0FFE  00CC               	movwf	(_byte^(0+256)+4)
  6307  0FFF                     l610:	
  6308  0FFF  0008               	return
  6309  1000                     __end_of_comunicacao:	
  6310                           
  6311                           	psect	text15
  6312  0CFD                     __ptext15:	
  6313 ;; *************** function ___xxtofl *****************
  6314 ;; Defined at:
  6315 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  sign            1    wreg     unsigned char 
  6318 ;;  val             4    4[BANK0 ] long 
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;  sign            1   12[BANK0 ] unsigned char 
  6321 ;;  arg             4   14[BANK0 ] unsigned long 
  6322 ;;  exp             1   13[BANK0 ] unsigned char 
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  4    4[BANK0 ] unsigned char 
  6325 ;; Registers used:
  6326 ;;		wreg, status,2, status,0
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6332 ;;      Params:         0       4       0       0       0       0
  6333 ;;      Locals:         0       6       0       0       0       0
  6334 ;;      Temps:          0       4       0       0       0       0
  6335 ;;      Totals:         0      14       0       0       0       0
  6336 ;;Total ram usage:       14 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; Hardware stack levels required when called:    4
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_comunicacao
  6343 ;;		_controle
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           
  6348                           ;psect for function ___xxtofl
  6349  0CFD                     ___xxtofl:	
  6350                           
  6351                           ;incstack = 0
  6352                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6353                           ;___xxtofl@sign stored from wreg
  6354  0CFD  0020               	movlb	0	; select bank0
  6355  0CFE  00AC               	movwf	___xxtofl@sign
  6356  0CFF                     l3274:	
  6357  0CFF  082C               	movf	___xxtofl@sign,w
  6358  0D00  1903               	btfsc	3,2
  6359  0D01  2D03               	goto	u3291
  6360  0D02  2D04               	goto	u3290
  6361  0D03                     u3291:	
  6362  0D03  2D18               	goto	l3280
  6363  0D04                     u3290:	
  6364  0D04                     l3276:	
  6365  0D04  1FA7               	btfss	___xxtofl@val+3,7
  6366  0D05  2D07               	goto	u3301
  6367  0D06  2D08               	goto	u3300
  6368  0D07                     u3301:	
  6369  0D07  2D18               	goto	l3280
  6370  0D08                     u3300:	
  6371  0D08                     l3278:	
  6372  0D08  0924               	comf	___xxtofl@val,w
  6373  0D09  00AE               	movwf	___xxtofl@arg
  6374  0D0A  0925               	comf	___xxtofl@val+1,w
  6375  0D0B  00AF               	movwf	___xxtofl@arg+1
  6376  0D0C  0926               	comf	___xxtofl@val+2,w
  6377  0D0D  00B0               	movwf	___xxtofl@arg+2
  6378  0D0E  0927               	comf	___xxtofl@val+3,w
  6379  0D0F  00B1               	movwf	___xxtofl@arg+3
  6380  0D10  0AAE               	incf	___xxtofl@arg,f
  6381  0D11  1903               	skipnz
  6382  0D12  0AAF               	incf	___xxtofl@arg+1,f
  6383  0D13  1903               	skipnz
  6384  0D14  0AB0               	incf	___xxtofl@arg+2,f
  6385  0D15  1903               	skipnz
  6386  0D16  0AB1               	incf	___xxtofl@arg+3,f
  6387  0D17  2D20               	goto	l1294
  6388  0D18                     l3280:	
  6389  0D18  0827               	movf	___xxtofl@val+3,w
  6390  0D19  00B1               	movwf	___xxtofl@arg+3
  6391  0D1A  0826               	movf	___xxtofl@val+2,w
  6392  0D1B  00B0               	movwf	___xxtofl@arg+2
  6393  0D1C  0825               	movf	___xxtofl@val+1,w
  6394  0D1D  00AF               	movwf	___xxtofl@arg+1
  6395  0D1E  0824               	movf	___xxtofl@val,w
  6396  0D1F  00AE               	movwf	___xxtofl@arg
  6397  0D20                     l1294:	
  6398  0D20  0827               	movf	___xxtofl@val+3,w
  6399  0D21  0426               	iorwf	___xxtofl@val+2,w
  6400  0D22  0425               	iorwf	___xxtofl@val+1,w
  6401  0D23  0424               	iorwf	___xxtofl@val,w
  6402  0D24  1D03               	skipz
  6403  0D25  2D27               	goto	u3311
  6404  0D26  2D28               	goto	u3310
  6405  0D27                     u3311:	
  6406  0D27  2D31               	goto	l3286
  6407  0D28                     u3310:	
  6408  0D28                     l3282:	
  6409  0D28  3000               	movlw	0
  6410  0D29  00A7               	movwf	?___xxtofl+3
  6411  0D2A  3000               	movlw	0
  6412  0D2B  00A6               	movwf	?___xxtofl+2
  6413  0D2C  3000               	movlw	0
  6414  0D2D  00A5               	movwf	?___xxtofl+1
  6415  0D2E  3000               	movlw	0
  6416  0D2F  00A4               	movwf	?___xxtofl
  6417  0D30  2DA9               	goto	l1296
  6418  0D31                     l3286:	
  6419  0D31  3096               	movlw	150
  6420  0D32  00A8               	movwf	??___xxtofl
  6421  0D33  0828               	movf	??___xxtofl,w
  6422  0D34  00AD               	movwf	___xxtofl@exp
  6423  0D35  2D41               	goto	l3290
  6424  0D36                     l3288:	
  6425  0D36  3001               	movlw	1
  6426  0D37  00A8               	movwf	??___xxtofl
  6427  0D38  0828               	movf	??___xxtofl,w
  6428  0D39  07AD               	addwf	___xxtofl@exp,f
  6429  0D3A  3001               	movlw	1
  6430  0D3B                     u3325:	
  6431  0D3B  36B1               	lsrf	___xxtofl@arg+3,f
  6432  0D3C  0CB0               	rrf	___xxtofl@arg+2,f
  6433  0D3D  0CAF               	rrf	___xxtofl@arg+1,f
  6434  0D3E  0CAE               	rrf	___xxtofl@arg,f
  6435  0D3F  0B89               	decfsz	9,f
  6436  0D40  2D3B               	goto	u3325
  6437  0D41                     l3290:	
  6438  0D41  30FE               	movlw	254
  6439  0D42  0531               	andwf	___xxtofl@arg+3,w
  6440  0D43  1D03               	btfss	3,2
  6441  0D44  2D46               	goto	u3331
  6442  0D45  2D47               	goto	u3330
  6443  0D46                     u3331:	
  6444  0D46  2D36               	goto	l3288
  6445  0D47                     u3330:	
  6446  0D47  2D5B               	goto	l1300
  6447  0D48                     l3292:	
  6448  0D48  3001               	movlw	1
  6449  0D49  00A8               	movwf	??___xxtofl
  6450  0D4A  0828               	movf	??___xxtofl,w
  6451  0D4B  07AD               	addwf	___xxtofl@exp,f
  6452  0D4C                     l3294:	
  6453  0D4C  3001               	movlw	1
  6454  0D4D  07AE               	addwf	___xxtofl@arg,f
  6455  0D4E  3000               	movlw	0
  6456  0D4F  3DAF               	addwfc	___xxtofl@arg+1,f
  6457  0D50  3000               	movlw	0
  6458  0D51  3DB0               	addwfc	___xxtofl@arg+2,f
  6459  0D52  3000               	movlw	0
  6460  0D53  3DB1               	addwfc	___xxtofl@arg+3,f
  6461  0D54                     l3296:	
  6462  0D54  3001               	movlw	1
  6463  0D55                     u3345:	
  6464  0D55  36B1               	lsrf	___xxtofl@arg+3,f
  6465  0D56  0CB0               	rrf	___xxtofl@arg+2,f
  6466  0D57  0CAF               	rrf	___xxtofl@arg+1,f
  6467  0D58  0CAE               	rrf	___xxtofl@arg,f
  6468  0D59  0B89               	decfsz	9,f
  6469  0D5A  2D55               	goto	u3345
  6470  0D5B                     l1300:	
  6471  0D5B  30FF               	movlw	255
  6472  0D5C  0531               	andwf	___xxtofl@arg+3,w
  6473  0D5D  1D03               	btfss	3,2
  6474  0D5E  2D60               	goto	u3351
  6475  0D5F  2D61               	goto	u3350
  6476  0D60                     u3351:	
  6477  0D60  2D48               	goto	l3292
  6478  0D61                     u3350:	
  6479  0D61  2D6B               	goto	l3300
  6480  0D62                     l3298:	
  6481  0D62  3001               	movlw	1
  6482  0D63  02AD               	subwf	___xxtofl@exp,f
  6483  0D64  3001               	movlw	1
  6484  0D65                     u3365:	
  6485  0D65  35AE               	lslf	___xxtofl@arg,f
  6486  0D66  0DAF               	rlf	___xxtofl@arg+1,f
  6487  0D67  0DB0               	rlf	___xxtofl@arg+2,f
  6488  0D68  0DB1               	rlf	___xxtofl@arg+3,f
  6489  0D69  0B89               	decfsz	9,f
  6490  0D6A  2D65               	goto	u3365
  6491  0D6B                     l3300:	
  6492  0D6B  1BB0               	btfsc	___xxtofl@arg+2,7
  6493  0D6C  2D6E               	goto	u3371
  6494  0D6D  2D6F               	goto	u3370
  6495  0D6E                     u3371:	
  6496  0D6E  2D75               	goto	l1307
  6497  0D6F                     u3370:	
  6498  0D6F                     l3302:	
  6499  0D6F  3002               	movlw	2
  6500  0D70  022D               	subwf	___xxtofl@exp,w
  6501  0D71  1803               	skipnc
  6502  0D72  2D74               	goto	u3381
  6503  0D73  2D75               	goto	u3380
  6504  0D74                     u3381:	
  6505  0D74  2D62               	goto	l3298
  6506  0D75                     u3380:	
  6507  0D75                     l1307:	
  6508  0D75  182D               	btfsc	___xxtofl@exp,0
  6509  0D76  2D78               	goto	u3391
  6510  0D77  2D79               	goto	u3390
  6511  0D78                     u3391:	
  6512  0D78  2D81               	goto	l1308
  6513  0D79                     u3390:	
  6514  0D79                     l3304:	
  6515  0D79  30FF               	movlw	255
  6516  0D7A  05AE               	andwf	___xxtofl@arg,f
  6517  0D7B  30FF               	movlw	255
  6518  0D7C  05AF               	andwf	___xxtofl@arg+1,f
  6519  0D7D  307F               	movlw	127
  6520  0D7E  05B0               	andwf	___xxtofl@arg+2,f
  6521  0D7F  30FF               	movlw	255
  6522  0D80  05B1               	andwf	___xxtofl@arg+3,f
  6523  0D81                     l1308:	
  6524  0D81  1003               	clrc
  6525  0D82  0CAD               	rrf	___xxtofl@exp,f
  6526  0D83                     l3306:	
  6527  0D83  082D               	movf	___xxtofl@exp,w
  6528  0D84  00A8               	movwf	??___xxtofl
  6529  0D85  01A9               	clrf	??___xxtofl+1
  6530  0D86  01AA               	clrf	??___xxtofl+2
  6531  0D87  01AB               	clrf	??___xxtofl+3
  6532  0D88  3018               	movlw	24
  6533  0D89                     u3405:	
  6534  0D89  35A8               	lslf	??___xxtofl,f
  6535  0D8A  0DA9               	rlf	??___xxtofl+1,f
  6536  0D8B  0DAA               	rlf	??___xxtofl+2,f
  6537  0D8C  0DAB               	rlf	??___xxtofl+3,f
  6538  0D8D                     u3400:	
  6539  0D8D  0B89               	decfsz	9,f
  6540  0D8E  2D89               	goto	u3405
  6541  0D8F  0828               	movf	??___xxtofl,w
  6542  0D90  04AE               	iorwf	___xxtofl@arg,f
  6543  0D91  0829               	movf	??___xxtofl+1,w
  6544  0D92  04AF               	iorwf	___xxtofl@arg+1,f
  6545  0D93  082A               	movf	??___xxtofl+2,w
  6546  0D94  04B0               	iorwf	___xxtofl@arg+2,f
  6547  0D95  082B               	movf	??___xxtofl+3,w
  6548  0D96  04B1               	iorwf	___xxtofl@arg+3,f
  6549  0D97                     l3308:	
  6550  0D97  082C               	movf	___xxtofl@sign,w
  6551  0D98  1903               	btfsc	3,2
  6552  0D99  2D9B               	goto	u3411
  6553  0D9A  2D9C               	goto	u3410
  6554  0D9B                     u3411:	
  6555  0D9B  2DA1               	goto	l3314
  6556  0D9C                     u3410:	
  6557  0D9C                     l3310:	
  6558  0D9C  1FA7               	btfss	___xxtofl@val+3,7
  6559  0D9D  2D9F               	goto	u3421
  6560  0D9E  2DA0               	goto	u3420
  6561  0D9F                     u3421:	
  6562  0D9F  2DA1               	goto	l3314
  6563  0DA0                     u3420:	
  6564  0DA0                     l3312:	
  6565  0DA0  17B1               	bsf	___xxtofl@arg+3,7
  6566  0DA1                     l3314:	
  6567  0DA1  0831               	movf	___xxtofl@arg+3,w
  6568  0DA2  00A7               	movwf	?___xxtofl+3
  6569  0DA3  0830               	movf	___xxtofl@arg+2,w
  6570  0DA4  00A6               	movwf	?___xxtofl+2
  6571  0DA5  082F               	movf	___xxtofl@arg+1,w
  6572  0DA6  00A5               	movwf	?___xxtofl+1
  6573  0DA7  082E               	movf	___xxtofl@arg,w
  6574  0DA8  00A4               	movwf	?___xxtofl
  6575  0DA9                     l1296:	
  6576  0DA9  0008               	return
  6577  0DAA                     __end_of___xxtofl:	
  6578                           
  6579                           	psect	text16
  6580  0B7D                     __ptext16:	
  6581 ;; *************** function ___fltol *****************
  6582 ;; Defined at:
  6583 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;  f1              4    0[BANK0 ] unsigned char 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;  exp1            1   10[BANK0 ] unsigned char 
  6588 ;;  sign1           1    9[BANK0 ] unsigned char 
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  4    0[BANK0 ] long 
  6591 ;; Registers used:
  6592 ;;		wreg, status,2, status,0
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6598 ;;      Params:         0       4       0       0       0       0
  6599 ;;      Locals:         0       2       0       0       0       0
  6600 ;;      Temps:          0       5       0       0       0       0
  6601 ;;      Totals:         0      11       0       0       0       0
  6602 ;;Total ram usage:       11 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    4
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		_comunicacao
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           
  6613                           ;psect for function ___fltol
  6614  0B7D                     ___fltol:	
  6615  0B7D                     l2958:	
  6616                           ;incstack = 0
  6617                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6618                           
  6619  0B7D  1003               	clrc
  6620  0B7E  0020               	movlb	0	; select bank0
  6621  0B7F  0D22               	rlf	___fltol@f1+2,w
  6622  0B80  0D23               	rlf	___fltol@f1+3,w
  6623  0B81  00A4               	movwf	??___fltol
  6624  0B82  0824               	movf	??___fltol,w
  6625  0B83  00AA               	movwf	___fltol@exp1
  6626  0B84  082A               	movf	___fltol@exp1,w
  6627  0B85  1D03               	btfss	3,2
  6628  0B86  2B88               	goto	u2641
  6629  0B87  2B89               	goto	u2640
  6630  0B88                     u2641:	
  6631  0B88  2B92               	goto	l2964
  6632  0B89                     u2640:	
  6633  0B89                     l2960:	
  6634  0B89  3000               	movlw	0
  6635  0B8A  00A3               	movwf	?___fltol+3
  6636  0B8B  3000               	movlw	0
  6637  0B8C  00A2               	movwf	?___fltol+2
  6638  0B8D  3000               	movlw	0
  6639  0B8E  00A1               	movwf	?___fltol+1
  6640  0B8F  3000               	movlw	0
  6641  0B90  00A0               	movwf	?___fltol
  6642  0B91  2BF1               	goto	l1053
  6643  0B92                     l2964:	
  6644  0B92  0820               	movf	___fltol@f1,w
  6645  0B93  00A4               	movwf	??___fltol
  6646  0B94  0821               	movf	___fltol@f1+1,w
  6647  0B95  00A5               	movwf	??___fltol+1
  6648  0B96  0822               	movf	___fltol@f1+2,w
  6649  0B97  00A6               	movwf	??___fltol+2
  6650  0B98  0823               	movf	___fltol@f1+3,w
  6651  0B99  00A7               	movwf	??___fltol+3
  6652  0B9A  301F               	movlw	31
  6653  0B9B                     u2655:	
  6654  0B9B  36A7               	lsrf	??___fltol+3,f
  6655  0B9C  0CA6               	rrf	??___fltol+2,f
  6656  0B9D  0CA5               	rrf	??___fltol+1,f
  6657  0B9E  0CA4               	rrf	??___fltol,f
  6658  0B9F                     u2650:	
  6659  0B9F  0B89               	decfsz	9,f
  6660  0BA0  2B9B               	goto	u2655
  6661  0BA1  0824               	movf	??___fltol,w
  6662  0BA2  00A8               	movwf	??___fltol+4
  6663  0BA3  0828               	movf	??___fltol+4,w
  6664  0BA4  00A9               	movwf	___fltol@sign1
  6665  0BA5                     l2966:	
  6666  0BA5  17A2               	bsf	___fltol@f1+2,7
  6667  0BA6                     l2968:	
  6668  0BA6  30FF               	movlw	255
  6669  0BA7  05A0               	andwf	___fltol@f1,f
  6670  0BA8  30FF               	movlw	255
  6671  0BA9  05A1               	andwf	___fltol@f1+1,f
  6672  0BAA  30FF               	movlw	255
  6673  0BAB  05A2               	andwf	___fltol@f1+2,f
  6674  0BAC  3000               	movlw	0
  6675  0BAD  05A3               	andwf	___fltol@f1+3,f
  6676  0BAE                     l2970:	
  6677  0BAE  3096               	movlw	150
  6678  0BAF  02AA               	subwf	___fltol@exp1,f
  6679  0BB0                     l2972:	
  6680  0BB0  1FAA               	btfss	___fltol@exp1,7
  6681  0BB1  2BB3               	goto	u2661
  6682  0BB2  2BB4               	goto	u2660
  6683  0BB3                     u2661:	
  6684  0BB3  2BCC               	goto	l2982
  6685  0BB4                     u2660:	
  6686  0BB4                     l2974:	
  6687  0BB4  082A               	movf	___fltol@exp1,w
  6688  0BB5  3A80               	xorlw	128
  6689  0BB6  3E97               	addlw	151
  6690  0BB7  1803               	skipnc
  6691  0BB8  2BBA               	goto	u2671
  6692  0BB9  2BBB               	goto	u2670
  6693  0BBA                     u2671:	
  6694  0BBA  2BBC               	goto	l2980
  6695  0BBB                     u2670:	
  6696  0BBB  2B89               	goto	l2960
  6697  0BBC                     l2980:	
  6698  0BBC  3001               	movlw	1
  6699  0BBD                     u2685:	
  6700  0BBD  36A3               	lsrf	___fltol@f1+3,f
  6701  0BBE  0CA2               	rrf	___fltol@f1+2,f
  6702  0BBF  0CA1               	rrf	___fltol@f1+1,f
  6703  0BC0  0CA0               	rrf	___fltol@f1,f
  6704  0BC1  0B89               	decfsz	9,f
  6705  0BC2  2BBD               	goto	u2685
  6706  0BC3  3001               	movlw	1
  6707  0BC4  00A4               	movwf	??___fltol
  6708  0BC5  0824               	movf	??___fltol,w
  6709  0BC6  07AA               	addwf	___fltol@exp1,f
  6710  0BC7  1D03               	btfss	3,2
  6711  0BC8  2BCA               	goto	u2691
  6712  0BC9  2BCB               	goto	u2690
  6713  0BCA                     u2691:	
  6714  0BCA  2BBC               	goto	l2980
  6715  0BCB                     u2690:	
  6716  0BCB  2BE1               	goto	l2990
  6717  0BCC                     l2982:	
  6718  0BCC  3020               	movlw	32
  6719  0BCD  022A               	subwf	___fltol@exp1,w
  6720  0BCE  1C03               	skipc
  6721  0BCF  2BD1               	goto	u2701
  6722  0BD0  2BD2               	goto	u2700
  6723  0BD1                     u2701:	
  6724  0BD1  2BDC               	goto	l1060
  6725  0BD2                     u2700:	
  6726  0BD2  2B89               	goto	l2960
  6727  0BD3                     l2988:	
  6728  0BD3  3001               	movlw	1
  6729  0BD4                     u2715:	
  6730  0BD4  35A0               	lslf	___fltol@f1,f
  6731  0BD5  0DA1               	rlf	___fltol@f1+1,f
  6732  0BD6  0DA2               	rlf	___fltol@f1+2,f
  6733  0BD7  0DA3               	rlf	___fltol@f1+3,f
  6734  0BD8  0B89               	decfsz	9,f
  6735  0BD9  2BD4               	goto	u2715
  6736  0BDA  3001               	movlw	1
  6737  0BDB  02AA               	subwf	___fltol@exp1,f
  6738  0BDC                     l1060:	
  6739  0BDC  082A               	movf	___fltol@exp1,w
  6740  0BDD  1D03               	btfss	3,2
  6741  0BDE  2BE0               	goto	u2721
  6742  0BDF  2BE1               	goto	u2720
  6743  0BE0                     u2721:	
  6744  0BE0  2BD3               	goto	l2988
  6745  0BE1                     u2720:	
  6746  0BE1                     l2990:	
  6747  0BE1  0829               	movf	___fltol@sign1,w
  6748  0BE2  1903               	btfsc	3,2
  6749  0BE3  2BE5               	goto	u2731
  6750  0BE4  2BE6               	goto	u2730
  6751  0BE5                     u2731:	
  6752  0BE5  2BF1               	goto	l1063
  6753  0BE6                     u2730:	
  6754  0BE6                     l2992:	
  6755  0BE6  09A0               	comf	___fltol@f1,f
  6756  0BE7  09A1               	comf	___fltol@f1+1,f
  6757  0BE8  09A2               	comf	___fltol@f1+2,f
  6758  0BE9  09A3               	comf	___fltol@f1+3,f
  6759  0BEA  0AA0               	incf	___fltol@f1,f
  6760  0BEB  1903               	skipnz
  6761  0BEC  0AA1               	incf	___fltol@f1+1,f
  6762  0BED  1903               	skipnz
  6763  0BEE  0AA2               	incf	___fltol@f1+2,f
  6764  0BEF  1903               	skipnz
  6765  0BF0  0AA3               	incf	___fltol@f1+3,f
  6766  0BF1                     l1063:	
  6767  0BF1                     l1053:	
  6768  0BF1  0008               	return
  6769  0BF2                     __end_of___fltol:	
  6770                           
  6771                           	psect	text17
  6772  0053                     __ptext17:	
  6773 ;; *************** function ___flmul *****************
  6774 ;; Defined at:
  6775 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  b               4   18[BANK0 ] long 
  6778 ;;  a               4   22[BANK0 ] long 
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;  prod            4   38[BANK0 ] struct .
  6781 ;;  grs             4   32[BANK0 ] unsigned long 
  6782 ;;  temp            2   42[BANK0 ] struct .
  6783 ;;  bexp            1   37[BANK0 ] unsigned char 
  6784 ;;  aexp            1   36[BANK0 ] unsigned char 
  6785 ;;  sign            1   31[BANK0 ] unsigned char 
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  4   18[BANK0 ] unsigned char 
  6788 ;; Registers used:
  6789 ;;		wreg, status,2, status,0, pclath, cstack
  6790 ;; Tracked objects:
  6791 ;;		On entry : 0/0
  6792 ;;		On exit  : 0/0
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6795 ;;      Params:         0       8       0       0       0       0
  6796 ;;      Locals:         0      13       0       0       0       0
  6797 ;;      Temps:          0       5       0       0       0       0
  6798 ;;      Totals:         0      26       0       0       0       0
  6799 ;;Total ram usage:       26 bytes
  6800 ;; Hardware stack levels used:    1
  6801 ;; Hardware stack levels required when called:    5
  6802 ;; This function calls:
  6803 ;;		__Umul8_16
  6804 ;; This function is called by:
  6805 ;;		_comunicacao
  6806 ;;		_controle
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           
  6811                           ;psect for function ___flmul
  6812  0053                     ___flmul:	
  6813  0053                     l3134:	
  6814                           ;incstack = 0
  6815                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  6816                           
  6817  0053  0020               	movlb	0	; select bank0
  6818  0054  0835               	movf	___flmul@b+3,w
  6819  0055  3980               	andlw	128
  6820  0056  00BA               	movwf	??___flmul
  6821  0057  083A               	movf	??___flmul,w
  6822  0058  00BF               	movwf	___flmul@sign
  6823  0059                     l3136:	
  6824  0059  3535               	lslf	___flmul@b+3,w
  6825  005A  00BA               	movwf	??___flmul
  6826  005B  083A               	movf	??___flmul,w
  6827  005C  00C5               	movwf	___flmul@bexp
  6828  005D                     l3138:	
  6829  005D  1FB4               	btfss	___flmul@b+2,7
  6830  005E  2860               	goto	u3031
  6831  005F  2861               	goto	u3030
  6832  0060                     u3031:	
  6833  0060  2862               	goto	l3142
  6834  0061                     u3030:	
  6835  0061                     l3140:	
  6836  0061  1445               	bsf	___flmul@bexp,0
  6837  0062                     l3142:	
  6838  0062  0845               	movf	___flmul@bexp,w
  6839  0063  1903               	btfsc	3,2
  6840  0064  2866               	goto	u3041
  6841  0065  2867               	goto	u3040
  6842  0066                     u3041:	
  6843  0066  2876               	goto	l3150
  6844  0067                     u3040:	
  6845  0067                     l3144:	
  6846  0067  0A45               	incf	___flmul@bexp,w
  6847  0068  1D03               	btfss	3,2
  6848  0069  286B               	goto	u3051
  6849  006A  286C               	goto	u3050
  6850  006B                     u3051:	
  6851  006B  2874               	goto	l3148
  6852  006C                     u3050:	
  6853  006C                     l3146:	
  6854  006C  3000               	movlw	0
  6855  006D  00B5               	movwf	___flmul@b+3
  6856  006E  3000               	movlw	0
  6857  006F  00B4               	movwf	___flmul@b+2
  6858  0070  3000               	movlw	0
  6859  0071  00B3               	movwf	___flmul@b+1
  6860  0072  3000               	movlw	0
  6861  0073  00B2               	movwf	___flmul@b
  6862  0074                     l3148:	
  6863  0074  17B4               	bsf	___flmul@b+2,7
  6864  0075  287E               	goto	l3152
  6865  0076                     l3150:	
  6866  0076  3000               	movlw	0
  6867  0077  00B5               	movwf	___flmul@b+3
  6868  0078  3000               	movlw	0
  6869  0079  00B4               	movwf	___flmul@b+2
  6870  007A  3000               	movlw	0
  6871  007B  00B3               	movwf	___flmul@b+1
  6872  007C  3000               	movlw	0
  6873  007D  00B2               	movwf	___flmul@b
  6874  007E                     l3152:	
  6875  007E  0839               	movf	___flmul@a+3,w
  6876  007F  3980               	andlw	128
  6877  0080  00BA               	movwf	??___flmul
  6878  0081  083A               	movf	??___flmul,w
  6879  0082  06BF               	xorwf	___flmul@sign,f
  6880  0083                     l3154:	
  6881  0083  3539               	lslf	___flmul@a+3,w
  6882  0084  00BA               	movwf	??___flmul
  6883  0085  083A               	movf	??___flmul,w
  6884  0086  00C4               	movwf	___flmul@aexp
  6885  0087                     l3156:	
  6886  0087  1FB8               	btfss	___flmul@a+2,7
  6887  0088  288A               	goto	u3061
  6888  0089  288B               	goto	u3060
  6889  008A                     u3061:	
  6890  008A  288C               	goto	l3160
  6891  008B                     u3060:	
  6892  008B                     l3158:	
  6893  008B  1444               	bsf	___flmul@aexp,0
  6894  008C                     l3160:	
  6895  008C  0844               	movf	___flmul@aexp,w
  6896  008D  1903               	btfsc	3,2
  6897  008E  2890               	goto	u3071
  6898  008F  2891               	goto	u3070
  6899  0090                     u3071:	
  6900  0090  28A0               	goto	l3168
  6901  0091                     u3070:	
  6902  0091                     l3162:	
  6903  0091  0A44               	incf	___flmul@aexp,w
  6904  0092  1D03               	btfss	3,2
  6905  0093  2895               	goto	u3081
  6906  0094  2896               	goto	u3080
  6907  0095                     u3081:	
  6908  0095  289E               	goto	l3166
  6909  0096                     u3080:	
  6910  0096                     l3164:	
  6911  0096  3000               	movlw	0
  6912  0097  00B9               	movwf	___flmul@a+3
  6913  0098  3000               	movlw	0
  6914  0099  00B8               	movwf	___flmul@a+2
  6915  009A  3000               	movlw	0
  6916  009B  00B7               	movwf	___flmul@a+1
  6917  009C  3000               	movlw	0
  6918  009D  00B6               	movwf	___flmul@a
  6919  009E                     l3166:	
  6920  009E  17B8               	bsf	___flmul@a+2,7
  6921  009F  28A8               	goto	l3170
  6922  00A0                     l3168:	
  6923  00A0  3000               	movlw	0
  6924  00A1  00B9               	movwf	___flmul@a+3
  6925  00A2  3000               	movlw	0
  6926  00A3  00B8               	movwf	___flmul@a+2
  6927  00A4  3000               	movlw	0
  6928  00A5  00B7               	movwf	___flmul@a+1
  6929  00A6  3000               	movlw	0
  6930  00A7  00B6               	movwf	___flmul@a
  6931  00A8                     l3170:	
  6932  00A8  0844               	movf	___flmul@aexp,w
  6933  00A9  1903               	btfsc	3,2
  6934  00AA  28AC               	goto	u3091
  6935  00AB  28AD               	goto	u3090
  6936  00AC                     u3091:	
  6937  00AC  28B2               	goto	l3174
  6938  00AD                     u3090:	
  6939  00AD                     l3172:	
  6940  00AD  0845               	movf	___flmul@bexp,w
  6941  00AE  1D03               	btfss	3,2
  6942  00AF  28B1               	goto	u3101
  6943  00B0  28B2               	goto	u3100
  6944  00B1                     u3101:	
  6945  00B1  28BB               	goto	l3178
  6946  00B2                     u3100:	
  6947  00B2                     l3174:	
  6948  00B2  3000               	movlw	0
  6949  00B3  00B5               	movwf	?___flmul+3
  6950  00B4  3000               	movlw	0
  6951  00B5  00B4               	movwf	?___flmul+2
  6952  00B6  3000               	movlw	0
  6953  00B7  00B3               	movwf	?___flmul+1
  6954  00B8  3000               	movlw	0
  6955  00B9  00B2               	movwf	?___flmul
  6956  00BA  2AA9               	goto	l1256
  6957  00BB                     l3178:	
  6958  00BB  0832               	movf	___flmul@b,w
  6959  00BC  00BA               	movwf	??___flmul
  6960  00BD  083A               	movf	??___flmul,w
  6961  00BE  00A0               	movwf	__Umul8_16@multiplicand
  6962  00BF  0838               	movf	___flmul@a+2,w
  6963  00C0  318A  227A  3180   	fcall	__Umul8_16
  6964  00C3  0020               	movlb	0	; select bank0
  6965  00C4  0821               	movf	?__Umul8_16+1,w
  6966  00C5  00CB               	movwf	___flmul@temp+1
  6967  00C6  0820               	movf	?__Umul8_16,w
  6968  00C7  00CA               	movwf	___flmul@temp
  6969  00C8                     l3180:	
  6970  00C8  084A               	movf	___flmul@temp,w
  6971  00C9  00BA               	movwf	??___flmul
  6972  00CA  01BB               	clrf	??___flmul+1
  6973  00CB  01BC               	clrf	??___flmul+2
  6974  00CC  01BD               	clrf	??___flmul+3
  6975  00CD  083D               	movf	??___flmul+3,w
  6976  00CE  00C3               	movwf	___flmul@grs+3
  6977  00CF  083C               	movf	??___flmul+2,w
  6978  00D0  00C2               	movwf	___flmul@grs+2
  6979  00D1  083B               	movf	??___flmul+1,w
  6980  00D2  00C1               	movwf	___flmul@grs+1
  6981  00D3  083A               	movf	??___flmul,w
  6982  00D4  00C0               	movwf	___flmul@grs
  6983  00D5                     l3182:	
  6984  00D5  084B               	movf	___flmul@temp+1,w
  6985  00D6  00BA               	movwf	??___flmul
  6986  00D7  01BB               	clrf	??___flmul+1
  6987  00D8  01BC               	clrf	??___flmul+2
  6988  00D9  01BD               	clrf	??___flmul+3
  6989  00DA  083D               	movf	??___flmul+3,w
  6990  00DB  00C9               	movwf	___flmul@prod+3
  6991  00DC  083C               	movf	??___flmul+2,w
  6992  00DD  00C8               	movwf	___flmul@prod+2
  6993  00DE  083B               	movf	??___flmul+1,w
  6994  00DF  00C7               	movwf	___flmul@prod+1
  6995  00E0  083A               	movf	??___flmul,w
  6996  00E1  00C6               	movwf	___flmul@prod
  6997  00E2  0833               	movf	___flmul@b+1,w
  6998  00E3  00BA               	movwf	??___flmul
  6999  00E4  083A               	movf	??___flmul,w
  7000  00E5  00A0               	movwf	__Umul8_16@multiplicand
  7001  00E6  0837               	movf	___flmul@a+1,w
  7002  00E7  318A  227A  3180   	fcall	__Umul8_16
  7003  00EA  0020               	movlb	0	; select bank0
  7004  00EB  0821               	movf	?__Umul8_16+1,w
  7005  00EC  00CB               	movwf	___flmul@temp+1
  7006  00ED  0820               	movf	?__Umul8_16,w
  7007  00EE  00CA               	movwf	___flmul@temp
  7008  00EF                     l3184:	
  7009  00EF  084A               	movf	___flmul@temp,w
  7010  00F0  00BA               	movwf	??___flmul
  7011  00F1  01BB               	clrf	??___flmul+1
  7012  00F2  01BC               	clrf	??___flmul+2
  7013  00F3  01BD               	clrf	??___flmul+3
  7014  00F4  083A               	movf	??___flmul,w
  7015  00F5  07C0               	addwf	___flmul@grs,f
  7016  00F6  083B               	movf	??___flmul+1,w
  7017  00F7  3DC1               	addwfc	___flmul@grs+1,f
  7018  00F8  083C               	movf	??___flmul+2,w
  7019  00F9  3DC2               	addwfc	___flmul@grs+2,f
  7020  00FA  083D               	movf	??___flmul+3,w
  7021  00FB  3DC3               	addwfc	___flmul@grs+3,f
  7022  00FC                     l3186:	
  7023  00FC  084B               	movf	___flmul@temp+1,w
  7024  00FD  00BA               	movwf	??___flmul
  7025  00FE  01BB               	clrf	??___flmul+1
  7026  00FF  01BC               	clrf	??___flmul+2
  7027  0100  01BD               	clrf	??___flmul+3
  7028  0101  083A               	movf	??___flmul,w
  7029  0102  07C6               	addwf	___flmul@prod,f
  7030  0103  083B               	movf	??___flmul+1,w
  7031  0104  3DC7               	addwfc	___flmul@prod+1,f
  7032  0105  083C               	movf	??___flmul+2,w
  7033  0106  3DC8               	addwfc	___flmul@prod+2,f
  7034  0107  083D               	movf	??___flmul+3,w
  7035  0108  3DC9               	addwfc	___flmul@prod+3,f
  7036  0109  0834               	movf	___flmul@b+2,w
  7037  010A  00BA               	movwf	??___flmul
  7038  010B  083A               	movf	??___flmul,w
  7039  010C  00A0               	movwf	__Umul8_16@multiplicand
  7040  010D  0836               	movf	___flmul@a,w
  7041  010E  318A  227A  3180   	fcall	__Umul8_16
  7042  0111  0020               	movlb	0	; select bank0
  7043  0112  0821               	movf	?__Umul8_16+1,w
  7044  0113  00CB               	movwf	___flmul@temp+1
  7045  0114  0820               	movf	?__Umul8_16,w
  7046  0115  00CA               	movwf	___flmul@temp
  7047  0116                     l3188:	
  7048  0116  084A               	movf	___flmul@temp,w
  7049  0117  00BA               	movwf	??___flmul
  7050  0118  01BB               	clrf	??___flmul+1
  7051  0119  01BC               	clrf	??___flmul+2
  7052  011A  01BD               	clrf	??___flmul+3
  7053  011B  083A               	movf	??___flmul,w
  7054  011C  07C0               	addwf	___flmul@grs,f
  7055  011D  083B               	movf	??___flmul+1,w
  7056  011E  3DC1               	addwfc	___flmul@grs+1,f
  7057  011F  083C               	movf	??___flmul+2,w
  7058  0120  3DC2               	addwfc	___flmul@grs+2,f
  7059  0121  083D               	movf	??___flmul+3,w
  7060  0122  3DC3               	addwfc	___flmul@grs+3,f
  7061  0123                     l3190:	
  7062  0123  084B               	movf	___flmul@temp+1,w
  7063  0124  00BA               	movwf	??___flmul
  7064  0125  01BB               	clrf	??___flmul+1
  7065  0126  01BC               	clrf	??___flmul+2
  7066  0127  01BD               	clrf	??___flmul+3
  7067  0128  083A               	movf	??___flmul,w
  7068  0129  07C6               	addwf	___flmul@prod,f
  7069  012A  083B               	movf	??___flmul+1,w
  7070  012B  3DC7               	addwfc	___flmul@prod+1,f
  7071  012C  083C               	movf	??___flmul+2,w
  7072  012D  3DC8               	addwfc	___flmul@prod+2,f
  7073  012E  083D               	movf	??___flmul+3,w
  7074  012F  3DC9               	addwfc	___flmul@prod+3,f
  7075  0130                     l3192:	
  7076  0130  3008               	movlw	8
  7077  0131                     u3115:	
  7078  0131  35C0               	lslf	___flmul@grs,f
  7079  0132  0DC1               	rlf	___flmul@grs+1,f
  7080  0133  0DC2               	rlf	___flmul@grs+2,f
  7081  0134  0DC3               	rlf	___flmul@grs+3,f
  7082  0135  0B89               	decfsz	9,f
  7083  0136  2931               	goto	u3115
  7084  0137                     l3194:	
  7085  0137  0833               	movf	___flmul@b+1,w
  7086  0138  00BA               	movwf	??___flmul
  7087  0139  083A               	movf	??___flmul,w
  7088  013A  00A0               	movwf	__Umul8_16@multiplicand
  7089  013B  0836               	movf	___flmul@a,w
  7090  013C  318A  227A  3180   	fcall	__Umul8_16
  7091  013F  0020               	movlb	0	; select bank0
  7092  0140  0821               	movf	?__Umul8_16+1,w
  7093  0141  00CB               	movwf	___flmul@temp+1
  7094  0142  0820               	movf	?__Umul8_16,w
  7095  0143  00CA               	movwf	___flmul@temp
  7096  0144                     l3196:	
  7097  0144  084A               	movf	___flmul@temp,w
  7098  0145  07C0               	addwf	___flmul@grs,f
  7099  0146  084B               	movf	___flmul@temp+1,w
  7100  0147  3DC1               	addwfc	___flmul@grs+1,f
  7101  0148  3000               	movlw	0
  7102  0149  3DC2               	addwfc	___flmul@grs+2,f
  7103  014A  3DC3               	addwfc	___flmul@grs+3,f
  7104  014B                     l3198:	
  7105  014B  0832               	movf	___flmul@b,w
  7106  014C  00BA               	movwf	??___flmul
  7107  014D  083A               	movf	??___flmul,w
  7108  014E  00A0               	movwf	__Umul8_16@multiplicand
  7109  014F  0837               	movf	___flmul@a+1,w
  7110  0150  318A  227A  3180   	fcall	__Umul8_16
  7111  0153  0020               	movlb	0	; select bank0
  7112  0154  0821               	movf	?__Umul8_16+1,w
  7113  0155  00CB               	movwf	___flmul@temp+1
  7114  0156  0820               	movf	?__Umul8_16,w
  7115  0157  00CA               	movwf	___flmul@temp
  7116  0158                     l3200:	
  7117  0158  084A               	movf	___flmul@temp,w
  7118  0159  07C0               	addwf	___flmul@grs,f
  7119  015A  084B               	movf	___flmul@temp+1,w
  7120  015B  3DC1               	addwfc	___flmul@grs+1,f
  7121  015C  3000               	movlw	0
  7122  015D  3DC2               	addwfc	___flmul@grs+2,f
  7123  015E  3DC3               	addwfc	___flmul@grs+3,f
  7124  015F                     l3202:	
  7125  015F  3008               	movlw	8
  7126  0160                     u3125:	
  7127  0160  35C0               	lslf	___flmul@grs,f
  7128  0161  0DC1               	rlf	___flmul@grs+1,f
  7129  0162  0DC2               	rlf	___flmul@grs+2,f
  7130  0163  0DC3               	rlf	___flmul@grs+3,f
  7131  0164  0B89               	decfsz	9,f
  7132  0165  2960               	goto	u3125
  7133  0166  0832               	movf	___flmul@b,w
  7134  0167  00BA               	movwf	??___flmul
  7135  0168  083A               	movf	??___flmul,w
  7136  0169  00A0               	movwf	__Umul8_16@multiplicand
  7137  016A  0836               	movf	___flmul@a,w
  7138  016B  318A  227A  3180   	fcall	__Umul8_16
  7139  016E  0020               	movlb	0	; select bank0
  7140  016F  0821               	movf	?__Umul8_16+1,w
  7141  0170  00CB               	movwf	___flmul@temp+1
  7142  0171  0820               	movf	?__Umul8_16,w
  7143  0172  00CA               	movwf	___flmul@temp
  7144  0173                     l3204:	
  7145  0173  084A               	movf	___flmul@temp,w
  7146  0174  07C0               	addwf	___flmul@grs,f
  7147  0175  084B               	movf	___flmul@temp+1,w
  7148  0176  3DC1               	addwfc	___flmul@grs+1,f
  7149  0177  3000               	movlw	0
  7150  0178  3DC2               	addwfc	___flmul@grs+2,f
  7151  0179  3DC3               	addwfc	___flmul@grs+3,f
  7152  017A                     l3206:	
  7153  017A  0833               	movf	___flmul@b+1,w
  7154  017B  00BA               	movwf	??___flmul
  7155  017C  083A               	movf	??___flmul,w
  7156  017D  00A0               	movwf	__Umul8_16@multiplicand
  7157  017E  0838               	movf	___flmul@a+2,w
  7158  017F  318A  227A  3180   	fcall	__Umul8_16
  7159  0182  0020               	movlb	0	; select bank0
  7160  0183  0821               	movf	?__Umul8_16+1,w
  7161  0184  00CB               	movwf	___flmul@temp+1
  7162  0185  0820               	movf	?__Umul8_16,w
  7163  0186  00CA               	movwf	___flmul@temp
  7164  0187  084A               	movf	___flmul@temp,w
  7165  0188  07C6               	addwf	___flmul@prod,f
  7166  0189  084B               	movf	___flmul@temp+1,w
  7167  018A  3DC7               	addwfc	___flmul@prod+1,f
  7168  018B  3000               	movlw	0
  7169  018C  3DC8               	addwfc	___flmul@prod+2,f
  7170  018D  3DC9               	addwfc	___flmul@prod+3,f
  7171  018E                     l3208:	
  7172  018E  0834               	movf	___flmul@b+2,w
  7173  018F  00BA               	movwf	??___flmul
  7174  0190  083A               	movf	??___flmul,w
  7175  0191  00A0               	movwf	__Umul8_16@multiplicand
  7176  0192  0837               	movf	___flmul@a+1,w
  7177  0193  318A  227A  3180   	fcall	__Umul8_16
  7178  0196  0020               	movlb	0	; select bank0
  7179  0197  0821               	movf	?__Umul8_16+1,w
  7180  0198  00CB               	movwf	___flmul@temp+1
  7181  0199  0820               	movf	?__Umul8_16,w
  7182  019A  00CA               	movwf	___flmul@temp
  7183  019B                     l3210:	
  7184  019B  084A               	movf	___flmul@temp,w
  7185  019C  07C6               	addwf	___flmul@prod,f
  7186  019D  084B               	movf	___flmul@temp+1,w
  7187  019E  3DC7               	addwfc	___flmul@prod+1,f
  7188  019F  3000               	movlw	0
  7189  01A0  3DC8               	addwfc	___flmul@prod+2,f
  7190  01A1  3DC9               	addwfc	___flmul@prod+3,f
  7191  01A2  0834               	movf	___flmul@b+2,w
  7192  01A3  00BA               	movwf	??___flmul
  7193  01A4  083A               	movf	??___flmul,w
  7194  01A5  00A0               	movwf	__Umul8_16@multiplicand
  7195  01A6  0838               	movf	___flmul@a+2,w
  7196  01A7  318A  227A  3180   	fcall	__Umul8_16
  7197  01AA  0020               	movlb	0	; select bank0
  7198  01AB  0821               	movf	?__Umul8_16+1,w
  7199  01AC  00CB               	movwf	___flmul@temp+1
  7200  01AD  0820               	movf	?__Umul8_16,w
  7201  01AE  00CA               	movwf	___flmul@temp
  7202  01AF                     l3212:	
  7203  01AF  084A               	movf	___flmul@temp,w
  7204  01B0  00BA               	movwf	??___flmul
  7205  01B1  084B               	movf	___flmul@temp+1,w
  7206  01B2  00BB               	movwf	??___flmul+1
  7207  01B3  01BC               	clrf	??___flmul+2
  7208  01B4  01BD               	clrf	??___flmul+3
  7209  01B5  3008               	movlw	8
  7210  01B6                     u3135:	
  7211  01B6  35BA               	lslf	??___flmul,f
  7212  01B7  0DBB               	rlf	??___flmul+1,f
  7213  01B8  0DBC               	rlf	??___flmul+2,f
  7214  01B9  0DBD               	rlf	??___flmul+3,f
  7215  01BA                     u3130:	
  7216  01BA  0B89               	decfsz	9,f
  7217  01BB  29B6               	goto	u3135
  7218  01BC  083A               	movf	??___flmul,w
  7219  01BD  07C6               	addwf	___flmul@prod,f
  7220  01BE  083B               	movf	??___flmul+1,w
  7221  01BF  3DC7               	addwfc	___flmul@prod+1,f
  7222  01C0  083C               	movf	??___flmul+2,w
  7223  01C1  3DC8               	addwfc	___flmul@prod+2,f
  7224  01C2  083D               	movf	??___flmul+3,w
  7225  01C3  3DC9               	addwfc	___flmul@prod+3,f
  7226  01C4                     l3214:	
  7227  01C4  0840               	movf	___flmul@grs,w
  7228  01C5  00BA               	movwf	??___flmul
  7229  01C6  0841               	movf	___flmul@grs+1,w
  7230  01C7  00BB               	movwf	??___flmul+1
  7231  01C8  0842               	movf	___flmul@grs+2,w
  7232  01C9  00BC               	movwf	??___flmul+2
  7233  01CA  0843               	movf	___flmul@grs+3,w
  7234  01CB  00BD               	movwf	??___flmul+3
  7235  01CC  3018               	movlw	24
  7236  01CD                     u3145:	
  7237  01CD  36BD               	lsrf	??___flmul+3,f
  7238  01CE  0CBC               	rrf	??___flmul+2,f
  7239  01CF  0CBB               	rrf	??___flmul+1,f
  7240  01D0  0CBA               	rrf	??___flmul,f
  7241  01D1                     u3140:	
  7242  01D1  0B89               	decfsz	9,f
  7243  01D2  29CD               	goto	u3145
  7244  01D3  083A               	movf	??___flmul,w
  7245  01D4  07C6               	addwf	___flmul@prod,f
  7246  01D5  083B               	movf	??___flmul+1,w
  7247  01D6  3DC7               	addwfc	___flmul@prod+1,f
  7248  01D7  083C               	movf	??___flmul+2,w
  7249  01D8  3DC8               	addwfc	___flmul@prod+2,f
  7250  01D9  083D               	movf	??___flmul+3,w
  7251  01DA  3DC9               	addwfc	___flmul@prod+3,f
  7252  01DB                     l3216:	
  7253  01DB  3008               	movlw	8
  7254  01DC                     u3155:	
  7255  01DC  35C0               	lslf	___flmul@grs,f
  7256  01DD  0DC1               	rlf	___flmul@grs+1,f
  7257  01DE  0DC2               	rlf	___flmul@grs+2,f
  7258  01DF  0DC3               	rlf	___flmul@grs+3,f
  7259  01E0  0B89               	decfsz	9,f
  7260  01E1  29DC               	goto	u3155
  7261  01E2                     l3218:	
  7262  01E2  0845               	movf	___flmul@bexp,w
  7263  01E3  0744               	addwf	___flmul@aexp,w
  7264  01E4  00BA               	movwf	??___flmul
  7265  01E5  01BB               	clrf	??___flmul+1
  7266  01E6  0DBB               	rlf	??___flmul+1,f
  7267  01E7  083A               	movf	??___flmul,w
  7268  01E8  3E82               	addlw	130
  7269  01E9  00CA               	movwf	___flmul@temp
  7270  01EA  30FF               	movlw	255
  7271  01EB  3D3B               	addwfc	??___flmul+1,w
  7272  01EC  00CB               	movwf	___flmul@temp+1
  7273  01ED  2A05               	goto	l3230
  7274  01EE                     l3220:	
  7275  01EE  3001               	movlw	1
  7276  01EF                     u3165:	
  7277  01EF  35C6               	lslf	___flmul@prod,f
  7278  01F0  0DC7               	rlf	___flmul@prod+1,f
  7279  01F1  0DC8               	rlf	___flmul@prod+2,f
  7280  01F2  0DC9               	rlf	___flmul@prod+3,f
  7281  01F3  0B89               	decfsz	9,f
  7282  01F4  29EF               	goto	u3165
  7283  01F5                     l3222:	
  7284  01F5  1FC3               	btfss	___flmul@grs+3,7
  7285  01F6  29F8               	goto	u3171
  7286  01F7  29F9               	goto	u3170
  7287  01F8                     u3171:	
  7288  01F8  29FA               	goto	l3226
  7289  01F9                     u3170:	
  7290  01F9                     l3224:	
  7291  01F9  1446               	bsf	___flmul@prod,0
  7292  01FA                     l3226:	
  7293  01FA  3001               	movlw	1
  7294  01FB                     u3185:	
  7295  01FB  35C0               	lslf	___flmul@grs,f
  7296  01FC  0DC1               	rlf	___flmul@grs+1,f
  7297  01FD  0DC2               	rlf	___flmul@grs+2,f
  7298  01FE  0DC3               	rlf	___flmul@grs+3,f
  7299  01FF  0B89               	decfsz	9,f
  7300  0200  29FB               	goto	u3185
  7301  0201                     l3228:	
  7302  0201  30FF               	movlw	255
  7303  0202  07CA               	addwf	___flmul@temp,f
  7304  0203  30FF               	movlw	255
  7305  0204  3DCB               	addwfc	___flmul@temp+1,f
  7306  0205                     l3230:	
  7307  0205  1FC8               	btfss	___flmul@prod+2,7
  7308  0206  2A08               	goto	u3191
  7309  0207  2A09               	goto	u3190
  7310  0208                     u3191:	
  7311  0208  29EE               	goto	l3220
  7312  0209                     u3190:	
  7313  0209                     l3232:	
  7314  0209  01C4               	clrf	___flmul@aexp
  7315  020A                     l3234:	
  7316  020A  1FC3               	btfss	___flmul@grs+3,7
  7317  020B  2A0D               	goto	u3201
  7318  020C  2A0E               	goto	u3200
  7319  020D                     u3201:	
  7320  020D  2A2A               	goto	l3242
  7321  020E                     u3200:	
  7322  020E                     l3236:	
  7323  020E  30FF               	movlw	255
  7324  020F  0540               	andwf	___flmul@grs,w
  7325  0210  00BA               	movwf	??___flmul
  7326  0211  30FF               	movlw	255
  7327  0212  0541               	andwf	___flmul@grs+1,w
  7328  0213  00BB               	movwf	??___flmul+1
  7329  0214  30FF               	movlw	255
  7330  0215  0542               	andwf	___flmul@grs+2,w
  7331  0216  00BC               	movwf	??___flmul+2
  7332  0217  307F               	movlw	127
  7333  0218  0543               	andwf	___flmul@grs+3,w
  7334  0219  00BD               	movwf	??___flmul+3
  7335  021A  083D               	movf	??___flmul+3,w
  7336  021B  043C               	iorwf	??___flmul+2,w
  7337  021C  043B               	iorwf	??___flmul+1,w
  7338  021D  043A               	iorwf	??___flmul,w
  7339  021E  1903               	skipnz
  7340  021F  2A21               	goto	u3211
  7341  0220  2A22               	goto	u3210
  7342  0221                     u3211:	
  7343  0221  2A25               	goto	l1262
  7344  0222                     u3210:	
  7345  0222                     l3238:	
  7346  0222  01C4               	clrf	___flmul@aexp
  7347  0223  0AC4               	incf	___flmul@aexp,f
  7348  0224  2A2A               	goto	l3242
  7349  0225                     l1262:	
  7350  0225  1C46               	btfss	___flmul@prod,0
  7351  0226  2A28               	goto	u3221
  7352  0227  2A29               	goto	u3220
  7353  0228                     u3221:	
  7354  0228  2A2A               	goto	l3242
  7355  0229                     u3220:	
  7356  0229  2A22               	goto	l3238
  7357  022A                     l3242:	
  7358  022A  0844               	movf	___flmul@aexp,w
  7359  022B  1903               	btfsc	3,2
  7360  022C  2A2E               	goto	u3231
  7361  022D  2A2F               	goto	u3230
  7362  022E                     u3231:	
  7363  022E  2A57               	goto	l3252
  7364  022F                     u3230:	
  7365  022F                     l3244:	
  7366  022F  3001               	movlw	1
  7367  0230  07C6               	addwf	___flmul@prod,f
  7368  0231  3000               	movlw	0
  7369  0232  3DC7               	addwfc	___flmul@prod+1,f
  7370  0233  3000               	movlw	0
  7371  0234  3DC8               	addwfc	___flmul@prod+2,f
  7372  0235  3000               	movlw	0
  7373  0236  3DC9               	addwfc	___flmul@prod+3,f
  7374  0237                     l3246:	
  7375  0237  1C49               	btfss	___flmul@prod+3,0
  7376  0238  2A3A               	goto	u3241
  7377  0239  2A3B               	goto	u3240
  7378  023A                     u3241:	
  7379  023A  2A57               	goto	l3252
  7380  023B                     u3240:	
  7381  023B                     l3248:	
  7382  023B  0846               	movf	___flmul@prod,w
  7383  023C  00BA               	movwf	??___flmul
  7384  023D  0847               	movf	___flmul@prod+1,w
  7385  023E  00BB               	movwf	??___flmul+1
  7386  023F  0848               	movf	___flmul@prod+2,w
  7387  0240  00BC               	movwf	??___flmul+2
  7388  0241  0849               	movf	___flmul@prod+3,w
  7389  0242  00BD               	movwf	??___flmul+3
  7390  0243  3001               	movlw	1
  7391  0244  00BE               	movwf	??___flmul+4
  7392  0245                     u3255:	
  7393  0245  37BD               	asrf	??___flmul+3,f
  7394  0246  0CBC               	rrf	??___flmul+2,f
  7395  0247  0CBB               	rrf	??___flmul+1,f
  7396  0248  0CBA               	rrf	??___flmul,f
  7397  0249                     u3250:	
  7398  0249  0BBE               	decfsz	??___flmul+4,f
  7399  024A  2A45               	goto	u3255
  7400  024B  083D               	movf	??___flmul+3,w
  7401  024C  00C9               	movwf	___flmul@prod+3
  7402  024D  083C               	movf	??___flmul+2,w
  7403  024E  00C8               	movwf	___flmul@prod+2
  7404  024F  083B               	movf	??___flmul+1,w
  7405  0250  00C7               	movwf	___flmul@prod+1
  7406  0251  083A               	movf	??___flmul,w
  7407  0252  00C6               	movwf	___flmul@prod
  7408  0253                     l3250:	
  7409  0253  3001               	movlw	1
  7410  0254  07CA               	addwf	___flmul@temp,f
  7411  0255  3000               	movlw	0
  7412  0256  3DCB               	addwfc	___flmul@temp+1,f
  7413  0257                     l3252:	
  7414  0257  084B               	movf	___flmul@temp+1,w
  7415  0258  3A80               	xorlw	128
  7416  0259  00BA               	movwf	??___flmul
  7417  025A  3080               	movlw	128
  7418  025B  023A               	subwf	??___flmul,w
  7419  025C  1D03               	skipz
  7420  025D  2A60               	goto	u3265
  7421  025E  30FF               	movlw	255
  7422  025F  024A               	subwf	___flmul@temp,w
  7423  0260                     u3265:	
  7424  0260  1C03               	skipc
  7425  0261  2A63               	goto	u3261
  7426  0262  2A64               	goto	u3260
  7427  0263                     u3261:	
  7428  0263  2A6E               	goto	l3256
  7429  0264                     u3260:	
  7430  0264                     l3254:	
  7431  0264  307F               	movlw	127
  7432  0265  0020               	movlb	0	; select bank0
  7433  0266  00C9               	movwf	___flmul@prod+3
  7434  0267  3080               	movlw	128
  7435  0268  00C8               	movwf	___flmul@prod+2
  7436  0269  3000               	movlw	0
  7437  026A  00C7               	movwf	___flmul@prod+1
  7438  026B  3000               	movlw	0
  7439  026C  00C6               	movwf	___flmul@prod
  7440  026D  2A9D               	goto	l1268
  7441  026E                     l3256:	
  7442  026E  0020               	movlb	0	; select bank0
  7443  026F  084B               	movf	___flmul@temp+1,w
  7444  0270  3A80               	xorlw	128
  7445  0271  00BA               	movwf	??___flmul
  7446  0272  3080               	movlw	128
  7447  0273  023A               	subwf	??___flmul,w
  7448  0274  1D03               	skipz
  7449  0275  2A78               	goto	u3275
  7450  0276  3001               	movlw	1
  7451  0277  024A               	subwf	___flmul@temp,w
  7452  0278                     u3275:	
  7453  0278  1803               	skipnc
  7454  0279  2A7B               	goto	u3271
  7455  027A  2A7C               	goto	u3270
  7456  027B                     u3271:	
  7457  027B  2A87               	goto	l3262
  7458  027C                     u3270:	
  7459  027C                     l3258:	
  7460  027C  3000               	movlw	0
  7461  027D  0020               	movlb	0	; select bank0
  7462  027E  00C9               	movwf	___flmul@prod+3
  7463  027F  3000               	movlw	0
  7464  0280  00C8               	movwf	___flmul@prod+2
  7465  0281  3000               	movlw	0
  7466  0282  00C7               	movwf	___flmul@prod+1
  7467  0283  3000               	movlw	0
  7468  0284  00C6               	movwf	___flmul@prod
  7469  0285                     l3260:	
  7470  0285  01BF               	clrf	___flmul@sign
  7471  0286  2A9D               	goto	l1268
  7472  0287                     l3262:	
  7473  0287  0020               	movlb	0	; select bank0
  7474  0288  084A               	movf	___flmul@temp,w
  7475  0289  00BA               	movwf	??___flmul
  7476  028A  083A               	movf	??___flmul,w
  7477  028B  00C5               	movwf	___flmul@bexp
  7478  028C  30FF               	movlw	255
  7479  028D  05C6               	andwf	___flmul@prod,f
  7480  028E  30FF               	movlw	255
  7481  028F  05C7               	andwf	___flmul@prod+1,f
  7482  0290  307F               	movlw	127
  7483  0291  05C8               	andwf	___flmul@prod+2,f
  7484  0292  3000               	movlw	0
  7485  0293  05C9               	andwf	___flmul@prod+3,f
  7486  0294                     l3264:	
  7487  0294  1C45               	btfss	___flmul@bexp,0
  7488  0295  2A97               	goto	u3281
  7489  0296  2A98               	goto	u3280
  7490  0297                     u3281:	
  7491  0297  2A99               	goto	l3268
  7492  0298                     u3280:	
  7493  0298                     l3266:	
  7494  0298  17C8               	bsf	___flmul@prod+2,7
  7495  0299                     l3268:	
  7496  0299  3645               	lsrf	___flmul@bexp,w
  7497  029A  00BA               	movwf	??___flmul
  7498  029B  083A               	movf	??___flmul,w
  7499  029C  00C9               	movwf	___flmul@prod+3
  7500  029D                     l1268:	
  7501  029D  083F               	movf	___flmul@sign,w
  7502  029E  00BA               	movwf	??___flmul
  7503  029F  083A               	movf	??___flmul,w
  7504  02A0  04C9               	iorwf	___flmul@prod+3,f
  7505  02A1                     l3270:	
  7506  02A1  0849               	movf	___flmul@prod+3,w
  7507  02A2  00B5               	movwf	?___flmul+3
  7508  02A3  0848               	movf	___flmul@prod+2,w
  7509  02A4  00B4               	movwf	?___flmul+2
  7510  02A5  0847               	movf	___flmul@prod+1,w
  7511  02A6  00B3               	movwf	?___flmul+1
  7512  02A7  0846               	movf	___flmul@prod,w
  7513  02A8  00B2               	movwf	?___flmul
  7514  02A9                     l1256:	
  7515  02A9  0008               	return
  7516  02AA                     __end_of___flmul:	
  7517                           
  7518                           	psect	text18
  7519  0A7A                     __ptext18:	
  7520 ;; *************** function __Umul8_16 *****************
  7521 ;; Defined at:
  7522 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8_16.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;  multiplier      1    wreg     unsigned char 
  7525 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;  multiplier      1    8[BANK0 ] unsigned char 
  7528 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  7529 ;;  product         2    4[BANK0 ] unsigned int 
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  2    0[BANK0 ] unsigned int 
  7532 ;; Registers used:
  7533 ;;		wreg, status,2, status,0
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7539 ;;      Params:         0       2       0       0       0       0
  7540 ;;      Locals:         0       5       0       0       0       0
  7541 ;;      Temps:          0       2       0       0       0       0
  7542 ;;      Totals:         0       9       0       0       0       0
  7543 ;;Total ram usage:        9 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; Hardware stack levels required when called:    4
  7546 ;; This function calls:
  7547 ;;		Nothing
  7548 ;; This function is called by:
  7549 ;;		___flmul
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           
  7554                           ;psect for function __Umul8_16
  7555  0A7A                     __Umul8_16:	
  7556                           
  7557                           ;incstack = 0
  7558                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7559                           ;__Umul8_16@multiplier stored from wreg
  7560  0A7A  0020               	movlb	0	; select bank0
  7561  0A7B  00A8               	movwf	__Umul8_16@multiplier
  7562  0A7C                     l2616:	
  7563  0A7C  01A4               	clrf	__Umul8_16@product
  7564  0A7D  01A5               	clrf	__Umul8_16@product+1
  7565  0A7E                     l2618:	
  7566  0A7E  0820               	movf	__Umul8_16@multiplicand,w
  7567  0A7F  00A2               	movwf	??__Umul8_16
  7568  0A80  01A3               	clrf	??__Umul8_16+1
  7569  0A81  0822               	movf	??__Umul8_16,w
  7570  0A82  00A6               	movwf	__Umul8_16@word_mpld
  7571  0A83  0823               	movf	??__Umul8_16+1,w
  7572  0A84  00A7               	movwf	__Umul8_16@word_mpld+1
  7573  0A85                     l2620:	
  7574  0A85  1C28               	btfss	__Umul8_16@multiplier,0
  7575  0A86  2A88               	goto	u2131
  7576  0A87  2A89               	goto	u2130
  7577  0A88                     u2131:	
  7578  0A88  2A8D               	goto	l1320
  7579  0A89                     u2130:	
  7580  0A89                     l2622:	
  7581  0A89  0826               	movf	__Umul8_16@word_mpld,w
  7582  0A8A  07A4               	addwf	__Umul8_16@product,f
  7583  0A8B  0827               	movf	__Umul8_16@word_mpld+1,w
  7584  0A8C  3DA5               	addwfc	__Umul8_16@product+1,f
  7585  0A8D                     l1320:	
  7586  0A8D  3001               	movlw	1
  7587  0A8E                     u2145:	
  7588  0A8E  35A6               	lslf	__Umul8_16@word_mpld,f
  7589  0A8F  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  7590  0A90  0B89               	decfsz	9,f
  7591  0A91  2A8E               	goto	u2145
  7592  0A92  1003               	clrc
  7593  0A93  0CA8               	rrf	__Umul8_16@multiplier,f
  7594  0A94                     l2624:	
  7595  0A94  0828               	movf	__Umul8_16@multiplier,w
  7596  0A95  1D03               	btfss	3,2
  7597  0A96  2A98               	goto	u2151
  7598  0A97  2A99               	goto	u2150
  7599  0A98                     u2151:	
  7600  0A98  2A85               	goto	l2620
  7601  0A99                     u2150:	
  7602  0A99                     l2626:	
  7603  0A99  0825               	movf	__Umul8_16@product+1,w
  7604  0A9A  00A1               	movwf	?__Umul8_16+1
  7605  0A9B  0824               	movf	__Umul8_16@product,w
  7606  0A9C  00A0               	movwf	?__Umul8_16
  7607  0A9D                     l1322:	
  7608  0A9D  0008               	return
  7609  0A9E                     __end_of__Umul8_16:	
  7610                           
  7611                           	psect	text19
  7612  0480                     __ptext19:	
  7613 ;; *************** function ___fldiv *****************
  7614 ;; Defined at:
  7615 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  a               4   44[BANK0 ] unsigned int 
  7618 ;;  b               4   48[BANK0 ] unsigned int 
  7619 ;; Auto vars:     Size  Location     Type
  7620 ;;  grs             4   64[BANK0 ] unsigned long 
  7621 ;;  rem             4   57[BANK0 ] unsigned long 
  7622 ;;  new_exp         2   62[BANK0 ] int 
  7623 ;;  aexp            1   69[BANK0 ] unsigned char 
  7624 ;;  bexp            1   68[BANK0 ] unsigned char 
  7625 ;;  sign            1   61[BANK0 ] unsigned char 
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  4   44[BANK0 ] unsigned char 
  7628 ;; Registers used:
  7629 ;;		wreg, status,2, status,0
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7635 ;;      Params:         0       8       0       0       0       0
  7636 ;;      Locals:         0      13       0       0       0       0
  7637 ;;      Temps:          0       5       0       0       0       0
  7638 ;;      Totals:         0      26       0       0       0       0
  7639 ;;Total ram usage:       26 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; Hardware stack levels required when called:    4
  7642 ;; This function calls:
  7643 ;;		Nothing
  7644 ;; This function is called by:
  7645 ;;		_comunicacao
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           
  7650                           ;psect for function ___fldiv
  7651  0480                     ___fldiv:	
  7652  0480                     l2994:	
  7653                           ;incstack = 0
  7654                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  7655                           
  7656  0480  0020               	movlb	0	; select bank0
  7657  0481  0853               	movf	___fldiv@b+3,w
  7658  0482  3980               	andlw	128
  7659  0483  00D4               	movwf	??___fldiv
  7660  0484  0854               	movf	??___fldiv,w
  7661  0485  00DD               	movwf	___fldiv@sign
  7662  0486                     l2996:	
  7663  0486  3553               	lslf	___fldiv@b+3,w
  7664  0487  00D4               	movwf	??___fldiv
  7665  0488  0854               	movf	??___fldiv,w
  7666  0489  00E4               	movwf	___fldiv@bexp
  7667  048A                     l2998:	
  7668  048A  1FD2               	btfss	___fldiv@b+2,7
  7669  048B  2C8D               	goto	u2741
  7670  048C  2C8E               	goto	u2740
  7671  048D                     u2741:	
  7672  048D  2C8F               	goto	l3002
  7673  048E                     u2740:	
  7674  048E                     l3000:	
  7675  048E  1464               	bsf	___fldiv@bexp,0
  7676  048F                     l3002:	
  7677  048F  0864               	movf	___fldiv@bexp,w
  7678  0490  1903               	btfsc	3,2
  7679  0491  2C93               	goto	u2751
  7680  0492  2C94               	goto	u2750
  7681  0493                     u2751:	
  7682  0493  2CA4               	goto	l3012
  7683  0494                     u2750:	
  7684  0494                     l3004:	
  7685  0494  0A64               	incf	___fldiv@bexp,w
  7686  0495  1D03               	btfss	3,2
  7687  0496  2C98               	goto	u2761
  7688  0497  2C99               	goto	u2760
  7689  0498                     u2761:	
  7690  0498  2CA1               	goto	l3008
  7691  0499                     u2760:	
  7692  0499                     l3006:	
  7693  0499  3000               	movlw	0
  7694  049A  00D3               	movwf	___fldiv@b+3
  7695  049B  3000               	movlw	0
  7696  049C  00D2               	movwf	___fldiv@b+2
  7697  049D  3000               	movlw	0
  7698  049E  00D1               	movwf	___fldiv@b+1
  7699  049F  3000               	movlw	0
  7700  04A0  00D0               	movwf	___fldiv@b
  7701  04A1                     l3008:	
  7702  04A1  17D2               	bsf	___fldiv@b+2,7
  7703  04A2                     l3010:	
  7704  04A2  01D3               	clrf	___fldiv@b+3
  7705  04A3  2CAC               	goto	l3014
  7706  04A4                     l3012:	
  7707  04A4  3000               	movlw	0
  7708  04A5  00D3               	movwf	___fldiv@b+3
  7709  04A6  3000               	movlw	0
  7710  04A7  00D2               	movwf	___fldiv@b+2
  7711  04A8  3000               	movlw	0
  7712  04A9  00D1               	movwf	___fldiv@b+1
  7713  04AA  3000               	movlw	0
  7714  04AB  00D0               	movwf	___fldiv@b
  7715  04AC                     l3014:	
  7716  04AC  084F               	movf	___fldiv@a+3,w
  7717  04AD  3980               	andlw	128
  7718  04AE  00D4               	movwf	??___fldiv
  7719  04AF  0854               	movf	??___fldiv,w
  7720  04B0  06DD               	xorwf	___fldiv@sign,f
  7721  04B1                     l3016:	
  7722  04B1  354F               	lslf	___fldiv@a+3,w
  7723  04B2  00D4               	movwf	??___fldiv
  7724  04B3  0854               	movf	??___fldiv,w
  7725  04B4  00E5               	movwf	___fldiv@aexp
  7726  04B5                     l3018:	
  7727  04B5  1FCE               	btfss	___fldiv@a+2,7
  7728  04B6  2CB8               	goto	u2771
  7729  04B7  2CB9               	goto	u2770
  7730  04B8                     u2771:	
  7731  04B8  2CBA               	goto	l3022
  7732  04B9                     u2770:	
  7733  04B9                     l3020:	
  7734  04B9  1465               	bsf	___fldiv@aexp,0
  7735  04BA                     l3022:	
  7736  04BA  0865               	movf	___fldiv@aexp,w
  7737  04BB  1903               	btfsc	3,2
  7738  04BC  2CBE               	goto	u2781
  7739  04BD  2CBF               	goto	u2780
  7740  04BE                     u2781:	
  7741  04BE  2CCF               	goto	l3032
  7742  04BF                     u2780:	
  7743  04BF                     l3024:	
  7744  04BF  0A65               	incf	___fldiv@aexp,w
  7745  04C0  1D03               	btfss	3,2
  7746  04C1  2CC3               	goto	u2791
  7747  04C2  2CC4               	goto	u2790
  7748  04C3                     u2791:	
  7749  04C3  2CCC               	goto	l3028
  7750  04C4                     u2790:	
  7751  04C4                     l3026:	
  7752  04C4  3000               	movlw	0
  7753  04C5  00CF               	movwf	___fldiv@a+3
  7754  04C6  3000               	movlw	0
  7755  04C7  00CE               	movwf	___fldiv@a+2
  7756  04C8  3000               	movlw	0
  7757  04C9  00CD               	movwf	___fldiv@a+1
  7758  04CA  3000               	movlw	0
  7759  04CB  00CC               	movwf	___fldiv@a
  7760  04CC                     l3028:	
  7761  04CC  17CE               	bsf	___fldiv@a+2,7
  7762  04CD                     l3030:	
  7763  04CD  01CF               	clrf	___fldiv@a+3
  7764  04CE  2CD7               	goto	l1216
  7765  04CF                     l3032:	
  7766  04CF  3000               	movlw	0
  7767  04D0  00CF               	movwf	___fldiv@a+3
  7768  04D1  3000               	movlw	0
  7769  04D2  00CE               	movwf	___fldiv@a+2
  7770  04D3  3000               	movlw	0
  7771  04D4  00CD               	movwf	___fldiv@a+1
  7772  04D5  3000               	movlw	0
  7773  04D6  00CC               	movwf	___fldiv@a
  7774  04D7                     l1216:	
  7775  04D7  084F               	movf	___fldiv@a+3,w
  7776  04D8  044E               	iorwf	___fldiv@a+2,w
  7777  04D9  044D               	iorwf	___fldiv@a+1,w
  7778  04DA  044C               	iorwf	___fldiv@a,w
  7779  04DB  1D03               	skipz
  7780  04DC  2CDE               	goto	u2801
  7781  04DD  2CDF               	goto	u2800
  7782  04DE                     u2801:	
  7783  04DE  2CF8               	goto	l3042
  7784  04DF                     u2800:	
  7785  04DF                     l3034:	
  7786  04DF  3000               	movlw	0
  7787  04E0  00D3               	movwf	___fldiv@b+3
  7788  04E1  3000               	movlw	0
  7789  04E2  00D2               	movwf	___fldiv@b+2
  7790  04E3  3000               	movlw	0
  7791  04E4  00D1               	movwf	___fldiv@b+1
  7792  04E5  3000               	movlw	0
  7793  04E6  00D0               	movwf	___fldiv@b
  7794  04E7  3080               	movlw	128
  7795  04E8  04D2               	iorwf	___fldiv@b+2,f
  7796  04E9  307F               	movlw	127
  7797  04EA  04D3               	iorwf	___fldiv@b+3,f
  7798  04EB                     l3036:	
  7799  04EB  085D               	movf	___fldiv@sign,w
  7800  04EC  00D4               	movwf	??___fldiv
  7801  04ED  0854               	movf	??___fldiv,w
  7802  04EE  04D3               	iorwf	___fldiv@b+3,f
  7803  04EF                     l3038:	
  7804  04EF  0853               	movf	___fldiv@b+3,w
  7805  04F0  00CF               	movwf	?___fldiv+3
  7806  04F1  0852               	movf	___fldiv@b+2,w
  7807  04F2  00CE               	movwf	?___fldiv+2
  7808  04F3  0851               	movf	___fldiv@b+1,w
  7809  04F4  00CD               	movwf	?___fldiv+1
  7810  04F5  0850               	movf	___fldiv@b,w
  7811  04F6  00CC               	movwf	?___fldiv
  7812  04F7  2E33               	goto	l1218
  7813  04F8                     l3042:	
  7814  04F8  0864               	movf	___fldiv@bexp,w
  7815  04F9  1D03               	btfss	3,2
  7816  04FA  2CFC               	goto	u2811
  7817  04FB  2CFD               	goto	u2810
  7818  04FC                     u2811:	
  7819  04FC  2D06               	goto	l3048
  7820  04FD                     u2810:	
  7821  04FD                     l3044:	
  7822  04FD  3000               	movlw	0
  7823  04FE  00CF               	movwf	?___fldiv+3
  7824  04FF  3000               	movlw	0
  7825  0500  00CE               	movwf	?___fldiv+2
  7826  0501  3000               	movlw	0
  7827  0502  00CD               	movwf	?___fldiv+1
  7828  0503  3000               	movlw	0
  7829  0504  00CC               	movwf	?___fldiv
  7830  0505  2E33               	goto	l1218
  7831  0506                     l3048:	
  7832  0506  0864               	movf	___fldiv@bexp,w
  7833  0507  00D4               	movwf	??___fldiv
  7834  0508  01D5               	clrf	??___fldiv+1
  7835  0509  0855               	movf	??___fldiv+1,w
  7836  050A  00D7               	movwf	??___fldiv+3
  7837  050B  0865               	movf	___fldiv@aexp,w
  7838  050C  0254               	subwf	??___fldiv,w
  7839  050D  00D6               	movwf	??___fldiv+2
  7840  050E  1C03               	skipc
  7841  050F  03D7               	decf	??___fldiv+3,f
  7842  0510  0856               	movf	??___fldiv+2,w
  7843  0511  3E7F               	addlw	127
  7844  0512  00DE               	movwf	___fldiv@new_exp
  7845  0513  3000               	movlw	0
  7846  0514  3D57               	addwfc	??___fldiv+3,w
  7847  0515  00DF               	movwf	___fldiv@new_exp+1
  7848  0516                     l3050:	
  7849  0516  0853               	movf	___fldiv@b+3,w
  7850  0517  00DC               	movwf	___fldiv@rem+3
  7851  0518  0852               	movf	___fldiv@b+2,w
  7852  0519  00DB               	movwf	___fldiv@rem+2
  7853  051A  0851               	movf	___fldiv@b+1,w
  7854  051B  00DA               	movwf	___fldiv@rem+1
  7855  051C  0850               	movf	___fldiv@b,w
  7856  051D  00D9               	movwf	___fldiv@rem
  7857  051E                     l3052:	
  7858  051E  3000               	movlw	0
  7859  051F  00D3               	movwf	___fldiv@b+3
  7860  0520  3000               	movlw	0
  7861  0521  00D2               	movwf	___fldiv@b+2
  7862  0522  3000               	movlw	0
  7863  0523  00D1               	movwf	___fldiv@b+1
  7864  0524  3000               	movlw	0
  7865  0525  00D0               	movwf	___fldiv@b
  7866  0526                     l3054:	
  7867  0526  3000               	movlw	0
  7868  0527  00E3               	movwf	___fldiv@grs+3
  7869  0528  3000               	movlw	0
  7870  0529  00E2               	movwf	___fldiv@grs+2
  7871  052A  3000               	movlw	0
  7872  052B  00E1               	movwf	___fldiv@grs+1
  7873  052C  3000               	movlw	0
  7874  052D  00E0               	movwf	___fldiv@grs
  7875  052E                     l3056:	
  7876  052E  01E5               	clrf	___fldiv@aexp
  7877  052F  2D6E               	goto	l3076
  7878  0530                     l3058:	
  7879  0530  0865               	movf	___fldiv@aexp,w
  7880  0531  1903               	btfsc	3,2
  7881  0532  2D34               	goto	u2821
  7882  0533  2D35               	goto	u2820
  7883  0534                     u2821:	
  7884  0534  2D4F               	goto	l3068
  7885  0535                     u2820:	
  7886  0535                     l3060:	
  7887  0535  3001               	movlw	1
  7888  0536                     u2835:	
  7889  0536  35D9               	lslf	___fldiv@rem,f
  7890  0537  0DDA               	rlf	___fldiv@rem+1,f
  7891  0538  0DDB               	rlf	___fldiv@rem+2,f
  7892  0539  0DDC               	rlf	___fldiv@rem+3,f
  7893  053A  0B89               	decfsz	9,f
  7894  053B  2D36               	goto	u2835
  7895  053C  3001               	movlw	1
  7896  053D                     u2845:	
  7897  053D  35D0               	lslf	___fldiv@b,f
  7898  053E  0DD1               	rlf	___fldiv@b+1,f
  7899  053F  0DD2               	rlf	___fldiv@b+2,f
  7900  0540  0DD3               	rlf	___fldiv@b+3,f
  7901  0541  0B89               	decfsz	9,f
  7902  0542  2D3D               	goto	u2845
  7903  0543                     l3062:	
  7904  0543  1FE3               	btfss	___fldiv@grs+3,7
  7905  0544  2D46               	goto	u2851
  7906  0545  2D47               	goto	u2850
  7907  0546                     u2851:	
  7908  0546  2D48               	goto	l3066
  7909  0547                     u2850:	
  7910  0547                     l3064:	
  7911  0547  1450               	bsf	___fldiv@b,0
  7912  0548                     l3066:	
  7913  0548  3001               	movlw	1
  7914  0549                     u2865:	
  7915  0549  35E0               	lslf	___fldiv@grs,f
  7916  054A  0DE1               	rlf	___fldiv@grs+1,f
  7917  054B  0DE2               	rlf	___fldiv@grs+2,f
  7918  054C  0DE3               	rlf	___fldiv@grs+3,f
  7919  054D  0B89               	decfsz	9,f
  7920  054E  2D49               	goto	u2865
  7921  054F                     l3068:	
  7922  054F  084F               	movf	___fldiv@a+3,w
  7923  0550  025C               	subwf	___fldiv@rem+3,w
  7924  0551  1D03               	skipz
  7925  0552  2D5D               	goto	u2875
  7926  0553  084E               	movf	___fldiv@a+2,w
  7927  0554  025B               	subwf	___fldiv@rem+2,w
  7928  0555  1D03               	skipz
  7929  0556  2D5D               	goto	u2875
  7930  0557  084D               	movf	___fldiv@a+1,w
  7931  0558  025A               	subwf	___fldiv@rem+1,w
  7932  0559  1D03               	skipz
  7933  055A  2D5D               	goto	u2875
  7934  055B  084C               	movf	___fldiv@a,w
  7935  055C  0259               	subwf	___fldiv@rem,w
  7936  055D                     u2875:	
  7937  055D  1C03               	skipc
  7938  055E  2D60               	goto	u2871
  7939  055F  2D61               	goto	u2870
  7940  0560                     u2871:	
  7941  0560  2D6A               	goto	l3074
  7942  0561                     u2870:	
  7943  0561                     l3070:	
  7944  0561  1763               	bsf	___fldiv@grs+3,6
  7945  0562                     l3072:	
  7946  0562  084C               	movf	___fldiv@a,w
  7947  0563  02D9               	subwf	___fldiv@rem,f
  7948  0564  084D               	movf	___fldiv@a+1,w
  7949  0565  3BDA               	subwfb	___fldiv@rem+1,f
  7950  0566  084E               	movf	___fldiv@a+2,w
  7951  0567  3BDB               	subwfb	___fldiv@rem+2,f
  7952  0568  084F               	movf	___fldiv@a+3,w
  7953  0569  3BDC               	subwfb	___fldiv@rem+3,f
  7954  056A                     l3074:	
  7955  056A  3001               	movlw	1
  7956  056B  00D4               	movwf	??___fldiv
  7957  056C  0854               	movf	??___fldiv,w
  7958  056D  07E5               	addwf	___fldiv@aexp,f
  7959  056E                     l3076:	
  7960  056E  301A               	movlw	26
  7961  056F  0265               	subwf	___fldiv@aexp,w
  7962  0570  1C03               	skipc
  7963  0571  2D73               	goto	u2881
  7964  0572  2D74               	goto	u2880
  7965  0573                     u2881:	
  7966  0573  2D30               	goto	l3058
  7967  0574                     u2880:	
  7968  0574                     l3078:	
  7969  0574  085C               	movf	___fldiv@rem+3,w
  7970  0575  045B               	iorwf	___fldiv@rem+2,w
  7971  0576  045A               	iorwf	___fldiv@rem+1,w
  7972  0577  0459               	iorwf	___fldiv@rem,w
  7973  0578  1903               	skipnz
  7974  0579  2D7B               	goto	u2891
  7975  057A  2D7C               	goto	u2890
  7976  057B                     u2891:	
  7977  057B  2D95               	goto	l3092
  7978  057C                     u2890:	
  7979  057C                     l3080:	
  7980  057C  1460               	bsf	___fldiv@grs,0
  7981  057D  2D95               	goto	l3092
  7982  057E                     l3082:	
  7983  057E  3001               	movlw	1
  7984  057F                     u2905:	
  7985  057F  35D0               	lslf	___fldiv@b,f
  7986  0580  0DD1               	rlf	___fldiv@b+1,f
  7987  0581  0DD2               	rlf	___fldiv@b+2,f
  7988  0582  0DD3               	rlf	___fldiv@b+3,f
  7989  0583  0B89               	decfsz	9,f
  7990  0584  2D7F               	goto	u2905
  7991  0585                     l3084:	
  7992  0585  1FE3               	btfss	___fldiv@grs+3,7
  7993  0586  2D88               	goto	u2911
  7994  0587  2D89               	goto	u2910
  7995  0588                     u2911:	
  7996  0588  2D8A               	goto	l3088
  7997  0589                     u2910:	
  7998  0589                     l3086:	
  7999  0589  1450               	bsf	___fldiv@b,0
  8000  058A                     l3088:	
  8001  058A  3001               	movlw	1
  8002  058B                     u2925:	
  8003  058B  35E0               	lslf	___fldiv@grs,f
  8004  058C  0DE1               	rlf	___fldiv@grs+1,f
  8005  058D  0DE2               	rlf	___fldiv@grs+2,f
  8006  058E  0DE3               	rlf	___fldiv@grs+3,f
  8007  058F  0B89               	decfsz	9,f
  8008  0590  2D8B               	goto	u2925
  8009  0591                     l3090:	
  8010  0591  30FF               	movlw	255
  8011  0592  07DE               	addwf	___fldiv@new_exp,f
  8012  0593  30FF               	movlw	255
  8013  0594  3DDF               	addwfc	___fldiv@new_exp+1,f
  8014  0595                     l3092:	
  8015  0595  1FD2               	btfss	___fldiv@b+2,7
  8016  0596  2D98               	goto	u2931
  8017  0597  2D99               	goto	u2930
  8018  0598                     u2931:	
  8019  0598  2D7E               	goto	l3082
  8020  0599                     u2930:	
  8021  0599                     l3094:	
  8022  0599  01E5               	clrf	___fldiv@aexp
  8023  059A                     l3096:	
  8024  059A  1FE3               	btfss	___fldiv@grs+3,7
  8025  059B  2D9D               	goto	u2941
  8026  059C  2D9E               	goto	u2940
  8027  059D                     u2941:	
  8028  059D  2DBA               	goto	l3104
  8029  059E                     u2940:	
  8030  059E                     l3098:	
  8031  059E  30FF               	movlw	255
  8032  059F  0560               	andwf	___fldiv@grs,w
  8033  05A0  00D4               	movwf	??___fldiv
  8034  05A1  30FF               	movlw	255
  8035  05A2  0561               	andwf	___fldiv@grs+1,w
  8036  05A3  00D5               	movwf	??___fldiv+1
  8037  05A4  30FF               	movlw	255
  8038  05A5  0562               	andwf	___fldiv@grs+2,w
  8039  05A6  00D6               	movwf	??___fldiv+2
  8040  05A7  307F               	movlw	127
  8041  05A8  0563               	andwf	___fldiv@grs+3,w
  8042  05A9  00D7               	movwf	??___fldiv+3
  8043  05AA  0857               	movf	??___fldiv+3,w
  8044  05AB  0456               	iorwf	??___fldiv+2,w
  8045  05AC  0455               	iorwf	??___fldiv+1,w
  8046  05AD  0454               	iorwf	??___fldiv,w
  8047  05AE  1903               	skipnz
  8048  05AF  2DB1               	goto	u2951
  8049  05B0  2DB2               	goto	u2950
  8050  05B1                     u2951:	
  8051  05B1  2DB5               	goto	l1232
  8052  05B2                     u2950:	
  8053  05B2                     l3100:	
  8054  05B2  01E5               	clrf	___fldiv@aexp
  8055  05B3  0AE5               	incf	___fldiv@aexp,f
  8056  05B4  2DBA               	goto	l3104
  8057  05B5                     l1232:	
  8058  05B5  1C50               	btfss	___fldiv@b,0
  8059  05B6  2DB8               	goto	u2961
  8060  05B7  2DB9               	goto	u2960
  8061  05B8                     u2961:	
  8062  05B8  2DBA               	goto	l3104
  8063  05B9                     u2960:	
  8064  05B9  2DB2               	goto	l3100
  8065  05BA                     l3104:	
  8066  05BA  0865               	movf	___fldiv@aexp,w
  8067  05BB  1903               	btfsc	3,2
  8068  05BC  2DBE               	goto	u2971
  8069  05BD  2DBF               	goto	u2970
  8070  05BE                     u2971:	
  8071  05BE  2DE7               	goto	l3114
  8072  05BF                     u2970:	
  8073  05BF                     l3106:	
  8074  05BF  3001               	movlw	1
  8075  05C0  07D0               	addwf	___fldiv@b,f
  8076  05C1  3000               	movlw	0
  8077  05C2  3DD1               	addwfc	___fldiv@b+1,f
  8078  05C3  3000               	movlw	0
  8079  05C4  3DD2               	addwfc	___fldiv@b+2,f
  8080  05C5  3000               	movlw	0
  8081  05C6  3DD3               	addwfc	___fldiv@b+3,f
  8082  05C7                     l3108:	
  8083  05C7  1C53               	btfss	___fldiv@b+3,0
  8084  05C8  2DCA               	goto	u2981
  8085  05C9  2DCB               	goto	u2980
  8086  05CA                     u2981:	
  8087  05CA  2DE7               	goto	l3114
  8088  05CB                     u2980:	
  8089  05CB                     l3110:	
  8090  05CB  0850               	movf	___fldiv@b,w
  8091  05CC  00D4               	movwf	??___fldiv
  8092  05CD  0851               	movf	___fldiv@b+1,w
  8093  05CE  00D5               	movwf	??___fldiv+1
  8094  05CF  0852               	movf	___fldiv@b+2,w
  8095  05D0  00D6               	movwf	??___fldiv+2
  8096  05D1  0853               	movf	___fldiv@b+3,w
  8097  05D2  00D7               	movwf	??___fldiv+3
  8098  05D3  3001               	movlw	1
  8099  05D4  00D8               	movwf	??___fldiv+4
  8100  05D5                     u2995:	
  8101  05D5  37D7               	asrf	??___fldiv+3,f
  8102  05D6  0CD6               	rrf	??___fldiv+2,f
  8103  05D7  0CD5               	rrf	??___fldiv+1,f
  8104  05D8  0CD4               	rrf	??___fldiv,f
  8105  05D9                     u2990:	
  8106  05D9  0BD8               	decfsz	??___fldiv+4,f
  8107  05DA  2DD5               	goto	u2995
  8108  05DB  0857               	movf	??___fldiv+3,w
  8109  05DC  00D3               	movwf	___fldiv@b+3
  8110  05DD  0856               	movf	??___fldiv+2,w
  8111  05DE  00D2               	movwf	___fldiv@b+2
  8112  05DF  0855               	movf	??___fldiv+1,w
  8113  05E0  00D1               	movwf	___fldiv@b+1
  8114  05E1  0854               	movf	??___fldiv,w
  8115  05E2  00D0               	movwf	___fldiv@b
  8116  05E3                     l3112:	
  8117  05E3  3001               	movlw	1
  8118  05E4  07DE               	addwf	___fldiv@new_exp,f
  8119  05E5  3000               	movlw	0
  8120  05E6  3DDF               	addwfc	___fldiv@new_exp+1,f
  8121  05E7                     l3114:	
  8122  05E7  085F               	movf	___fldiv@new_exp+1,w
  8123  05E8  3A80               	xorlw	128
  8124  05E9  00D4               	movwf	??___fldiv
  8125  05EA  3080               	movlw	128
  8126  05EB  0254               	subwf	??___fldiv,w
  8127  05EC  1D03               	skipz
  8128  05ED  2DF0               	goto	u3005
  8129  05EE  30FF               	movlw	255
  8130  05EF  025E               	subwf	___fldiv@new_exp,w
  8131  05F0                     u3005:	
  8132  05F0  1C03               	skipc
  8133  05F1  2DF3               	goto	u3001
  8134  05F2  2DF4               	goto	u3000
  8135  05F3                     u3001:	
  8136  05F3  2E01               	goto	l1237
  8137  05F4                     u3000:	
  8138  05F4                     l3116:	
  8139  05F4  30FF               	movlw	255
  8140  05F5  0020               	movlb	0	; select bank0
  8141  05F6  00DE               	movwf	___fldiv@new_exp
  8142  05F7  3000               	movlw	0
  8143  05F8  00DF               	movwf	___fldiv@new_exp+1
  8144  05F9  3000               	movlw	0
  8145  05FA  00D3               	movwf	___fldiv@b+3
  8146  05FB  3000               	movlw	0
  8147  05FC  00D2               	movwf	___fldiv@b+2
  8148  05FD  3000               	movlw	0
  8149  05FE  00D1               	movwf	___fldiv@b+1
  8150  05FF  3000               	movlw	0
  8151  0600  00D0               	movwf	___fldiv@b
  8152  0601                     l1237:	
  8153  0601  0020               	movlb	0	; select bank0
  8154  0602  085F               	movf	___fldiv@new_exp+1,w
  8155  0603  3A80               	xorlw	128
  8156  0604  00D4               	movwf	??___fldiv
  8157  0605  3080               	movlw	128
  8158  0606  0254               	subwf	??___fldiv,w
  8159  0607  1D03               	skipz
  8160  0608  2E0B               	goto	u3015
  8161  0609  3001               	movlw	1
  8162  060A  025E               	subwf	___fldiv@new_exp,w
  8163  060B                     u3015:	
  8164  060B  1803               	skipnc
  8165  060C  2E0E               	goto	u3011
  8166  060D  2E0F               	goto	u3010
  8167  060E                     u3011:	
  8168  060E  2E1B               	goto	l1238
  8169  060F                     u3010:	
  8170  060F                     l3118:	
  8171  060F  0020               	movlb	0	; select bank0
  8172  0610  01DE               	clrf	___fldiv@new_exp
  8173  0611  01DF               	clrf	___fldiv@new_exp+1
  8174  0612                     l3120:	
  8175  0612  3000               	movlw	0
  8176  0613  00D3               	movwf	___fldiv@b+3
  8177  0614  3000               	movlw	0
  8178  0615  00D2               	movwf	___fldiv@b+2
  8179  0616  3000               	movlw	0
  8180  0617  00D1               	movwf	___fldiv@b+1
  8181  0618  3000               	movlw	0
  8182  0619  00D0               	movwf	___fldiv@b
  8183  061A                     l3122:	
  8184  061A  01DD               	clrf	___fldiv@sign
  8185  061B                     l1238:	
  8186  061B  0020               	movlb	0	; select bank0
  8187  061C  085E               	movf	___fldiv@new_exp,w
  8188  061D  00D4               	movwf	??___fldiv
  8189  061E  0854               	movf	??___fldiv,w
  8190  061F  00E4               	movwf	___fldiv@bexp
  8191  0620                     l3124:	
  8192  0620  1C64               	btfss	___fldiv@bexp,0
  8193  0621  2E23               	goto	u3021
  8194  0622  2E24               	goto	u3020
  8195  0623                     u3021:	
  8196  0623  2E26               	goto	l3128
  8197  0624                     u3020:	
  8198  0624                     l3126:	
  8199  0624  17D2               	bsf	___fldiv@b+2,7
  8200  0625  2E2A               	goto	l1240
  8201  0626                     l3128:	
  8202  0626  307F               	movlw	127
  8203  0627  00D4               	movwf	??___fldiv
  8204  0628  0854               	movf	??___fldiv,w
  8205  0629  05D2               	andwf	___fldiv@b+2,f
  8206  062A                     l1240:	
  8207  062A  3664               	lsrf	___fldiv@bexp,w
  8208  062B  00D4               	movwf	??___fldiv
  8209  062C  0854               	movf	??___fldiv,w
  8210  062D  00D3               	movwf	___fldiv@b+3
  8211  062E  085D               	movf	___fldiv@sign,w
  8212  062F  00D4               	movwf	??___fldiv
  8213  0630  0854               	movf	??___fldiv,w
  8214  0631  04D3               	iorwf	___fldiv@b+3,f
  8215  0632  2CEF               	goto	l3038
  8216  0633                     l1218:	
  8217  0633  0008               	return
  8218  0634                     __end_of___fldiv:	
  8219                           
  8220                           	psect	text20
  8221  0A34                     __ptext20:	
  8222 ;; *************** function _SYSTEM_Initialize *****************
  8223 ;; Defined at:
  8224 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;		None
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;		None
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  1    wreg      void 
  8231 ;; Registers used:
  8232 ;;		wreg, status,2, status,0, pclath, cstack
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8238 ;;      Params:         0       0       0       0       0       0
  8239 ;;      Locals:         0       0       0       0       0       0
  8240 ;;      Temps:          0       0       0       0       0       0
  8241 ;;      Totals:         0       0       0       0       0       0
  8242 ;;Total ram usage:        0 bytes
  8243 ;; Hardware stack levels used:    1
  8244 ;; Hardware stack levels required when called:    6
  8245 ;; This function calls:
  8246 ;;		_ADC_Initialize
  8247 ;;		_CCP4_Initialize
  8248 ;;		_EUSART_Initialize
  8249 ;;		_FVR_Initialize
  8250 ;;		_OSCILLATOR_Initialize
  8251 ;;		_PIN_MANAGER_Initialize
  8252 ;;		_PWM3_Initialize
  8253 ;;		_TMR1_Initialize
  8254 ;;		_TMR2_Initialize
  8255 ;;		_TMR4_Initialize
  8256 ;;		_WDT_Initialize
  8257 ;; This function is called by:
  8258 ;;		_main
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           
  8263                           ;psect for function _SYSTEM_Initialize
  8264  0A34                     _SYSTEM_Initialize:	
  8265  0A34                     l3782:	
  8266                           ;incstack = 0
  8267                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8268                           
  8269                           
  8270                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8271  0A34  318B  2339  318A   	fcall	_PIN_MANAGER_Initialize
  8272                           
  8273                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8274  0A37  3188  2048  318A   	fcall	_OSCILLATOR_Initialize
  8275                           
  8276                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  8277  0A3A  3188  2032  318A   	fcall	_WDT_Initialize
  8278                           
  8279                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  8280  0A3D  3188  202E  318A   	fcall	_FVR_Initialize
  8281                           
  8282                           ;mcc_generated_files/mcc.c: 57:     CCP4_Initialize();
  8283  0A40  3189  215E  318A   	fcall	_CCP4_Initialize
  8284                           
  8285                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  8286  0A43  3188  204F  318A   	fcall	_ADC_Initialize
  8287                           
  8288                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
  8289  0A46  3189  2170  318A   	fcall	_TMR4_Initialize
  8290                           
  8291                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
  8292  0A49  3188  20A7  318A   	fcall	_PWM3_Initialize
  8293                           
  8294                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  8295  0A4C  3188  2057  318A   	fcall	_TMR2_Initialize
  8296                           
  8297                           ;mcc_generated_files/mcc.c: 62:     TMR1_Initialize();
  8298  0A4F  3187  27F0  318A   	fcall	_TMR1_Initialize
  8299                           
  8300                           ;mcc_generated_files/mcc.c: 63:     EUSART_Initialize();
  8301  0A52  318A  2256  318A   	fcall	_EUSART_Initialize
  8302  0A55                     l121:	
  8303  0A55  0008               	return
  8304  0A56                     __end_of_SYSTEM_Initialize:	
  8305                           
  8306                           	psect	text21
  8307  0832                     __ptext21:	
  8308 ;; *************** function _WDT_Initialize *****************
  8309 ;; Defined at:
  8310 ;;		line 76 in file "mcc_generated_files/mcc.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;		None
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;		None
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  1    wreg      void 
  8317 ;; Registers used:
  8318 ;;		wreg
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8324 ;;      Params:         0       0       0       0       0       0
  8325 ;;      Locals:         0       0       0       0       0       0
  8326 ;;      Temps:          0       0       0       0       0       0
  8327 ;;      Totals:         0       0       0       0       0       0
  8328 ;;Total ram usage:        0 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; Hardware stack levels required when called:    4
  8331 ;; This function calls:
  8332 ;;		Nothing
  8333 ;; This function is called by:
  8334 ;;		_SYSTEM_Initialize
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           
  8339                           ;psect for function _WDT_Initialize
  8340  0832                     _WDT_Initialize:	
  8341  0832                     l3598:	
  8342                           ;incstack = 0
  8343                           ; Regs used in _WDT_Initialize: [wreg]
  8344                           
  8345                           
  8346                           ;mcc_generated_files/mcc.c: 79:     WDTCON = 0x16;
  8347  0832  3016               	movlw	22
  8348  0833  0021               	movlb	1	; select bank1
  8349  0834  0097               	movwf	23	;volatile
  8350  0835                     l127:	
  8351  0835  0008               	return
  8352  0836                     __end_of_WDT_Initialize:	
  8353                           
  8354                           	psect	text22
  8355  0970                     __ptext22:	
  8356 ;; *************** function _TMR4_Initialize *****************
  8357 ;; Defined at:
  8358 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;		None
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;		None
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  1    wreg      void 
  8365 ;; Registers used:
  8366 ;;		wreg, status,2, status,0, pclath, cstack
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8372 ;;      Params:         0       0       0       0       0       0
  8373 ;;      Locals:         0       0       0       0       0       0
  8374 ;;      Temps:          0       0       0       0       0       0
  8375 ;;      Totals:         0       0       0       0       0       0
  8376 ;;Total ram usage:        0 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; Hardware stack levels required when called:    5
  8379 ;; This function calls:
  8380 ;;		_TMR4_SetInterruptHandler
  8381 ;; This function is called by:
  8382 ;;		_SYSTEM_Initialize
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385                           
  8386                           
  8387                           ;psect for function _TMR4_Initialize
  8388  0970                     _TMR4_Initialize:	
  8389  0970                     l3620:	
  8390                           ;incstack = 0
  8391                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8392                           
  8393                           
  8394                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xDE;
  8395  0970  30DE               	movlw	222
  8396  0971  0028               	movlb	8	; select bank8
  8397  0972  0096               	movwf	22	;volatile
  8398  0973                     l3622:	
  8399                           
  8400                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  8401  0973  0195               	clrf	21	;volatile
  8402  0974                     l3624:	
  8403                           
  8404                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  8405  0974  0020               	movlb	0	; select bank0
  8406  0975  1093               	bcf	19,1	;volatile
  8407  0976                     l3626:	
  8408                           
  8409                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  8410  0976  0021               	movlb	1	; select bank1
  8411  0977  1493               	bsf	19,1	;volatile
  8412  0978                     l3628:	
  8413                           
  8414                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  8415  0978  3003               	movlw	low _TMR4_DefaultInterruptHandler
  8416  0979  0020               	movlb	0	; select bank0
  8417  097A  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  8418  097B  3000               	movlw	high _TMR4_DefaultInterruptHandler
  8419  097C  00A1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  8420  097D  3188  20B0  3189   	fcall	_TMR4_SetInterruptHandler
  8421  0980                     l3630:	
  8422                           
  8423                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x07;
  8424  0980  3007               	movlw	7
  8425  0981  0028               	movlb	8	; select bank8
  8426  0982  0097               	movwf	23	;volatile
  8427  0983                     l225:	
  8428  0983  0008               	return
  8429  0984                     __end_of_TMR4_Initialize:	
  8430                           
  8431                           	psect	text23
  8432  08B0                     __ptext23:	
  8433 ;; *************** function _TMR4_SetInterruptHandler *****************
  8434 ;; Defined at:
  8435 ;;		line 132 in file "mcc_generated_files/tmr4.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8438 ;;		 -> send_data(1), TMR4_DefaultInterruptHandler(1), 
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;		None
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  1    wreg      void 
  8443 ;; Registers used:
  8444 ;;		wreg
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8450 ;;      Params:         0       2       0       0       0       0
  8451 ;;      Locals:         0       0       0       0       0       0
  8452 ;;      Temps:          0       0       0       0       0       0
  8453 ;;      Totals:         0       2       0       0       0       0
  8454 ;;Total ram usage:        2 bytes
  8455 ;; Hardware stack levels used:    1
  8456 ;; Hardware stack levels required when called:    4
  8457 ;; This function calls:
  8458 ;;		Nothing
  8459 ;; This function is called by:
  8460 ;;		_TMR4_Initialize
  8461 ;;		_main
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465                           
  8466                           ;psect for function _TMR4_SetInterruptHandler
  8467  08B0                     _TMR4_SetInterruptHandler:	
  8468  08B0                     l3522:	
  8469                           ;incstack = 0
  8470                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  8471                           
  8472                           
  8473                           ;mcc_generated_files/tmr4.c: 133:     TMR4_InterruptHandler = InterruptHandler;
  8474  08B0  0020               	movlb	0	; select bank0
  8475  08B1  0821               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
  8476  08B2  0021               	movlb	1	; select bank1
  8477  08B3  00EC               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
  8478  08B4  0020               	movlb	0	; select bank0
  8479  08B5  0820               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
  8480  08B6  0021               	movlb	1	; select bank1
  8481  08B7  00EB               	movwf	_TMR4_InterruptHandler^(0+128)
  8482  08B8                     l247:	
  8483  08B8  0008               	return
  8484  08B9                     __end_of_TMR4_SetInterruptHandler:	
  8485                           
  8486                           	psect	text24
  8487  0857                     __ptext24:	
  8488 ;; *************** function _TMR2_Initialize *****************
  8489 ;; Defined at:
  8490 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8491 ;; Parameters:    Size  Location     Type
  8492 ;;		None
  8493 ;; Auto vars:     Size  Location     Type
  8494 ;;		None
  8495 ;; Return value:  Size  Location     Type
  8496 ;;                  1    wreg      void 
  8497 ;; Registers used:
  8498 ;;		wreg, status,2
  8499 ;; Tracked objects:
  8500 ;;		On entry : 0/0
  8501 ;;		On exit  : 0/0
  8502 ;;		Unchanged: 0/0
  8503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8504 ;;      Params:         0       0       0       0       0       0
  8505 ;;      Locals:         0       0       0       0       0       0
  8506 ;;      Temps:          0       0       0       0       0       0
  8507 ;;      Totals:         0       0       0       0       0       0
  8508 ;;Total ram usage:        0 bytes
  8509 ;; Hardware stack levels used:    1
  8510 ;; Hardware stack levels required when called:    4
  8511 ;; This function calls:
  8512 ;;		Nothing
  8513 ;; This function is called by:
  8514 ;;		_SYSTEM_Initialize
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518                           
  8519                           ;psect for function _TMR2_Initialize
  8520  0857                     _TMR2_Initialize:	
  8521  0857                     l3640:	
  8522                           ;incstack = 0
  8523                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8524                           
  8525                           
  8526                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  8527  0857  30FF               	movlw	255
  8528  0858  0020               	movlb	0	; select bank0
  8529  0859  009B               	movwf	27	;volatile
  8530  085A                     l3642:	
  8531                           
  8532                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  8533  085A  019A               	clrf	26	;volatile
  8534  085B                     l3644:	
  8535                           
  8536                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  8537  085B  1091               	bcf	17,1	;volatile
  8538  085C                     l3646:	
  8539                           
  8540                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  8541  085C  3004               	movlw	4
  8542  085D  009C               	movwf	28	;volatile
  8543  085E                     l185:	
  8544  085E  0008               	return
  8545  085F                     __end_of_TMR2_Initialize:	
  8546                           
  8547                           	psect	text25
  8548  07F0                     __ptext25:	
  8549 ;; *************** function _TMR1_Initialize *****************
  8550 ;; Defined at:
  8551 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;		None
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;		None
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  1    wreg      void 
  8558 ;; Registers used:
  8559 ;;		wreg, status,2
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 0/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8565 ;;      Params:         0       0       0       0       0       0
  8566 ;;      Locals:         0       0       0       0       0       0
  8567 ;;      Temps:          0       0       0       0       0       0
  8568 ;;      Totals:         0       0       0       0       0       0
  8569 ;;Total ram usage:        0 bytes
  8570 ;; Hardware stack levels used:    1
  8571 ;; Hardware stack levels required when called:    4
  8572 ;; This function calls:
  8573 ;;		Nothing
  8574 ;; This function is called by:
  8575 ;;		_SYSTEM_Initialize
  8576 ;; This function uses a non-reentrant model
  8577 ;;
  8578                           
  8579                           
  8580                           ;psect for function _TMR1_Initialize
  8581  07F0                     _TMR1_Initialize:	
  8582  07F0                     l3648:	
  8583                           ;incstack = 0
  8584                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  8585                           
  8586                           
  8587                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  8588  07F0  0020               	movlb	0	; select bank0
  8589  07F1  0199               	clrf	25	;volatile
  8590                           
  8591                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
  8592  07F2  0197               	clrf	23	;volatile
  8593                           
  8594                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  8595  07F3  0196               	clrf	22	;volatile
  8596  07F4                     l3650:	
  8597                           
  8598                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  8599  07F4  1011               	bcf	17,0	;volatile
  8600  07F5                     l3652:	
  8601                           
  8602                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8603  07F5  0817               	movf	23,w	;volatile
  8604  07F6  0021               	movlb	1	; select bank1
  8605  07F7  00EE               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  8606  07F8  0020               	movlb	0	; select bank0
  8607  07F9  0816               	movf	22,w	;volatile
  8608  07FA  0021               	movlb	1	; select bank1
  8609  07FB  00ED               	movwf	_timer1ReloadVal^(0+128)	;volatile
  8610  07FC                     l3654:	
  8611                           
  8612                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x01;
  8613  07FC  3001               	movlw	1
  8614  07FD  0020               	movlb	0	; select bank0
  8615  07FE  0098               	movwf	24	;volatile
  8616  07FF                     l146:	
  8617  07FF  0008               	return
  8618  0800                     __end_of_TMR1_Initialize:	
  8619                           
  8620                           	psect	text26
  8621  08A7                     __ptext26:	
  8622 ;; *************** function _PWM3_Initialize *****************
  8623 ;; Defined at:
  8624 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;		None
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;		None
  8629 ;; Return value:  Size  Location     Type
  8630 ;;                  1    wreg      void 
  8631 ;; Registers used:
  8632 ;;		wreg, status,2, status,0
  8633 ;; Tracked objects:
  8634 ;;		On entry : 0/0
  8635 ;;		On exit  : 0/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8638 ;;      Params:         0       0       0       0       0       0
  8639 ;;      Locals:         0       0       0       0       0       0
  8640 ;;      Temps:          0       0       0       0       0       0
  8641 ;;      Totals:         0       0       0       0       0       0
  8642 ;;Total ram usage:        0 bytes
  8643 ;; Hardware stack levels used:    1
  8644 ;; Hardware stack levels required when called:    4
  8645 ;; This function calls:
  8646 ;;		Nothing
  8647 ;; This function is called by:
  8648 ;;		_SYSTEM_Initialize
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           
  8652                           
  8653                           ;psect for function _PWM3_Initialize
  8654  08A7                     _PWM3_Initialize:	
  8655  08A7                     l3632:	
  8656                           ;incstack = 0
  8657                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  8658                           
  8659                           
  8660                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x0C;
  8661  08A7  300C               	movlw	12
  8662  08A8  0026               	movlb	6	; select bank6
  8663  08A9  0093               	movwf	19	;volatile
  8664  08AA                     l3634:	
  8665                           
  8666                           ;mcc_generated_files/pwm3.c: 72:  CCPR3L = 0x00;
  8667  08AA  0191               	clrf	17	;volatile
  8668  08AB                     l3636:	
  8669                           
  8670                           ;mcc_generated_files/pwm3.c: 75:  CCPR3H = 0x00;
  8671  08AB  0192               	clrf	18	;volatile
  8672  08AC                     l3638:	
  8673                           
  8674                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x0;
  8675  08AC  30CF               	movlw	-49
  8676  08AD  0025               	movlb	5	; select bank5
  8677  08AE  059E               	andwf	30,f	;volatile
  8678  08AF                     l472:	
  8679  08AF  0008               	return
  8680  08B0                     __end_of_PWM3_Initialize:	
  8681                           
  8682                           	psect	text27
  8683  0B39                     __ptext27:	
  8684 ;; *************** function _PIN_MANAGER_Initialize *****************
  8685 ;; Defined at:
  8686 ;;		line 60 in file "mcc_generated_files/pin_manager.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;		None
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;		None
  8691 ;; Return value:  Size  Location     Type
  8692 ;;                  1    wreg      void 
  8693 ;; Registers used:
  8694 ;;		wreg, status,2, status,0, pclath, cstack
  8695 ;; Tracked objects:
  8696 ;;		On entry : 0/0
  8697 ;;		On exit  : 0/0
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8700 ;;      Params:         0       0       0       0       0       0
  8701 ;;      Locals:         0       0       0       0       0       0
  8702 ;;      Temps:          0       0       0       0       0       0
  8703 ;;      Totals:         0       0       0       0       0       0
  8704 ;;Total ram usage:        0 bytes
  8705 ;; Hardware stack levels used:    1
  8706 ;; Hardware stack levels required when called:    5
  8707 ;; This function calls:
  8708 ;;		_IOCBF0_SetInterruptHandler
  8709 ;;		_IOCBF3_SetInterruptHandler
  8710 ;;		_IOCBF4_SetInterruptHandler
  8711 ;;		_IOCBF5_SetInterruptHandler
  8712 ;; This function is called by:
  8713 ;;		_SYSTEM_Initialize
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           
  8718                           ;psect for function _PIN_MANAGER_Initialize
  8719  0B39                     _PIN_MANAGER_Initialize:	
  8720  0B39                     l3546:	
  8721                           ;incstack = 0
  8722                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8723                           
  8724                           
  8725                           ;mcc_generated_files/pin_manager.c: 65:     LATA = 0x00;
  8726  0B39  0022               	movlb	2	; select bank2
  8727  0B3A  018C               	clrf	12	;volatile
  8728                           
  8729                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
  8730  0B3B  018D               	clrf	13	;volatile
  8731  0B3C                     l3548:	
  8732                           
  8733                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0x33;
  8734  0B3C  3033               	movlw	51
  8735  0B3D  0021               	movlb	1	; select bank1
  8736  0B3E  008C               	movwf	12	;volatile
  8737  0B3F                     l3550:	
  8738                           
  8739                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
  8740  0B3F  30FF               	movlw	255
  8741  0B40  008D               	movwf	13	;volatile
  8742  0B41                     l3552:	
  8743                           
  8744                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xC0;
  8745  0B41  30C0               	movlw	192
  8746  0B42  0023               	movlb	3	; select bank3
  8747  0B43  008D               	movwf	13	;volatile
  8748  0B44                     l3554:	
  8749                           
  8750                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x03;
  8751  0B44  3003               	movlw	3
  8752  0B45  008C               	movwf	12	;volatile
  8753                           
  8754                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  8755  0B46  0024               	movlb	4	; select bank4
  8756  0B47  018D               	clrf	13	;volatile
  8757                           
  8758                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  8759  0B48  018C               	clrf	12	;volatile
  8760  0B49                     l3556:	
  8761                           
  8762                           ;mcc_generated_files/pin_manager.c: 85:     OPTION_REGbits.nWPUEN = 1;
  8763  0B49  0021               	movlb	1	; select bank1
  8764  0B4A  1795               	bsf	21,7	;volatile
  8765                           
  8766                           ;mcc_generated_files/pin_manager.c: 91:     APFCON0 = 0x00;
  8767  0B4B  0022               	movlb	2	; select bank2
  8768  0B4C  019D               	clrf	29	;volatile
  8769                           
  8770                           ;mcc_generated_files/pin_manager.c: 92:     APFCON1 = 0x00;
  8771  0B4D  019E               	clrf	30	;volatile
  8772  0B4E                     l3558:	
  8773                           
  8774                           ;mcc_generated_files/pin_manager.c: 98:     IOCBFbits.IOCBF0 = 0;
  8775  0B4E  0027               	movlb	7	; select bank7
  8776  0B4F  1016               	bcf	22,0	;volatile
  8777  0B50                     l3560:	
  8778                           
  8779                           ;mcc_generated_files/pin_manager.c: 100:     IOCBFbits.IOCBF3 = 0;
  8780  0B50  1196               	bcf	22,3	;volatile
  8781  0B51                     l3562:	
  8782                           
  8783                           ;mcc_generated_files/pin_manager.c: 102:     IOCBFbits.IOCBF4 = 0;
  8784  0B51  1216               	bcf	22,4	;volatile
  8785  0B52                     l3564:	
  8786                           
  8787                           ;mcc_generated_files/pin_manager.c: 104:     IOCBFbits.IOCBF5 = 0;
  8788  0B52  1296               	bcf	22,5	;volatile
  8789  0B53                     l3566:	
  8790                           
  8791                           ;mcc_generated_files/pin_manager.c: 106:     IOCBNbits.IOCBN0 = 1;
  8792  0B53  1415               	bsf	21,0	;volatile
  8793  0B54                     l3568:	
  8794                           
  8795                           ;mcc_generated_files/pin_manager.c: 108:     IOCBNbits.IOCBN3 = 1;
  8796  0B54  1595               	bsf	21,3	;volatile
  8797  0B55                     l3570:	
  8798                           
  8799                           ;mcc_generated_files/pin_manager.c: 110:     IOCBNbits.IOCBN4 = 1;
  8800  0B55  1615               	bsf	21,4	;volatile
  8801  0B56                     l3572:	
  8802                           
  8803                           ;mcc_generated_files/pin_manager.c: 112:     IOCBNbits.IOCBN5 = 1;
  8804  0B56  1695               	bsf	21,5	;volatile
  8805  0B57                     l3574:	
  8806                           
  8807                           ;mcc_generated_files/pin_manager.c: 114:     IOCBPbits.IOCBP0 = 0;
  8808  0B57  1014               	bcf	20,0	;volatile
  8809  0B58                     l3576:	
  8810                           
  8811                           ;mcc_generated_files/pin_manager.c: 116:     IOCBPbits.IOCBP3 = 0;
  8812  0B58  1194               	bcf	20,3	;volatile
  8813  0B59                     l3578:	
  8814                           
  8815                           ;mcc_generated_files/pin_manager.c: 118:     IOCBPbits.IOCBP4 = 0;
  8816  0B59  1214               	bcf	20,4	;volatile
  8817  0B5A                     l3580:	
  8818                           
  8819                           ;mcc_generated_files/pin_manager.c: 120:     IOCBPbits.IOCBP5 = 0;
  8820  0B5A  1294               	bcf	20,5	;volatile
  8821  0B5B                     l3582:	
  8822                           
  8823                           ;mcc_generated_files/pin_manager.c: 125:     IOCBF0_SetInterruptHandler(IOCBF0_DefaultIn
      +                          terruptHandler);
  8824  0B5B  302B               	movlw	low _IOCBF0_DefaultInterruptHandler
  8825  0B5C  0020               	movlb	0	; select bank0
  8826  0B5D  00A0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler
  8827  0B5E  3008               	movlw	high _IOCBF0_DefaultInterruptHandler
  8828  0B5F  00A1               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler+1
  8829  0B60  3188  2083  318B   	fcall	_IOCBF0_SetInterruptHandler
  8830  0B63                     l3584:	
  8831                           
  8832                           ;mcc_generated_files/pin_manager.c: 126:     IOCBF3_SetInterruptHandler(IOCBF3_DefaultIn
      +                          terruptHandler);
  8833  0B63  302C               	movlw	low _IOCBF3_DefaultInterruptHandler
  8834  0B64  0020               	movlb	0	; select bank0
  8835  0B65  00A0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler
  8836  0B66  3008               	movlw	high _IOCBF3_DefaultInterruptHandler
  8837  0B67  00A1               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler+1
  8838  0B68  3188  208C  318B   	fcall	_IOCBF3_SetInterruptHandler
  8839  0B6B                     l3586:	
  8840                           
  8841                           ;mcc_generated_files/pin_manager.c: 127:     IOCBF4_SetInterruptHandler(IOCBF4_DefaultIn
      +                          terruptHandler);
  8842  0B6B  302D               	movlw	low _IOCBF4_DefaultInterruptHandler
  8843  0B6C  0020               	movlb	0	; select bank0
  8844  0B6D  00A0               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler
  8845  0B6E  3008               	movlw	high _IOCBF4_DefaultInterruptHandler
  8846  0B6F  00A1               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler+1
  8847  0B70  3188  2095  318B   	fcall	_IOCBF4_SetInterruptHandler
  8848  0B73                     l3588:	
  8849                           
  8850                           ;mcc_generated_files/pin_manager.c: 128:     IOCBF5_SetInterruptHandler(IOCBF5_DefaultIn
      +                          terruptHandler);
  8851  0B73  3002               	movlw	low _IOCBF5_DefaultInterruptHandler
  8852  0B74  0020               	movlb	0	; select bank0
  8853  0B75  00A0               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler
  8854  0B76  3000               	movlw	high _IOCBF5_DefaultInterruptHandler
  8855  0B77  00A1               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler+1
  8856  0B78  3188  209E  318B   	fcall	_IOCBF5_SetInterruptHandler
  8857  0B7B                     l3590:	
  8858                           
  8859                           ;mcc_generated_files/pin_manager.c: 131:     INTCONbits.IOCIE = 1;
  8860  0B7B  158B               	bsf	11,3	;volatile
  8861  0B7C                     l414:	
  8862  0B7C  0008               	return
  8863  0B7D                     __end_of_PIN_MANAGER_Initialize:	
  8864                           
  8865                           	psect	text28
  8866  089E                     __ptext28:	
  8867 ;; *************** function _IOCBF5_SetInterruptHandler *****************
  8868 ;; Defined at:
  8869 ;;		line 267 in file "mcc_generated_files/pin_manager.c"
  8870 ;; Parameters:    Size  Location     Type
  8871 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8872 ;;		 -> sensor4(1), IOCBF5_DefaultInterruptHandler(1), 
  8873 ;; Auto vars:     Size  Location     Type
  8874 ;;		None
  8875 ;; Return value:  Size  Location     Type
  8876 ;;                  1    wreg      void 
  8877 ;; Registers used:
  8878 ;;		wreg
  8879 ;; Tracked objects:
  8880 ;;		On entry : 0/0
  8881 ;;		On exit  : 0/0
  8882 ;;		Unchanged: 0/0
  8883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8884 ;;      Params:         0       2       0       0       0       0
  8885 ;;      Locals:         0       0       0       0       0       0
  8886 ;;      Temps:          0       0       0       0       0       0
  8887 ;;      Totals:         0       2       0       0       0       0
  8888 ;;Total ram usage:        2 bytes
  8889 ;; Hardware stack levels used:    1
  8890 ;; Hardware stack levels required when called:    4
  8891 ;; This function calls:
  8892 ;;		Nothing
  8893 ;; This function is called by:
  8894 ;;		_PIN_MANAGER_Initialize
  8895 ;;		_main
  8896 ;; This function uses a non-reentrant model
  8897 ;;
  8898                           
  8899                           
  8900                           ;psect for function _IOCBF5_SetInterruptHandler
  8901  089E                     _IOCBF5_SetInterruptHandler:	
  8902  089E                     l3532:	
  8903                           ;incstack = 0
  8904                           ; Regs used in _IOCBF5_SetInterruptHandler: [wreg]
  8905                           
  8906                           
  8907                           ;mcc_generated_files/pin_manager.c: 268:     IOCBF5_InterruptHandler = InterruptHandler;
  8908  089E  0020               	movlb	0	; select bank0
  8909  089F  0821               	movf	IOCBF5_SetInterruptHandler@InterruptHandler+1,w
  8910  08A0  0021               	movlb	1	; select bank1
  8911  08A1  00E4               	movwf	(_IOCBF5_InterruptHandler+1)^(0+128)
  8912  08A2  0020               	movlb	0	; select bank0
  8913  08A3  0820               	movf	IOCBF5_SetInterruptHandler@InterruptHandler,w
  8914  08A4  0021               	movlb	1	; select bank1
  8915  08A5  00E3               	movwf	_IOCBF5_InterruptHandler^(0+128)
  8916  08A6                     l458:	
  8917  08A6  0008               	return
  8918  08A7                     __end_of_IOCBF5_SetInterruptHandler:	
  8919                           
  8920                           	psect	text29
  8921  0895                     __ptext29:	
  8922 ;; *************** function _IOCBF4_SetInterruptHandler *****************
  8923 ;; Defined at:
  8924 ;;		line 237 in file "mcc_generated_files/pin_manager.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8927 ;;		 -> sensor3(1), IOCBF4_DefaultInterruptHandler(1), 
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;		None
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  1    wreg      void 
  8932 ;; Registers used:
  8933 ;;		wreg
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8939 ;;      Params:         0       2       0       0       0       0
  8940 ;;      Locals:         0       0       0       0       0       0
  8941 ;;      Temps:          0       0       0       0       0       0
  8942 ;;      Totals:         0       2       0       0       0       0
  8943 ;;Total ram usage:        2 bytes
  8944 ;; Hardware stack levels used:    1
  8945 ;; Hardware stack levels required when called:    4
  8946 ;; This function calls:
  8947 ;;		Nothing
  8948 ;; This function is called by:
  8949 ;;		_PIN_MANAGER_Initialize
  8950 ;;		_main
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           
  8954                           
  8955                           ;psect for function _IOCBF4_SetInterruptHandler
  8956  0895                     _IOCBF4_SetInterruptHandler:	
  8957  0895                     l3530:	
  8958                           ;incstack = 0
  8959                           ; Regs used in _IOCBF4_SetInterruptHandler: [wreg]
  8960                           
  8961                           
  8962                           ;mcc_generated_files/pin_manager.c: 238:     IOCBF4_InterruptHandler = InterruptHandler;
  8963  0895  0020               	movlb	0	; select bank0
  8964  0896  0821               	movf	IOCBF4_SetInterruptHandler@InterruptHandler+1,w
  8965  0897  0021               	movlb	1	; select bank1
  8966  0898  00E6               	movwf	(_IOCBF4_InterruptHandler+1)^(0+128)
  8967  0899  0020               	movlb	0	; select bank0
  8968  089A  0820               	movf	IOCBF4_SetInterruptHandler@InterruptHandler,w
  8969  089B  0021               	movlb	1	; select bank1
  8970  089C  00E5               	movwf	_IOCBF4_InterruptHandler^(0+128)
  8971  089D                     l448:	
  8972  089D  0008               	return
  8973  089E                     __end_of_IOCBF4_SetInterruptHandler:	
  8974                           
  8975                           	psect	text30
  8976  088C                     __ptext30:	
  8977 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  8978 ;; Defined at:
  8979 ;;		line 207 in file "mcc_generated_files/pin_manager.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8982 ;;		 -> sensor2(1), IOCBF3_DefaultInterruptHandler(1), 
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;		None
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  1    wreg      void 
  8987 ;; Registers used:
  8988 ;;		wreg
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8994 ;;      Params:         0       2       0       0       0       0
  8995 ;;      Locals:         0       0       0       0       0       0
  8996 ;;      Temps:          0       0       0       0       0       0
  8997 ;;      Totals:         0       2       0       0       0       0
  8998 ;;Total ram usage:        2 bytes
  8999 ;; Hardware stack levels used:    1
  9000 ;; Hardware stack levels required when called:    4
  9001 ;; This function calls:
  9002 ;;		Nothing
  9003 ;; This function is called by:
  9004 ;;		_PIN_MANAGER_Initialize
  9005 ;;		_main
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           
  9010                           ;psect for function _IOCBF3_SetInterruptHandler
  9011  088C                     _IOCBF3_SetInterruptHandler:	
  9012  088C                     l3528:	
  9013                           ;incstack = 0
  9014                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  9015                           
  9016                           
  9017                           ;mcc_generated_files/pin_manager.c: 208:     IOCBF3_InterruptHandler = InterruptHandler;
  9018  088C  0020               	movlb	0	; select bank0
  9019  088D  0821               	movf	IOCBF3_SetInterruptHandler@InterruptHandler+1,w
  9020  088E  0021               	movlb	1	; select bank1
  9021  088F  00E8               	movwf	(_IOCBF3_InterruptHandler+1)^(0+128)
  9022  0890  0020               	movlb	0	; select bank0
  9023  0891  0820               	movf	IOCBF3_SetInterruptHandler@InterruptHandler,w
  9024  0892  0021               	movlb	1	; select bank1
  9025  0893  00E7               	movwf	_IOCBF3_InterruptHandler^(0+128)
  9026  0894                     l438:	
  9027  0894  0008               	return
  9028  0895                     __end_of_IOCBF3_SetInterruptHandler:	
  9029                           
  9030                           	psect	text31
  9031  0883                     __ptext31:	
  9032 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  9033 ;; Defined at:
  9034 ;;		line 177 in file "mcc_generated_files/pin_manager.c"
  9035 ;; Parameters:    Size  Location     Type
  9036 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9037 ;;		 -> sensor1(1), IOCBF0_DefaultInterruptHandler(1), 
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;		None
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  1    wreg      void 
  9042 ;; Registers used:
  9043 ;;		wreg
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9049 ;;      Params:         0       2       0       0       0       0
  9050 ;;      Locals:         0       0       0       0       0       0
  9051 ;;      Temps:          0       0       0       0       0       0
  9052 ;;      Totals:         0       2       0       0       0       0
  9053 ;;Total ram usage:        2 bytes
  9054 ;; Hardware stack levels used:    1
  9055 ;; Hardware stack levels required when called:    4
  9056 ;; This function calls:
  9057 ;;		Nothing
  9058 ;; This function is called by:
  9059 ;;		_PIN_MANAGER_Initialize
  9060 ;;		_main
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064                           
  9065                           ;psect for function _IOCBF0_SetInterruptHandler
  9066  0883                     _IOCBF0_SetInterruptHandler:	
  9067  0883                     l3526:	
  9068                           ;incstack = 0
  9069                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  9070                           
  9071                           
  9072                           ;mcc_generated_files/pin_manager.c: 178:     IOCBF0_InterruptHandler = InterruptHandler;
  9073  0883  0020               	movlb	0	; select bank0
  9074  0884  0821               	movf	IOCBF0_SetInterruptHandler@InterruptHandler+1,w
  9075  0885  0021               	movlb	1	; select bank1
  9076  0886  00EA               	movwf	(_IOCBF0_InterruptHandler+1)^(0+128)
  9077  0887  0020               	movlb	0	; select bank0
  9078  0888  0820               	movf	IOCBF0_SetInterruptHandler@InterruptHandler,w
  9079  0889  0021               	movlb	1	; select bank1
  9080  088A  00E9               	movwf	_IOCBF0_InterruptHandler^(0+128)
  9081  088B                     l428:	
  9082  088B  0008               	return
  9083  088C                     __end_of_IOCBF0_SetInterruptHandler:	
  9084                           
  9085                           	psect	text32
  9086  0848                     __ptext32:	
  9087 ;; *************** function _OSCILLATOR_Initialize *****************
  9088 ;; Defined at:
  9089 ;;		line 66 in file "mcc_generated_files/mcc.c"
  9090 ;; Parameters:    Size  Location     Type
  9091 ;;		None
  9092 ;; Auto vars:     Size  Location     Type
  9093 ;;		None
  9094 ;; Return value:  Size  Location     Type
  9095 ;;                  1    wreg      void 
  9096 ;; Registers used:
  9097 ;;		wreg, status,2
  9098 ;; Tracked objects:
  9099 ;;		On entry : 0/0
  9100 ;;		On exit  : 0/0
  9101 ;;		Unchanged: 0/0
  9102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9103 ;;      Params:         0       0       0       0       0       0
  9104 ;;      Locals:         0       0       0       0       0       0
  9105 ;;      Temps:          0       0       0       0       0       0
  9106 ;;      Totals:         0       0       0       0       0       0
  9107 ;;Total ram usage:        0 bytes
  9108 ;; Hardware stack levels used:    1
  9109 ;; Hardware stack levels required when called:    4
  9110 ;; This function calls:
  9111 ;;		Nothing
  9112 ;; This function is called by:
  9113 ;;		_SYSTEM_Initialize
  9114 ;; This function uses a non-reentrant model
  9115 ;;
  9116                           
  9117                           
  9118                           ;psect for function _OSCILLATOR_Initialize
  9119  0848                     _OSCILLATOR_Initialize:	
  9120  0848                     l3592:	
  9121                           ;incstack = 0
  9122                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9123                           
  9124                           
  9125                           ;mcc_generated_files/mcc.c: 69:     OSCCON = 0x70;
  9126  0848  3070               	movlw	112
  9127  0849  0021               	movlb	1	; select bank1
  9128  084A  0099               	movwf	25	;volatile
  9129  084B                     l3594:	
  9130                           
  9131                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  9132  084B  0198               	clrf	24	;volatile
  9133  084C                     l3596:	
  9134                           
  9135                           ;mcc_generated_files/mcc.c: 73:     BORCON = 0x00;
  9136  084C  0022               	movlb	2	; select bank2
  9137  084D  0196               	clrf	22	;volatile
  9138  084E                     l124:	
  9139  084E  0008               	return
  9140  084F                     __end_of_OSCILLATOR_Initialize:	
  9141                           
  9142                           	psect	text33
  9143  082E                     __ptext33:	
  9144 ;; *************** function _FVR_Initialize *****************
  9145 ;; Defined at:
  9146 ;;		line 58 in file "mcc_generated_files/fvr.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;		None
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;		None
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  1    wreg      void 
  9153 ;; Registers used:
  9154 ;;		wreg
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9160 ;;      Params:         0       0       0       0       0       0
  9161 ;;      Locals:         0       0       0       0       0       0
  9162 ;;      Temps:          0       0       0       0       0       0
  9163 ;;      Totals:         0       0       0       0       0       0
  9164 ;;Total ram usage:        0 bytes
  9165 ;; Hardware stack levels used:    1
  9166 ;; Hardware stack levels required when called:    4
  9167 ;; This function calls:
  9168 ;;		Nothing
  9169 ;; This function is called by:
  9170 ;;		_SYSTEM_Initialize
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           
  9175                           ;psect for function _FVR_Initialize
  9176  082E                     _FVR_Initialize:	
  9177  082E                     l3600:	
  9178                           ;incstack = 0
  9179                           ; Regs used in _FVR_Initialize: [wreg]
  9180                           
  9181                           
  9182                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x81;
  9183  082E  3081               	movlw	129
  9184  082F  0022               	movlb	2	; select bank2
  9185  0830  0097               	movwf	23	;volatile
  9186  0831                     l320:	
  9187  0831  0008               	return
  9188  0832                     __end_of_FVR_Initialize:	
  9189                           
  9190                           	psect	text34
  9191  0A56                     __ptext34:	
  9192 ;; *************** function _EUSART_Initialize *****************
  9193 ;; Defined at:
  9194 ;;		line 66 in file "mcc_generated_files/eusart.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;		None
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;		None
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  1    wreg      void 
  9201 ;; Registers used:
  9202 ;;		wreg, status,2, status,0, pclath, cstack
  9203 ;; Tracked objects:
  9204 ;;		On entry : 0/0
  9205 ;;		On exit  : 0/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9208 ;;      Params:         0       0       0       0       0       0
  9209 ;;      Locals:         0       0       0       0       0       0
  9210 ;;      Temps:          0       0       0       0       0       0
  9211 ;;      Totals:         0       0       0       0       0       0
  9212 ;;Total ram usage:        0 bytes
  9213 ;; Hardware stack levels used:    1
  9214 ;; Hardware stack levels required when called:    5
  9215 ;; This function calls:
  9216 ;;		_EUSART_SetErrorHandler
  9217 ;;		_EUSART_SetFramingErrorHandler
  9218 ;;		_EUSART_SetOverrunErrorHandler
  9219 ;; This function is called by:
  9220 ;;		_SYSTEM_Initialize
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           
  9225                           ;psect for function _EUSART_Initialize
  9226  0A56                     _EUSART_Initialize:	
  9227  0A56                     l3534:	
  9228                           ;incstack = 0
  9229                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9230                           
  9231                           
  9232                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  9233  0A56  3008               	movlw	8
  9234  0A57  0023               	movlb	3	; select bank3
  9235  0A58  009F               	movwf	31	;volatile
  9236                           
  9237                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  9238  0A59  3090               	movlw	144
  9239  0A5A  009D               	movwf	29	;volatile
  9240                           
  9241                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  9242  0A5B  3024               	movlw	36
  9243  0A5C  009E               	movwf	30	;volatile
  9244                           
  9245                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  9246  0A5D  3067               	movlw	103
  9247  0A5E  009B               	movwf	27	;volatile
  9248  0A5F                     l3536:	
  9249                           
  9250                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  9251  0A5F  019C               	clrf	28	;volatile
  9252  0A60                     l3538:	
  9253                           
  9254                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  9255  0A60  3000               	movlw	0
  9256  0A61  0020               	movlb	0	; select bank0
  9257  0A62  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  9258  0A63  3000               	movlw	0
  9259  0A64  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  9260  0A65  3188  2071  318A   	fcall	_EUSART_SetFramingErrorHandler
  9261  0A68                     l3540:	
  9262                           
  9263                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  9264  0A68  3000               	movlw	0
  9265  0A69  0020               	movlb	0	; select bank0
  9266  0A6A  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  9267  0A6B  3000               	movlw	0
  9268  0A6C  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  9269  0A6D  3188  207A  318A   	fcall	_EUSART_SetOverrunErrorHandler
  9270  0A70                     l3542:	
  9271                           
  9272                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  9273  0A70  3000               	movlw	0
  9274  0A71  0020               	movlb	0	; select bank0
  9275  0A72  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  9276  0A73  3000               	movlw	0
  9277  0A74  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  9278  0A75  3188  2068  318A   	fcall	_EUSART_SetErrorHandler
  9279  0A78                     l3544:	
  9280                           
  9281                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  9282  0A78  01F6               	clrf	_eusartRxLastError	;volatile
  9283  0A79                     l43:	
  9284  0A79  0008               	return
  9285  0A7A                     __end_of_EUSART_Initialize:	
  9286                           
  9287                           	psect	text35
  9288  087A                     __ptext35:	
  9289 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  9290 ;; Defined at:
  9291 ;;		line 161 in file "mcc_generated_files/eusart.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9294 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;		None
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1    wreg      void 
  9299 ;; Registers used:
  9300 ;;		wreg
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9306 ;;      Params:         0       2       0       0       0       0
  9307 ;;      Locals:         0       0       0       0       0       0
  9308 ;;      Temps:          0       0       0       0       0       0
  9309 ;;      Totals:         0       2       0       0       0       0
  9310 ;;Total ram usage:        2 bytes
  9311 ;; Hardware stack levels used:    1
  9312 ;; Hardware stack levels required when called:    4
  9313 ;; This function calls:
  9314 ;;		Nothing
  9315 ;; This function is called by:
  9316 ;;		_EUSART_Initialize
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           
  9321                           ;psect for function _EUSART_SetOverrunErrorHandler
  9322  087A                     _EUSART_SetOverrunErrorHandler:	
  9323  087A                     l3502:	
  9324                           ;incstack = 0
  9325                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  9326                           
  9327                           
  9328                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  9329  087A  0020               	movlb	0	; select bank0
  9330  087B  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  9331  087C  0022               	movlb	2	; select bank2
  9332  087D  00D2               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  9333  087E  0020               	movlb	0	; select bank0
  9334  087F  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  9335  0880  0022               	movlb	2	; select bank2
  9336  0881  00D1               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  9337  0882                     l85:	
  9338  0882  0008               	return
  9339  0883                     __end_of_EUSART_SetOverrunErrorHandler:	
  9340                           
  9341                           	psect	text36
  9342  0871                     __ptext36:	
  9343 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  9344 ;; Defined at:
  9345 ;;		line 157 in file "mcc_generated_files/eusart.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9348 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  9349 ;; Auto vars:     Size  Location     Type
  9350 ;;		None
  9351 ;; Return value:  Size  Location     Type
  9352 ;;                  1    wreg      void 
  9353 ;; Registers used:
  9354 ;;		wreg
  9355 ;; Tracked objects:
  9356 ;;		On entry : 0/0
  9357 ;;		On exit  : 0/0
  9358 ;;		Unchanged: 0/0
  9359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9360 ;;      Params:         0       2       0       0       0       0
  9361 ;;      Locals:         0       0       0       0       0       0
  9362 ;;      Temps:          0       0       0       0       0       0
  9363 ;;      Totals:         0       2       0       0       0       0
  9364 ;;Total ram usage:        2 bytes
  9365 ;; Hardware stack levels used:    1
  9366 ;; Hardware stack levels required when called:    4
  9367 ;; This function calls:
  9368 ;;		Nothing
  9369 ;; This function is called by:
  9370 ;;		_EUSART_Initialize
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           
  9375                           ;psect for function _EUSART_SetFramingErrorHandler
  9376  0871                     _EUSART_SetFramingErrorHandler:	
  9377  0871                     l3500:	
  9378                           ;incstack = 0
  9379                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9380                           
  9381                           
  9382                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  9383  0871  0020               	movlb	0	; select bank0
  9384  0872  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  9385  0873  0022               	movlb	2	; select bank2
  9386  0874  00D4               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  9387  0875  0020               	movlb	0	; select bank0
  9388  0876  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  9389  0877  0022               	movlb	2	; select bank2
  9390  0878  00D3               	movwf	_EUSART_FramingErrorHandler^(0+256)
  9391  0879                     l82:	
  9392  0879  0008               	return
  9393  087A                     __end_of_EUSART_SetFramingErrorHandler:	
  9394                           
  9395                           	psect	text37
  9396  0868                     __ptext37:	
  9397 ;; *************** function _EUSART_SetErrorHandler *****************
  9398 ;; Defined at:
  9399 ;;		line 165 in file "mcc_generated_files/eusart.c"
  9400 ;; Parameters:    Size  Location     Type
  9401 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9402 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9403 ;; Auto vars:     Size  Location     Type
  9404 ;;		None
  9405 ;; Return value:  Size  Location     Type
  9406 ;;                  1    wreg      void 
  9407 ;; Registers used:
  9408 ;;		wreg
  9409 ;; Tracked objects:
  9410 ;;		On entry : 0/0
  9411 ;;		On exit  : 0/0
  9412 ;;		Unchanged: 0/0
  9413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9414 ;;      Params:         0       2       0       0       0       0
  9415 ;;      Locals:         0       0       0       0       0       0
  9416 ;;      Temps:          0       0       0       0       0       0
  9417 ;;      Totals:         0       2       0       0       0       0
  9418 ;;Total ram usage:        2 bytes
  9419 ;; Hardware stack levels used:    1
  9420 ;; Hardware stack levels required when called:    4
  9421 ;; This function calls:
  9422 ;;		Nothing
  9423 ;; This function is called by:
  9424 ;;		_EUSART_Initialize
  9425 ;; This function uses a non-reentrant model
  9426 ;;
  9427                           
  9428                           
  9429                           ;psect for function _EUSART_SetErrorHandler
  9430  0868                     _EUSART_SetErrorHandler:	
  9431  0868                     l3504:	
  9432                           ;incstack = 0
  9433                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9434                           
  9435                           
  9436                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  9437  0868  0020               	movlb	0	; select bank0
  9438  0869  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9439  086A  0022               	movlb	2	; select bank2
  9440  086B  00D0               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  9441  086C  0020               	movlb	0	; select bank0
  9442  086D  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9443  086E  0022               	movlb	2	; select bank2
  9444  086F  00CF               	movwf	_EUSART_ErrorHandler^(0+256)
  9445  0870                     l88:	
  9446  0870  0008               	return
  9447  0871                     __end_of_EUSART_SetErrorHandler:	
  9448                           
  9449                           	psect	text38
  9450  095E                     __ptext38:	
  9451 ;; *************** function _CCP4_Initialize *****************
  9452 ;; Defined at:
  9453 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;		None
  9456 ;; Auto vars:     Size  Location     Type
  9457 ;;		None
  9458 ;; Return value:  Size  Location     Type
  9459 ;;                  1    wreg      void 
  9460 ;; Registers used:
  9461 ;;		wreg, status,2, status,0, pclath, cstack
  9462 ;; Tracked objects:
  9463 ;;		On entry : 0/0
  9464 ;;		On exit  : 0/0
  9465 ;;		Unchanged: 0/0
  9466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9467 ;;      Params:         0       0       0       0       0       0
  9468 ;;      Locals:         0       0       0       0       0       0
  9469 ;;      Temps:          0       0       0       0       0       0
  9470 ;;      Totals:         0       0       0       0       0       0
  9471 ;;Total ram usage:        0 bytes
  9472 ;; Hardware stack levels used:    1
  9473 ;; Hardware stack levels required when called:    5
  9474 ;; This function calls:
  9475 ;;		_CCP4_SetCallBack
  9476 ;; This function is called by:
  9477 ;;		_SYSTEM_Initialize
  9478 ;; This function uses a non-reentrant model
  9479 ;;
  9480                           
  9481                           
  9482                           ;psect for function _CCP4_Initialize
  9483  095E                     _CCP4_Initialize:	
  9484  095E                     l3602:	
  9485                           ;incstack = 0
  9486                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9487                           
  9488                           
  9489                           ;mcc_generated_files/ccp4.c: 70:  CCP4CON = 0x05;
  9490  095E  3005               	movlw	5
  9491  095F  0026               	movlb	6	; select bank6
  9492  0960  009A               	movwf	26	;volatile
  9493  0961                     l3604:	
  9494                           
  9495                           ;mcc_generated_files/ccp4.c: 73:  CCPR4L = 0x00;
  9496  0961  0198               	clrf	24	;volatile
  9497  0962                     l3606:	
  9498                           
  9499                           ;mcc_generated_files/ccp4.c: 76:  CCPR4H = 0x00;
  9500  0962  0199               	clrf	25	;volatile
  9501  0963                     l3608:	
  9502                           
  9503                           ;mcc_generated_files/ccp4.c: 79:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  9504  0963  302A               	movlw	low _CCP4_DefaultCallBack
  9505  0964  0020               	movlb	0	; select bank0
  9506  0965  00A0               	movwf	CCP4_SetCallBack@customCallBack
  9507  0966  3008               	movlw	high _CCP4_DefaultCallBack
  9508  0967  00A1               	movwf	CCP4_SetCallBack@customCallBack+1
  9509  0968  3188  205F  3189   	fcall	_CCP4_SetCallBack
  9510  096B                     l3610:	
  9511                           
  9512                           ;mcc_generated_files/ccp4.c: 83:     PIR3bits.CCP4IF = 0;
  9513  096B  0020               	movlb	0	; select bank0
  9514  096C  1293               	bcf	19,5	;volatile
  9515  096D                     l3612:	
  9516                           
  9517                           ;mcc_generated_files/ccp4.c: 86:     PIE3bits.CCP4IE = 1;
  9518  096D  0021               	movlb	1	; select bank1
  9519  096E  1693               	bsf	19,5	;volatile
  9520  096F                     l343:	
  9521  096F  0008               	return
  9522  0970                     __end_of_CCP4_Initialize:	
  9523                           
  9524                           	psect	text39
  9525  085F                     __ptext39:	
  9526 ;; *************** function _CCP4_SetCallBack *****************
  9527 ;; Defined at:
  9528 ;;		line 104 in file "mcc_generated_files/ccp4.c"
  9529 ;; Parameters:    Size  Location     Type
  9530 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  9531 ;;		 -> get_pulse(1), CCP4_DefaultCallBack(1), 
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;		None
  9534 ;; Return value:  Size  Location     Type
  9535 ;;                  1    wreg      void 
  9536 ;; Registers used:
  9537 ;;		wreg
  9538 ;; Tracked objects:
  9539 ;;		On entry : 0/0
  9540 ;;		On exit  : 0/0
  9541 ;;		Unchanged: 0/0
  9542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9543 ;;      Params:         0       2       0       0       0       0
  9544 ;;      Locals:         0       0       0       0       0       0
  9545 ;;      Temps:          0       0       0       0       0       0
  9546 ;;      Totals:         0       2       0       0       0       0
  9547 ;;Total ram usage:        2 bytes
  9548 ;; Hardware stack levels used:    1
  9549 ;; Hardware stack levels required when called:    4
  9550 ;; This function calls:
  9551 ;;		Nothing
  9552 ;; This function is called by:
  9553 ;;		_CCP4_Initialize
  9554 ;;		_main
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           
  9559                           ;psect for function _CCP4_SetCallBack
  9560  085F                     _CCP4_SetCallBack:	
  9561  085F                     l3524:	
  9562                           ;incstack = 0
  9563                           ; Regs used in _CCP4_SetCallBack: [wreg]
  9564                           
  9565                           
  9566                           ;mcc_generated_files/ccp4.c: 105:     CCP4_CallBack = customCallBack;
  9567  085F  0020               	movlb	0	; select bank0
  9568  0860  0821               	movf	CCP4_SetCallBack@customCallBack+1,w
  9569  0861  0022               	movlb	2	; select bank2
  9570  0862  00CE               	movwf	(_CCP4_CallBack+1)^(0+256)
  9571  0863  0020               	movlb	0	; select bank0
  9572  0864  0820               	movf	CCP4_SetCallBack@customCallBack,w
  9573  0865  0022               	movlb	2	; select bank2
  9574  0866  00CD               	movwf	_CCP4_CallBack^(0+256)
  9575  0867                     l349:	
  9576  0867  0008               	return
  9577  0868                     __end_of_CCP4_SetCallBack:	
  9578                           
  9579                           	psect	text40
  9580  084F                     __ptext40:	
  9581 ;; *************** function _ADC_Initialize *****************
  9582 ;; Defined at:
  9583 ;;		line 67 in file "mcc_generated_files/adc.c"
  9584 ;; Parameters:    Size  Location     Type
  9585 ;;		None
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;		None
  9588 ;; Return value:  Size  Location     Type
  9589 ;;                  1    wreg      void 
  9590 ;; Registers used:
  9591 ;;		wreg, status,2
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9597 ;;      Params:         0       0       0       0       0       0
  9598 ;;      Locals:         0       0       0       0       0       0
  9599 ;;      Temps:          0       0       0       0       0       0
  9600 ;;      Totals:         0       0       0       0       0       0
  9601 ;;Total ram usage:        0 bytes
  9602 ;; Hardware stack levels used:    1
  9603 ;; Hardware stack levels required when called:    4
  9604 ;; This function calls:
  9605 ;;		Nothing
  9606 ;; This function is called by:
  9607 ;;		_SYSTEM_Initialize
  9608 ;; This function uses a non-reentrant model
  9609 ;;
  9610                           
  9611                           
  9612                           ;psect for function _ADC_Initialize
  9613  084F                     _ADC_Initialize:	
  9614  084F                     l3614:	
  9615                           ;incstack = 0
  9616                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9617                           
  9618                           
  9619                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  9620  084F  30D3               	movlw	211
  9621  0850  0021               	movlb	1	; select bank1
  9622  0851  009E               	movwf	30	;volatile
  9623  0852                     l3616:	
  9624                           
  9625                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  9626  0852  019B               	clrf	27	;volatile
  9627  0853                     l3618:	
  9628                           
  9629                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  9630  0853  019C               	clrf	28	;volatile
  9631                           
  9632                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  9633  0854  3001               	movlw	1
  9634  0855  009D               	movwf	29	;volatile
  9635  0856                     l267:	
  9636  0856  0008               	return
  9637  0857                     __end_of_ADC_Initialize:	
  9638                           
  9639                           	psect	intentry
  9640  0004                     __pintentry:	
  9641 ;; *************** function _INTERRUPT_InterruptManager *****************
  9642 ;; Defined at:
  9643 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;		None
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;		None
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  1    wreg      void 
  9650 ;; Registers used:
  9651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9657 ;;      Params:         0       0       0       0       0       0
  9658 ;;      Locals:         0       0       0       0       0       0
  9659 ;;      Temps:          0       0       0       0       0       0
  9660 ;;      Totals:         0       0       0       0       0       0
  9661 ;;Total ram usage:        0 bytes
  9662 ;; Hardware stack levels used:    1
  9663 ;; Hardware stack levels required when called:    3
  9664 ;; This function calls:
  9665 ;;		_CCP4_CaptureISR
  9666 ;;		_PIN_MANAGER_IOC
  9667 ;;		_TMR4_ISR
  9668 ;; This function is called by:
  9669 ;;		Interrupt level 1
  9670 ;; This function uses a non-reentrant model
  9671 ;;
  9672                           
  9673  0004                     _INTERRUPT_InterruptManager:	
  9674                           
  9675                           ;incstack = 0
  9676  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  9677                           
  9678                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  9679  0005  3180               	pagesel	$
  9680  0006                     i1l3474:	
  9681                           
  9682                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  9683  0006  1D8B               	btfss	11,3	;volatile
  9684  0007  2809               	goto	u373_21
  9685  0008  280A               	goto	u373_20
  9686  0009                     u373_21:	
  9687  0009  2812               	goto	i1l305
  9688  000A                     u373_20:	
  9689  000A                     i1l3476:	
  9690  000A  1C0B               	btfss	11,0	;volatile
  9691  000B  280D               	goto	u374_21
  9692  000C  280E               	goto	u374_20
  9693  000D                     u374_21:	
  9694  000D  2812               	goto	i1l305
  9695  000E                     u374_20:	
  9696  000E                     i1l3478:	
  9697                           
  9698                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  9699  000E  3189  21F2  3180   	fcall	_PIN_MANAGER_IOC
  9700                           
  9701                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  9702  0011  2832               	goto	i1l313
  9703  0012                     i1l305:	
  9704                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  9705                           
  9706  0012  1F0B               	btfss	11,6	;volatile
  9707  0013  2815               	goto	u375_21
  9708  0014  2816               	goto	u375_20
  9709  0015                     u375_21:	
  9710  0015  2832               	goto	i1l313
  9711  0016                     u375_20:	
  9712  0016                     i1l3480:	
  9713                           
  9714                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.CCP4IE == 1 && PIR3bits.CCP4IF == 1)
  9715  0016  0021               	movlb	1	; select bank1
  9716  0017  1E93               	btfss	19,5	;volatile
  9717  0018  281A               	goto	u376_21
  9718  0019  281B               	goto	u376_20
  9719  001A                     u376_21:	
  9720  001A  2824               	goto	i1l308
  9721  001B                     u376_20:	
  9722  001B                     i1l3482:	
  9723  001B  0020               	movlb	0	; select bank0
  9724  001C  1E93               	btfss	19,5	;volatile
  9725  001D  281F               	goto	u377_21
  9726  001E  2820               	goto	u377_20
  9727  001F                     u377_21:	
  9728  001F  2824               	goto	i1l308
  9729  0020                     u377_20:	
  9730  0020                     i1l3484:	
  9731                           
  9732                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             CCP4_CaptureISR();
  9733  0020  3189  2184  3180   	fcall	_CCP4_CaptureISR
  9734                           
  9735                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  9736  0023  2832               	goto	i1l313
  9737  0024                     i1l308:	
  9738                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.TMR4IE == 1 && PI
      +                          R3bits.TMR4IF == 1)
  9739                           
  9740  0024  0021               	movlb	1	; select bank1
  9741  0025  1C93               	btfss	19,1	;volatile
  9742  0026  2828               	goto	u378_21
  9743  0027  2829               	goto	u378_20
  9744  0028                     u378_21:	
  9745  0028  2832               	goto	i1l312
  9746  0029                     u378_20:	
  9747  0029                     i1l3486:	
  9748  0029  0020               	movlb	0	; select bank0
  9749  002A  1C93               	btfss	19,1	;volatile
  9750  002B  282D               	goto	u379_21
  9751  002C  282E               	goto	u379_20
  9752  002D                     u379_21:	
  9753  002D  2832               	goto	i1l312
  9754  002E                     u379_20:	
  9755  002E                     i1l3488:	
  9756                           
  9757                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR4_ISR();
  9758  002E  3189  212F  3180   	fcall	_TMR4_ISR
  9759                           
  9760                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  9761  0031  2832               	goto	i1l313
  9762  0032                     i1l312:	
  9763                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  9764                           
  9765  0032                     i1l313:	
  9766  0032  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9767  0033  0009               	retfie
  9768  0034                     __end_of_INTERRUPT_InterruptManager:	
  9769                           
  9770                           	psect	text42
  9771  092F                     __ptext42:	
  9772 ;; *************** function _TMR4_ISR *****************
  9773 ;; Defined at:
  9774 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;		None
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;		None
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  1    wreg      void 
  9781 ;; Registers used:
  9782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9788 ;;      Params:         0       0       0       0       0       0
  9789 ;;      Locals:         0       0       0       0       0       0
  9790 ;;      Temps:          0       0       0       0       0       0
  9791 ;;      Totals:         0       0       0       0       0       0
  9792 ;;Total ram usage:        0 bytes
  9793 ;; Hardware stack levels used:    1
  9794 ;; Hardware stack levels required when called:    2
  9795 ;; This function calls:
  9796 ;;		Absolute function
  9797 ;;		_TMR4_DefaultInterruptHandler
  9798 ;;		_send_data
  9799 ;; This function is called by:
  9800 ;;		_INTERRUPT_InterruptManager
  9801 ;; This function uses a non-reentrant model
  9802 ;;
  9803                           
  9804                           
  9805                           ;psect for function _TMR4_ISR
  9806  092F                     _TMR4_ISR:	
  9807  092F                     i1l3320:	
  9808                           ;incstack = 0
  9809                           ; Regs used in _TMR4_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9810                           
  9811                           
  9812                           ;mcc_generated_files/tmr4.c: 123:     PIR3bits.TMR4IF = 0;
  9813  092F  0020               	movlb	0	; select bank0
  9814  0930  1093               	bcf	19,1	;volatile
  9815  0931                     i1l3322:	
  9816                           
  9817                           ;mcc_generated_files/tmr4.c: 125:     if(TMR4_InterruptHandler)
  9818  0931  0021               	movlb	1	; select bank1
  9819  0932  086B               	movf	_TMR4_InterruptHandler^(0+128),w
  9820  0933  046C               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
  9821  0934  1903               	btfsc	3,2
  9822  0935  2937               	goto	u343_21
  9823  0936  2938               	goto	u343_20
  9824  0937                     u343_21:	
  9825  0937  293D               	goto	i1l244
  9826  0938                     u343_20:	
  9827  0938                     i1l3324:	
  9828                           
  9829                           ;mcc_generated_files/tmr4.c: 126:     {;mcc_generated_files/tmr4.c: 127:         TMR4_In
      +                          terruptHandler();
  9830  0938  086C               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
  9831  0939  008A               	movwf	10
  9832  093A  086B               	movf	_TMR4_InterruptHandler^(0+128),w
  9833  093B  000A               	callw
  9834  093C  3189               	pagesel	$
  9835  093D                     i1l244:	
  9836  093D  0008               	return
  9837  093E                     __end_of_TMR4_ISR:	
  9838                           
  9839                           	psect	text43
  9840  0003                     __ptext43:	
  9841 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  9842 ;; Defined at:
  9843 ;;		line 136 in file "mcc_generated_files/tmr4.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;		None
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;		None
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  1    wreg      void 
  9850 ;; Registers used:
  9851 ;;		None
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9857 ;;      Params:         0       0       0       0       0       0
  9858 ;;      Locals:         0       0       0       0       0       0
  9859 ;;      Temps:          0       0       0       0       0       0
  9860 ;;      Totals:         0       0       0       0       0       0
  9861 ;;Total ram usage:        0 bytes
  9862 ;; Hardware stack levels used:    1
  9863 ;; This function calls:
  9864 ;;		Nothing
  9865 ;; This function is called by:
  9866 ;;		_TMR4_Initialize
  9867 ;;		_TMR4_ISR
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           
  9872                           ;psect for function _TMR4_DefaultInterruptHandler
  9873  0003                     _TMR4_DefaultInterruptHandler:	
  9874  0003                     i1l250:	
  9875                           ;incstack = 0
  9876                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  9877                           
  9878  0003  0008               	return
  9879  0004                     __end_of_TMR4_DefaultInterruptHandler:	
  9880                           
  9881                           	psect	text44
  9882  0AC3                     __ptext44:	
  9883 ;; *************** function _send_data *****************
  9884 ;; Defined at:
  9885 ;;		line 70 in file "main.c"
  9886 ;; Parameters:    Size  Location     Type
  9887 ;;		None
  9888 ;; Auto vars:     Size  Location     Type
  9889 ;;  i               2    2[COMMON] int 
  9890 ;; Return value:  Size  Location     Type
  9891 ;;                  1    wreg      void 
  9892 ;; Registers used:
  9893 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9894 ;; Tracked objects:
  9895 ;;		On entry : 0/0
  9896 ;;		On exit  : 0/0
  9897 ;;		Unchanged: 0/0
  9898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9899 ;;      Params:         0       0       0       0       0       0
  9900 ;;      Locals:         2       0       0       0       0       0
  9901 ;;      Temps:          1       0       0       0       0       0
  9902 ;;      Totals:         3       0       0       0       0       0
  9903 ;;Total ram usage:        3 bytes
  9904 ;; Hardware stack levels used:    1
  9905 ;; Hardware stack levels required when called:    1
  9906 ;; This function calls:
  9907 ;;		_EUSART_Write
  9908 ;;		_EUSART_is_tx_ready
  9909 ;; This function is called by:
  9910 ;;		_main
  9911 ;;		_TMR4_ISR
  9912 ;; This function uses a non-reentrant model
  9913 ;;
  9914                           
  9915                           
  9916                           ;psect for function _send_data
  9917  0AC3                     _send_data:	
  9918  0AC3                     i1l2758:	
  9919                           ;incstack = 0
  9920                           ; Regs used in _send_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9921                           
  9922                           
  9923                           ;main.c: 72:         aux_tempo++;
  9924  0AC3  3001               	movlw	1
  9925  0AC4  0021               	movlb	1	; select bank1
  9926  0AC5  07D6               	addwf	_aux_tempo^(0+128),f
  9927  0AC6  3000               	movlw	0
  9928  0AC7  3DD7               	addwfc	(_aux_tempo+1)^(0+128),f
  9929  0AC8                     i1l2760:	
  9930                           
  9931                           ;main.c: 73:         if(aux_tempo == 14)
  9932  0AC8  300E               	movlw	14
  9933  0AC9  0656               	xorwf	_aux_tempo^(0+128),w
  9934  0ACA  0457               	iorwf	(_aux_tempo+1)^(0+128),w
  9935  0ACB  1D03               	btfss	3,2
  9936  0ACC  2ACE               	goto	u222_21
  9937  0ACD  2ACF               	goto	u222_20
  9938  0ACE                     u222_21:	
  9939  0ACE  2AF7               	goto	i1l581
  9940  0ACF                     u222_20:	
  9941  0ACF                     i1l2762:	
  9942                           
  9943                           ;main.c: 74:         {;main.c: 75:             int i=0;
  9944  0ACF  01F9               	clrf	send_data@i
  9945  0AD0  01FA               	clrf	send_data@i+1
  9946                           
  9947                           ;main.c: 76:             while(i<5)
  9948  0AD1  2AE7               	goto	i1l2770
  9949  0AD2                     i1l2764:	
  9950                           
  9951                           ;main.c: 77:             {;main.c: 78:                 if(EUSART_is_tx_ready())
  9952  0AD2  3189  2120  318A   	fcall	_EUSART_is_tx_ready
  9953  0AD5  3A00               	xorlw	0
  9954  0AD6  1903               	skipnz
  9955  0AD7  2AD9               	goto	u223_21
  9956  0AD8  2ADA               	goto	u223_20
  9957  0AD9                     u223_21:	
  9958  0AD9  2AE7               	goto	i1l2770
  9959  0ADA                     u223_20:	
  9960  0ADA                     i1l2766:	
  9961                           
  9962                           ;main.c: 79:                     {;main.c: 80:                         EUSART_Write(byte
      +                          [i]);
  9963  0ADA  0879               	movf	send_data@i,w
  9964  0ADB  3E48               	addlw	(low (_byte| (0+256)))& (0+255)
  9965  0ADC  0086               	movwf	6
  9966  0ADD  3001               	movlw	1	; select bank2/3
  9967  0ADE  0087               	movwf	7
  9968  0ADF  0801               	movf	1,w
  9969  0AE0  3188  20B9  318A   	fcall	_EUSART_Write
  9970  0AE3                     i1l2768:	
  9971                           
  9972                           ;main.c: 81:                         i++;
  9973  0AE3  3001               	movlw	1
  9974  0AE4  07F9               	addwf	send_data@i,f
  9975  0AE5  3000               	movlw	0
  9976  0AE6  3DFA               	addwfc	send_data@i+1,f
  9977  0AE7                     i1l2770:	
  9978                           
  9979                           ;main.c: 76:             while(i<5)
  9980  0AE7  087A               	movf	send_data@i+1,w
  9981  0AE8  3A80               	xorlw	128
  9982  0AE9  00F8               	movwf	??_send_data
  9983  0AEA  3080               	movlw	128
  9984  0AEB  0278               	subwf	??_send_data,w
  9985  0AEC  1D03               	skipz
  9986  0AED  2AF0               	goto	u224_25
  9987  0AEE  3005               	movlw	5
  9988  0AEF  0279               	subwf	send_data@i,w
  9989  0AF0                     u224_25:	
  9990  0AF0  1C03               	skipc
  9991  0AF1  2AF3               	goto	u224_21
  9992  0AF2  2AF4               	goto	u224_20
  9993  0AF3                     u224_21:	
  9994  0AF3  2AD2               	goto	i1l2764
  9995  0AF4                     u224_20:	
  9996  0AF4                     i1l2772:	
  9997                           
  9998                           ;main.c: 85:             aux_tempo =0;
  9999  0AF4  0021               	movlb	1	; select bank1
 10000  0AF5  01D6               	clrf	_aux_tempo^(0+128)
 10001  0AF6  01D7               	clrf	(_aux_tempo+1)^(0+128)
 10002  0AF7                     i1l581:	
 10003  0AF7  0008               	return
 10004  0AF8                     __end_of_send_data:	
 10005                           
 10006                           	psect	text45
 10007  0920                     __ptext45:	
 10008 ;; *************** function _EUSART_is_tx_ready *****************
 10009 ;; Defined at:
 10010 ;;		line 94 in file "mcc_generated_files/eusart.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;		None
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;		None
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  1    wreg      _Bool 
 10017 ;; Registers used:
 10018 ;;		wreg, status,2
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10024 ;;      Params:         0       0       0       0       0       0
 10025 ;;      Locals:         1       0       0       0       0       0
 10026 ;;      Temps:          0       0       0       0       0       0
 10027 ;;      Totals:         1       0       0       0       0       0
 10028 ;;Total ram usage:        1 bytes
 10029 ;; Hardware stack levels used:    1
 10030 ;; This function calls:
 10031 ;;		Nothing
 10032 ;; This function is called by:
 10033 ;;		_send_data
 10034 ;; This function uses a non-reentrant model
 10035 ;;
 10036                           
 10037                           
 10038                           ;psect for function _EUSART_is_tx_ready
 10039  0920                     _EUSART_is_tx_ready:	
 10040  0920                     i1l2472:	
 10041                           ;incstack = 0
 10042                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
 10043                           
 10044                           
 10045                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
 10046  0920  01F7               	clrf	_EUSART_is_tx_ready$167
 10047  0921                     i1l2474:	
 10048  0921  0020               	movlb	0	; select bank0
 10049  0922  1E11               	btfss	17,4	;volatile
 10050  0923  2925               	goto	u191_21
 10051  0924  2926               	goto	u191_20
 10052  0925                     u191_21:	
 10053  0925  292D               	goto	i1l2480
 10054  0926                     u191_20:	
 10055  0926                     i1l2476:	
 10056  0926  0023               	movlb	3	; select bank3
 10057  0927  1E9E               	btfss	30,5	;volatile
 10058  0928  292A               	goto	u192_21
 10059  0929  292B               	goto	u192_20
 10060  092A                     u192_21:	
 10061  092A  292D               	goto	i1l2480
 10062  092B                     u192_20:	
 10063  092B                     i1l2478:	
 10064  092B  01F7               	clrf	_EUSART_is_tx_ready$167
 10065  092C  0AF7               	incf	_EUSART_is_tx_ready$167,f
 10066  092D                     i1l2480:	
 10067  092D  0877               	movf	_EUSART_is_tx_ready$167,w
 10068  092E                     i1l48:	
 10069  092E  0008               	return
 10070  092F                     __end_of_EUSART_is_tx_ready:	
 10071                           
 10072                           	psect	text46
 10073  08B9                     __ptext46:	
 10074 ;; *************** function _EUSART_Write *****************
 10075 ;; Defined at:
 10076 ;;		line 132 in file "mcc_generated_files/eusart.c"
 10077 ;; Parameters:    Size  Location     Type
 10078 ;;  txData          1    wreg     unsigned char 
 10079 ;; Auto vars:     Size  Location     Type
 10080 ;;  txData          1    0[COMMON] unsigned char 
 10081 ;; Return value:  Size  Location     Type
 10082 ;;                  1    wreg      void 
 10083 ;; Registers used:
 10084 ;;		wreg
 10085 ;; Tracked objects:
 10086 ;;		On entry : 0/0
 10087 ;;		On exit  : 0/0
 10088 ;;		Unchanged: 0/0
 10089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10090 ;;      Params:         0       0       0       0       0       0
 10091 ;;      Locals:         1       0       0       0       0       0
 10092 ;;      Temps:          0       0       0       0       0       0
 10093 ;;      Totals:         1       0       0       0       0       0
 10094 ;;Total ram usage:        1 bytes
 10095 ;; Hardware stack levels used:    1
 10096 ;; This function calls:
 10097 ;;		Nothing
 10098 ;; This function is called by:
 10099 ;;		_send_data
 10100 ;; This function uses a non-reentrant model
 10101 ;;
 10102                           
 10103                           
 10104                           ;psect for function _EUSART_Write
 10105  08B9                     _EUSART_Write:	
 10106                           
 10107                           ;incstack = 0
 10108                           ; Regs used in _EUSART_Write: [wreg]
 10109                           ;EUSART_Write@txData stored from wreg
 10110  08B9  00F7               	movwf	EUSART_Write@txData
 10111  08BA                     i1l2500:	
 10112  08BA                     i1l67:	
 10113                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
 10114                           
 10115                           
 10116                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
 10117  08BA  0020               	movlb	0	; select bank0
 10118  08BB  1E11               	btfss	17,4	;volatile
 10119  08BC  28BE               	goto	u195_21
 10120  08BD  28BF               	goto	u195_20
 10121  08BE                     u195_21:	
 10122  08BE  28BA               	goto	i1l67
 10123  08BF                     u195_20:	
 10124  08BF                     i1l2502:	
 10125                           
 10126                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
 10127  08BF  0877               	movf	EUSART_Write@txData,w
 10128  08C0  0023               	movlb	3	; select bank3
 10129  08C1  009A               	movwf	26	;volatile
 10130  08C2                     i1l70:	
 10131  08C2  0008               	return
 10132  08C3                     __end_of_EUSART_Write:	
 10133                           
 10134                           	psect	text47
 10135  09F2                     __ptext47:	
 10136 ;; *************** function _PIN_MANAGER_IOC *****************
 10137 ;; Defined at:
 10138 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 10139 ;; Parameters:    Size  Location     Type
 10140 ;;		None
 10141 ;; Auto vars:     Size  Location     Type
 10142 ;;		None
 10143 ;; Return value:  Size  Location     Type
 10144 ;;                  1    wreg      void 
 10145 ;; Registers used:
 10146 ;;		wreg, status,2, status,0, pclath, cstack
 10147 ;; Tracked objects:
 10148 ;;		On entry : 0/0
 10149 ;;		On exit  : 0/0
 10150 ;;		Unchanged: 0/0
 10151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10152 ;;      Params:         0       0       0       0       0       0
 10153 ;;      Locals:         0       0       0       0       0       0
 10154 ;;      Temps:          0       0       0       0       0       0
 10155 ;;      Totals:         0       0       0       0       0       0
 10156 ;;Total ram usage:        0 bytes
 10157 ;; Hardware stack levels used:    1
 10158 ;; Hardware stack levels required when called:    2
 10159 ;; This function calls:
 10160 ;;		_IOCBF0_ISR
 10161 ;;		_IOCBF3_ISR
 10162 ;;		_IOCBF4_ISR
 10163 ;;		_IOCBF5_ISR
 10164 ;; This function is called by:
 10165 ;;		_INTERRUPT_InterruptManager
 10166 ;; This function uses a non-reentrant model
 10167 ;;
 10168                           
 10169                           
 10170                           ;psect for function _PIN_MANAGER_IOC
 10171  09F2                     _PIN_MANAGER_IOC:	
 10172  09F2                     i1l3326:	
 10173                           ;incstack = 0
 10174                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 10175                           
 10176                           
 10177                           ;mcc_generated_files/pin_manager.c: 138:     if(IOCBFbits.IOCBF0 == 1)
 10178  09F2  0027               	movlb	7	; select bank7
 10179  09F3  1C16               	btfss	22,0	;volatile
 10180  09F4  29F6               	goto	u344_21
 10181  09F5  29F7               	goto	u344_20
 10182  09F6                     u344_21:	
 10183  09F6  29FA               	goto	i1l3330
 10184  09F7                     u344_20:	
 10185  09F7                     i1l3328:	
 10186                           
 10187                           ;mcc_generated_files/pin_manager.c: 139:     {;mcc_generated_files/pin_manager.c: 140:  
      +                                 IOCBF0_ISR();
 10188  09F7  3188  20E4  3189   	fcall	_IOCBF0_ISR
 10189  09FA                     i1l3330:	
 10190                           
 10191                           ;mcc_generated_files/pin_manager.c: 143:     if(IOCBFbits.IOCBF3 == 1)
 10192  09FA  0027               	movlb	7	; select bank7
 10193  09FB  1D96               	btfss	22,3	;volatile
 10194  09FC  29FE               	goto	u345_21
 10195  09FD  29FF               	goto	u345_20
 10196  09FE                     u345_21:	
 10197  09FE  2A02               	goto	i1l3334
 10198  09FF                     u345_20:	
 10199  09FF                     i1l3332:	
 10200                           
 10201                           ;mcc_generated_files/pin_manager.c: 144:     {;mcc_generated_files/pin_manager.c: 145:  
      +                                 IOCBF3_ISR();
 10202  09FF  3188  20F3  3189   	fcall	_IOCBF3_ISR
 10203  0A02                     i1l3334:	
 10204                           
 10205                           ;mcc_generated_files/pin_manager.c: 148:     if(IOCBFbits.IOCBF4 == 1)
 10206  0A02  0027               	movlb	7	; select bank7
 10207  0A03  1E16               	btfss	22,4	;volatile
 10208  0A04  2A06               	goto	u346_21
 10209  0A05  2A07               	goto	u346_20
 10210  0A06                     u346_21:	
 10211  0A06  2A0A               	goto	i1l3338
 10212  0A07                     u346_20:	
 10213  0A07                     i1l3336:	
 10214                           
 10215                           ;mcc_generated_files/pin_manager.c: 149:     {;mcc_generated_files/pin_manager.c: 150:  
      +                                 IOCBF4_ISR();
 10216  0A07  3189  2102  3189   	fcall	_IOCBF4_ISR
 10217  0A0A                     i1l3338:	
 10218                           
 10219                           ;mcc_generated_files/pin_manager.c: 153:     if(IOCBFbits.IOCBF5 == 1)
 10220  0A0A  0027               	movlb	7	; select bank7
 10221  0A0B  1E96               	btfss	22,5	;volatile
 10222  0A0C  2A0E               	goto	u347_21
 10223  0A0D  2A0F               	goto	u347_20
 10224  0A0E                     u347_21:	
 10225  0A0E  2A12               	goto	i1l421
 10226  0A0F                     u347_20:	
 10227  0A0F                     i1l3340:	
 10228                           
 10229                           ;mcc_generated_files/pin_manager.c: 154:     {;mcc_generated_files/pin_manager.c: 155:  
      +                                 IOCBF5_ISR();
 10230  0A0F  3189  2111  3189   	fcall	_IOCBF5_ISR
 10231  0A12                     i1l421:	
 10232  0A12  0008               	return
 10233  0A13                     __end_of_PIN_MANAGER_IOC:	
 10234                           
 10235                           	psect	text48
 10236  0911                     __ptext48:	
 10237 ;; *************** function _IOCBF5_ISR *****************
 10238 ;; Defined at:
 10239 ;;		line 252 in file "mcc_generated_files/pin_manager.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;		None
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;		None
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1    wreg      void 
 10246 ;; Registers used:
 10247 ;;		wreg, status,2, status,0, pclath, cstack
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10253 ;;      Params:         0       0       0       0       0       0
 10254 ;;      Locals:         0       0       0       0       0       0
 10255 ;;      Temps:          0       0       0       0       0       0
 10256 ;;      Totals:         0       0       0       0       0       0
 10257 ;;Total ram usage:        0 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; Hardware stack levels required when called:    1
 10260 ;; This function calls:
 10261 ;;		Absolute function
 10262 ;;		_IOCBF5_DefaultInterruptHandler
 10263 ;;		_sensor4
 10264 ;; This function is called by:
 10265 ;;		_PIN_MANAGER_IOC
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269                           
 10270                           ;psect for function _IOCBF5_ISR
 10271  0911                     _IOCBF5_ISR:	
 10272  0911                     i1l2750:	
 10273                           ;incstack = 0
 10274                           ; Regs used in _IOCBF5_ISR: [wreg+status,2+status,0+pclath+cstack]
 10275                           
 10276                           
 10277                           ;mcc_generated_files/pin_manager.c: 257:     if(IOCBF5_InterruptHandler)
 10278  0911  0021               	movlb	1	; select bank1
 10279  0912  0863               	movf	_IOCBF5_InterruptHandler^(0+128),w
 10280  0913  0464               	iorwf	(_IOCBF5_InterruptHandler+1)^(0+128),w
 10281  0914  1903               	btfsc	3,2
 10282  0915  2917               	goto	u220_21
 10283  0916  2918               	goto	u220_20
 10284  0917                     u220_21:	
 10285  0917  291D               	goto	i1l2754
 10286  0918                     u220_20:	
 10287  0918                     i1l2752:	
 10288                           
 10289                           ;mcc_generated_files/pin_manager.c: 258:     {;mcc_generated_files/pin_manager.c: 259:  
      +                                 IOCBF5_InterruptHandler();
 10290  0918  0864               	movf	(_IOCBF5_InterruptHandler+1)^(0+128),w
 10291  0919  008A               	movwf	10
 10292  091A  0863               	movf	_IOCBF5_InterruptHandler^(0+128),w
 10293  091B  000A               	callw
 10294  091C  3189               	pagesel	$
 10295  091D                     i1l2754:	
 10296                           
 10297                           ;mcc_generated_files/pin_manager.c: 261:     IOCBFbits.IOCBF5 = 0;
 10298  091D  0027               	movlb	7	; select bank7
 10299  091E  1296               	bcf	22,5	;volatile
 10300  091F                     i1l455:	
 10301  091F  0008               	return
 10302  0920                     __end_of_IOCBF5_ISR:	
 10303                           
 10304                           	psect	text49
 10305  0002                     __ptext49:	
 10306 ;; *************** function _IOCBF5_DefaultInterruptHandler *****************
 10307 ;; Defined at:
 10308 ;;		line 274 in file "mcc_generated_files/pin_manager.c"
 10309 ;; Parameters:    Size  Location     Type
 10310 ;;		None
 10311 ;; Auto vars:     Size  Location     Type
 10312 ;;		None
 10313 ;; Return value:  Size  Location     Type
 10314 ;;                  1    wreg      void 
 10315 ;; Registers used:
 10316 ;;		None
 10317 ;; Tracked objects:
 10318 ;;		On entry : 0/0
 10319 ;;		On exit  : 0/0
 10320 ;;		Unchanged: 0/0
 10321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10322 ;;      Params:         0       0       0       0       0       0
 10323 ;;      Locals:         0       0       0       0       0       0
 10324 ;;      Temps:          0       0       0       0       0       0
 10325 ;;      Totals:         0       0       0       0       0       0
 10326 ;;Total ram usage:        0 bytes
 10327 ;; Hardware stack levels used:    1
 10328 ;; This function calls:
 10329 ;;		Nothing
 10330 ;; This function is called by:
 10331 ;;		_PIN_MANAGER_Initialize
 10332 ;;		_IOCBF5_ISR
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           
 10337                           ;psect for function _IOCBF5_DefaultInterruptHandler
 10338  0002                     _IOCBF5_DefaultInterruptHandler:	
 10339  0002                     i1l461:	
 10340                           ;incstack = 0
 10341                           ; Regs used in _IOCBF5_DefaultInterruptHandler: []
 10342                           
 10343  0002  0008               	return
 10344  0003                     __end_of_IOCBF5_DefaultInterruptHandler:	
 10345                           
 10346                           	psect	text50
 10347  08D9                     __ptext50:	
 10348 ;; *************** function _sensor4 *****************
 10349 ;; Defined at:
 10350 ;;		line 107 in file "main.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;		None
 10353 ;; Auto vars:     Size  Location     Type
 10354 ;;		None
 10355 ;; Return value:  Size  Location     Type
 10356 ;;                  1    wreg      void 
 10357 ;; Registers used:
 10358 ;;		wreg
 10359 ;; Tracked objects:
 10360 ;;		On entry : 0/0
 10361 ;;		On exit  : 0/0
 10362 ;;		Unchanged: 0/0
 10363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10364 ;;      Params:         0       0       0       0       0       0
 10365 ;;      Locals:         0       0       0       0       0       0
 10366 ;;      Temps:          1       0       0       0       0       0
 10367 ;;      Totals:         1       0       0       0       0       0
 10368 ;;Total ram usage:        1 bytes
 10369 ;; Hardware stack levels used:    1
 10370 ;; This function calls:
 10371 ;;		Nothing
 10372 ;; This function is called by:
 10373 ;;		_main
 10374 ;;		_IOCBF5_ISR
 10375 ;; This function uses a non-reentrant model
 10376 ;;
 10377                           
 10378                           
 10379                           ;psect for function _sensor4
 10380  08D9                     _sensor4:	
 10381  08D9                     i1l2538:	
 10382                           ;incstack = 0
 10383                           ; Regs used in _sensor4: [wreg]
 10384                           
 10385                           
 10386                           ;main.c: 109:         and_ating=4;
 10387  08D9  3004               	movlw	4
 10388  08DA  00F7               	movwf	??_sensor4
 10389  08DB  0877               	movf	??_sensor4,w
 10390  08DC  0020               	movlb	0	; select bank0
 10391  08DD  00EF               	movwf	_and_ating
 10392                           
 10393                           ;main.c: 110:         and_ating2=3;
 10394  08DE  3003               	movlw	3
 10395  08DF  0021               	movlb	1	; select bank1
 10396  08E0  00C8               	movwf	_and_ating2^(0+128)
 10397  08E1  3000               	movlw	0
 10398  08E2  00C9               	movwf	(_and_ating2^(0+128)+1)
 10399  08E3                     i1l593:	
 10400  08E3  0008               	return
 10401  08E4                     __end_of_sensor4:	
 10402                           
 10403                           	psect	text51
 10404  0902                     __ptext51:	
 10405 ;; *************** function _IOCBF4_ISR *****************
 10406 ;; Defined at:
 10407 ;;		line 222 in file "mcc_generated_files/pin_manager.c"
 10408 ;; Parameters:    Size  Location     Type
 10409 ;;		None
 10410 ;; Auto vars:     Size  Location     Type
 10411 ;;		None
 10412 ;; Return value:  Size  Location     Type
 10413 ;;                  1    wreg      void 
 10414 ;; Registers used:
 10415 ;;		wreg, status,2, status,0, pclath, cstack
 10416 ;; Tracked objects:
 10417 ;;		On entry : 0/0
 10418 ;;		On exit  : 0/0
 10419 ;;		Unchanged: 0/0
 10420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10421 ;;      Params:         0       0       0       0       0       0
 10422 ;;      Locals:         0       0       0       0       0       0
 10423 ;;      Temps:          0       0       0       0       0       0
 10424 ;;      Totals:         0       0       0       0       0       0
 10425 ;;Total ram usage:        0 bytes
 10426 ;; Hardware stack levels used:    1
 10427 ;; Hardware stack levels required when called:    1
 10428 ;; This function calls:
 10429 ;;		Absolute function
 10430 ;;		_IOCBF4_DefaultInterruptHandler
 10431 ;;		_sensor3
 10432 ;; This function is called by:
 10433 ;;		_PIN_MANAGER_IOC
 10434 ;; This function uses a non-reentrant model
 10435 ;;
 10436                           
 10437                           
 10438                           ;psect for function _IOCBF4_ISR
 10439  0902                     _IOCBF4_ISR:	
 10440  0902                     i1l2744:	
 10441                           ;incstack = 0
 10442                           ; Regs used in _IOCBF4_ISR: [wreg+status,2+status,0+pclath+cstack]
 10443                           
 10444                           
 10445                           ;mcc_generated_files/pin_manager.c: 227:     if(IOCBF4_InterruptHandler)
 10446  0902  0021               	movlb	1	; select bank1
 10447  0903  0865               	movf	_IOCBF4_InterruptHandler^(0+128),w
 10448  0904  0466               	iorwf	(_IOCBF4_InterruptHandler+1)^(0+128),w
 10449  0905  1903               	btfsc	3,2
 10450  0906  2908               	goto	u219_21
 10451  0907  2909               	goto	u219_20
 10452  0908                     u219_21:	
 10453  0908  290E               	goto	i1l2748
 10454  0909                     u219_20:	
 10455  0909                     i1l2746:	
 10456                           
 10457                           ;mcc_generated_files/pin_manager.c: 228:     {;mcc_generated_files/pin_manager.c: 229:  
      +                                 IOCBF4_InterruptHandler();
 10458  0909  0866               	movf	(_IOCBF4_InterruptHandler+1)^(0+128),w
 10459  090A  008A               	movwf	10
 10460  090B  0865               	movf	_IOCBF4_InterruptHandler^(0+128),w
 10461  090C  000A               	callw
 10462  090D  3189               	pagesel	$
 10463  090E                     i1l2748:	
 10464                           
 10465                           ;mcc_generated_files/pin_manager.c: 231:     IOCBFbits.IOCBF4 = 0;
 10466  090E  0027               	movlb	7	; select bank7
 10467  090F  1216               	bcf	22,4	;volatile
 10468  0910                     i1l445:	
 10469  0910  0008               	return
 10470  0911                     __end_of_IOCBF4_ISR:	
 10471                           
 10472                           	psect	text52
 10473  082D                     __ptext52:	
 10474 ;; *************** function _IOCBF4_DefaultInterruptHandler *****************
 10475 ;; Defined at:
 10476 ;;		line 244 in file "mcc_generated_files/pin_manager.c"
 10477 ;; Parameters:    Size  Location     Type
 10478 ;;		None
 10479 ;; Auto vars:     Size  Location     Type
 10480 ;;		None
 10481 ;; Return value:  Size  Location     Type
 10482 ;;                  1    wreg      void 
 10483 ;; Registers used:
 10484 ;;		None
 10485 ;; Tracked objects:
 10486 ;;		On entry : 0/0
 10487 ;;		On exit  : 0/0
 10488 ;;		Unchanged: 0/0
 10489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10490 ;;      Params:         0       0       0       0       0       0
 10491 ;;      Locals:         0       0       0       0       0       0
 10492 ;;      Temps:          0       0       0       0       0       0
 10493 ;;      Totals:         0       0       0       0       0       0
 10494 ;;Total ram usage:        0 bytes
 10495 ;; Hardware stack levels used:    1
 10496 ;; This function calls:
 10497 ;;		Nothing
 10498 ;; This function is called by:
 10499 ;;		_PIN_MANAGER_Initialize
 10500 ;;		_IOCBF4_ISR
 10501 ;; This function uses a non-reentrant model
 10502 ;;
 10503                           
 10504                           
 10505                           ;psect for function _IOCBF4_DefaultInterruptHandler
 10506  082D                     _IOCBF4_DefaultInterruptHandler:	
 10507  082D                     i1l451:	
 10508                           ;incstack = 0
 10509                           ; Regs used in _IOCBF4_DefaultInterruptHandler: []
 10510                           
 10511  082D  0008               	return
 10512  082E                     __end_of_IOCBF4_DefaultInterruptHandler:	
 10513                           
 10514                           	psect	text53
 10515  08CE                     __ptext53:	
 10516 ;; *************** function _sensor3 *****************
 10517 ;; Defined at:
 10518 ;;		line 101 in file "main.c"
 10519 ;; Parameters:    Size  Location     Type
 10520 ;;		None
 10521 ;; Auto vars:     Size  Location     Type
 10522 ;;		None
 10523 ;; Return value:  Size  Location     Type
 10524 ;;                  1    wreg      void 
 10525 ;; Registers used:
 10526 ;;		wreg
 10527 ;; Tracked objects:
 10528 ;;		On entry : 0/0
 10529 ;;		On exit  : 0/0
 10530 ;;		Unchanged: 0/0
 10531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10532 ;;      Params:         0       0       0       0       0       0
 10533 ;;      Locals:         0       0       0       0       0       0
 10534 ;;      Temps:          1       0       0       0       0       0
 10535 ;;      Totals:         1       0       0       0       0       0
 10536 ;;Total ram usage:        1 bytes
 10537 ;; Hardware stack levels used:    1
 10538 ;; This function calls:
 10539 ;;		Nothing
 10540 ;; This function is called by:
 10541 ;;		_main
 10542 ;;		_IOCBF4_ISR
 10543 ;; This function uses a non-reentrant model
 10544 ;;
 10545                           
 10546                           
 10547                           ;psect for function _sensor3
 10548  08CE                     _sensor3:	
 10549  08CE                     i1l2536:	
 10550                           ;incstack = 0
 10551                           ; Regs used in _sensor3: [wreg]
 10552                           
 10553                           
 10554                           ;main.c: 103:         and_ating=3;
 10555  08CE  3003               	movlw	3
 10556  08CF  00F7               	movwf	??_sensor3
 10557  08D0  0877               	movf	??_sensor3,w
 10558  08D1  0020               	movlb	0	; select bank0
 10559  08D2  00EF               	movwf	_and_ating
 10560                           
 10561                           ;main.c: 104:         and_ating2=2;
 10562  08D3  3002               	movlw	2
 10563  08D4  0021               	movlb	1	; select bank1
 10564  08D5  00C8               	movwf	_and_ating2^(0+128)
 10565  08D6  3000               	movlw	0
 10566  08D7  00C9               	movwf	(_and_ating2^(0+128)+1)
 10567  08D8                     i1l590:	
 10568  08D8  0008               	return
 10569  08D9                     __end_of_sensor3:	
 10570                           
 10571                           	psect	text54
 10572  08F3                     __ptext54:	
 10573 ;; *************** function _IOCBF3_ISR *****************
 10574 ;; Defined at:
 10575 ;;		line 192 in file "mcc_generated_files/pin_manager.c"
 10576 ;; Parameters:    Size  Location     Type
 10577 ;;		None
 10578 ;; Auto vars:     Size  Location     Type
 10579 ;;		None
 10580 ;; Return value:  Size  Location     Type
 10581 ;;                  1    wreg      void 
 10582 ;; Registers used:
 10583 ;;		wreg, status,2, status,0, pclath, cstack
 10584 ;; Tracked objects:
 10585 ;;		On entry : 0/0
 10586 ;;		On exit  : 0/0
 10587 ;;		Unchanged: 0/0
 10588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10589 ;;      Params:         0       0       0       0       0       0
 10590 ;;      Locals:         0       0       0       0       0       0
 10591 ;;      Temps:          0       0       0       0       0       0
 10592 ;;      Totals:         0       0       0       0       0       0
 10593 ;;Total ram usage:        0 bytes
 10594 ;; Hardware stack levels used:    1
 10595 ;; Hardware stack levels required when called:    1
 10596 ;; This function calls:
 10597 ;;		Absolute function
 10598 ;;		_IOCBF3_DefaultInterruptHandler
 10599 ;;		_sensor2
 10600 ;; This function is called by:
 10601 ;;		_PIN_MANAGER_IOC
 10602 ;; This function uses a non-reentrant model
 10603 ;;
 10604                           
 10605                           
 10606                           ;psect for function _IOCBF3_ISR
 10607  08F3                     _IOCBF3_ISR:	
 10608  08F3                     i1l2738:	
 10609                           ;incstack = 0
 10610                           ; Regs used in _IOCBF3_ISR: [wreg+status,2+status,0+pclath+cstack]
 10611                           
 10612                           
 10613                           ;mcc_generated_files/pin_manager.c: 197:     if(IOCBF3_InterruptHandler)
 10614  08F3  0021               	movlb	1	; select bank1
 10615  08F4  0867               	movf	_IOCBF3_InterruptHandler^(0+128),w
 10616  08F5  0468               	iorwf	(_IOCBF3_InterruptHandler+1)^(0+128),w
 10617  08F6  1903               	btfsc	3,2
 10618  08F7  28F9               	goto	u218_21
 10619  08F8  28FA               	goto	u218_20
 10620  08F9                     u218_21:	
 10621  08F9  28FF               	goto	i1l2742
 10622  08FA                     u218_20:	
 10623  08FA                     i1l2740:	
 10624                           
 10625                           ;mcc_generated_files/pin_manager.c: 198:     {;mcc_generated_files/pin_manager.c: 199:  
      +                                 IOCBF3_InterruptHandler();
 10626  08FA  0868               	movf	(_IOCBF3_InterruptHandler+1)^(0+128),w
 10627  08FB  008A               	movwf	10
 10628  08FC  0867               	movf	_IOCBF3_InterruptHandler^(0+128),w
 10629  08FD  000A               	callw
 10630  08FE  3188               	pagesel	$
 10631  08FF                     i1l2742:	
 10632                           
 10633                           ;mcc_generated_files/pin_manager.c: 201:     IOCBFbits.IOCBF3 = 0;
 10634  08FF  0027               	movlb	7	; select bank7
 10635  0900  1196               	bcf	22,3	;volatile
 10636  0901                     i1l435:	
 10637  0901  0008               	return
 10638  0902                     __end_of_IOCBF3_ISR:	
 10639                           
 10640                           	psect	text55
 10641  082C                     __ptext55:	
 10642 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
 10643 ;; Defined at:
 10644 ;;		line 214 in file "mcc_generated_files/pin_manager.c"
 10645 ;; Parameters:    Size  Location     Type
 10646 ;;		None
 10647 ;; Auto vars:     Size  Location     Type
 10648 ;;		None
 10649 ;; Return value:  Size  Location     Type
 10650 ;;                  1    wreg      void 
 10651 ;; Registers used:
 10652 ;;		None
 10653 ;; Tracked objects:
 10654 ;;		On entry : 0/0
 10655 ;;		On exit  : 0/0
 10656 ;;		Unchanged: 0/0
 10657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10658 ;;      Params:         0       0       0       0       0       0
 10659 ;;      Locals:         0       0       0       0       0       0
 10660 ;;      Temps:          0       0       0       0       0       0
 10661 ;;      Totals:         0       0       0       0       0       0
 10662 ;;Total ram usage:        0 bytes
 10663 ;; Hardware stack levels used:    1
 10664 ;; This function calls:
 10665 ;;		Nothing
 10666 ;; This function is called by:
 10667 ;;		_PIN_MANAGER_Initialize
 10668 ;;		_IOCBF3_ISR
 10669 ;; This function uses a non-reentrant model
 10670 ;;
 10671                           
 10672                           
 10673                           ;psect for function _IOCBF3_DefaultInterruptHandler
 10674  082C                     _IOCBF3_DefaultInterruptHandler:	
 10675  082C                     i1l441:	
 10676                           ;incstack = 0
 10677                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
 10678                           
 10679  082C  0008               	return
 10680  082D                     __end_of_IOCBF3_DefaultInterruptHandler:	
 10681                           
 10682                           	psect	text56
 10683  08C3                     __ptext56:	
 10684 ;; *************** function _sensor2 *****************
 10685 ;; Defined at:
 10686 ;;		line 95 in file "main.c"
 10687 ;; Parameters:    Size  Location     Type
 10688 ;;		None
 10689 ;; Auto vars:     Size  Location     Type
 10690 ;;		None
 10691 ;; Return value:  Size  Location     Type
 10692 ;;                  1    wreg      void 
 10693 ;; Registers used:
 10694 ;;		wreg
 10695 ;; Tracked objects:
 10696 ;;		On entry : 0/0
 10697 ;;		On exit  : 0/0
 10698 ;;		Unchanged: 0/0
 10699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10700 ;;      Params:         0       0       0       0       0       0
 10701 ;;      Locals:         0       0       0       0       0       0
 10702 ;;      Temps:          1       0       0       0       0       0
 10703 ;;      Totals:         1       0       0       0       0       0
 10704 ;;Total ram usage:        1 bytes
 10705 ;; Hardware stack levels used:    1
 10706 ;; This function calls:
 10707 ;;		Nothing
 10708 ;; This function is called by:
 10709 ;;		_main
 10710 ;;		_IOCBF3_ISR
 10711 ;; This function uses a non-reentrant model
 10712 ;;
 10713                           
 10714                           
 10715                           ;psect for function _sensor2
 10716  08C3                     _sensor2:	
 10717  08C3                     i1l2534:	
 10718                           ;incstack = 0
 10719                           ; Regs used in _sensor2: [wreg]
 10720                           
 10721                           
 10722                           ;main.c: 97:         and_ating=2;
 10723  08C3  3002               	movlw	2
 10724  08C4  00F7               	movwf	??_sensor2
 10725  08C5  0877               	movf	??_sensor2,w
 10726  08C6  0020               	movlb	0	; select bank0
 10727  08C7  00EF               	movwf	_and_ating
 10728                           
 10729                           ;main.c: 98:         and_ating2=1;
 10730  08C8  3001               	movlw	1
 10731  08C9  0021               	movlb	1	; select bank1
 10732  08CA  00C8               	movwf	_and_ating2^(0+128)
 10733  08CB  3000               	movlw	0
 10734  08CC  00C9               	movwf	(_and_ating2^(0+128)+1)
 10735  08CD                     i1l587:	
 10736  08CD  0008               	return
 10737  08CE                     __end_of_sensor2:	
 10738                           
 10739                           	psect	text57
 10740  08E4                     __ptext57:	
 10741 ;; *************** function _IOCBF0_ISR *****************
 10742 ;; Defined at:
 10743 ;;		line 162 in file "mcc_generated_files/pin_manager.c"
 10744 ;; Parameters:    Size  Location     Type
 10745 ;;		None
 10746 ;; Auto vars:     Size  Location     Type
 10747 ;;		None
 10748 ;; Return value:  Size  Location     Type
 10749 ;;                  1    wreg      void 
 10750 ;; Registers used:
 10751 ;;		wreg, status,2, status,0, pclath, cstack
 10752 ;; Tracked objects:
 10753 ;;		On entry : 0/0
 10754 ;;		On exit  : 0/0
 10755 ;;		Unchanged: 0/0
 10756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10757 ;;      Params:         0       0       0       0       0       0
 10758 ;;      Locals:         0       0       0       0       0       0
 10759 ;;      Temps:          0       0       0       0       0       0
 10760 ;;      Totals:         0       0       0       0       0       0
 10761 ;;Total ram usage:        0 bytes
 10762 ;; Hardware stack levels used:    1
 10763 ;; Hardware stack levels required when called:    1
 10764 ;; This function calls:
 10765 ;;		Absolute function
 10766 ;;		_IOCBF0_DefaultInterruptHandler
 10767 ;;		_sensor1
 10768 ;; This function is called by:
 10769 ;;		_PIN_MANAGER_IOC
 10770 ;; This function uses a non-reentrant model
 10771 ;;
 10772                           
 10773                           
 10774                           ;psect for function _IOCBF0_ISR
 10775  08E4                     _IOCBF0_ISR:	
 10776  08E4                     i1l2732:	
 10777                           ;incstack = 0
 10778                           ; Regs used in _IOCBF0_ISR: [wreg+status,2+status,0+pclath+cstack]
 10779                           
 10780                           
 10781                           ;mcc_generated_files/pin_manager.c: 167:     if(IOCBF0_InterruptHandler)
 10782  08E4  0021               	movlb	1	; select bank1
 10783  08E5  0869               	movf	_IOCBF0_InterruptHandler^(0+128),w
 10784  08E6  046A               	iorwf	(_IOCBF0_InterruptHandler+1)^(0+128),w
 10785  08E7  1903               	btfsc	3,2
 10786  08E8  28EA               	goto	u217_21
 10787  08E9  28EB               	goto	u217_20
 10788  08EA                     u217_21:	
 10789  08EA  28F0               	goto	i1l2736
 10790  08EB                     u217_20:	
 10791  08EB                     i1l2734:	
 10792                           
 10793                           ;mcc_generated_files/pin_manager.c: 168:     {;mcc_generated_files/pin_manager.c: 169:  
      +                                 IOCBF0_InterruptHandler();
 10794  08EB  086A               	movf	(_IOCBF0_InterruptHandler+1)^(0+128),w
 10795  08EC  008A               	movwf	10
 10796  08ED  0869               	movf	_IOCBF0_InterruptHandler^(0+128),w
 10797  08EE  000A               	callw
 10798  08EF  3188               	pagesel	$
 10799  08F0                     i1l2736:	
 10800                           
 10801                           ;mcc_generated_files/pin_manager.c: 171:     IOCBFbits.IOCBF0 = 0;
 10802  08F0  0027               	movlb	7	; select bank7
 10803  08F1  1016               	bcf	22,0	;volatile
 10804  08F2                     i1l425:	
 10805  08F2  0008               	return
 10806  08F3                     __end_of_IOCBF0_ISR:	
 10807                           
 10808                           	psect	text58
 10809  082B                     __ptext58:	
 10810 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
 10811 ;; Defined at:
 10812 ;;		line 184 in file "mcc_generated_files/pin_manager.c"
 10813 ;; Parameters:    Size  Location     Type
 10814 ;;		None
 10815 ;; Auto vars:     Size  Location     Type
 10816 ;;		None
 10817 ;; Return value:  Size  Location     Type
 10818 ;;                  1    wreg      void 
 10819 ;; Registers used:
 10820 ;;		None
 10821 ;; Tracked objects:
 10822 ;;		On entry : 0/0
 10823 ;;		On exit  : 0/0
 10824 ;;		Unchanged: 0/0
 10825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10826 ;;      Params:         0       0       0       0       0       0
 10827 ;;      Locals:         0       0       0       0       0       0
 10828 ;;      Temps:          0       0       0       0       0       0
 10829 ;;      Totals:         0       0       0       0       0       0
 10830 ;;Total ram usage:        0 bytes
 10831 ;; Hardware stack levels used:    1
 10832 ;; This function calls:
 10833 ;;		Nothing
 10834 ;; This function is called by:
 10835 ;;		_PIN_MANAGER_Initialize
 10836 ;;		_IOCBF0_ISR
 10837 ;; This function uses a non-reentrant model
 10838 ;;
 10839                           
 10840                           
 10841                           ;psect for function _IOCBF0_DefaultInterruptHandler
 10842  082B                     _IOCBF0_DefaultInterruptHandler:	
 10843  082B                     i1l431:	
 10844                           ;incstack = 0
 10845                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
 10846                           
 10847  082B  0008               	return
 10848  082C                     __end_of_IOCBF0_DefaultInterruptHandler:	
 10849                           
 10850                           	psect	text59
 10851  0841                     __ptext59:	
 10852 ;; *************** function _sensor1 *****************
 10853 ;; Defined at:
 10854 ;;		line 89 in file "main.c"
 10855 ;; Parameters:    Size  Location     Type
 10856 ;;		None
 10857 ;; Auto vars:     Size  Location     Type
 10858 ;;		None
 10859 ;; Return value:  Size  Location     Type
 10860 ;;                  1    wreg      void 
 10861 ;; Registers used:
 10862 ;;		status,2
 10863 ;; Tracked objects:
 10864 ;;		On entry : 0/0
 10865 ;;		On exit  : 0/0
 10866 ;;		Unchanged: 0/0
 10867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10868 ;;      Params:         0       0       0       0       0       0
 10869 ;;      Locals:         0       0       0       0       0       0
 10870 ;;      Temps:          0       0       0       0       0       0
 10871 ;;      Totals:         0       0       0       0       0       0
 10872 ;;Total ram usage:        0 bytes
 10873 ;; Hardware stack levels used:    1
 10874 ;; This function calls:
 10875 ;;		Nothing
 10876 ;; This function is called by:
 10877 ;;		_main
 10878 ;;		_IOCBF0_ISR
 10879 ;; This function uses a non-reentrant model
 10880 ;;
 10881                           
 10882                           
 10883                           ;psect for function _sensor1
 10884  0841                     _sensor1:	
 10885  0841                     i1l2530:	
 10886                           ;incstack = 0
 10887                           ; Regs used in _sensor1: [status,2]
 10888                           
 10889                           
 10890                           ;main.c: 91:         and_ating=1;
 10891  0841  0020               	movlb	0	; select bank0
 10892  0842  01EF               	clrf	_and_ating
 10893  0843  0AEF               	incf	_and_ating,f
 10894  0844                     i1l2532:	
 10895                           
 10896                           ;main.c: 92:         and_ating2=0;
 10897  0844  0021               	movlb	1	; select bank1
 10898  0845  01C8               	clrf	_and_ating2^(0+128)
 10899  0846  01C9               	clrf	(_and_ating2+1)^(0+128)
 10900  0847                     i1l584:	
 10901  0847  0008               	return
 10902  0848                     __end_of_sensor1:	
 10903                           
 10904                           	psect	text60
 10905  0984                     __ptext60:	
 10906 ;; *************** function _CCP4_CaptureISR *****************
 10907 ;; Defined at:
 10908 ;;		line 89 in file "mcc_generated_files/ccp4.c"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;		None
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;  module          2    5[COMMON] struct CCPR4Reg_tag
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      void 
 10915 ;; Registers used:
 10916 ;;		wreg, status,2, status,0, pclath, cstack
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10922 ;;      Params:         0       0       0       0       0       0
 10923 ;;      Locals:         2       0       0       0       0       0
 10924 ;;      Temps:          1       0       0       0       0       0
 10925 ;;      Totals:         3       0       0       0       0       0
 10926 ;;Total ram usage:        3 bytes
 10927 ;; Hardware stack levels used:    1
 10928 ;; Hardware stack levels required when called:    2
 10929 ;; This function calls:
 10930 ;;		Absolute function
 10931 ;;		_CCP4_DefaultCallBack
 10932 ;;		_get_pulse
 10933 ;; This function is called by:
 10934 ;;		_INTERRUPT_InterruptManager
 10935 ;; This function uses a non-reentrant model
 10936 ;;
 10937                           
 10938                           
 10939                           ;psect for function _CCP4_CaptureISR
 10940  0984                     _CCP4_CaptureISR:	
 10941  0984                     i1l3342:	
 10942                           ;incstack = 0
 10943                           ; Regs used in _CCP4_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
 10944                           
 10945                           
 10946                           ;mcc_generated_files/ccp4.c: 91:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 94:     PIR3bits.CCP4IF = 0;
 10947  0984  0020               	movlb	0	; select bank0
 10948  0985  1293               	bcf	19,5	;volatile
 10949  0986                     i1l3344:	
 10950                           
 10951                           ;mcc_generated_files/ccp4.c: 97:     module.ccpr4l = CCPR4L;
 10952  0986  0026               	movlb	6	; select bank6
 10953  0987  0818               	movf	24,w	;volatile
 10954  0988  00FB               	movwf	??_CCP4_CaptureISR
 10955  0989  087B               	movf	??_CCP4_CaptureISR,w
 10956  098A  00FC               	movwf	CCP4_CaptureISR@module
 10957                           
 10958                           ;mcc_generated_files/ccp4.c: 98:     module.ccpr4h = CCPR4H;
 10959  098B  0819               	movf	25,w	;volatile
 10960  098C  00FB               	movwf	??_CCP4_CaptureISR
 10961  098D  087B               	movf	??_CCP4_CaptureISR,w
 10962  098E  00FD               	movwf	CCP4_CaptureISR@module+1
 10963  098F                     i1l3346:	
 10964                           
 10965                           ;mcc_generated_files/ccp4.c: 101:     CCP4_CallBack(module.ccpr4_16Bit);
 10966  098F  087D               	movf	CCP4_CaptureISR@module+1,w
 10967  0990  00FA               	movwf	get_pulse@capturedValue+1
 10968  0991  087C               	movf	CCP4_CaptureISR@module,w
 10969  0992  00F9               	movwf	get_pulse@capturedValue
 10970  0993  0022               	movlb	2	; select bank2
 10971  0994  084E               	movf	(_CCP4_CallBack+1)^(0+256),w
 10972  0995  008A               	movwf	10
 10973  0996  084D               	movf	_CCP4_CallBack^(0+256),w
 10974  0997  000A               	callw
 10975  0998  3189               	pagesel	$
 10976  0999                     i1l346:	
 10977  0999  0008               	return
 10978  099A                     __end_of_CCP4_CaptureISR:	
 10979                           
 10980                           	psect	text61
 10981  082A                     __ptext61:	
 10982 ;; *************** function _CCP4_DefaultCallBack *****************
 10983 ;; Defined at:
 10984 ;;		line 60 in file "mcc_generated_files/ccp4.c"
 10985 ;; Parameters:    Size  Location     Type
 10986 ;;  capturedValu    2    2[COMMON] unsigned short 
 10987 ;; Auto vars:     Size  Location     Type
 10988 ;;		None
 10989 ;; Return value:  Size  Location     Type
 10990 ;;                  1    wreg      void 
 10991 ;; Registers used:
 10992 ;;		None
 10993 ;; Tracked objects:
 10994 ;;		On entry : 0/0
 10995 ;;		On exit  : 0/0
 10996 ;;		Unchanged: 0/0
 10997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10998 ;;      Params:         2       0       0       0       0       0
 10999 ;;      Locals:         0       0       0       0       0       0
 11000 ;;      Temps:          0       0       0       0       0       0
 11001 ;;      Totals:         2       0       0       0       0       0
 11002 ;;Total ram usage:        2 bytes
 11003 ;; Hardware stack levels used:    1
 11004 ;; This function calls:
 11005 ;;		Nothing
 11006 ;; This function is called by:
 11007 ;;		_CCP4_Initialize
 11008 ;;		_CCP4_CaptureISR
 11009 ;; This function uses a non-reentrant model
 11010 ;;
 11011                           
 11012                           
 11013                           ;psect for function _CCP4_DefaultCallBack
 11014  082A                     _CCP4_DefaultCallBack:	
 11015  082A                     i1l340:	
 11016                           ;incstack = 0
 11017                           ; Regs used in _CCP4_DefaultCallBack: []
 11018                           
 11019  082A  0008               	return
 11020  082B                     __end_of_CCP4_DefaultCallBack:	
 11021                           
 11022                           	psect	text62
 11023  0A9E                     __ptext62:	
 11024 ;; *************** function _get_pulse *****************
 11025 ;; Defined at:
 11026 ;;		line 113 in file "main.c"
 11027 ;; Parameters:    Size  Location     Type
 11028 ;;  capturedValu    2    2[COMMON] unsigned short 
 11029 ;; Auto vars:     Size  Location     Type
 11030 ;;		None
 11031 ;; Return value:  Size  Location     Type
 11032 ;;                  1    wreg      void 
 11033 ;; Registers used:
 11034 ;;		wreg, status,2, status,0, pclath, cstack
 11035 ;; Tracked objects:
 11036 ;;		On entry : 0/0
 11037 ;;		On exit  : 0/0
 11038 ;;		Unchanged: 0/0
 11039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11040 ;;      Params:         2       0       0       0       0       0
 11041 ;;      Locals:         0       0       0       0       0       0
 11042 ;;      Temps:          0       0       0       0       0       0
 11043 ;;      Totals:         2       0       0       0       0       0
 11044 ;;Total ram usage:        2 bytes
 11045 ;; Hardware stack levels used:    1
 11046 ;; Hardware stack levels required when called:    1
 11047 ;; This function calls:
 11048 ;;		_TMR1_WriteTimer
 11049 ;; This function is called by:
 11050 ;;		_main
 11051 ;;		_CCP4_CaptureISR
 11052 ;; This function uses a non-reentrant model
 11053 ;;
 11054                           
 11055                           
 11056                           ;psect for function _get_pulse
 11057  0A9E                     _get_pulse:	
 11058  0A9E                     i1l2774:	
 11059                           ;incstack = 0
 11060                           ; Regs used in _get_pulse: [wreg+status,2+status,0+pclath+cstack]
 11061                           
 11062                           
 11063                           ;main.c: 113: void get_pulse(uint16_t capturedValue);main.c: 114:     {;main.c: 115:    
      +                               TMR1_WriteTimer(0);
 11064  0A9E  3000               	movlw	0
 11065  0A9F  00F7               	movwf	TMR1_WriteTimer@timerVal
 11066  0AA0  00F8               	movwf	TMR1_WriteTimer@timerVal+1
 11067  0AA1  3189  214D  318A   	fcall	_TMR1_WriteTimer
 11068  0AA4                     i1l2776:	
 11069                           
 11070                           ;main.c: 116:         ccp_value = capturedValue;
 11071  0AA4  087A               	movf	get_pulse@capturedValue+1,w
 11072  0AA5  0021               	movlb	1	; select bank1
 11073  0AA6  00E0               	movwf	(_ccp_value+1)^(0+128)
 11074  0AA7  0879               	movf	get_pulse@capturedValue,w
 11075  0AA8  00DF               	movwf	_ccp_value^(0+128)
 11076  0AA9                     i1l2778:	
 11077                           
 11078                           ;main.c: 117:         if(sentido == 1){
 11079  0AA9  0358               	decf	_sentido^(0+128),w
 11080  0AAA  0459               	iorwf	(_sentido+1)^(0+128),w
 11081  0AAB  1D03               	btfss	3,2
 11082  0AAC  2AAE               	goto	u225_21
 11083  0AAD  2AAF               	goto	u225_20
 11084  0AAE                     u225_21:	
 11085  0AAE  2AB4               	goto	i1l2782
 11086  0AAF                     u225_20:	
 11087  0AAF                     i1l2780:	
 11088                           
 11089                           ;main.c: 118:             pulses++;
 11090  0AAF  3001               	movlw	1
 11091  0AB0  07E1               	addwf	_pulses^(0+128),f
 11092  0AB1  3000               	movlw	0
 11093  0AB2  3DE2               	addwfc	(_pulses+1)^(0+128),f
 11094                           
 11095                           ;main.c: 119:         }else if(sentido == 0 && pulses >= 0){
 11096  0AB3  2AC2               	goto	i1l599
 11097  0AB4                     i1l2782:	
 11098  0AB4  0858               	movf	_sentido^(0+128),w
 11099  0AB5  0459               	iorwf	(_sentido+1)^(0+128),w
 11100  0AB6  1D03               	btfss	3,2
 11101  0AB7  2AB9               	goto	u226_21
 11102  0AB8  2ABA               	goto	u226_20
 11103  0AB9                     u226_21:	
 11104  0AB9  2AC2               	goto	i1l599
 11105  0ABA                     u226_20:	
 11106  0ABA                     i1l2784:	
 11107  0ABA  1BE2               	btfsc	(_pulses+1)^(0+128),7
 11108  0ABB  2ABD               	goto	u227_21
 11109  0ABC  2ABE               	goto	u227_20
 11110  0ABD                     u227_21:	
 11111  0ABD  2AC2               	goto	i1l599
 11112  0ABE                     u227_20:	
 11113  0ABE                     i1l2786:	
 11114                           
 11115                           ;main.c: 120:             pulses--;
 11116  0ABE  30FF               	movlw	255
 11117  0ABF  07E1               	addwf	_pulses^(0+128),f
 11118  0AC0  30FF               	movlw	255
 11119  0AC1  3DE2               	addwfc	(_pulses+1)^(0+128),f
 11120  0AC2                     i1l599:	
 11121  0AC2  0008               	return
 11122  0AC3                     __end_of_get_pulse:	
 11123                           
 11124                           	psect	text63
 11125  094D                     __ptext63:	
 11126 ;; *************** function _TMR1_WriteTimer *****************
 11127 ;; Defined at:
 11128 ;;		line 113 in file "mcc_generated_files/tmr1.c"
 11129 ;; Parameters:    Size  Location     Type
 11130 ;;  timerVal        2    0[COMMON] unsigned short 
 11131 ;; Auto vars:     Size  Location     Type
 11132 ;;		None
 11133 ;; Return value:  Size  Location     Type
 11134 ;;                  1    wreg      void 
 11135 ;; Registers used:
 11136 ;;		wreg, status,2
 11137 ;; Tracked objects:
 11138 ;;		On entry : 0/0
 11139 ;;		On exit  : 0/0
 11140 ;;		Unchanged: 0/0
 11141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11142 ;;      Params:         2       0       0       0       0       0
 11143 ;;      Locals:         0       0       0       0       0       0
 11144 ;;      Temps:          0       0       0       0       0       0
 11145 ;;      Totals:         2       0       0       0       0       0
 11146 ;;Total ram usage:        2 bytes
 11147 ;; Hardware stack levels used:    1
 11148 ;; This function calls:
 11149 ;;		Nothing
 11150 ;; This function is called by:
 11151 ;;		_get_pulse
 11152 ;;		_TMR1_Reload
 11153 ;; This function uses a non-reentrant model
 11154 ;;
 11155                           
 11156                           
 11157                           ;psect for function _TMR1_WriteTimer
 11158  094D                     _TMR1_WriteTimer:	
 11159  094D                     i1l2504:	
 11160                           ;incstack = 0
 11161                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 11162                           
 11163                           
 11164                           ;mcc_generated_files/tmr1.c: 113: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 114: {;mcc_generated_files/tmr1.c: 115:     if (T1CONbits.nT1SYNC == 1)
 11165  094D  0020               	movlb	0	; select bank0
 11166  094E  1D18               	btfss	24,2	;volatile
 11167  094F  2951               	goto	u196_21
 11168  0950  2952               	goto	u196_20
 11169  0951                     u196_21:	
 11170  0951  2959               	goto	i1l2514
 11171  0952                     u196_20:	
 11172  0952                     i1l2506:	
 11173                           
 11174                           ;mcc_generated_files/tmr1.c: 116:     {;mcc_generated_files/tmr1.c: 118:         T1CONbi
      +                          ts.TMR1ON = 0;
 11175  0952  1018               	bcf	24,0	;volatile
 11176  0953                     i1l2508:	
 11177                           
 11178                           ;mcc_generated_files/tmr1.c: 121:         TMR1H = (timerVal >> 8);
 11179  0953  0878               	movf	TMR1_WriteTimer@timerVal+1,w
 11180  0954  0097               	movwf	23	;volatile
 11181  0955                     i1l2510:	
 11182                           
 11183                           ;mcc_generated_files/tmr1.c: 122:         TMR1L = timerVal;
 11184  0955  0877               	movf	TMR1_WriteTimer@timerVal,w
 11185  0956  0096               	movwf	22	;volatile
 11186  0957                     i1l2512:	
 11187                           
 11188                           ;mcc_generated_files/tmr1.c: 125:         T1CONbits.TMR1ON =1;
 11189  0957  1418               	bsf	24,0	;volatile
 11190                           
 11191                           ;mcc_generated_files/tmr1.c: 126:     }
 11192  0958  295D               	goto	i1l160
 11193  0959                     i1l2514:	
 11194                           
 11195                           ;mcc_generated_files/tmr1.c: 128:     {;mcc_generated_files/tmr1.c: 130:         TMR1H =
      +                           (timerVal >> 8);
 11196  0959  0878               	movf	TMR1_WriteTimer@timerVal+1,w
 11197  095A  0097               	movwf	23	;volatile
 11198  095B                     i1l2516:	
 11199                           
 11200                           ;mcc_generated_files/tmr1.c: 131:         TMR1L = timerVal;
 11201  095B  0877               	movf	TMR1_WriteTimer@timerVal,w
 11202  095C  0096               	movwf	22	;volatile
 11203  095D                     i1l160:	
 11204  095D  0008               	return
 11205  095E                     __end_of_TMR1_WriteTimer:	
 11206  007E                     btemp	set	126	;btemp
 11207  007E                     int$flags	set	126
 11208  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         120
    Persistent  60
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     79      80
    BANK1            80      0      79
    BANK2            80      0      61
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    IOCBF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor4(), IOCBF5_DefaultInterruptHandler(), 

    IOCBF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor4(), IOCBF5_DefaultInterruptHandler(), Absolute function(), 

    IOCBF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor3(), IOCBF4_DefaultInterruptHandler(), 

    IOCBF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor3(), IOCBF4_DefaultInterruptHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor2(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor2(), IOCBF3_DefaultInterruptHandler(), Absolute function(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor1(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sensor1(), IOCBF0_DefaultInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> get_pulse(), CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> get_pulse(), CCP4_DefaultCallBack(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> send_data(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> send_data(), Absolute function(), TMR4_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP4_CaptureISR
    _TMR4_ISR->_send_data
    _send_data->_EUSART_Write
    _send_data->_EUSART_is_tx_ready
    _IOCBF5_ISR->_sensor4
    _IOCBF4_ISR->_sensor3
    _IOCBF3_ISR->_sensor2
    _CCP4_CaptureISR->_CCP4_DefaultCallBack
    _CCP4_CaptureISR->_get_pulse
    _get_pulse->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_comunicacao
    _gerenciamento->_update
    _col_up->_min_up
    _col_down->_max_down
    _controle->___flmul
    _comunicacao->___fldiv
    ___xxtofl->_ADC_GetConversion
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF5_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16772
                   _CCP4_SetCallBack
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                        _comunicacao
                           _controle
                      _gerenciamento
 ---------------------------------------------------------------------------------
 (1) _gerenciamento                                        0     0      0    2450
                           _col_down
                             _col_up
                             _update
 ---------------------------------------------------------------------------------
 (2) _col_up                                               2     2      0     682
                                              5 BANK0      2     2      0
                                _abs
                             _min_up
 ---------------------------------------------------------------------------------
 (3) _min_up                                               5     5      0     312
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _col_down                                             2     2      0     638
                                              5 BANK0      2     2      0
                                _abs
                           _max_down
 ---------------------------------------------------------------------------------
 (3) _max_down                                             5     5      0     268
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     370
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _controle                                            18    18      0    6076
                                             44 BANK0     18    18      0
                  _ADC_GetConversion
                 _PWM3_LoadDutyValue
                            ___flmul
                             ___wmul
                           ___xxtofl
                             _update
 ---------------------------------------------------------------------------------
 (2) _update                                              10    10      0    1130
                                              0 BANK0     10    10      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2     500
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _comunicacao                                          9     9      0    5351
                                             70 BANK0      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              4 BANK0     14    10      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2873
                                             18 BANK0     26    18      8
                  _ADC_GetConversion (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             44 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1629
                     _ADC_Initialize
                    _CCP4_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     844
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF5_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF4_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     211
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     454
                    _CCP4_CaptureISR
                    _PIN_MANAGER_IOC
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0      92
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                          _send_data *
 ---------------------------------------------------------------------------------
 (6) _send_data                                            3     3      0      92
                                              1 COMMON     3     3      0
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (7) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCBF0_ISR
                         _IOCBF3_ISR
                         _IOCBF4_ISR
                         _IOCBF5_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCBF5_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF5_DefaultInterruptHandler *
                            _sensor4 *
 ---------------------------------------------------------------------------------
 (7) _sensor4                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _IOCBF5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCBF4_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF4_DefaultInterruptHandler *
                            _sensor3 *
 ---------------------------------------------------------------------------------
 (7) _sensor3                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _IOCBF4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCBF3_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                            _sensor2 *
 ---------------------------------------------------------------------------------
 (7) _sensor2                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCBF0_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF0_DefaultInterruptHandler *
                            _sensor1 *
 ---------------------------------------------------------------------------------
 (7) _sensor1                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CCP4_CaptureISR                                      3     3      0     362
                                              4 COMMON     3     3      0
                   Absolute function *
               _CCP4_DefaultCallBack *
                          _get_pulse *
 ---------------------------------------------------------------------------------
 (6) _get_pulse                                            2     0      2     315
                                              2 COMMON     2     0      2
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _CCP4_DefaultCallBack                                 2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP4_SetCallBack
   _IOCBF0_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _IOCBF4_SetInterruptHandler
   _IOCBF5_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
       _IOCBF4_SetInterruptHandler
       _IOCBF5_SetInterruptHandler
     _PWM3_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _WDT_Initialize
   _TMR4_SetInterruptHandler
   _comunicacao
     ___fldiv
       ___flmul (ARG)
         _ADC_GetConversion (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _ADC_GetConversion (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
     ___flmul
       _ADC_GetConversion (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
     ___fltol
     ___xxtofl
       _ADC_GetConversion (ARG)
   _controle
     _ADC_GetConversion
     _PWM3_LoadDutyValue
     ___flmul
       _ADC_GetConversion (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
     ___wmul
     ___xxtofl
       _ADC_GetConversion (ARG)
     _update
       _EUSART_Read
       _EUSART_is_rx_ready
   _gerenciamento
     _col_down
       _abs
       _max_down
     _col_up
       _abs
       _min_up
     _update
       _EUSART_Read
       _EUSART_is_rx_ready

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     Absolute function(Fake) *
     _CCP4_DefaultCallBack *
     _get_pulse *
       _TMR1_WriteTimer
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       Absolute function(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       _sensor1 *
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _sensor2 *
     _IOCBF4_ISR
       Absolute function(Fake) *
       _IOCBF4_DefaultInterruptHandler *
       _sensor3 *
     _IOCBF5_ISR
       Absolute function(Fake) *
       _IOCBF5_DefaultInterruptHandler *
       _sensor4 *
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *
     _send_data *
       _EUSART_Write
       _EUSART_is_tx_ready

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      EA       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3D      10       76.3%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      EA      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec 12 20:21:06 2020

                              _CCP4_Initialize 095E                                   ___fldiv@aexp 0065  
                                 ___fldiv@bexp 0064               ??_IOCBF3_DefaultInterruptHandler 0077  
              ?_IOCBF3_DefaultInterruptHandler 0077                                   ___fldiv@sign 005D  
                                  __CFG_CP$OFF 0000                                             l43 0A79  
                                           l51 083A                                             l60 093E  
                                           l64 094C                                             l82 0879  
                                           l85 0882                                             l88 0870  
                       __end_of_FVR_Initialize 0832                            ___wmul@multiplicand 0022  
                                  _state_motor 00DE                            __Umul8_16@word_mpld 0026  
                                  __CFG_LVP$ON 0000                                            l121 0A55  
                                          l124 084E                                            l127 0835  
                                          l320 0831                                            l225 0983  
                                          l146 07FF                                            l414 0B7C  
                                          l343 096F                                            l247 08B8  
                                          l185 085E                                            l610 0FFF  
                                          l282 0A28                                            l267 0856  
                                          l428 088B                                            l700 03CA  
                                          l604 0B2D                                            l349 0867  
                                          l285 0A33                                            l438 0894  
                                          l448 089D                                            l472 08AF  
                                          l704 0403                                            l624 0773  
                                          l458 08A6                                            l642 07B5  
                                          l475 09B5                                            l635 0CFC  
                                          l709 047F                                            l653 0C33  
                                          l662 0E9B                                            l646 07EF  
                                          l680 0E5A                                            l673 0DD4  
                                          l657 0C6D                                            l666 0F02  
                                          l691 0333                                            l668 0F2C  
                                          l861 09F1                                            l677 0E25  
                                          l687 02F8                                            l696 03A4  
                                          l859 09DD                                            _PR2 001B  
                                          _PR4 0416                                   __CFG_CPD$OFF 0000  
                                          _I_m 0159                                _timer1ReloadVal 00ED  
                                          _abs 09B6                 ?_EUSART_SetFramingErrorHandler 0020  
                              _TMR2_Initialize 0857                 CCP4_SetCallBack@customCallBack 0020  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 ?_comunicacao 0077                                   __CFG_IESO$ON 0000  
                             _CCP4_SetCallBack 085F                                   ___flmul@aexp 0044  
                                 ___flmul@bexp 0045             __end_of_IOCBF4_SetInterruptHandler 089E  
                   _IOCBF4_SetInterruptHandler 0895                                   ___flmul@sign 003F  
                                 ___flmul@temp 004A                                   ___flmul@prod 0046  
                      __end_of_CCP4_CaptureISR 099A                                   ?_EUSART_Read 0077  
                                 ___fltol@exp1 002A                                           ?_abs 0020  
                                         l1060 0BDC                                           l1300 0D5B  
                                         l1053 0BF1                                           l1063 0BF1  
                                         l1240 062A                                           l1232 05B5  
                                         l1216 04D7                                           l3000 048E  
                                         l1320 0A8D                                           l1313 09D1  
                                         l1218 0633                                           l3010 04A2  
                                         l3002 048F                                           l1322 0A9D  
                                         l1307 0D75                                           l3100 05B2  
                                         l3020 04B9                                           l3004 0494  
                                         l3012 04A4                                           l1308 0D81  
                                         l1316 09D1                                           l1237 0601  
                                         l1238 061B                                           l3110 05CB  
                                         l3030 04CD                                           l3022 04BA  
                                         l3014 04AC                                           l3006 0499  
                                         l1262 0225                                           l3120 0612  
                                         l3112 05E3                                           l3104 05BA  
                                         l3024 04BF                                           l3032 04CF  
                                         l3016 04B1                                           l3008 04A1  
                                         l3200 0158                                           l1256 02A9  
                                         l3122 061A                                           l3106 05BF  
                                         l3114 05E7                                           l3050 0516  
                                         l3034 04DF                                           l3042 04F8  
                                         l3026 04C4                                           l3018 04B5  
                                         l3210 019B                                           l3202 015F  
                                         l3124 0620                                           l3116 05F4  
                                         l3108 05C7                                           l3060 0535  
                                         l3052 051E                                           l3044 04FD  
                                         l3036 04EB                                           l3028 04CC  
                                         l1268 029D                                           l3220 01EE  
                                         l3212 01AF                                           l3204 0173  
                                         l3140 0061                                           l3300 0D6B  
                                         l3126 0624                                           l3118 060F  
                                         l3070 0561                                           l3062 0543  
                                         l3054 0526                                           l3038 04EF  
                                         l3222 01F5                                           l3230 0205  
                                         l3214 01C4                                           l3206 017A  
                                         l3150 0076                                           l3142 0062  
                                         l3134 0053                                           l3310 0D9C  
                                         l3302 0D6F                                           l1294 0D20  
                                         l3128 0626                                           l3080 057C  
                                         l3072 0562                                           l3064 0547  
                                         l3056 052E                                           l3048 0506  
                                         l3232 0209                                           l3224 01F9  
                                         l3216 01DB                                           l3208 018E  
                                         l3160 008C                                           l3152 007E  
                                         l3144 0067                                           l3136 0059  
                                         l3312 0DA0                                           l3304 0D79  
                                         l1296 0DA9                                           l3090 0591  
                                         l3082 057E                                           l3074 056A  
                                         l3066 0548                                           l3058 0530  
                                         l3250 0253                                           l3242 022A  
                                         l3234 020A                                           l3226 01FA  
                                         l3218 01E2                                           l3170 00A8  
                                         l3162 0091                                           l3154 0083  
                                         l3146 006C                                           l3138 005D  
                                         l3314 0DA1                                           l3306 0D83  
                                         l2610 0E43                                           l2602 0E0B  
                                         l3500 0871                                           l3084 0585  
                                         l3092 0595                                           l3068 054F  
                                         l3076 056E                                           l2620 0A85  
                                         l3260 0285                                           l3244 022F  
                                         l3252 0257                                           l3236 020E  
                                         l3228 0201                                           l3180 00C8  
                                         l3172 00AD                                           l3164 0096  
                                         l3156 0087                                           l3148 0074  
                                         l3308 0D97                                           l2540 09B6  
                                         l2612 0E50                                           l2604 0E1E  
                                         l3502 087A                                           l3094 0599  
                                         l3086 0589                                           l3078 0574  
                                         l2622 0A89                                           l3270 02A1  
                                         l3262 0287                                           l3254 0264  
                                         l3246 0237                                           l3238 0222  
                                         l3190 0123                                           l3182 00D5  
                                         l3174 00B2                                           l3166 009E  
                                         l3158 008B                                           l3350 0F9B  
                                         l3510 093E                                           l2542 09C4  
                                         l2614 0E56                                           l2606 0E37  
                                         l3504 0868                                           l3600 082E  
                                         l3096 059A                                           l3088 058A  
                                         l2624 0A94                                           l2616 0A7C  
                                         l3264 0294                                           l3256 026E  
                                         l3248 023B                                           l3192 0130  
                                         l3184 00EF                                           l3168 00A0  
                                         l3280 0D18                                           l3352 0FA3  
                                         l2720 0A15                                           l3512 0943  
                                         l2608 0E3F                                           l2560 0EC8  
                                         l2552 0E62                                           l2544 0E5B  
                                         l3610 096B                                           l3602 095E  
                                         l3530 0895                                           l3522 08B0  
                                         l3098 059E                                           l2626 0A99  
                                         l2618 0A7E                                           l3266 0298  
                                         l3258 027C                                           l3194 0137  
                                         l3186 00FC                                           l3178 00BB  
                                         l3290 0D41                                           l3282 0D28  
                                         l3274 0CFF                                           l3354 0FB7  
                                         l2722 0A21                                           l3514 0944  
                                         l3506 0836                                           l2562 0ED1  
                                         l2554 0E7A                                           l2546 0E5F  
                                         l3524 085F                                           l3612 096D  
                                         l3604 0961                                           l3540 0A68  
                                         l3532 089E                                           l3620 0970  
                                         l3268 0299                                           l3196 0144  
                                         l3188 0116                                           l3292 0D48  
                                         l3276 0D04                                           l3356 0FCB  
                                         l3348 0F2D                                           l2724 0A22  
                                         l3516 0949                                           l3700 0359  
                                         l2580 0F1F                                           l2572 0EE6  
                                         l2564 0ED6                                           l2556 0E91  
                                         l2900 0774                                           l3614 084F  
                                         l3606 0962                                           l3542 0A70  
                                         l3534 0A56                                           l3526 0883  
                                         l3550 0B3F                                           l3630 0980  
                                         l3622 0973                                           l3198 014B  
                                         l3294 0D4C                                           l3286 0D31  
                                         l3278 0D08                                           l3358 0FE5  
                                         l2726 0A26                                           l3518 094B  
                                         l3710 038C                                           l2590 0DEC  
                                         l2582 0DAA                                           l2574 0EFA  
                                         l2566 0EE3                                           l2558 0EB2  
                                         l2910 07A5                                           l2902 0775  
                                         l3616 0852                                           l3608 0963  
                                         l3544 0A78                                           l3536 0A5F  
                                         l3528 088C                                           l3560 0B50  
                                         l3552 0B41                                           l3632 08A7  
                                         l3640 0857                                           l3624 0974  
                                         l3296 0D54                                           l3288 0D36  
                                         l2728 0A2C                                           l3712 0399  
                                         l3704 0363                                           l3800 06D5  
                                         l2592 0DF6                                           l2576 0F14  
                                         l2920 07DD                                           l2904 0789  
                                         l2912 07A7                                           l3618 0853  
                                         l3538 0A60                                           l3570 0B55  
                                         l3562 0B51                                           l3554 0B44  
                                         l3546 0B39                                           l3634 08AA  
                                         l3650 07F4                                           l3642 085A  
                                         l3626 0976                                           l3298 0D62  
                                         l3730 03E7                                           l3714 03A0  
                                         l3706 037D                                           l3810 06F3  
                                         l2594 0DFB                                           l2586 0DB4  
                                         l2930 0C17                                           l2922 0BF2  
                                         l2578 0F1B                                           l2914 07B7  
                                         l2906 0797                                           l3580 0B5A  
                                         l3572 0B56                                           l3564 0B52  
                                         l3556 0B49                                           l3548 0B3C  
                                         l3636 08AB                                           l3652 07F5  
                                         l3644 085B                                           l3628 0978  
                                         l2756 099A                                           l3740 03F4  
                                         l3732 03EC                                           l3724 03BB  
                                         l3716 03B6                                           l3708 0387  
                                         l3660 02B9                                           l3820 071B  
                                         l3812 06FB                                           l2596 0E08  
                                         l2588 0DCB                                           l2940 0C46  
                                         l2932 0C23                                           l2924 0BF3  
                                         l2916 07C5                                           l2908 0799  
                                         l3900 0AFC                                           l3590 0B7B  
                                         l3582 0B5B                                           l3574 0B57  
                                         l3566 0B53                                           l3558 0B4E  
                                         l3638 08AC                                           l3654 07FC  
                                         l3646 085C                                           l3742 03FA  
                                         l3734 03F0                                           l3726 03C1  
                                         l3718 03B6                                           l3750 0427  
                                         l3662 02CA                                           l3830 0733  
                                         l3822 0720                                           l3814 0700  
                                         l3806 06D7                                           l2942 0C5B  
                                         l2926 0C07                                           l2934 0C25  
                                         l2918 07C8                                           l3902 0B30  
                                         l3592 0848                                           l3584 0B63  
                                         l3576 0B58                                           l3568 0B54  
                                         l3648 07F0                                           l2960 0B89  
                                         l3760 044B                                           l3752 042C  
                                         l3744 0411                                           l3728 03D8  
                                         l3680 0313                                           l3664 02D3  
                                         l3656 02AA                                           l3840 0769  
                                         l3832 0746                                           l3824 072E  
                                         l3816 070D                                           l3808 06EA  
                                         l2936 0C35                                           l2928 0C15  
                                         l3904 0B33                                           l3594 084B  
                                         l3586 0B6B                                           l3578 0B59  
                                         l2970 0BAE                                           l3770 09D5  
                                         l3762 0462                                           l3746 041E  
                                         l3690 0320                                           l3682 0318  
                                         l3674 02E9                                           l3666 02E4  
                                         l3658 02B2                                           l3842 076C  
                                         l3834 074F                                           l3818 0713  
                                         l2938 0C43                                           l3850 0C7E  
                                         l3596 084C                                           l3588 0B73  
                                         l2980 0BBC                                           l2972 0BB0  
                                         l2964 0B92                                           l3772 09D9  
                                         l3764 046D                                           l3748 0423  
                                         l3692 0326                                           l3684 031C  
                                         l3676 02EF                                           l3668 02E4  
                                         l3836 0757                                           l3860 0C9C  
                                         l3852 0C84                                           l3844 0C6E  
                                         l3598 0832                                           l3782 0A34  
                                         l2990 0BE1                                           l2974 0BB4  
                                         l2982 0BCC                                           l2966 0BA5  
                                         l2958 0B7D                                           l3774 09E2  
                                         l3766 0472                                           l3758 042F  
                                         l3694 0341                                           l3678 0306  
                                         l3838 075C                                           l3790 06B1  
                                         l3870 0CB6                                           l3862 0CA2  
                                         l3854 0C8A                                           l3846 0C71  
                                         l2992 0BE6                                           l2968 0BA6  
                                         l3776 09E7                                           l3768 09D2  
                                         l3696 0350                                           l3792 06B5  
                                         l3784 0634                                           l3880 0CD4  
                                         l3872 0CBC                                           l3864 0CA8  
                                         l3856 0C90                                           l3848 0C78  
                                         l2994 0480                                           l3778 09ED  
                                         l3698 0355                                           l3794 06B9  
                                         l3786 06AC                                           l3882 0CDA  
                                         l3874 0CC2                                           l3890 0CF2  
                                         l3858 0C96                                           l3866 0CAE  
                                         l2996 0486                                           l2988 0BD3  
                                         l3796 06CD                                           l3788 06AC  
                                         l3892 0CF4                                           l3884 0CE0  
                                         l3876 0CC8                                           l3868 0CB2  
                                         l2998 048A                                           l3798 06D3  
                                         l3894 0CF8                                           l3886 0CE6  
                                         l3878 0CCE                                           l3888 0CEC  
                                         l3896 0AF8                                           l3898 0AFB  
                                         u2000 0EB2                                           u2001 0EB1  
                                         u2010 0EC8                                           u2011 0EC7  
                                         u2100 0E37                                           u2020 0EE3  
                                         u2101 0E36                                           u2021 0EE2  
                                         u2005 0EAE                                           u2110 0E50  
                                         u2030 0EFA                                           u2111 0E4F  
                                         u2031 0EF9                                           u2015 0EC4  
                                         u3000 05F4                                           u2120 0E56  
                                         u2040 0F14                                           u3001 05F3  
                                         u2121 0E55                                           u2105 0E33  
                                         u2041 0F13                                           u2025 0EDF  
                                         u3010 060F                                           u2130 0A89  
                                         u2050 0F2C                                           u3011 060E  
                                         u2131 0A88                                           u2115 0E4C  
                                         u2051 0F2B                                           u2035 0EF6  
                                         u3020 0624                                           u3100 00B2  
                                         u2060 0DCB                                           u3021 0623  
                                         u3005 05F0                                           u3101 00B1  
                                         u2061 0DCA                                           u2045 0F10  
                                         _LATA 010C                                           u2150 0A99  
                                         u3030 0061                                           u2070 0DEC  
                                         _LATB 010D                                           u3015 060B  
                                         u2151 0A98                                           u3031 0060  
                                         u2215 09AB                                           u2071 0DEB  
                                         u2055 0F28                                           u3200 020E  
                                         u3040 0067                                           u2160 0A2C  
                                         u4000 0427                                           u2080 0E08  
                                         u2145 0A8E                                           u3201 020D  
                                         u3041 0066                                           u2161 0A2B  
                                         u4001 0426                                           u2081 0E07  
                                         u2065 0DC7                                           u3210 0222  
                                         u3130 01BA                                           u3050 006C  
                                         u4010 044B                                           u2090 0E1E  
                                         u3211 0221                                           u3115 0131  
                                         u3051 006B                                           u4011 044A  
                                         u2091 0E1D                                           u2075 0DE8  
                                         u3220 0229                                           u3140 01D1  
                                         u3060 008B                                           u3300 0D08  
                                         u4020 0462                                           u4100 072E  
                                         u2500 0797                                           u3221 0228  
                                         u3125 0160                                           u3061 008A  
                                         u3301 0D07                                           u4021 0461  
                                         u4101 072D                                           u2085 0E04  
                                         u2501 0796                                           u3230 022F  
                                         u3070 0091                                           u3310 0D28  
                                         u4030 047F                                           u4110 0746  
                                         u2510 07A5                                           u3231 022E  
                                         u3135 01B6                                           u3071 0090  
                                         u3311 0D27                                           u4031 047E  
                                         u4015 0447                                           u4111 0745  
                                         u2095 0E1A                                           u2511 07A4  
                                         u3240 023B                                           u3080 0096  
                                         u3400 0D8D                                           u4040 09D9  
                                         u4120 0769                                           u2520 07B5  
                                         u4200 0CA2                                           u3241 023A  
                                         u3145 01CD                                           u3081 0095  
                                         u4041 09D8                                           u4025 045E  
                                         u4121 0768                                           u4105 072A  
                                         u2521 07B4                                           u2505 0793  
                                         u4201 0CA1                                           u3250 0249  
                                         u3170 01F9                                           u3090 00AD  
                                         u3410 0D9C                                           u3330 0D47  
                                         u2530 07C5                                           u4210 0CA8  
                                         u4130 0C78                                           u3171 01F8  
                                         u3155 01DC                                           u3091 00AC  
                                         u3411 0D9B                                           u3331 0D46  
                                         u4035 047B                                           u4115 0742  
                                         u2531 07C4                                           u2515 07A1  
                                         u4211 0CA7                                           u4131 0C77  
                                         u3260 0264                                           u2700 0BD2  
                                         u3420 0DA0                                           u2540 07EF  
                                         u4300 0CE6                                           u4220 0CAE  
                                         u4140 0C7E                                           u3261 0263  
                                         u3165 01EF                                           u2701 0BD1  
                                         u3421 0D9F                                           u3405 0D89  
                                         u3325 0D3B                                           u4125 0765  
                                         u2541 07EE                                           u2525 07B1  
                                         u4301 0CE5                                           u4221 0CAD  
                                         u4141 0C7D                                           u3270 027C  
                                         u3190 0209                                           u3350 0D61  
                                         u4070 09ED                                           u2550 0C15  
                                         u4310 0CEC                                           u4230 0CBC  
                                         u4150 0C84                                           u3271 027B  
                                         u3255 0245                                           u3191 0208  
                                         u3351 0D60                                           u4071 09EC  
                                         u4055 09DE                                           u2551 0C14  
                                         u2535 07C1                                           u4311 0CEB  
                                         u4231 0CBB                                           u4151 0C83  
                                         u2800 04DF                                           u3280 0298  
                                         u2720 0BE1                                           u2640 0B89  
                                         u4080 06EA                                           u2560 0C23  
                                         u4320 0CF2                                           u4240 0CC2  
                                         u4160 0C8A                                           u2801 04DE  
                                         u3281 0297                                           u3265 0260  
                                         u3185 01FB                                           u2721 0BE0  
                                         u2641 0B88                                           u3345 0D55  
                                         u4065 09E3                                           u4081 06E9  
                                         u2561 0C22                                           u2545 07EB  
                                         u4321 0CF1                                           u4241 0CC1  
                                         u4161 0C89                                           u2810 04FD  
                                         u2730 0BE6                                           u2650 0B9F  
                                         u3370 0D6F                                           u3290 0D04  
                                         u4090 070D                                           u2570 0C33  
                                         u4250 0CC8                                           u4170 0C90  
                                         u2811 04FC                                           u3275 0278  
                                         u2731 0BE5                                           u2715 0BD4  
                                         u3371 0D6E                                           u3291 0D03  
                                         u4091 070C                                           u2571 0C32  
                                         u2555 0C11                                           u4251 0CC7  
                                         u4171 0C8F                                           u2820 0535  
                                         u2740 048E                                           u2660 0BB4  
                                         u3380 0D75                                           u2580 0C43  
                                         u4260 0CCE                                           u4180 0C96  
                                         u2821 0534                                           u2741 048D  
                                         u2661 0BB3                                           u3381 0D74  
                                         u3365 0D65                                           u4085 06E6  
                                         u2581 0C42                                           u2565 0C1F  
                                         u4261 0CCD                                           u4181 0C95  
                                         u2910 0589                                           u2750 0494  
                                         u2670 0BBB                                           u3390 0D79  
                                         u2590 0C6D                                           u4270 0CD4  
                                         u4190 0C9C                                           u2911 0588  
                                         u2751 0493                                           u2671 0BBA  
                                         u2655 0B9B                                           u3391 0D78  
                                         u4095 0709                                           u2591 0C6C  
                                         u2575 0C2F                                           u4271 0CD3  
                                         u4191 0C9B                                           u2760 0499  
                                         u3800 0943                                           u4280 0CDA  
                                         u2905 057F                                           u2761 0498  
                                         u4337 0A23                                           u3801 0942  
                                         u2585 0C3F                                           u4281 0CD9  
                                         u2930 0599                                           u2850 0547  
                                         u2770 04B9                                           u2690 0BCB  
                                         u3810 0949                                           u1970 09C4  
                                         u4290 0CE0                                           u2931 0598  
                                         u2851 0546                                           u2835 0536  
                                         u2771 04B8                                           u2691 0BCA  
                                         u3811 0948                                           u1971 09C3  
                                         u2595 0C69                                           u4291 0CDF  
                                         u2940 059E                                           u2780 04BF  
                                         u3900 0359                                           u3820 02B2  
                                         u1980 0E7A                                           u2941 059D  
                                         u2925 058B                                           u2845 053D  
                                         u2781 04BE                                           u2685 0BBD  
                                         u3901 0358                                           u3821 02B1  
                                         u1981 0E79                                           u2950 05B2  
                                         u2870 0561                                           u2790 04C4  
                                         u3910 037D                                           u1990 0E91  
                       get_pulse@capturedValue 0079                                           u2951 05B1  
                                         u2871 0560                                           u2791 04C3  
                                         u3911 037C                                           u1975 09C0  
                                         u1991 0E90                                           u2960 05B9  
                                         u2880 0574                                           u3920 0399  
                                         u3840 02E4                                           u2961 05B8  
                                         u2881 0573                                           u2865 0549  
                                         u3921 0398                                           u3841 02E3  
                                         u1985 0E76                                           u2970 05BF  
                                         u2890 057C                                           u3930 03A0  
                                         u3850 02EF                                           u2971 05BE  
                                         u2891 057B                                           u2875 055D  
                                         u3931 039F                                           u3915 0379  
                                         u3851 02EE                                           u3835 02BC  
                                         u1995 0E8D                                           u2980 05CB  
                                         u3940 03B6                                           u3860 0306  
                                         u2981 05CA                                           u3941 03B5  
                                         u3925 0395                                           u3861 0305  
                                         u3845 02E0                                           i1l70 08C2  
                                         u2990 05D9                                           u3950 03C1  
                                         u3870 031C                                           u3951 03C0  
                                         u3871 031B                                           i1l48 092E  
                                         u3960 03D8                                           u3880 0326  
                                         u3961 03D7                                           u3945 03B2  
                                         u3881 0325                                           u3865 0302  
                                         u3970 03F0                                           u3890 0341  
                                         i1l67 08BA                                           u2995 05D5  
                                         u3971 03EF                                           u3891 0340  
                                         u3980 03FA                                           u3981 03F9  
                                         u3965 03D4                                           u3990 0411  
                                         u3991 0410                                           u3895 033D  
                                         u3995 040D                                           _TMR2 001A  
                                         _TMR4 0415                                           _WPUA 020C  
                                         _WPUB 020D                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           abs@a 0020  
                                         _main 0AF8                                           _byte 0148  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                         start 0034                                ___fldiv@new_exp 005E  
                                __CFG_MCLRE$ON 0000                     ??_TMR4_SetInterruptHandler 0022  
                                        ??_abs 0022                               comunicacao@speed 0067  
                              ?_FVR_Initialize 0077                                  ?_EUSART_Write 0077  
               __size_of_OSCILLATOR_Initialize 0007                            __size_of_IOCBF0_ISR 000F  
                          __size_of_IOCBF3_ISR 000F                  __end_of_OSCILLATOR_Initialize 084F  
                          __size_of_IOCBF4_ISR 000F                            __size_of_IOCBF5_ISR 000F  
                                ___fltol@sign1 0029                                          ?_main 0077  
                              __end_of___fldiv 0634                                  __CFG_WDTE$OFF 0000  
                       ??_CCP4_DefaultCallBack 007B                                __end_of___flmul 02AA  
                              __end_of___fltol 0BF2                                          _T1CON 0018  
                                        _T2CON 001C                                          _T4CON 0417  
                                        i1l160 095D                                          i1l312 0032  
                                        i1l313 0032                                          i1l305 0012  
                                        i1l250 0003                                          i1l340 082A  
                                        i1l244 093D                                          i1l308 0024  
                                        i1l421 0A12                                          i1l431 082B  
                                        i1l425 08F2                                          i1l441 082C  
                                        i1l346 0999                                          i1l435 0901  
                                        i1l451 082D                                          i1l445 0910  
                                        i1l461 0002                                          i1l455 091F  
                                        i1l581 0AF7                                          i1l590 08D8  
                                        i1l584 0847                                          i1l593 08E3  
                                        i1l587 08CD                                          i1l599 0AC2  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                   update@i_1261 0024  
                                 update@i_1262 0028                                          _TXSTA 019E  
                              _TMR4_Initialize 0970                               __end_of_TMR4_ISR 093E  
                                        _andar 00D2                        __end_of_PIN_MANAGER_IOC 0A13  
                               _WDT_Initialize 0832                        __end_of_PWM3_Initialize 08B0  
                      __end_of_TMR1_Initialize 0800                                          pclath 000A  
                              __end_of_sensor1 0848                                __end_of_sensor2 08CE  
                              __end_of_sensor3 08D9                                __end_of_sensor4 08E4  
                                        status 0003                        __end_of_CCP4_Initialize 0970  
                                        wtemp0 007E                                _TMR1_WriteTimer 094D  
                              ??_gerenciamento 002A                                __initialization 0036  
                                 __end_of_main 0B39                                 ??_EUSART_Write 0077  
                      __end_of_TMR2_Initialize 085F                    ?_INTERRUPT_InterruptManager 0077  
                                       ??_main 006F                                 __CFG_PLLEN$OFF 0000  
                      _IOCBF0_InterruptHandler 00E9                         __end_of_WDT_Initialize 0836  
                             ?_CCP4_CaptureISR 0077              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 0151                   ??_IOCBF5_SetInterruptHandler 0022  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _CCPR3H 0312                                         _CCPR4H 0319  
                                       _CCPR3L 0311                                         _CCPR4L 0318  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 083B                                         _BORCON 0116  
                                       _T1GCON 0019                        TMR1_WriteTimer@timerVal 0077  
                                       i1l2500 08BA                                         i1l2510 0955  
                                       i1l2502 08BF                                         i1l2512 0957  
                                       i1l2504 094D                                         i1l3320 092F  
                                       i1l2506 0952                                         i1l2514 0959  
                                       i1l2530 0841                                         i1l3330 09FA  
                                       i1l3322 0931                                         i1l2516 095B  
                                       i1l2508 0953                                         i1l2532 0844  
                                       i1l3340 0A0F                                         i1l3332 09FF  
                                       i1l3324 0938                                         i1l3342 0984  
                                       i1l2534 08C3                                         i1l3334 0A02  
                                       i1l3326 09F2                                         i1l3344 0986  
                                       i1l2536 08CE                                         i1l3336 0A07  
                                       i1l3328 09F7                                         i1l2480 092D  
                                       i1l2472 0920                                         i1l3346 098F  
                                       i1l2538 08D9                                         i1l3338 0A0A  
                                       i1l2474 0921                                         i1l2732 08E4  
                                       i1l2740 08FA                                         i1l2476 0926  
                                       i1l2734 08EB                                         i1l2742 08FF  
                                       i1l2750 0911                                         i1l2478 092B  
                                       i1l2736 08F0                                         i1l2744 0902  
                                       i1l2752 0918                                         i1l2760 0AC8  
                                       i1l3480 0016                                         i1l2738 08F3  
                                       i1l2746 0909                                         i1l2754 091D  
                                       i1l2770 0AE7                                         i1l2762 0ACF  
                                       i1l3482 001B                                         i1l3474 0006  
                                       i1l2780 0AAF                                         i1l2748 090E  
                                       i1l2772 0AF4                                         i1l2764 0AD2  
                                       i1l3484 0020                                         i1l3476 000A  
                                       i1l2782 0AB4                                         i1l2774 0A9E  
                                       i1l2766 0ADA                                         i1l2758 0AC3  
                                       i1l3486 0029                                         i1l3478 000E  
                                       i1l2784 0ABA                                         i1l2776 0AA4  
                                       u220_20 0918                                         i1l2768 0AE3  
                                       i1l3488 002E                                         u220_21 0917  
                                       i1l2786 0ABE                                         i1l2778 0AA9  
                                       u222_20 0ACF                                         u222_21 0ACE  
                                       u223_20 0ADA                                         u223_21 0AD9  
                                       u224_20 0AF4                                         u224_21 0AF3  
                                       u224_25 0AF0                                         u225_20 0AAF  
                                       u217_20 08EB                                         u225_21 0AAE  
                                       u217_21 08EA                                         u226_20 0ABA  
                                       u218_20 08FA                                         u226_21 0AB9  
                                       u218_21 08F9                                         u227_20 0ABE  
                                       u219_20 0909                                         _FVRCON 0117  
                                       u227_21 0ABD                                         u219_21 0908  
                   __end_of_EUSART_is_tx_ready 092F                                         u191_20 0926  
                                       u343_20 0938                                         u191_21 0925  
                                       u343_21 0937                                         u344_20 09F7  
                                       u192_20 092B                                         u344_21 09F6  
                                       u192_21 092A                                         u345_20 09FF  
                                       u345_21 09FE                                         u346_20 0A07  
                                       u346_21 0A06                                         u347_20 0A0F  
                                       u195_20 08BF                                         u347_21 0A0E  
                                       u195_21 08BE                                         u196_20 0952  
                                       u196_21 0951                                         u373_20 000A  
                                       u373_21 0009                                _max_origem_down 0072  
                                       u374_20 000E                                         u374_21 000D  
                                       u375_20 0016                                         u375_21 0015  
                                       u376_20 001B                                         u376_21 001A  
                                       u377_20 0020                                         u377_21 001F  
                                       u378_20 0029                                         _OSCCON 0099  
                                       u378_21 0028                                         u379_20 002E  
                                       u379_21 002D                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                             __end_of___xxtofl 0DAA                                 __CFG_PWRTE$OFF 0000  
                             __end_of_col_down 0C6E                                   _CCPTMRS0bits 029E  
                  __size_of_PWM3_LoadDutyValue 001C                                         ___wmul 09D2  
                                    ??___fldiv 0054                                 __CFG_STVREN$ON 0000  
                                    ??___flmul 003A                               __end_of_controle 0774  
                                    ??___fltol 0024                                         _col_up 0774  
                             __end_of_max_down 0E5B                        __end_of_TMR4_Initialize 0984  
                                       _min_up 0E5B                                  _CCP4_CallBack 014D  
                                       _update 02AA                                         _pulses 00E1  
          __size_of_IOCBF5_SetInterruptHandler 0009           __end_of_TMR4_DefaultInterruptHandler 0004  
        __size_of_TMR4_DefaultInterruptHandler 0001                   _TMR4_DefaultInterruptHandler 0003  
                           __size_of__Umul8_16 0024                                ?_WDT_Initialize 0077  
                                    ??_sensor1 0077                                      ??_sensor2 0077  
                                    ??_sensor3 0077                                      ??_sensor4 0077  
                     ADC_GetConversion@channel 0023     IOCBF5_SetInterruptHandler@InterruptHandler 0020  
   IOCBF4_SetInterruptHandler@InterruptHandler 0020     IOCBF3_SetInterruptHandler@InterruptHandler 0020  
   IOCBF0_SetInterruptHandler@InterruptHandler 0020       TMR4_SetInterruptHandler@InterruptHandler 0020  
                             ?_PIN_MANAGER_IOC 0077                           __size_of_comunicacao 00D3  
                      __end_of_TMR1_WriteTimer 095E                                   ??_IOCBF0_ISR 0077  
                                 ??_IOCBF3_ISR 0078                                   ??_IOCBF4_ISR 0078  
                                 ??_IOCBF5_ISR 0078                               ?_TMR1_Initialize 0077  
                             ?_PWM3_Initialize 0077                                   ___xxtofl@arg 002E  
                         __size_of_EUSART_Read 000F                                   ___xxtofl@exp 002D  
                            _SYSTEM_Initialize 0A34                                   ___xxtofl@val 0024  
                      __end_of__initialization 004F                               ?_CCP4_Initialize 0077  
                           ?_SYSTEM_Initialize 0077                                     ___fltol@f1 0020  
                     __end_of_CCP4_SetCallBack 0868                                 __pcstackCOMMON 0077  
                          ??_SYSTEM_Initialize 0022                                      ?_TMR4_ISR 0077  
       __end_of_IOCBF0_DefaultInterruptHandler 082C        __size_of_IOCBF0_DefaultInterruptHandler 0001  
               _IOCBF0_DefaultInterruptHandler 082B                               ?_TMR2_Initialize 0077  
                           __end_of_IOCBF0_ISR 08F3                             __end_of_IOCBF3_ISR 0902  
                           __end_of_IOCBF4_ISR 0911                             __end_of_IOCBF5_ISR 0920  
                               _OPTION_REGbits 0095                  ?_TMR4_DefaultInterruptHandler 0077  
              ??_EUSART_SetOverrunErrorHandler 0022         __end_of_IOCBF3_DefaultInterruptHandler 082D  
      __size_of_IOCBF3_DefaultInterruptHandler 0001                 _IOCBF3_DefaultInterruptHandler 082C  
                  ?_IOCBF4_SetInterruptHandler 0020                             __size_of_get_pulse 0025  
                    __end_of_SYSTEM_Initialize 0A56                                     __pbssBANK0 006F  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                         __end_of_EUSART_Write 08C3                                     _and_ating2 00C8  
                                   _and_origem 00DA                          _TMR4_InterruptHandler 00EB  
                            __end_of__Umul8_16 0A9E                               ??_FVR_Initialize 0020  
                                   __pmaintext 0AF8                                  _min_fila_down 00CC  
                                      ?___wmul 0020                                     ??_TMR4_ISR 007B  
                                   __pintentry 0004                                        ?_col_up 0077  
                           __size_of_send_data 0035                                        _CCP3CON 0313  
                                      _CCP4CON 031A                                        _BAUDCON 019F  
                                      ?_min_up 0077                               ?_TMR4_Initialize 0077  
             ??_IOCBF4_DefaultInterruptHandler 0077                ?_IOCBF4_DefaultInterruptHandler 0077  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                      ?_update 0077                        __size_of_ADC_Initialize 0008  
                                    ?___xxtofl 0024             __end_of_IOCBF5_SetInterruptHandler 08A7  
                   _IOCBF5_SetInterruptHandler 089E                                        _OSCTUNE 0098  
                                    ?_col_down 0077                       ??_EUSART_SetErrorHandler 0022  
                             ?_TMR1_WriteTimer 0077                                      ?_controle 0077  
                                    ?_max_down 0077                          controle@max_dutyValue 0058  
                         _ADC_InterruptHandler 00DC                                  _min_origem_up 0070  
                            __end_of_get_pulse 0AC3                                        ___fldiv 0480  
                                      ___flmul 0053                                        ___fltol 0B7D  
                              __size_of___wmul 0020                                __size_of_col_up 007C  
                                      _and_dst 0074                                __size_of_min_up 00D2  
                                      __ptext1 0C6E                                        __ptext2 0774  
                                      __ptext3 0E5B                                        __ptext4 0BF2  
                                      __ptext5 0DAA                                        __ptext6 09B6  
                                      __ptext7 0634                                        __ptext8 02AA  
                                      __ptext9 0836                                        _fila_up 00B4  
                              __size_of_update 01D6                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 0848                                      _T2CONbits 001C  
                                 __size_of_abs 001C                                     ??___xxtofl 0028  
                __size_of_CCP4_DefaultCallBack 0001                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 0022              __size_of_TMR4_SetInterruptHandler 0009  
                                    _IOCBFbits 0396                      ?_TMR4_SetInterruptHandler 0020  
                                    _IOCBNbits 0395                                        _sensor1 0841  
                                      _sensor2 08C3                                        _sensor3 08CE  
                                      _sensor4 08D9                                        _temp_mt 0155  
                                      _sentido 00D8                                      _IOCBPbits 0394  
                                   ??_col_down 0025                     __size_of_SYSTEM_Initialize 0022  
                                      clrloop0 083C                           end_of_initialization 004F  
                            __end_of_send_data 0AF8                 ??_TMR4_DefaultInterruptHandler 0077  
                                   ??_controle 004C          __end_of_EUSART_SetOverrunErrorHandler 0883  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 087A  
                                   ??_max_down 0020                                        min_up@i 0023  
                            _EUSART_Initialize 0A56                          __end_of_gerenciamento 0CFD  
                           ?_EUSART_Initialize 0077                                      _RCSTAbits 019D  
                                controle@count 005C                             _EUSART_is_rx_ready 0836  
                                      update@i 0026                                  controle@route 0052  
                           _EUSART_is_tx_ready 0920                            ??_EUSART_Initialize 0022  
                             ??_WDT_Initialize 0020                            ?_EUSART_is_rx_ready 0077  
                          ?_EUSART_is_tx_ready 0077                          controle@min_dutyValue 0056  
                             __CFG_FOSC$INTOSC 0000                                  ___xxtofl@sign 002C  
                        __size_of_EUSART_Write 000A                                    ___fldiv@grs 0060  
                                  ___fldiv@rem 0059                   ??_IOCBF0_SetInterruptHandler 0022  
                 ??_IOCBF3_SetInterruptHandler 0022                __size_of_EUSART_SetErrorHandler 0009  
                                  ___flmul@grs 0040                      __end_of_EUSART_Initialize 0A7A  
                         ??_EUSART_is_rx_ready 0020                           ??_EUSART_is_tx_ready 0077  
                                    _TXSTAbits 019E                       __size_of_CCP4_CaptureISR 0016  
            CCP4_DefaultCallBack@capturedValue 0079                     __end_of_PWM3_LoadDutyValue 09B6  
                            controle@dutyValue 005A                              ?_CCP4_SetCallBack 0020  
                           ??_CCP4_SetCallBack 0022                     _EUSART_DefaultErrorHandler 0000  
                               __end_of___wmul 09F2                                   _EUSART_Write 08B9  
                               __end_of_col_up 07F0                              __size_of_TMR4_ISR 000F  
                               _ADC_Initialize 084F            __size_of_IOCBF0_SetInterruptHandler 0009  
          __size_of_IOCBF3_SetInterruptHandler 0009                         ?_OSCILLATOR_Initialize 0077  
                               __end_of_min_up 0F2D                                 __end_of_update 0480  
                                ??_comunicacao 0066                            start_initialization 0036  
              __size_of_PIN_MANAGER_Initialize 0044                                    __end_of_abs 09D2  
                                ??_EUSART_Read 0020                         _EUSART_is_tx_ready$167 0077  
                     __size_of_PIN_MANAGER_IOC 0021                 ?_EUSART_SetOverrunErrorHandler 0020  
                     __size_of_PWM3_Initialize 0009                       __size_of_TMR1_Initialize 0010  
                   _EUSART_FramingErrorHandler 0153                                       ??___wmul 0024  
                       _EUSART_SetErrorHandler 0868                       __size_of_CCP4_Initialize 0012  
                       __end_of_ADC_Initialize 0857                                      __Umul8_16 0A7A  
                                     ??_col_up 0025                                       ??_min_up 0020  
                                     ??_update 0020                          CCP4_CaptureISR@module 007C  
                                    ___fldiv@a 004C                                      ___fldiv@b 0050  
                                    ___flmul@a 0036                                      ___flmul@b 0032  
                                  __pbssCOMMON 0070                                      ___latbits 0001  
                                __pcstackBANK0 0020                       __size_of_TMR2_Initialize 0008  
                  ?_IOCBF5_SetInterruptHandler 0020                              __size_of___xxtofl 00AD  
                          comunicacao@position 006B         __end_of_IOCBF4_DefaultInterruptHandler 082E  
      __size_of_IOCBF4_DefaultInterruptHandler 0001                 _IOCBF4_DefaultInterruptHandler 082D  
                          __end_of_comunicacao 1000                              __size_of_col_down 007C  
                   __size_of_EUSART_Initialize 0024                            __end_of_EUSART_Read 094D  
                            __size_of_controle 0140                                      __pnvBANK1 00E3  
                                    __pnvBANK2 014D                                      _and_ating 006F  
                                    _ccp_value 00DF                              __size_of_max_down 00B1  
                      _IOCBF3_InterruptHandler 00E7                         _PIN_MANAGER_Initialize 0B39  
             __end_of_TMR4_SetInterruptHandler 08B9                                       ?___fldiv 004C  
                            ??_CCP4_CaptureISR 007B                                       ?___flmul 0032  
                                     ?___fltol 0020                                     ?__Umul8_16 0020  
                                    _fila_down 0134                                ?_ADC_Initialize 0077  
                 ??_INTERRUPT_InterruptManager 007E                                     send_data@i 0079  
                                    _distancia 00D0                                      _get_pulse 0A9E  
             ??_IOCBF5_DefaultInterruptHandler 0077                ?_IOCBF5_DefaultInterruptHandler 0077  
                                    _aux_tempo 00D6             __end_of_IOCBF0_SetInterruptHandler 088C  
                   _IOCBF0_SetInterruptHandler 0883             __end_of_IOCBF3_SetInterruptHandler 0895  
                   _IOCBF3_SetInterruptHandler 088C                                       ?_sensor1 0077  
                                     ?_sensor2 0077                                       ?_sensor3 0077  
                                     ?_sensor4 0077                       __size_of_TMR4_Initialize 0014  
                               ___wmul@product 0024                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0020                                      clear_ram0 083B  
                 __end_of_CCP4_DefaultCallBack 082B                                      _send_data 0AC3  
                                     _PIE3bits 0093                              _eusartRxLastError 0076  
                     __size_of_TMR1_WriteTimer 0011            __size_of_INTERRUPT_InterruptManager 0030  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0022  
                                     _PIR3bits 0013                                      _origem_up 0120  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR4_ISR 092F  
                            ??_PIN_MANAGER_IOC 0078                              ??_TMR1_Initialize 0020  
                            ??_PWM3_Initialize 0020                                     ?_get_pulse 0079  
                                   _ADCON0bits 009D                                      _out_value 00CA  
                            ___wmul@multiplier 0020                        __size_of_FVR_Initialize 0004  
                            ??_CCP4_Initialize 0022                                    _comunicacao 0F2D  
                                  _EUSART_Read 093E                                      controle@a 0054  
                            ??_TMR2_Initialize 0020                                     ?_send_data 0077  
                                    max_down@i 0023                              _ADC_GetConversion 0A13  
                      ??_OSCILLATOR_Initialize 0020                                    ??__Umul8_16 0022  
                          _EUSART_ErrorHandler 014F                             ?_ADC_GetConversion 0020  
                                  _max_fila_up 00CE                               __size_of___fldiv 01B4  
                             __size_of___flmul 0257                               __size_of___fltol 0075  
                     _TMR4_SetInterruptHandler 08B0                             _PWM3_LoadDutyValue 099A  
                          ??_ADC_GetConversion 0022                        _IOCBF4_InterruptHandler 00E5  
                                     ___xxtofl 0CFD                      __size_of_CCP4_SetCallBack 0009  
                                     __ptext10 093E                                       __ptext11 09D2  
                                     __ptext20 0A34                                       __ptext12 099A  
                                     __ptext21 0832                                       __ptext13 0A13  
                                   _T1GCONbits 0019                                       __ptext30 088C  
                                     __ptext22 0970                                       __ptext14 0F2D  
                                     __ptext31 0883                                       __ptext23 08B0  
                                     __ptext15 0CFD                                       __ptext40 084F  
                                     __ptext32 0848                                       __ptext24 0857  
                                     __ptext16 0B7D                                       __ptext33 082E  
                                     __ptext25 07F0                                       __ptext17 0053  
                                     __ptext50 08D9                                       __ptext42 092F  
                                     __ptext34 0A56                                       __ptext26 08A7  
                                     __ptext18 0A7A                                       __ptext51 0902  
                                     __ptext43 0003                                       __ptext35 087A  
                                     __ptext27 0B39                                       __ptext19 0480  
                                     __ptext60 0984                                       __ptext52 082D  
                                     __ptext44 0AC3                                       __ptext36 0871  
                                     __ptext28 089E                                       __ptext61 082A  
                                     __ptext53 08CE                                       __ptext45 0920  
                                     __ptext37 0868                                       __ptext29 0895  
                                     __ptext62 0A9E                                       __ptext54 08F3  
                                     __ptext46 08B9                                       __ptext38 095E  
                                     __ptext63 094D                                       __ptext55 082C  
                                     __ptext47 09F2                                       __ptext39 085F  
                                     __ptext56 08C3                                       __ptext48 0911  
                                     __ptext57 08E4                                       __ptext49 0002  
                                     __ptext58 082B                            ?_PWM3_LoadDutyValue 0020  
                                     __ptext59 0841                         __size_of_gerenciamento 008F  
                             __size_of_sensor1 0007                               __size_of_sensor2 000B  
                             __size_of_sensor3 000B                               __size_of_sensor4 000B  
                                     _col_down 0BF2                   ??_IOCBF4_SetInterruptHandler 0022  
                                   _IOCBF0_ISR 08E4                                     _IOCBF3_ISR 08F3  
                                   _IOCBF4_ISR 0902                                     _IOCBF5_ISR 0911  
                                     _controle 0634                                       _max_down 0DAA  
                            ??_TMR4_Initialize 0022                    __size_of_EUSART_is_rx_ready 0005  
                                __size_of_main 0041                    __size_of_EUSART_is_tx_ready 000F  
                    __end_of_ADC_GetConversion 0A34                        ?_EUSART_SetErrorHandler 0020  
                                     _sentido2 00D4  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
                         ??_PWM3_LoadDutyValue 0022                                       int$flags 007E  
                              controle@destiny 0050             __end_of_INTERRUPT_InterruptManager 0034  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 087A  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 0871  
                            ??_TMR1_WriteTimer 0079                                    ??_get_pulse 007B  
          __size_of_IOCBF4_SetInterruptHandler 0009                                      update@aux 0023  
                                   _INTCONbits 000B                           _CCP4_DefaultCallBack 082A  
                                   _FVRCONbits 0117                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000                                _CCP4_CaptureISR 0984  
                      ?_PIN_MANAGER_Initialize 0077                 __end_of_EUSART_SetErrorHandler 0871  
                            __CFG_CLKOUTEN$OFF 0000                                    ??_send_data 0078  
                             ??_ADC_Initialize 0020                                  _gerenciamento 0C6E  
                                  _origem_down 00A0  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                  PWM3_LoadDutyValue@dutyValue 0020                                 _FVR_Initialize 082E  
                       __Umul8_16@multiplicand 0020                          ?_CCP4_DefaultCallBack 0079  
                  ?_IOCBF0_SetInterruptHandler 0020                    ?_IOCBF3_SetInterruptHandler 0020  
                                  ?_IOCBF0_ISR 0077                             EUSART_Write@txData 0077  
                                  ?_IOCBF3_ISR 0077                                    ?_IOCBF4_ISR 0077  
                                  ?_IOCBF5_ISR 0077                 __end_of_PIN_MANAGER_Initialize 0B7D  
             ??_IOCBF0_DefaultInterruptHandler 0077                ?_IOCBF0_DefaultInterruptHandler 0077  
       __end_of_IOCBF5_DefaultInterruptHandler 0003        __size_of_IOCBF5_DefaultInterruptHandler 0001  
               _IOCBF5_DefaultInterruptHandler 0002                                _PIN_MANAGER_IOC 09F2  
                         __Umul8_16@multiplier 0028                     __size_of_ADC_GetConversion 0021  
                      _IOCBF5_InterruptHandler 00E3                                _TMR1_Initialize 07F0  
                              _PWM3_Initialize 08A7                              __Umul8_16@product 0024  
                               ?_gerenciamento 0077  
